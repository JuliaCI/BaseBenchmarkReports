cset: moving following pidspec: 26827
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.341459822 seconds)
loading group "string"... done (took 0.54733013 seconds)
loading group "linalg"... done (took 7.027498947 seconds)
loading group "parallel"... done (took 0.152012719 seconds)
loading group "find"... done (took 1.100166737 seconds)
loading group "tuple"... done (took 1.741932594 seconds)
loading group "dates"... done (took 1.178476058 seconds)
loading group "micro"... done (took 0.284883783 seconds)
loading group "io"... done (took 0.899649801 seconds)
loading group "scalar"... done (took 36.073642346 seconds)
loading group "sparse"... done (took 11.104121336 seconds)
loading group "broadcast"... done (took 0.902433318 seconds)
loading group "union"... done (took 11.790098154 seconds)
loading group "simd"... done (took 4.118010601 seconds)
loading group "random"... done (took 8.461338149 seconds)
loading group "problem"... done (took 1.850533551 seconds)
loading group "array"... done (took 19.716428339 seconds)
loading group "misc"... done (took 1.624950045 seconds)
loading group "sort"... done (took 3.129120943 seconds)
loading group "collection"... done (took 16.312599994 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.484255501 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.122740248 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.11420196 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118714067 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.144724107 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.114104161 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122442931 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083462387 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.768746334 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.146777294 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118242139 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.414456809 seconds)
done (took 5.064144231 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.174074524 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082680019 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080976018 seconds)
  done (took 1.287339776 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065512251 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.120620147 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066310358 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066837311 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066650672 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066202609 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065728542 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066013596 seconds)
  done (took 1.643636821 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073105847 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068876246 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.06907166 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068383136 seconds)
  done (took 1.404461075 seconds)
done (took 5.708786886 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.762628852 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.204552566 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.18186158 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.396667676 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.12882147 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.153702356 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.654872548 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.304300908 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.182516387 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081431218 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104278646 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.317013555 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107172508 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.630443781 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076806929 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090415115 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.138261195 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.427844149 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067087208 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081703294 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.08870006 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127957045 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.086980218 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.07417838 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.143197262 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067509614 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.130336309 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.08015718 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066006456 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.207956536 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.171767161 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.653514987 seconds)
  done (took 10.153575491 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096238574 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097102887 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068780499 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136320262 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.09735591 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069336865 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070910268 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.06687137 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086519749 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127208735 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.08789293 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100920839 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.06535026 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068385598 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084246199 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204067635 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080004964 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080758467 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070080775 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074923684 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.118764289 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077708044 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077480167 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077481366 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128065285 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.181036574 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097518534 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097043826 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066747558 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.08030096 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115177708 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.126234827 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065898763 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066430023 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.12381269 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093888712 seconds)
  done (took 4.586777227 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.285934087 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.139886185 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090804806 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.131240382 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064635843 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.106759148 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064886886 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080215994 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.198572422 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.289312486 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.575603186 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110505344 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.10970278 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102573781 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067250641 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067994128 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067105181 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.340910957 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.107143577 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103922828 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.080780166 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069949883 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068250296 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.340774466 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067152296 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063692408 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067645223 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057680805 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.123100543 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067689717 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.920049556 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.124771588 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066599258 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100724486 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.160953772 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087882613 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.272583242 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068763583 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064826154 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.149689025 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065758589 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.069480233 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065735524 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083196469 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103427106 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112008493 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.06545007 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066724837 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.162176023 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064925251 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079270773 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.994399556 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153475202 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076160727 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064417795 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.245889939 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.08610862 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070180221 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064777055 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.204931945 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.133944158 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.066917928 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066303867 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067733066 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068806788 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.376791534 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065869579 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.98159834 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.067330715 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075575059 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069589211 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069083837 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072810054 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074390446 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.084996509 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065711929 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075217719 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.066037784 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065917026 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066654732 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.08375302 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.355684682 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.065911322 seconds)
    (83/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.063921032 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067424484 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.063929533 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.089792572 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095595332 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066137791 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064532158 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099937517 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.16925335 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066519466 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.10584009 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067598329 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.08429265 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064537134 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112175378 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.06986566 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.065873577 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.091636173 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067920959 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.098304922 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069778257 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098874248 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080994156 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067882199 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.398519086 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065232729 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064833033 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068202671 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065195044 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067269324 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066077092 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079368347 seconds)
  done (took 21.094969813 seconds)
done (took 38.24636637 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.267445141 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.07467473 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074625255 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.07521915 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075009645 seconds)
  done (took 1.783703967 seconds)
done (took 2.981992464 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.11967219 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.09839456 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064177105 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.096024789 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064278348 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099657004 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098354678 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080375949 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098949336 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063957202 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095354713 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063889129 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063691052 seconds)
  done (took 2.32729227 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082695911 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083006845 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069876396 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082204633 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063493017 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081772623 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080460081 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087902655 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080257798 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072383079 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063238099 seconds)
  done (took 2.041891049 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081306652 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083941846 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068737329 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080937521 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066031264 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080573192 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080885425 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084891723 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080664277 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073575863 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063307314 seconds)
  done (took 2.03556403 seconds)
done (took 7.594463171 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077028455 seconds)
  done (took 1.25935382 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.582213482 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.027289586 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081688341 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.112286414 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.182357377 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.118193292 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.276507478 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086513832 seconds)
  done (took 8.828283584 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.101446254 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071830217 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068624119 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069312528 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071844399 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.07186044 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069522919 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069402968 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068862977 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068916687 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071073925 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070588349 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068222692 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068451182 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070800438 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071229243 seconds)
  done (took 2.40706405 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091618672 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090654829 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073813182 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074683529 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071903806 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071805444 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074298472 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072818479 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070734194 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071375287 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074365771 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073190843 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071129206 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064420641 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073450743 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07525658 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071046311 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074232524 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.07437462 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075155977 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073914305 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06420199 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071253491 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073658327 seconds)
  done (took 3.062450048 seconds)
done (took 16.747392066 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.113324256 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070950701 seconds)
  done (took 1.375074424 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082227145 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083261274 seconds)
  done (took 1.364324523 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083796776 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.066214334 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092041114 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078791828 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066459572 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065878753 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089263835 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065956019 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065957653 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066025274 seconds)
  done (took 1.939303729 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068506622 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.079245823 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071312693 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081008876 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074295809 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063976561 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072475973 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067706071 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077864655 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062866811 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071263494 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082326248 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.07141093 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083713478 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072047069 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068893165 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070749525 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.06733739 seconds)
  done (took 2.50649119 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065732986 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.06675524 seconds)
  done (took 1.336297325 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067563795 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063894312 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067507353 seconds)
    (4/7) benchmarking "year"...
    done (took 0.06648857 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063727012 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062331968 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063690723 seconds)
  done (took 1.655878717 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.390633296 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110304895 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.299355756 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071463227 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081132881 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.247543222 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065141275 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070188718 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070337645 seconds)
  done (took 2.649376957 seconds)
done (took 14.03104992 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.07845964 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085027983 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.094451941 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.360158558 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091322299 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.06536385 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113888848 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.187242294 seconds)
done (took 2.289603988 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.216605334 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.609719267 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.385009115 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.196513683 seconds)
  done (took 2.399037847 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.327907749 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.086004938 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.05923588 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066793373 seconds)
  done (took 1.755901039 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065467961 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068162584 seconds)
  done (took 1.348009093 seconds)
done (took 6.93254659 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065794807 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.082523298 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065654425 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.06575631 seconds)
    (5/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066023828 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.062901552 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.06565632 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.06347804 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063851212 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063204642 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067749789 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065292545 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.065730903 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.065751434 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065605482 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063644002 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063492945 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065789756 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066682076 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063281093 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062999734 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065496798 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063409096 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063163846 seconds)
  done (took 2.821432299 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082708844 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066730199 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071948465 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071330219 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069846116 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070773701 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071325967 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066125622 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071145671 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068198146 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069415575 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070154646 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067713069 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069815278 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067626547 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069798758 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070962505 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066234553 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068108076 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069771592 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070696321 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066310187 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069801065 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070836674 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069674035 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069575418 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068036844 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066203046 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070616884 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.06948198 seconds)
  done (took 3.312323801 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070636989 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063622977 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063675944 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070262923 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063593778 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064836637 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063268802 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063878768 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064640707 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.06319598 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064820408 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062990922 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063484707 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064030549 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064101033 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066919877 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078554507 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063620602 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063237499 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064169423 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066669957 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063235516 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063560772 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.175829053 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063376688 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062974232 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063936756 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.06307881 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063735347 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063548795 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066256269 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066889556 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063498281 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069725586 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067053828 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063217218 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066935067 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062795488 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063687926 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063058132 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062632483 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063140813 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062837687 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070129761 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063119706 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064717851 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063136146 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064040282 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063282687 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065363633 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062357245 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062792277 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.06489825 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064286619 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066755458 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062599849 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063788925 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062619126 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063754849 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062812717 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063002325 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062496272 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.06534141 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063832732 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077135476 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069744863 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063105114 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065070377 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064639937 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065632347 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064834341 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076440808 seconds)
  done (took 6.013232298 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090261211 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087139113 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065549164 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064884562 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061824676 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064095581 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.06741243 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064047562 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065072304 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069255072 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063967442 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064811759 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065343798 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076280158 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063840118 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065340876 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069322532 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061888112 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063729549 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067348724 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063988672 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067060592 seconds)
  done (took 2.725762662 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.153606956 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069626471 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104816621 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072891943 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067421523 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072414474 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069585509 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069614013 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06970956 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067911254 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06831315 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069834301 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067160103 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067875719 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067978818 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067674466 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069576594 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067589768 seconds)
  done (took 2.591017046 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077391035 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066402367 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085484225 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065664457 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065967712 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068124863 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070412779 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073994675 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067762464 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065384298 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073629322 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067777802 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068005143 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065604136 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067891999 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065691893 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.06826022 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065279117 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073302327 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070479054 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070148957 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073858732 seconds)
  done (took 2.764979581 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079330674 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067837896 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.08234622 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068722271 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061783857 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063971141 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069506874 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065621986 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069840815 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066908767 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065819263 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063945975 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.0688436 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065742657 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068955534 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065675397 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067559472 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065342454 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068992957 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061485426 seconds)
  done (took 2.589054575 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086285291 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06776832 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067325081 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075587735 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067159457 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067031028 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074927732 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067527088 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066793865 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086948446 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066714872 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066800937 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074527553 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071763784 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066674489 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074187577 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074527159 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074189292 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066824985 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066840098 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086837969 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066808842 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074721402 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066909005 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066928912 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067318015 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06752815 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071699342 seconds)
  done (took 3.230666821 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066078881 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065547109 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063406544 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.06330225 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063115103 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063521017 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063375752 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063188862 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065807982 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063397224 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065425028 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065886197 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065642701 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065329687 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065533279 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065578067 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06554491 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063330523 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063133962 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063411128 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065986113 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065455782 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065825521 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063010451 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063028622 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065246751 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063162673 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06326022 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065386349 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063379878 seconds)
  done (took 3.168532826 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075299011 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072277578 seconds)
  done (took 1.384096368 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063510403 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079510899 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062904188 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069340039 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069936301 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066630337 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07347863 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069765014 seconds)
  done (took 1.787448592 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081615957 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076325476 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.068383938 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080193011 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076360147 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082997628 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131696437 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066715657 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072461595 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064158385 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079241043 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065179623 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072360991 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066332359 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.07194098 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07231075 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063708163 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071781598 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067959773 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064226418 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067098105 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074435886 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068705638 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061367016 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067056518 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087391021 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076859611 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065357827 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068566203 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.072924261 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071107848 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060026393 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065723967 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066057785 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06361995 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074716039 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080469981 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068727011 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.073844043 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066641166 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076281683 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061279179 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070292179 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072541257 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075431645 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066550431 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066464085 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061048724 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.06377682 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068315718 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061651894 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066341039 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061293802 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07543647 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069566801 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076424709 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064859752 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067469462 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068738983 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069208032 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072607706 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067958583 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068453408 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065155041 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075618168 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069952126 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07440525 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.06126865 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059953756 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063609593 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075079959 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088441968 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072539982 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066305995 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066829276 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063442744 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068860008 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066824598 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071509519 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072137476 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065686839 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071374005 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07342339 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066484232 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068596901 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074642047 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.0643196 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068729188 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06411503 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082144414 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064526368 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063761029 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.06393851 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076149218 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068925488 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065660214 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063805597 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072568623 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059914333 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066078425 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06589804 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065563231 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.074670693 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068811525 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069347519 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.07318526 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071575663 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064764924 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067525524 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061606692 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065560202 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064666191 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071405475 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059483734 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067270093 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065309939 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.06492174 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.198777171 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064921851 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067059481 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074821054 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071707032 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.06528689 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063394203 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.068831349 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.065834202 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068878639 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.073927246 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064981665 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061856144 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062131472 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069756224 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066329434 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070319802 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071299386 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069804618 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061269598 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064523922 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072008037 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075436715 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067010826 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.06801463 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072658798 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067387495 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066409257 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072950837 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068690741 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065732239 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072143929 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067236903 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061836284 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069444807 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069255598 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065660133 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070542222 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069741069 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068598131 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066171906 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064371477 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073305783 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06715516 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066016568 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066387111 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064932141 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.07688089 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068256487 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061616361 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063179897 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075471883 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064273388 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065771772 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.06521669 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068071808 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067032664 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.06446365 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065537856 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068536417 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075667099 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070196482 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067138947 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071609372 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078223183 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065852745 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068886166 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065684827 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067328752 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066632534 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074272385 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071416912 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070208135 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068002638 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062943002 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071372104 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07362577 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.06511145 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063499151 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064924008 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070069116 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071314611 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069890292 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066585644 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064175685 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066562545 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068824373 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068507162 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.06544549 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065051261 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072403136 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064197822 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072631871 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066548544 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076078656 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.06980677 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061255385 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069427201 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064443131 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072141912 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061452534 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064281474 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065355915 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066885679 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.063926759 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067052032 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059000945 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071339186 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072437827 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.064848123 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064061717 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.06451971 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071307706 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066275334 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068285904 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067816016 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.07051093 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074768596 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.06379332 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067784372 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.074711909 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.192753171 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.06101887 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072418938 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065272956 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065198765 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065635521 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.06483735 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069871237 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076126494 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073406203 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060112281 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.06924276 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065048703 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065754719 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062008748 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071263797 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069238328 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067774067 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072866272 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067425437 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067058134 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070761006 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066269907 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066949731 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067833231 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069104835 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.068063178 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068172865 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066117535 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068704526 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066335336 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064736702 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068542362 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067370157 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067254723 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072139656 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066419013 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066298197 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069370888 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.066979358 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066789021 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066786188 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065808821 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069392154 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067489397 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066405498 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068645822 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061856201 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073812798 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065701477 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073579098 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066641525 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062751815 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074280099 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068402786 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.07238246 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067161645 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066881279 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067491608 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066424902 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069136045 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072929392 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064030908 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076717055 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07466914 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067355506 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.068999493 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066786461 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068094622 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065617863 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067084458 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067151873 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067037304 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.06594124 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070662135 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068227099 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066454942 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067782289 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066588905 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066443279 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066970694 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060621196 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065601959 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065598272 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065765252 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075494527 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066290457 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065431525 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064698929 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066742595 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065380313 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062664695 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074022073 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075036742 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066620948 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073386793 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065469983 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067374584 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076194246 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060303712 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.06395169 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063611777 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.06403841 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073535474 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066258023 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075032508 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065362764 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064792621 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063213949 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065553321 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063609103 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059562251 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063160657 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068129775 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.063949192 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063841531 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064736944 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.06715979 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065934723 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073914348 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063724463 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065771567 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064676177 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061901738 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.196165193 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065737559 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069404696 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067187507 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065030659 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.06434045 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065731477 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067312496 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068102285 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066479342 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068625193 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07518588 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066568677 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070090681 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069329298 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061645432 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069712006 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.06651403 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.06616201 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065930175 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070421203 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070285786 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067972869 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075488131 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066421442 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067239605 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06697568 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064331322 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066526906 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066584699 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066935575 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.06624069 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068363488 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074818851 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064094968 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070350428 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066707248 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067441749 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073190195 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067285763 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069569219 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073111477 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066121036 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.06829376 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074424354 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070735281 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.06995119 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067575129 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067968125 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072676957 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066411501 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073503434 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067717144 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067417731 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067894031 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064480559 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065712775 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065933157 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065472765 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072552986 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.06726349 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065477126 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065043969 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064386163 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067046186 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069310329 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073989858 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068940068 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069443746 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061921901 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063540446 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067511403 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064380726 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067770299 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068828551 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071308683 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.06819072 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066216053 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064776888 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075117583 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071743315 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070012514 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.06426518 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069659182 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067597925 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068339066 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067216906 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066429197 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067275761 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070028033 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067633491 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065497593 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073068547 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.06949639 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066836284 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067417153 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066896305 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066437424 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061548169 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066556556 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067907635 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071164679 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067970618 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065975797 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076229774 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063977071 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066285021 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068467866 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064749488 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.069908846 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060926721 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.066746505 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065826991 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065396474 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060301437 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064406265 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063267478 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067374108 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064540605 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060199001 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.074972808 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073304843 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067467866 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06358468 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.194321894 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062246405 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.0620404 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066191714 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067607204 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068389468 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076230059 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065867707 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065880046 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062632994 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065746528 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069280303 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070003621 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063776947 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062043303 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065558239 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069520636 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072378283 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065178727 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066028237 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069185114 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068375212 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.063881253 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070399015 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.0630949 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.07044936 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079249002 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067434924 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067677584 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072638418 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074640373 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067041567 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062801187 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067845761 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069003808 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066964966 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.066816323 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067784789 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08197068 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069535775 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066247801 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065257664 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069321415 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065957822 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074622261 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06777538 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067960661 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071514761 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.06820348 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076220358 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069041906 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074143779 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069420258 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069944729 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.06592564 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066326785 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064438295 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065001564 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067946673 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067589992 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072041564 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074662643 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066480268 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077996482 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076004453 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068541429 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063361543 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065789737 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.06614387 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061289872 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.06709341 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064544143 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064048434 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064701801 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.06539343 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067524713 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07146832 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067108346 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066634231 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065981258 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060193673 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068242292 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068685458 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067248362 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062996582 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.06604117 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066630384 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070224913 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069367117 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064103211 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067754701 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068195628 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067087649 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061487464 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072661847 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064957717 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067878389 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065464209 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066146031 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.06675743 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069401338 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070718352 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.0670861 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068229863 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069778312 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068117442 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063260962 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062974779 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070486506 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063311092 seconds)
  done (took 42.365286722 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100327779 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063445254 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061225038 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061936609 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073726981 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062926564 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061836091 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062843441 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06265815 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064988951 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061821107 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061737718 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070478236 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077612144 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073348446 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066363873 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061760441 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06289376 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061787519 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062797418 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07069564 seconds)
  done (took 2.740216482 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073021184 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070151824 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072157368 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075253244 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066962424 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070112348 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072571693 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070411578 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075555175 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066609318 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083943286 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070030098 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067211138 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.066599596 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066757315 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07051177 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075469195 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067277411 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070253597 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072162554 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07029857 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072292489 seconds)
  done (took 2.876460333 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066352464 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.064855852 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067291905 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060871152 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065546549 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061107364 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069047633 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063669877 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068941494 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064874411 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064978335 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064556767 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067468009 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061001809 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065708181 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063272008 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107347904 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068724517 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065310561 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066302763 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061249298 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.06749896 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061363611 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061749454 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064974161 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069130896 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066473721 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063795456 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065282665 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064443937 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065390928 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063642831 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066917896 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066103407 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064448289 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064629703 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065403329 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065444689 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061003372 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063782606 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066536438 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061528082 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065667847 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066935237 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063820534 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063252925 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067111194 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065051228 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060937203 seconds)
  done (took 4.535250694 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079466411 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108042297 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067921985 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087641421 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079855981 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075324779 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068783263 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089241317 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063365117 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063995254 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.08074413 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079396929 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065554989 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.07038648 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071531016 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065564842 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066718296 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064376211 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.06920971 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064830668 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069077789 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071666301 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079631331 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078477859 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069249144 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064118104 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064927166 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069533178 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.07812091 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070008095 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069892493 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070574703 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080445215 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.067322672 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064888104 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067535356 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.08070296 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065636953 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067520912 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063225974 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067029319 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069271328 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071458231 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081249223 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065227732 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.07078947 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065356549 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062246446 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077427829 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067438084 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073025599 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079506109 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069048872 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065463757 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070077705 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080052224 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065154765 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063810037 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068195253 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077224837 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062961826 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06917803 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078420618 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067243829 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072000178 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078860918 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.07015454 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068885116 seconds)
  done (took 6.319656886 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074549092 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.072676672 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080161213 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079356579 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071782041 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.071989322 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071564348 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.071497859 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071695455 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076370202 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071950291 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.09225206 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067841693 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074410576 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071791661 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071929603 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072031447 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07186573 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072071768 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071659523 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072721984 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079242287 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071737324 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079979781 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.09775748 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067386383 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071883551 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.07177448 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079697383 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071771866 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.07887508 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071921067 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.07209054 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079666947 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078735386 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071310516 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064989509 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071473163 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071678579 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071802284 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06685139 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079683591 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071235178 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066819188 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07188052 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071157344 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079099552 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079014938 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074549636 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076785475 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071827744 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080159597 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071513424 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072303184 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079643818 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.10432144 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079126124 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079220228 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07171546 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079320438 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079360013 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085382929 seconds)
  done (took 6.002586614 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083850093 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074789848 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076123046 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061356769 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063905037 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06958967 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063925604 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063732701 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074307849 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073981928 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076432121 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069414085 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072203892 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076106817 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069328765 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07214202 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069406124 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069258345 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07418133 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06913262 seconds)
  done (took 2.759479777 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073515942 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083136687 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066542313 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071626979 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068285656 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071527149 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067803293 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068662484 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066629822 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068547311 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075558916 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075446122 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066555555 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071336078 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.076069322 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071102959 seconds)
  done (took 2.471367266 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.074829434 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072317233 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079884436 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066278461 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063978281 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062616511 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065829211 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061433219 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062307687 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077580913 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065497718 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.067922613 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065724654 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064268721 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062611517 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068034128 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062041085 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063304222 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065399738 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077368486 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076315871 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063995139 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066352916 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065234484 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065663026 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070476276 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064998443 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063074949 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062809014 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065634087 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066118152 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069143428 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062645575 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063561333 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064354088 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063542547 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065103426 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065774779 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068232917 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065350837 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063877371 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065377604 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065759854 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066416596 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061961907 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066056788 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061868086 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.06769223 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063764015 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065661592 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.06497915 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067862473 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065965521 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071894635 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068390748 seconds)
  done (took 4.98512894 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.0786181 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069553956 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061688814 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064681325 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.06854626 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067508309 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068960262 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067173049 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067532256 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064110656 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067349914 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068049111 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067816033 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06912299 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067622074 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.0689303 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062151286 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067643334 seconds)
  done (took 2.558167311 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070724975 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066045438 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072411636 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066340979 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065893146 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067433973 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06210302 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.0640019 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064478633 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065725064 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065872471 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.06763113 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064197429 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.06761563 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065742029 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065767967 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.06758361 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064170183 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065776543 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061512366 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067534824 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064275557 seconds)
  done (took 2.788032271 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.09223326 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.080821326 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.137709614 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078475936 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.082793819 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071044457 seconds)
  done (took 1.878841174 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08935464 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078439886 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066388918 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087651137 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072947992 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066868232 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066807803 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067080316 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075464192 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075518531 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067351209 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075410971 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075546612 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07478711 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072789538 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072718321 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067079732 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067312227 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066009419 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083800303 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067209526 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075856266 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067402787 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067052389 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067617679 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075012656 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075845877 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075965615 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06695032 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075673112 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072865389 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067114075 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07562681 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075711639 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068719297 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075671457 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067193196 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083644958 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072403526 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074835367 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068229648 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072946221 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075790381 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071370967 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075268149 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067039658 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071532878 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066923399 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067501698 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08515457 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072889449 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074384769 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072753884 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075787644 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075475871 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085260742 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075700807 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074698688 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072912781 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078091076 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074907414 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072575563 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074376985 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076151623 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073207769 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074867405 seconds)
  done (took 6.18436799 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081348676 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085841559 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068328479 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076269591 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075354058 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066970474 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067462442 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067172417 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067272814 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066583278 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106533605 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067766111 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075289654 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075119011 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06771125 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067311967 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067312979 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074892097 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066992273 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0860994 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067427883 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075389135 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075075371 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075329616 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075753096 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072808621 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067444672 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067477941 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067415501 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067257031 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072084789 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067690251 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075080907 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066956285 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075071489 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067425925 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067127858 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072156828 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067245418 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072579471 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075472887 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083255133 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067073727 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066970108 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075717502 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067269922 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067350323 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066671487 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067084445 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066649585 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075637767 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076275526 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075974091 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075120209 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0676468 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067649394 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067306639 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067388082 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067697549 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073006567 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075026242 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067433831 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085896259 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067349424 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067255234 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07482263 seconds)
  done (took 6.102927998 seconds)
done (took 128.168428876 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.191057312 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.16716803 seconds)
  done (took 1.6937829 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.067939675 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.096824865 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076181888 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128181303 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066862946 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099740383 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.09939678 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077802151 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065941424 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065784391 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065874937 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.069111695 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131179075 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066053994 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.0658006 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068421784 seconds)
  done (took 2.659346872 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.096865098 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.156929056 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099108343 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064759218 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096449376 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072636541 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064613927 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074706192 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071077678 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065133958 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072804596 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070450899 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064625857 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070199235 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070522385 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072417244 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064930167 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072207664 seconds)
  done (took 2.770796778 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100549636 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091167899 seconds)
  done (took 1.542925828 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.155591918 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.104785918 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.150373786 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.344105188 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.165499671 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.229679587 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.127227229 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.127301367 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116621154 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123747272 seconds)
  done (took 2.993638853 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.09765331 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.152109798 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.254923572 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114863585 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072267179 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.0946711 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.11604249 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077575223 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080751532 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080037039 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080077598 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076316907 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098674547 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073482901 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072941089 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075996642 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.101958756 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.07208345 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074089478 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.07647159 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.098860964 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065366161 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073774754 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072051097 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077004909 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077476468 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065253196 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065244209 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076370816 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074272289 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076742329 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.09349297 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.07713532 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.10660773 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070187685 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107602721 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076070947 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073844795 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073759276 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073470353 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.07835646 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.07828863 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.0720086 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076122554 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064939456 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076057988 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065096008 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065117079 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077671739 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066504728 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077694794 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076374182 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106449565 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066703357 seconds)
  done (took 5.940991648 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10089201 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.103961471 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071454099 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.111460199 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099422273 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071359216 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.100750915 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093351702 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102357723 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070155747 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06830475 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070018646 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082052113 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082777209 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.111251001 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.10384736 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073377038 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07071573 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.103456868 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102562554 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068290489 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094766402 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.089295997 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101322622 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067392403 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069721024 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068203443 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070154711 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076773487 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078341715 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069364998 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080356155 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084407666 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078216482 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067044613 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067663998 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06837021 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079379718 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079219976 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079219228 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077337007 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067832039 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068003105 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069192608 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069951139 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067568279 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078647961 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.0804169 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079028693 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069181224 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070034988 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068446958 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069373452 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080152738 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077321246 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081078411 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080258745 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068151329 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068303086 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071182973 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081236016 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079211097 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078903698 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069894646 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078972093 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067827499 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079723866 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083718126 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068011433 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069668406 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068520961 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069352316 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069448876 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077958652 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078344088 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069833066 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069561469 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068475068 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080240795 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07869731 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068205059 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077317901 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067455573 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068134411 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069604765 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06949213 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077368357 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080210456 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069882407 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068204893 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069318327 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068191666 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066134696 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075329406 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078363329 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077031505 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076876058 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068004565 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077094288 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077143881 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068190088 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077945429 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067191747 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.197395025 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070401116 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079298686 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078602086 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080136249 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069759382 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068743392 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079131577 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081020059 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068781465 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078692874 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080333835 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.08062871 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.06855988 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082149258 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068858116 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080168114 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070524685 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080588271 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069266656 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079832474 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069842285 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069033659 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069530442 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079949197 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070276773 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068941006 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072138856 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070300769 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080283147 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082448631 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071185343 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082031151 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078799482 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070025878 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078864974 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069848626 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079564487 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069499632 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070911787 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067139821 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082124132 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069111743 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068159304 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069242124 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080976105 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068794061 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079597968 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078617325 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067718886 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081429498 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080864023 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077760203 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.08124214 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070693049 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068605709 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068950936 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.06988645 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078525935 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080435687 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070389531 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069211039 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078291762 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079787869 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067908407 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078304662 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078776592 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078606965 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068847005 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069626406 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080248284 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080661095 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077888232 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078228388 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078355595 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068452986 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077690476 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078490109 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068261443 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084513739 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068104273 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082179222 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07894346 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076818376 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079116489 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080275606 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080428736 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079823674 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.08258903 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067793188 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067945835 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079479856 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067732873 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06877619 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076461498 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068465006 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068251275 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.08091732 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067092058 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078191794 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066402222 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.076846282 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066064837 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068356263 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081293791 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067091539 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.200115857 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079499261 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070357378 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078280836 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081575918 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.078735702 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068604301 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070345386 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080196408 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079797068 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068285884 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068940544 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070495363 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078550433 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.07828481 seconds)
  done (took 18.615092587 seconds)
done (took 37.574132772 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.209281902 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.151322591 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.201029736 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118733121 seconds)
  done (took 2.137519011 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.12213261 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101230234 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.095674986 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065480932 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102908045 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065633249 seconds)
  done (took 1.944621686 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.311892061 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.212735417 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.182822759 seconds)
  done (took 2.095227712 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.199787833 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.188245645 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.397090157 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.254460824 seconds)
  done (took 2.536672272 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.144104593 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089860265 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067238189 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083602145 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.13465269 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.161261457 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101685042 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125878728 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078585457 seconds)
  done (took 2.434028412 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.147526397 seconds)
done (took 12.695545721 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.202527647 seconds)
    (2/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.196276299 seconds)
    (3/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.089256108 seconds)
    (4/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.082785336 seconds)
    (5/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075964225 seconds)
    (6/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.077469913 seconds)
    (7/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.231950341 seconds)
    (8/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.071912306 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.133902351 seconds)
    (10/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.169692263 seconds)
    (11/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072849537 seconds)
    (12/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.087765399 seconds)
    (13/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074296438 seconds)
    (14/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.082144782 seconds)
    (15/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073059676 seconds)
    (16/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.073648667 seconds)
    (17/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.183039322 seconds)
    (18/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078362779 seconds)
    (19/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.190715101 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.128455155 seconds)
    (21/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074030873 seconds)
    (22/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.238852048 seconds)
    (23/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.150988786 seconds)
    (24/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.10844587 seconds)
    (25/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.152446558 seconds)
    (26/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.168815336 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.100122236 seconds)
    (28/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.206312401 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.106906001 seconds)
    (30/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.208488145 seconds)
    (31/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.19201094 seconds)
    (32/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.125000884 seconds)
    (33/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.150054937 seconds)
    (34/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.10124231 seconds)
    (35/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.077659851 seconds)
    (36/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.172035345 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.089806814 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.088900832 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.089808494 seconds)
    (40/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.0785763 seconds)
    (41/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071883682 seconds)
    (42/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.154802546 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091318543 seconds)
    (44/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068594265 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065066061 seconds)
    (46/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051144349 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.064784133 seconds)
    (48/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.07693038 seconds)
    (49/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.070751087 seconds)
    (50/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069385503 seconds)
    (51/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.175434454 seconds)
    (52/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.063096153 seconds)
    (53/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.104378015 seconds)
    (54/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.07345626 seconds)
    (55/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.221548398 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072045299 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.085228756 seconds)
    (58/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.175289608 seconds)
    (59/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.160745278 seconds)
    (60/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.107037436 seconds)
    (61/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.052512509 seconds)
    (62/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.071173449 seconds)
    (63/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.075132264 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067305062 seconds)
    (65/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072747256 seconds)
    (66/309) benchmarking ("sort", Float64, false)...
    done (took 0.125305731 seconds)
    (67/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068063371 seconds)
    (68/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051319663 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.075287136 seconds)
    (70/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.174698422 seconds)
    (71/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.184575414 seconds)
    (72/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.071540196 seconds)
    (73/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.157822599 seconds)
    (74/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.109619777 seconds)
    (75/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051242456 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.064905699 seconds)
    (77/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.174219363 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089368604 seconds)
    (79/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.181977591 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.06468788 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 0.06575997 seconds)
    (82/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066681838 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.109846132 seconds)
    (84/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.147416626 seconds)
    (85/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.29094333 seconds)
    (86/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.066727131 seconds)
    (87/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.295300978 seconds)
    (88/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.119187221 seconds)
    (89/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.051682307 seconds)
    (90/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.052113822 seconds)
    (91/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.177530962 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.122900657 seconds)
    (93/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.1941628 seconds)
    (94/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.078836092 seconds)
    (95/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.139672343 seconds)
    (96/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.053480255 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065682511 seconds)
    (98/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.088790822 seconds)
    (99/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.090668591 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.097355433 seconds)
    (101/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.072546679 seconds)
    (102/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.077270392 seconds)
    (103/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.051681521 seconds)
    (104/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.10791037 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.092781939 seconds)
    (106/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.073105787 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.09020062 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072539766 seconds)
    (109/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079800222 seconds)
    (110/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.051604663 seconds)
    (111/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.186039254 seconds)
    (112/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.147839834 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.136650549 seconds)
    (114/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070417454 seconds)
    (115/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.051878576 seconds)
    (116/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.090160141 seconds)
    (117/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.094569253 seconds)
    (118/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.109876222 seconds)
    (119/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.062625489 seconds)
    (120/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.158879423 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.088715843 seconds)
    (122/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067700271 seconds)
    (123/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071465385 seconds)
    (124/309) benchmarking ("sort", Bool, false)...
    done (took 0.133531225 seconds)
    (125/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073911295 seconds)
    (126/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051736835 seconds)
    (127/309) benchmarking ("sort", Int8, false)...
    done (took 0.139356949 seconds)
    (128/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.063048552 seconds)
    (129/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072056797 seconds)
    (130/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.164244754 seconds)
    (131/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.103755354 seconds)
    (132/309) benchmarking ("sort", BigInt, false)...
    done (took 0.182957544 seconds)
    (133/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.064602157 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070751092 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071165124 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087486782 seconds)
    (137/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.050782663 seconds)
    (138/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.066620031 seconds)
    (139/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.051012446 seconds)
    (140/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.107430915 seconds)
    (141/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.196052155 seconds)
    (142/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.098106865 seconds)
    (143/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066754769 seconds)
    (144/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.053476269 seconds)
    (145/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.050877585 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071436236 seconds)
    (147/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.076187285 seconds)
    (148/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.065798496 seconds)
    (149/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.053804506 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090913115 seconds)
    (151/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.097997788 seconds)
    (152/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.087471517 seconds)
    (153/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.075139606 seconds)
    (154/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.069228303 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.092943578 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064586454 seconds)
    (157/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071927024 seconds)
    (158/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052261736 seconds)
    (159/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.064516849 seconds)
    (160/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.074373655 seconds)
    (161/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.149154907 seconds)
    (162/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071606633 seconds)
    (163/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.066787298 seconds)
    (164/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.134395476 seconds)
    (165/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.069383795 seconds)
    (166/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052511945 seconds)
    (167/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073093991 seconds)
    (168/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.054572205 seconds)
    (169/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.134924508 seconds)
    (170/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.10621859 seconds)
    (171/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.149725344 seconds)
    (172/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.074024407 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.09041826 seconds)
    (174/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.054755803 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.089138357 seconds)
    (176/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.050750822 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065561555 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.089370601 seconds)
    (179/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.06498384 seconds)
    (180/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.050641809 seconds)
    (181/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.078138976 seconds)
    (182/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.050863885 seconds)
    (183/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.074998438 seconds)
    (184/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.052014648 seconds)
    (185/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.051539489 seconds)
    (186/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.074984501 seconds)
    (187/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.078872519 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.085271143 seconds)
    (189/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.050699567 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.086514454 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071563365 seconds)
    (192/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.075099068 seconds)
    (193/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.084180868 seconds)
    (194/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.072792854 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072302858 seconds)
    (196/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.225658907 seconds)
    (197/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079624766 seconds)
    (198/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.053975935 seconds)
    (199/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.052806435 seconds)
    (200/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074094684 seconds)
    (201/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.066786605 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065992911 seconds)
    (203/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.064864376 seconds)
    (204/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.109092698 seconds)
    (205/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.071329505 seconds)
    (206/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.052586605 seconds)
    (207/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.151968463 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.127629658 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064375685 seconds)
    (210/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.07261576 seconds)
    (211/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.066252326 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.146633557 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.105786506 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.066137595 seconds)
    (215/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066546339 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.108633222 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074272836 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072774391 seconds)
    (219/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.068655167 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.093847113 seconds)
    (221/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.100233345 seconds)
    (222/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051645062 seconds)
    (223/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068239324 seconds)
    (224/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.05224975 seconds)
    (225/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.061410053 seconds)
    (226/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.139250628 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.106819933 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070939985 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065885107 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066490852 seconds)
    (231/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072669588 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.066244996 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064194259 seconds)
    (234/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.052310475 seconds)
    (235/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.05268185 seconds)
    (236/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.051955787 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.109016376 seconds)
    (238/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.088752046 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.127000315 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.086407541 seconds)
    (241/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.074963583 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.132532684 seconds)
    (243/309) benchmarking ("sort", Float32, false)...
    done (took 0.127336812 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.141192418 seconds)
    (245/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.051715501 seconds)
    (246/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061593578 seconds)
    (247/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.052551488 seconds)
    (248/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.061617125 seconds)
    (249/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.099664818 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087179904 seconds)
    (251/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.19569451 seconds)
    (252/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051920451 seconds)
    (253/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075755329 seconds)
    (254/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.062281651 seconds)
    (255/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072075304 seconds)
    (256/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.164509902 seconds)
    (257/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.052005182 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.089512481 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.108447896 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089095887 seconds)
    (261/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066608749 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064642412 seconds)
    (263/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066405879 seconds)
    (264/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.137440809 seconds)
    (265/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.052193994 seconds)
    (266/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053275762 seconds)
    (267/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051409934 seconds)
    (268/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071483286 seconds)
    (269/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052554281 seconds)
    (270/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.065802739 seconds)
    (271/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.067357196 seconds)
    (272/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.072371389 seconds)
    (273/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.064102743 seconds)
    (274/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.07306179 seconds)
    (275/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.06491524 seconds)
    (276/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.051149697 seconds)
    (277/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.065546899 seconds)
    (278/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.05232277 seconds)
    (279/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069433179 seconds)
    (280/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051508626 seconds)
    (281/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.070720904 seconds)
    (282/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051233495 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.064867973 seconds)
    (284/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051582474 seconds)
    (285/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.07111624 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072201564 seconds)
    (287/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065813633 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063766269 seconds)
    (289/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.052251363 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063997212 seconds)
    (291/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.071854556 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072237448 seconds)
    (293/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.051563011 seconds)
    (294/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.065720583 seconds)
    (295/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.052156977 seconds)
    (296/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.065277349 seconds)
    (297/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067630881 seconds)
    (298/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.167499646 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070752051 seconds)
    (300/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.171895378 seconds)
    (301/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081103054 seconds)
    (302/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.079444637 seconds)
    (303/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072430586 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070217204 seconds)
    (305/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.131332246 seconds)
    (306/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.067637161 seconds)
    (307/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052286205 seconds)
    (308/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.052103846 seconds)
    (309/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.077306368 seconds)
  done (took 30.393695983 seconds)
done (took 31.800903081 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084021322 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091664123 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073974689 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.091580542 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079999647 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076156954 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071733866 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077431476 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079497345 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080780327 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077970537 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054700726 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073374792 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073899297 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073660393 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090449595 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.07742729 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072543991 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072556133 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064714316 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072899846 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.06586062 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067172275 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054551833 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077322113 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071568145 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071834103 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073634578 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065874183 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066132089 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069256382 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072845018 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.06514351 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077232798 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071842371 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073139688 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074498233 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075763262 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067121307 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066310445 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074290424 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065869938 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072491425 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073070196 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.07154696 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070913314 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073127734 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077641255 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09063492 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067760366 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074143081 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076255857 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076155644 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072492394 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.06902968 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072655518 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070333167 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090796694 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.0730631 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06760889 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073884665 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073095925 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070933297 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072674997 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072415993 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074415736 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.07481115 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070685728 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074565864 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070538984 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065014489 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072666371 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068625023 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065266275 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074981814 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076293707 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064676668 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.07106615 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071860396 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070865781 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064507794 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066973323 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067084991 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070781415 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066944775 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054368719 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068576045 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071016405 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063907761 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072679626 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070893653 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071278362 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066362776 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.07469784 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064212272 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069764495 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064851497 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065135816 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066219286 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068650588 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064842974 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066872456 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073244352 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066218637 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070849482 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078315409 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064729531 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071256033 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064244436 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.06441121 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079292795 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074634021 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065688264 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06722862 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064042301 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071591197 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063862577 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064613266 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.06476865 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064490667 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.069466264 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06375175 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065899925 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070476806 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.075614527 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063434249 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067505472 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066026365 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063668776 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069028911 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.06412583 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.06378839 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.20111676 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062275874 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067638317 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065614311 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072885323 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067730593 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072122575 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066641336 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073200189 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069666997 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071208927 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070564421 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.063966277 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058586688 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068440684 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067940432 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067202828 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065441815 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066722525 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066364329 seconds)
done (took 12.379440644 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.06662462 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.14306878 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.099053181 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094737884 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085261882 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066607916 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076018617 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101520028 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067504356 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102566474 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086919701 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084683998 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.111716827 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064616407 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06574413 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069675297 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066849653 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081050314 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100735187 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085962924 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115313507 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065126611 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094004423 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089636106 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087094761 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.101193055 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066573941 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069331559 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069166984 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.090856222 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086234498 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069716381 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066288278 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.100031603 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092186375 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082740379 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065981732 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082176574 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066378486 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065862174 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067376621 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097744354 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080327359 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080315917 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.06952889 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068672813 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066800954 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083124475 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088648635 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078051452 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086641658 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102121666 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068206028 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065269911 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06443858 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084812457 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065225041 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068291865 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066124322 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067854729 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.06564592 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069252287 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080288074 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081709902 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069698562 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080029873 seconds)
  done (took 6.782197858 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.082805683 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090053725 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082760788 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083567484 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065521918 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065973032 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066852983 seconds)
  done (took 2.042676403 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067631816 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087714265 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088653805 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089122997 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083720458 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087925597 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075525965 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066189241 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.07980489 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067185755 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087527112 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101292626 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067056565 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072570267 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090395272 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066333896 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089781743 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066386825 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069312279 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089371148 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068222756 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081673338 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069500717 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.06691252 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080429512 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066415157 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112934109 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07037088 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06765471 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069250285 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064522374 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106539731 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079961058 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075407023 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066368127 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080316411 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080024034 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064892019 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082185731 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.070825374 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079675074 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066202275 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.06695591 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064057975 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070636747 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076258244 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067113209 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067061393 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068909205 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085722938 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067046029 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079733911 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069633974 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068861185 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067944592 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070298575 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076297092 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.06724223 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086080723 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067682558 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082963887 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082805959 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080145762 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082867664 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069426751 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080008828 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.07996365 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069170122 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06809114 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069958003 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082499129 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064809032 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067877848 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076785497 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068340372 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089634624 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089225776 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068008599 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.076112339 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067845556 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067087844 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.067065029 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089271266 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068968748 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066504969 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071132726 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069406723 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065089995 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065832076 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070134772 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064413344 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067915665 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069291777 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069488568 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069487205 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083074925 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069013693 seconds)
  done (took 8.755166004 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068915126 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068127868 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069546605 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068056197 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067649095 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.06858762 seconds)
  done (took 1.934663846 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093896346 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.070050159 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081079115 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.0724004 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105186238 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.08680404 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087349116 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078974732 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083408297 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078504048 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086416204 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088728929 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092611965 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072822698 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086172379 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072105954 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.08713158 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075912708 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078303296 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073221628 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086587655 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072522743 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072688591 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.082242856 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075476634 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072430414 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067456137 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078869513 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078868958 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078965793 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.07248797 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075769135 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070963473 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078098296 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086775414 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070894048 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071953029 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077030823 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072189538 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075849153 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088159958 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072914987 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.07454091 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077523149 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078305998 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.071105174 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077394391 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076290675 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086303218 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077362594 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077233166 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.072170636 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075376273 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077288442 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070663409 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078140196 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077375911 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086414298 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072557825 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070507135 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069143558 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075585612 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078225074 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075286131 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078716961 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077130333 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070843064 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072194695 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072369447 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071351538 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076693294 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068926287 seconds)
  done (took 7.097545204 seconds)
done (took 28.100855808 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.546776464 seconds)
  done (took 2.037251924 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.605086761 seconds)
  done (took 2.124430318 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.624191344 seconds)
  done (took 8.132469894 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.390344282 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.470635347 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.687313296 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130317766 seconds)
  done (took 3.230657857 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.673526246 seconds)
  done (took 2.191013786 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.209276534 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.196026473 seconds)
  done (took 1.932875765 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.377001654 seconds)
  done (took 1.893335938 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.103765929 seconds)
  done (took 2.620556753 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.260901624 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.162816206 seconds)
  done (took 1.945857797 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.459799435 seconds)
  done (took 1.979158978 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.85831786 seconds)
  done (took 6.380969719 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.212962523 seconds)
  done (took 1.778346616 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.238263165 seconds)
  done (took 1.759498158 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.67274763 seconds)
  done (took 3.193015212 seconds)
done (took 42.72109851 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080762368 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081422531 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081294938 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078329885 seconds)
  done (took 1.829349868 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077666004 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072598857 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076746108 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072307723 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076934347 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072600261 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074579959 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076950162 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07244666 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072960793 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072575699 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072189579 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075300315 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074484887 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070961252 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074756891 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076554426 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072516215 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075802958 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072583683 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070969636 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.075124265 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074793823 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072181767 seconds)
  done (took 3.300455595 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078311328 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073663854 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074569847 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072559955 seconds)
  done (took 1.830481588 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078019501 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.092304531 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.0894005 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077401623 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092441139 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086389096 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069454117 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068981848 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073442193 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076983706 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067889394 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096372441 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087817353 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077074637 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079391696 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066376648 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068296707 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086854637 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077550588 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078169772 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069985408 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076952198 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068060256 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088270454 seconds)
  done (took 3.421115786 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.07980359 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103618864 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077748779 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088654004 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090576544 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065668274 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074575691 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089254653 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.122753959 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065502868 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070437699 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065721294 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072829022 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065274027 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.07657164 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.105173823 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.108308811 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068621433 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095731311 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065687732 seconds)
  done (took 3.189448797 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073731084 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069953571 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066738381 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069122975 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078238765 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072842562 seconds)
  done (took 1.967050138 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.06979185 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068138854 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068100653 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067509135 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072314809 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067120072 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066112295 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067596724 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067613603 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067409582 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066687671 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066558677 seconds)
  done (took 2.344863406 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.171832533 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069052268 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069232287 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066553225 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.07128313 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.0663435 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080134201 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068138218 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090552263 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.06638512 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066438824 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068404142 seconds)
  done (took 2.48761613 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206671741 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076717172 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23713891 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137135613 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111532192 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115627484 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104635724 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11385566 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.14305065 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102221349 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167527665 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165554319 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107695321 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137431183 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089476976 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.098413931 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155103581 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16210496 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103356708 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165461702 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143664882 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124890006 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146658566 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101370452 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105955505 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121641578 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070990946 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080250976 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170808031 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131764676 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146315952 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111532776 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093838588 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176693237 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170851531 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141707149 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134264973 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083745048 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.10283625 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.134712102 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200362652 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08780358 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161605496 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245782176 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081625571 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134418844 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122510444 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.120064219 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.10712454 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090201245 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146838125 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184170858 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.139035854 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087013451 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113240293 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114912395 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.116210499 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104232555 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183371904 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161769966 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127415233 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071585241 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100138055 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153169745 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132517965 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108737121 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.126341955 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093866422 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13395319 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154825069 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118468935 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144399542 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.128814173 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088948925 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119439014 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13997795 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128115482 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170417435 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125150563 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073467205 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124948438 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103835893 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082002933 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.142683627 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075540042 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174120717 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098132884 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.10564866 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112966811 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108813879 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108836879 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160020711 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141088735 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.244928103 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066583931 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104462567 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.121744684 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147822601 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087816396 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108718243 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117157674 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078565218 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140164633 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074822237 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123539064 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075745915 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125496309 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133237718 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.077026127 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122575158 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101627565 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100243619 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133557793 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161061378 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089535709 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082849413 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167447542 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121879227 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104450203 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14390185 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156110964 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.099675199 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103638585 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150118759 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18021914 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089927968 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163273367 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10798629 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084358188 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.088077838 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124012513 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11250393 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.122725433 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082665872 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.119343614 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168499818 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075343368 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095177914 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134337499 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07878234 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080653372 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102827935 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100009777 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094955285 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099853307 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103702567 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135989527 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121555131 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102968469 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269209251 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099529125 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171651026 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089321027 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101990964 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103628421 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070447614 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.136405871 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158312011 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079515616 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164914556 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.124803434 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105910459 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119644132 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08425992 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140385572 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079218986 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070796506 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144923433 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110569442 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110576899 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.151469002 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10537577 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.126737803 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120229676 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134496767 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131768399 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.129751455 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105410243 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088415019 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111910081 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126479067 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.07264678 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.09141817 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080154479 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103963304 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096153005 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083850169 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14251974 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1251379 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100693857 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112100585 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097452179 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147544577 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076809258 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128824652 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.118629146 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09376294 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.151082228 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151675241 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13057048 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098709778 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143385733 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070223914 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073279389 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.232330471 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125089713 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084585948 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083859456 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117646738 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147343366 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129460602 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13996103 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112572561 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121821725 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15509787 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069633252 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.115753247 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14756125 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122367047 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104500203 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090361804 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099371534 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142853772 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108050781 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182066774 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115079434 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126426851 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153254216 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.100246386 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080281695 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10889297 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135696576 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105201706 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14574809 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100229892 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0882838 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110348108 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074672815 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100280669 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127302251 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119848675 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136739902 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.114905091 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13299191 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077628365 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116919471 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120712541 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122150353 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064180972 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118915748 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160054467 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093759277 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118015906 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151548537 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079064408 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.123452683 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.321842598 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147331064 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08516336 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110468908 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118923195 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128367741 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121238626 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140634518 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109023367 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135239844 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110007836 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086456625 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088105944 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096929885 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105619079 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094639738 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.108339659 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114842085 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094847611 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131698785 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103424251 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109899932 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119053175 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097900817 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089538987 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096735907 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175053993 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120167521 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171987079 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098693046 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.145140584 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165376775 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074899442 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079388824 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078575761 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139622431 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083968447 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130943328 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.098038768 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105987001 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124079225 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142128924 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095116364 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068813981 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108961786 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137078941 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112577334 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097848041 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.10369764 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161706126 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100297175 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079477784 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1136049 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10424874 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101868506 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.314212242 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.063178107 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.0981414 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076743175 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082103525 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128091968 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153077231 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081049129 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.10312675 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11977511 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111038191 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127894584 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102526479 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100239724 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114885066 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150736261 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129187721 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.091161129 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112697215 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129934898 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157289316 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106143895 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096014108 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172139015 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170745379 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.160659195 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088972101 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114711579 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113832505 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108203261 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139657109 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083074946 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163988827 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082227398 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136158536 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104421666 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090483511 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130278085 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.099493569 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088515563 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148651883 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118021813 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083085366 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077950395 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118055008 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120251317 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10591396 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075611941 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138051287 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072910749 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131600121 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167450451 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080555062 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.250219601 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098407401 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082088357 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108810458 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103852873 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090039136 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098783703 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174124473 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088599048 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149533379 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142247867 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113870327 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137541289 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100538287 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.63709296 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078255961 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15327553 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117172934 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172984155 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098034403 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118114919 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110235453 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124385737 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145227221 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106068648 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.178967658 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13324561 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.117078868 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079816433 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10315906 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103845777 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089243509 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105358164 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114839551 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116350362 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094468065 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.11613517 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123571111 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082354924 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095575492 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156382868 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1172656 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144344849 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140447367 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084758976 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116954424 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137625478 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079829897 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.121666968 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151299061 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105239269 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096485289 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.226174655 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.104236227 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170307074 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073671202 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162682448 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121771612 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109748683 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114856439 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.11463655 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131952487 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108020185 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12160352 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094718112 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111295944 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114171884 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082497796 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077669903 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106125923 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113756993 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.099381626 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099426626 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.098847676 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151627538 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071778697 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096109866 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105162218 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14555753 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176034321 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088473875 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083571212 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119456322 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112747718 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113396591 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12071069 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.07957647 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082514259 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081878458 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077883905 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.108827161 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112837377 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104833694 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111519823 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164902473 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082983042 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.225416457 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095415812 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104611382 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069887346 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078770898 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095875216 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097265617 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108043562 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099852895 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167127237 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.093589042 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089332876 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091714443 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072493789 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081331509 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.273433878 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112428084 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119549171 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098760237 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.063631928 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109363027 seconds)
  done (took 59.012152855 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.109811544 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.08252791 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097028418 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.150127376 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.123053025 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.211765703 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.158765852 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.303755397 seconds)
  done (took 2.881351795 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067891331 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.09249857 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.098255221 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.081326891 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.065223963 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067623886 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.219147398 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079540092 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.06526605 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.087308614 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.077405844 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.067954146 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.409155381 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065100347 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.066847284 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.060924353 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066057539 seconds)
  done (took 3.254564329 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.359534827 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.581457165 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.365000489 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072423482 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.622360038 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088160803 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 3.773886788 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.124187914 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.072056554 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.50543147 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.702875561 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.121964984 seconds)
  done (took 17.914115645 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075434637 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069406406 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.082476133 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.082819266 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071553514 seconds)
  done (took 1.905786449 seconds)
done (took 106.922095142 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079377467 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.377579232 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.052763001 seconds)
  done (took 1.981819243 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.08208765 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.083784297 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.083177837 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.080978786 seconds)
  done (took 1.861405161 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.073887027 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.07496028 seconds)
  done (took 1.673284479 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.219303829 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.136533301 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.084996822 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.081078605 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076490857 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.076803934 seconds)
  done (took 1.767542406 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.071292192 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073689466 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.071067887 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075024512 seconds)
  done (took 1.824829951 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076353677 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.051447304 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.053664423 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.053997949 seconds)
  done (took 1.765918935 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.08501313 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.077437696 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.077118165 seconds)
  done (took 1.769185775 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.099828733 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.083488758 seconds)
  done (took 1.712835685 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081040699 seconds)
  done (took 1.611752908 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.09682778 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.111221098 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.124507016 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.106318033 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.132422233 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.105764899 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.082938682 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.084134895 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.074986153 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.084540493 seconds)
  done (took 2.533511847 seconds)
done (took 20.545830732 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07819676 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.172408125 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.3516571 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.087354726 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.647771646 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.347503203 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.863729093 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090216323 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.110871284 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066446214 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.081986837 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.628563555 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.863898338 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.130630341 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.848225664 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.131285725 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.630087241 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067065143 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066397841 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066609417 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.852430288 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066748297 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066804826 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067387393 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.628595226 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.361547402 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06708546 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.130394596 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066384525 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068340127 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.346025672 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06649648 seconds)
  done (took 14.636111051 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.069918461 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.114763042 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072274585 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082288875 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.069376383 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.06804071 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.070153239 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.067629597 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.116541111 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067007882 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082805048 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066294915 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.070555947 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067256635 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.085133626 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.066893173 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06786004 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067770268 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066897908 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067462004 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.084646077 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06651244 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067249593 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067271306 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.066606699 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.078014005 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067523847 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067012852 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067151276 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068510476 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.069887445 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067756467 seconds)
  done (took 3.887913195 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114095088 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123187369 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073279988 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.101555311 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.110906928 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068977061 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.141088612 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090521569 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.124902366 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066994338 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08263536 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066814449 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.099212641 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067718964 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.085974824 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067437291 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068154485 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067329568 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067439921 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067387053 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085627082 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067127675 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067503766 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067933865 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067314121 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079876815 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067237187 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068042122 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067329551 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06908963 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070224219 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067372636 seconds)
  done (took 4.147734061 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.07220628 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074179961 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.080882866 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082367317 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.067792677 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071444767 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.071393239 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.068788357 seconds)
  done (took 2.14061083 seconds)
done (took 26.348789401 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078504788 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.06764822 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.071421749 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080045669 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.071841011 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.077150895 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066013092 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.073192847 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.070721289 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.071972688 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.073569986 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.06670507 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.069818748 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.065759227 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.072220444 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.066465521 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.077403538 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.070521176 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.077679505 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.077527338 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.06883621 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.071610147 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.072700161 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.077854123 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.077654912 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.077350978 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.075800614 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.071722823 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.067684814 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.069271553 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.075369611 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.081965776 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.067056351 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.077654487 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.066710115 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.066679928 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.070148471 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.066578619 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.077856984 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.075024968 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.068287249 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.074365966 seconds)
  done (took 4.575426529 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087132973 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.088933632 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083123209 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061533119 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.065822925 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.063448236 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.086678391 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.05845595 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.058775403 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086507823 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055137224 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058510724 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.06115507 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053082404 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.058285413 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.055655165 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.060476222 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.054592718 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.05821561 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.058629361 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057556418 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053436983 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.059021753 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.061519881 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058025507 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.060625713 seconds)
  done (took 3.22373363 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073330771 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.082940829 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.087082947 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.124711457 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.10219124 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.075573219 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.076383052 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.090605468 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.08369876 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.065627011 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.069954901 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.091989943 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086217207 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.072572288 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.066364493 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.082677576 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.080544355 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.067725353 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.071784097 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.089310473 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.082699619 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.08205696 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.091055991 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.079472186 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.065272808 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.068319957 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.069903338 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.07949479 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071156135 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.074855988 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.069618682 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.069671227 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.067698592 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.077105262 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.069590024 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.067756837 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.088612571 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.074979369 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.076235662 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.066649156 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.06942274 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.067529403 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.087792026 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.120826734 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.06549625 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.07241547 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.07397 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.074972953 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066576084 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.084424733 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077020957 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.065725924 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069111675 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06557656 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.06655503 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079563077 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068064459 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.068430491 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.074665416 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.069224396 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.084082287 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070071568 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081822938 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066103473 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.073319439 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.065330073 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.066694405 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.065029386 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.090678308 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.0677853 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.106078723 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.06736445 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.066861447 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.074796159 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.073786924 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.071973128 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.066428517 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081307389 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076085249 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070025598 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.074570316 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.069457153 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.069005102 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.086486678 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.068411388 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.067738425 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.066942437 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072305834 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.068818255 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.067199679 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.078768636 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.077668382 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.069083128 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.082818098 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.065764119 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.066963927 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.071733295 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.070487998 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.065840314 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.076639815 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.070606638 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.066687952 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.074608527 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.065962424 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.068946076 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.075866409 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072262804 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.065040429 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.070821769 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072011913 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067093015 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.067748745 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069314556 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.067787924 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.074261745 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073163749 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.070525733 seconds)
  done (took 10.296156383 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.158694859 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.150944126 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.068911027 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.142813759 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075138082 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.077487737 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.144466607 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.09186939 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.06670468 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067417084 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.067774932 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.107719534 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.104350969 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.11056026 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.077236865 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.066790061 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.082191395 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.113852975 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.145866008 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.140396324 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.082375302 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.07580667 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.068816482 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.06771857 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.069292059 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077177157 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.081845165 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.075235419 seconds)
  done (took 4.249988771 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.079975091 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.095445225 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073115611 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.087429653 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.089194242 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.066908143 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.068794081 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.068479431 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.079313252 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.076640967 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066228282 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072359204 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.072944028 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.070253916 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.067917652 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.07353505 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.073081833 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.06807081 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.069492857 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.071205918 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.076445324 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.078522756 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.070053962 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066160579 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073486249 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066236293 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.062704265 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.082626676 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.066760949 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.088393734 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.064849792 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073726875 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.079745728 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.067474517 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.066659621 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.066585015 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.066475275 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.066141523 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068122489 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065306686 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.064725327 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.05649639 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.065666184 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.0770651 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.072576338 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.055654688 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.070808982 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.071572432 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.071898943 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064020617 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.069236356 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069057146 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.069037347 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.073777837 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.071485141 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.071255968 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.067310395 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.063867498 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.073870828 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066233906 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.063733231 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065040181 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.070875035 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.063875251 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.074064105 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.070830542 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065000366 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.065674706 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.067914317 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.07194472 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066022639 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.068930812 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.063888635 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068152609 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.070700809 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.067877433 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.067303288 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.064813747 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066071865 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.066389996 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.05456247 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.066379491 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.05255693 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.069145109 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.064482181 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.064918339 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.066258447 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071339308 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.077531537 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.067473128 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.071905709 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.066835552 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.065536351 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.069232569 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.058992611 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.06883613 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.081207569 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.080055608 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066015539 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.063934065 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.079948802 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.070484565 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.065325732 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.054968919 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.07334069 seconds)
  done (took 8.891146197 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.088579226 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069051047 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.082196609 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.089384438 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.084692147 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.07374298 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075308066 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.067947847 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.080875354 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.072579999 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075217006 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.066996117 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.07642665 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075429511 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.068605285 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.075902144 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.070812873 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.081210058 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.080856447 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067142612 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075037431 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.078512869 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.087854856 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.078833086 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.077203529 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.078476406 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.088042997 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.070635998 seconds)
  done (took 3.753466441 seconds)
done (took 36.535414618 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.640961532 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.802071664 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.624637273 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.989324611 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.701335085 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.75214086 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.709149188 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.620675913 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.678827031 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.660880872 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.874375122 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.654438332 seconds)
done (took 63.275243778 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.69614445 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.767060573 seconds)
    (2/2) benchmarking "String"...
    done (took 1.894505201 seconds)
  done (took 5.225390591 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.919649574 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.162515116 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.867914704 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.62373022 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.624739655 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.913997615 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.410275953 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.142589787 seconds)
  done (took 29.313092055 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.623277542 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.837331907 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.247045842 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.267021019 seconds)
  done (took 14.584844158 seconds)
done (took 60.37904949 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.654566196 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.644850549 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.634310477 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.604920348 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.678850003 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.630797085 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.859256066 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.631555993 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.618720953 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.614297331 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.624235303 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.044156147 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.629354417 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.760664317 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.623218166 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.623032739 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.657730599 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.780807888 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.774818191 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.634330346 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.625174188 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.641254268 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.626657951 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.625102415 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.674423837 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.622133682 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.02629431 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.620138926 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.237517208 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.624216093 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.650940115 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.949388787 seconds)
  done (took 199.212854033 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.622781099 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.671704541 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.752020951 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.654283884 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.081870362 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.806946919 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.734687474 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.117244719 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.623605745 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.644253868 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.872013359 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.623864614 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.901250731 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.604974655 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.673087844 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.714217836 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.895264803 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.887360062 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.676845418 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.785334997 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.637301645 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.767771787 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.729328631 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.834477995 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.630920755 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.630797294 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.645949753 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.628345868 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.813714579 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.875044506 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.661334421 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.632959049 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.75139285 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.494696005 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.647998582 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.651129302 seconds)
  done (took 164.943253662 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.781892971 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.625536738 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.622979381 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.624239827 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.63072567 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.623552826 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.750874801 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.747448813 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.07787022 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.2810466 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.675190165 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.408800194 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.623694305 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.623130699 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.689848837 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.636563576 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.623558004 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.638941263 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.653080336 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.622308566 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.624672429 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.749757884 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.636761062 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.816796275 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.629946234 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.624235296 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.628272579 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.996550598 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.62375949 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.631203602 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.865404323 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.625190153 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.624923808 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.437150145 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.103537114 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.84935645 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.626497624 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.630626007 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.624212187 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.853028288 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.623952452 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.625773946 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.624954913 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.628057488 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.853315406 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.625201723 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.750329023 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.623573597 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.118060933 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.622726583 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.624497823 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.766801217 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.285603628 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.624037975 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.624627735 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.626354735 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.623141575 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.623711674 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.630039171 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.73012913 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.702576678 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.625395695 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.627350769 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.630247121 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.62375063 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.633821134 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.625600884 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.923770747 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.680039827 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.738059115 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.746290741 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.624525437 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.688115076 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.718976689 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.624387767 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.625052741 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.625273529 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.625271346 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.706138922 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.622528947 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.748645733 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.632790373 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.625922152 seconds)
    (83/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.62453329 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.677203496 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.695040204 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.625985859 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.456433047 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.626358799 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.625877727 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.944326055 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.689662434 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.624564538 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.625123428 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.625792503 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.729698402 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.624689235 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.402604567 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.74862636 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.626664601 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.809661759 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.625664678 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.742248401 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.626762567 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.809450074 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.627470909 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.708047423 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.6301044 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.627353862 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.625751939 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.657960342 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.627680573 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.682719888 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.624715656 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.995837341 seconds)
  done (took 383.033357008 seconds)
done (took 750.585345644 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.293716683 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.257439955 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.3773497 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.282488757 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.265258611 seconds)
  done (took 13.044076117 seconds)
done (took 14.612135197 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.715949558 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.71739012 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.652168177 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.715086846 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.646892967 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.714990307 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.69546601 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.652259692 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.683927345 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.652545082 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.68410358 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.65161574 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.640622967 seconds)
  done (took 23.391256441 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.867532082 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.858543056 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.696898597 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.867531289 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.673532239 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.872194096 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.791028594 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.785468674 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.784305732 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.644698328 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.641391082 seconds)
  done (took 21.053801284 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.86643406 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.868395009 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.698783088 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.862606927 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.674763172 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.870537515 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.78777453 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.778606279 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.77878535 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.643405288 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.639773067 seconds)
  done (took 21.040757792 seconds)
done (took 67.055075352 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.637663788 seconds)
  done (took 3.208066218 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.658535113 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.79658537 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.642673945 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.639271203 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.636864267 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.637295172 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.638619503 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.637014978 seconds)
  done (took 14.858828127 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.637477052 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.635460327 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.632595901 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.634138482 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.635676384 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.635619993 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.633656646 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.632843497 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.634511554 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.633600258 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.63702644 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.635431534 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.63539231 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.634870055 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.63650612 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.637461137 seconds)
  done (took 27.73423303 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.635609689 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.633298625 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.635014602 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.636258001 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.635569693 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.635371998 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.634798079 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.635761637 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.635572479 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.636338692 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.635838395 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.635417744 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.635271832 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.634009477 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.635076919 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.636161368 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.634381899 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.634429952 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.639604529 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.634818477 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.636388237 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.634418424 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.635683246 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.635206176 seconds)
  done (took 40.825028057 seconds)
done (took 88.196412828 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.467395983 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.971235083 seconds)
  done (took 8.010377886 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.639008648 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.637821822 seconds)
  done (took 4.882226491 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.637925556 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.6383148 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.637938765 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.637556497 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.637848919 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.639149642 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.637442984 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.638574954 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.638297739 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.637540518 seconds)
  done (took 17.95376005 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.639130933 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.639336747 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.635842068 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.638417634 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.637465839 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.636268238 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.638346644 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.638206728 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.638678981 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.636129375 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.638769497 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.635979961 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.638939201 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.635815318 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.638760672 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.635585913 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.635555682 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.636419276 seconds)
  done (took 31.048013451 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.639982323 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.639635701 seconds)
  done (took 4.855344319 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.637366373 seconds)
    (2/7) benchmarking "second"...
    done (took 1.637879138 seconds)
    (3/7) benchmarking "month"...
    done (took 1.635793732 seconds)
    (4/7) benchmarking "year"...
    done (took 1.635406806 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.636587989 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.636439235 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.637278752 seconds)
  done (took 13.031886955 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.641667273 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.801795158 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.868082304 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.328818753 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.640114717 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.644920683 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.580040463 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.643419973 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.643505995 seconds)
  done (took 18.366604023 seconds)
done (took 99.721089024 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.454617471 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.636185512 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.028112653 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.679239483 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.691899944 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.933352645 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.672771369 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.863841488 seconds)
done (took 41.535003548 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.648525761 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.169142526 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.197602388 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.064136229 seconds)
  done (took 12.005951826 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.622920869 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.152378509 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.668293447 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.223691219 seconds)
  done (took 19.284955816 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.001746605 seconds)
    (2/2) benchmarking "read"...
    done (took 1.987810635 seconds)
  done (took 5.5709638 seconds)
done (took 45.08755886 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.64255606 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.638224588 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.640554669 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.64168637 seconds)
    (5/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.640230849 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.638112493 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.766438091 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.765256688 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.764536407 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.767231012 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.767900354 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.770093989 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.764902941 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.767566674 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.765069204 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.764982446 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.762802289 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.766620327 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.763365073 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.763558001 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.763561434 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.76497126 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.763234847 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.765280095 seconds)
  done (took 43.195169024 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.767409756 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.764591975 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.766434863 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.769663621 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.765051787 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.764489565 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.766553814 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.761826279 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.764539341 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.767315038 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.76259789 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.762236893 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.764710302 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.762812057 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.766821027 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.764233233 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.765104576 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.762850168 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.767866448 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.764787344 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.767728276 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.764041771 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.763766505 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.766215427 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.764272979 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.76422337 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.768595796 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.764686526 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.763596786 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.761676898 seconds)
  done (took 54.652487015 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.772642138 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.779221111 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.76115167 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.761929855 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.763851227 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.760194759 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.767126902 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.7604267 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.760347286 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.761345922 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.760208288 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.759413259 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.762448867 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.757711185 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.759863969 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.759350834 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.759228095 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.759362675 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.760466733 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.758068825 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.759273158 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.7593612 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.759036222 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.759884145 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.758596307 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.758364215 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.758259169 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.758197438 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.758926265 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.757836568 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.758893505 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.75768606 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.757962188 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.757397285 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.758627151 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.759203035 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.762916778 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.768597494 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.756410104 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.758950076 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.758276528 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.759212911 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.757766575 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.758466556 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.758996735 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.759284937 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.759056557 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.758851721 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.759014979 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.759550735 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.759770842 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.759308778 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.758881907 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.756852573 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.758661064 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.757684783 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.757973592 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.760385102 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.761205124 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.758817327 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.758993956 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.759087911 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.76164927 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.7594402 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.760445813 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.757809214 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.759014112 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.759472815 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.758190346 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.760443831 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.759473609 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.75918218 seconds)
  done (took 128.423179559 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.760472314 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.758509455 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.756209492 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.757786992 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.756722727 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.759806615 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.757879562 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.761014765 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.757832739 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.761074274 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.759601747 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.757146055 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.757596226 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.762679388 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.761011057 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.75702852 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.760986273 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.758317566 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.760997474 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.76083178 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.759864185 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.757998119 seconds)
  done (took 40.394951453 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.759674701 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.773359478 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.757428826 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.760325695 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.757348447 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.763432586 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.761295298 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.764016434 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.761510034 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.757651156 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.757350712 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.759738278 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.757594661 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.760103775 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.757814303 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.757010129 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.761110008 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.758875755 seconds)
  done (took 33.3793637 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.760194571 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.758784934 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.760804087 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.758430404 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.757887831 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.762127722 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.755675255 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.756529942 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.756917272 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.754880128 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.75820256 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.759928854 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.757239372 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.753892175 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.756708687 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.754024876 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.759182766 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.752783991 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.756303849 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.752423186 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.752523569 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.755815399 seconds)
  done (took 40.346354542 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.754449887 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.754818688 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.753126911 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.751931181 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.75259304 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.755585044 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.755841273 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.750681494 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.752886683 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.754393877 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.750690029 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.753944296 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.751283155 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.751496209 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.75106968 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.750646003 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.754972348 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.751958837 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.753698248 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.752360128 seconds)
  done (took 36.748873066 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.756234911 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.756678814 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.754762068 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.753998496 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.754725631 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.75530485 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.754270142 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.757529167 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.754445428 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.755033268 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.754812027 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.754787625 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.757166377 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.755237062 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.755607452 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.755324028 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.756219937 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.755197946 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.756165137 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.755238727 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.756763984 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.754579255 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.75557862 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.754978521 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.756916871 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.756437909 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.755486656 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.756279874 seconds)
  done (took 50.842713272 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.755563777 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.754510515 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.751503675 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.752299984 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.752962426 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.750481138 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.753919576 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.751486446 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.754380702 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.752227087 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.755236982 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.754731725 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.755812923 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.754000103 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.754586222 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.754357335 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.753891489 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.752302824 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.751955633 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.749979979 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.753238419 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.751719222 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.752908431 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.753197687 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.74954491 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.751258257 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.751108391 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.750575472 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.753406133 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.752241855 seconds)
  done (took 54.27358164 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.772159791 seconds)
    (2/2) benchmarking "in"...
    done (took 1.771102648 seconds)
  done (took 5.229231851 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.751266382 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.754633272 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.753333314 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.750428 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.748758065 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.752599491 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.751989786 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.751460699 seconds)
  done (took 15.698749121 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.75411755 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.752543464 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.750720609 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.754744681 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.752819584 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.753702392 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.756860427 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.753882528 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.753697178 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.755733627 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.760049921 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.760699638 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.754574704 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.751969116 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.751019098 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.756693486 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.752064781 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.751924586 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.753700401 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.750636466 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.754694375 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.750960846 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.752238516 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.748000904 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.753549213 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.76186379 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.756701741 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.747813195 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.748263593 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.751501592 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.748837944 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.744923149 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.749465471 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.749265518 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.747507476 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.746521618 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.754224644 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.74962532 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.755320036 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.74687102 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.747682176 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.744339622 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.749027987 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.750543698 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.74898554 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.749794457 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.748523045 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.745673712 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.74751639 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.755834587 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.753387163 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.746060748 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.744879442 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.750760148 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.750546668 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.755963389 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.746432225 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.749846186 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.758319419 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.756236429 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.763252568 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.755920574 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.74790422 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.747553804 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.756824096 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.77145141 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.75249761 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.742729695 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.742797699 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.74675612 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.75118323 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.757752319 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.758306023 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.747892397 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.747521982 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.746449412 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.746885142 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.746465214 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.752041424 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.748669391 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.747193303 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.746002356 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.755349769 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.772658072 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.744489539 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.746285447 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.745919925 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.745340262 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.747597056 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.758186936 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.744872354 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.746167924 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.74649749 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.745545143 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.746952723 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.748464714 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.74543213 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.746053842 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.743671981 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.745179966 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.747439196 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.748229243 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.754851359 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.745619299 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.747961996 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.753144793 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.746541964 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.743662368 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.752355485 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.745951547 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.746591718 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.747554639 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.752071003 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.744583605 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.750557941 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.75536668 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.747922061 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.747960493 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.746329574 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.746014074 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.755221318 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.772197497 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.745833432 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.746398876 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.751169083 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.757154851 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.747838509 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.748712159 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.744929902 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.743493107 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.742224098 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.745927434 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.745152094 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.74493578 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.746315374 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.750840908 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.74279253 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.743607152 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.745700179 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.748770306 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.750137492 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.74881569 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.745384078 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.747349023 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.746234406 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.747684868 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.753697399 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.746043761 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.748351605 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.745984099 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.742827025 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.744792901 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.748573504 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.745395289 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.746440111 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.746695894 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.746055629 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.745472492 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.746668976 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.745168772 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.745353346 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.746978973 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.749974659 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.746909403 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.748639833 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.747163919 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.744595595 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.746038232 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.745964694 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.748447127 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.743579217 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.744976436 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.748247969 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.753482225 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.744045395 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.747398415 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.748453356 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.747244014 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.746768287 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.746092323 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.749366131 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.7561266 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.746825763 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.751261973 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.744902472 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.745746617 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.747058602 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.74411194 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.745642798 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.746074797 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.749211778 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.751705784 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.760139071 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.753068375 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.745665801 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.747782106 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.747158157 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.749100224 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.753497876 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.746823262 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.746190292 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.745821358 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.746420282 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.748501789 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.749211709 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.743557582 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.747104593 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.746398428 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.745320588 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.746410591 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.745808505 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.746075727 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.747601797 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.742202974 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.745002073 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.748273867 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.746702094 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.7419755 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.743878623 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.745812375 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.745829998 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.747584181 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.751470966 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.742893807 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.745524596 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.746197974 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.747410223 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.743580084 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.746528523 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.744702892 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.740533115 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.746865017 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.742921859 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.74121346 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.74736426 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.742887528 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.741002827 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.742739396 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.742034991 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.737632116 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.743194705 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.746444328 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.741153705 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.740273955 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.741306898 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.741169032 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.741894928 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.747854218 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.738673171 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.741121865 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.740950355 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.743161036 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.738993712 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.744185641 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.742668704 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.744541832 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.743216527 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.742857031 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.740164758 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.743879766 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.742283416 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.745933693 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.742704275 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.744776475 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.748625375 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.747999889 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.744709171 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.745847311 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.743196475 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.746013101 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.743827363 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.743004523 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.744944486 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.754592068 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.748928049 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.748417 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.744774962 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.743372478 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.750184809 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.744020827 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.748103499 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.743924801 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.744665025 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.744168851 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.744117919 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.740407447 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.7449094 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.742431478 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.745290454 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.746349368 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.746554245 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.743015859 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.743714315 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.744938591 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.744864617 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.743674394 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.742436381 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.743325776 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.747079144 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.744979949 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.744531157 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.744848447 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.748123478 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.744941839 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.743666401 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.742562996 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.745294599 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.743995153 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.746787108 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.743806654 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.748051467 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.751511449 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.746546399 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.752014241 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.746973132 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.753610386 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.745763979 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.747640591 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.751422335 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.742023305 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.743837402 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.745420322 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.74607936 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.75166804 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.745994521 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.745626685 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.749235898 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.744868403 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.746063738 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.746069124 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.746008245 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.746072395 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.745829331 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.753412011 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.747013053 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.748347133 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.748031867 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.743521962 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.746902671 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.74690713 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.745534848 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.749137429 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.747926189 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.747849996 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.747615331 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.747628126 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.747321088 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.746822073 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.746547546 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.743527968 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.746015203 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.753177392 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.746961177 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.752429034 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.746196877 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.754047767 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.747292566 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.752837043 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.746943534 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.747863125 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.747163989 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.746261316 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.748599223 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.746604341 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.74733774 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.74662769 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.74938276 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.750919006 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.746594637 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.749530694 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.748184217 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.747630865 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.747589974 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.756311759 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.770339981 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.750704493 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.750855567 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.744705426 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.749350845 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.751995406 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.748973793 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.748413988 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.750886083 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.758795188 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.754358579 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.748342119 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.749665884 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.749152354 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.749032757 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.748405963 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.748879446 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.74920728 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.749718305 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.750677802 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.749320297 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.754281774 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.748457777 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.749347012 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.750758647 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.749538027 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.758931094 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.75044153 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.750631818 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.750535885 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.748429935 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.74998501 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.749883041 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.750371194 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.750952096 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.750671256 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.751398063 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.755006862 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.756833012 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.753194056 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.750111687 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.74969244 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.750523903 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.750103843 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.749573103 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.750216082 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.751106538 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.75220883 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.750604882 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.751459113 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.749497335 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.750086716 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.750473665 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.750568212 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.751539454 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.756563444 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.752578784 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.749021041 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.749309982 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.749869571 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.750432948 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.750499908 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.756800339 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.75328238 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.762494121 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.760255563 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.75530406 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.751750145 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.753981235 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.759276078 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.751207092 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.752905715 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.752090752 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.752642741 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.752749313 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.755480368 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.754146681 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.758303389 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.752023709 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.752972407 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.759123993 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.752065492 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.753129442 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.753998812 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.756027667 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.752619973 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.749957234 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.753183961 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.752480775 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.75920679 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.754041241 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.754846439 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.754976454 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.751056106 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.753831145 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.758191484 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.751811081 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.752928127 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.749752693 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.752363603 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.753699888 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.754553958 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.749627331 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.753191239 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.754192044 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.755702241 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.75902326 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.750436909 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.755710329 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.754161309 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.754932878 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.754366067 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.754069984 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.750752111 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.74893573 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.753370275 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.754110152 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.755406033 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.757319856 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.754190234 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.756431172 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.754933888 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.754812162 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.75710586 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.76332769 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.760322243 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.751644112 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.753960577 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.75619448 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.757718563 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.756589401 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.754625022 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.755865062 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.756286659 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.754138519 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.755830941 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.755578575 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.757269959 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.769963029 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.754246385 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.755241623 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.757115253 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.758473825 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.755287394 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.753619634 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.754406315 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.757921349 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.757514625 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.762819953 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.756307389 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.761667802 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.756306593 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.758003262 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.759535125 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.759616861 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.763885325 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.759498151 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.757660257 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.75613455 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.762076525 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.770278065 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.761435878 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.764614379 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.782694921 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.757968191 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.756543235 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.756168593 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.765464433 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.756829514 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.760193513 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.756750055 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.756194216 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.759879075 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.756202943 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.758411101 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.763490843 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.758973135 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.755577373 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.76305414 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.757901346 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.758679689 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.755280521 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.757386768 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.755480324 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.760293241 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.756898998 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.757119562 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.758298314 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.769751649 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.767889671 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.757773871 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.756795768 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.753843373 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.760223492 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.759553011 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.769291685 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.763969506 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.756305815 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.757730667 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.759730419 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.75762434 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.761345554 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.75963799 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.75830721 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.759486401 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.754751711 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.772798578 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.766331169 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.760883091 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.757594458 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.757736522 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.757355561 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.76072837 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.758898206 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.757549611 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.761185342 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.758792307 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.761777953 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.766166303 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.758756621 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.760887941 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.765407877 seconds)
  done (took 1045.134143074 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.761484198 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.755762282 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.757961388 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.757121659 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.758033195 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.759776918 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.760348356 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.757190828 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.75719427 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.757695926 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.755401966 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.756946593 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.758640758 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.758163872 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.757147973 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.757616014 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.756212276 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.756631133 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.759084997 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.756943076 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.757626253 seconds)
  done (took 38.60555482 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.759622345 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.758241766 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.755898453 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.758872417 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.757758914 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.759810246 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.757261805 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.765749193 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.760116242 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.758388514 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.760862692 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.759790203 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.757873323 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.759869392 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.757578768 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.760517522 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.758689947 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.757041817 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.764418273 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.75963007 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.762396703 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.759359252 seconds)
  done (took 40.403749934 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.762572143 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.763486942 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.760513908 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.75885409 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.762369333 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.757647057 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.761546009 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.764344574 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.761355478 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.762032674 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.759962564 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.762127396 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.770117072 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.763687529 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.762211898 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.761337488 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.904250461 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.760741011 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.76341286 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.761329295 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.757511084 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.765863193 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.757629665 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.759082159 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.765477519 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.763487485 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.762429401 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.761011289 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.763095234 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.764410507 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.765496357 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.761334747 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.764060266 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.764666137 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.763477396 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.766322212 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.765216799 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.763258187 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.759561128 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.762214252 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.770786016 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.781921959 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.763562786 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.766199262 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.764826426 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.762872966 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.769338354 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.769469817 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.758549777 seconds)
  done (took 88.242942695 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.764033105 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.762972523 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.761685415 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.759636354 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.760370186 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.759423803 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.758564208 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.760958155 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.757996869 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.759118624 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.760173749 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.757958177 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.757007746 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.763862106 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.760877167 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.759751551 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.760143857 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.756690209 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.755965643 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.758860487 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.757032239 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.759054227 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.7611888 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.759162023 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.760605139 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.75581395 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.756710357 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.759628692 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.759353801 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.756665343 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.760307966 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.760362049 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.762828038 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.759831453 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.758936496 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.762020873 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.760508782 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.75905611 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.759807266 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.760504257 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.760228629 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.76065144 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.761734275 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.761513133 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.759085187 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.76237275 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.760843008 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.760373299 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.762066199 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.762455598 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.764256366 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.762169255 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.763525132 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.761876992 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.763255209 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.761948342 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.763554787 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.759886101 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.763544729 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.764095243 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.760770873 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.765299682 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.761816385 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.764012202 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.763945942 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.763488339 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.762251652 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.764843521 seconds)
  done (took 121.427666528 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.764383037 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.77025604 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.766988957 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.766160095 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.766664897 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.765440834 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.766037403 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.772128636 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.766605334 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.765961345 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.766444744 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.766320888 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.76607403 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.763788823 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.762787579 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.763651907 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.764272931 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.763192057 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.765925174 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.763097263 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.764132702 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.763497996 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.764535213 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.763040976 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.767190955 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.763102379 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.762294646 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.762251949 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.762927683 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.762086923 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.768328493 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.760649608 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.764255251 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.76432343 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.765873777 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.767250171 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.764305898 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.764185975 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.76479421 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.764984366 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.763479945 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.768530584 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.76433576 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.764010649 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.763495095 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.763079303 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.764071749 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.768896137 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.762778861 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.761698307 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.762707329 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.762130749 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.765204057 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.764040858 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.761411234 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.762440506 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.762171976 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.763532313 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.769302528 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.764003593 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.762678955 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.763578792 seconds)
  done (took 111.106687737 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.763341194 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.767828093 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.759971803 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.7594311 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.762448175 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.760194717 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.76698317 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.763372498 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.762283828 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.763421416 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.763121092 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.758073842 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.76014648 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.761113784 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.760144193 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.759384456 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.759762556 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.760852112 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.770039249 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.758576022 seconds)
  done (took 36.936575675 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.76087679 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.763359642 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.764995304 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.761808685 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.762569604 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.761817364 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.762591802 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.762194918 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.765973475 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.762633075 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.762105293 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.76378187 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.761568978 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.759794015 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.767601523 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.760046477 seconds)
  done (took 29.899819553 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.76092929 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.763891176 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.76311457 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.765036666 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.76248242 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.759530285 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.762907597 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.761735632 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.760371677 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.764883856 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.763173001 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.762514379 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.766688242 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.76223678 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.760436139 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.763422201 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.759449443 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.76120923 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.763468522 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.764727817 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.761586306 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.761795655 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.765413526 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.764628226 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.761701251 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.762498188 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.761556083 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.762760656 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.763005035 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.762764753 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.760585344 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.760564901 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.760125221 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.761295946 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.766917829 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.762453874 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.765942393 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.762484458 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.763573073 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.764486333 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.76426278 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.76122685 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.763134125 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.765494764 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.762761263 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.766434587 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.763780151 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.76161518 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.76250302 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.764048801 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.766072501 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.766750084 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.767777429 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.766659899 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.765545944 seconds)
  done (took 98.674248013 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.766727346 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.766070851 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.765167353 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.763477344 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.765961746 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.763589526 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.766293941 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.761850057 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.761287728 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.765831901 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.76337238 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.764717319 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.765092104 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.764771084 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.76225629 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.764823071 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.762740474 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.763824285 seconds)
  done (took 33.457029153 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.764045275 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.762984853 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.76506452 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.764732018 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.763874009 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.766307663 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.763458303 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.767034588 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.765337986 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.762721444 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.765101523 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.767872269 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.765348491 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.767882215 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.765635103 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.762857141 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.767128283 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.765770041 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.764767853 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.76333597 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.767433244 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.76583486 seconds)
  done (took 40.532468863 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.768396441 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.767754533 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.780410975 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.78456785 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.785902553 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.797897478 seconds)
  done (took 12.382759157 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.767261664 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.765914683 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.766104871 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.769080926 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.769356077 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.763420969 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.76426044 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.76497939 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.769426969 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.76809869 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.76660238 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.766988133 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.769681624 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.764329585 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.767201922 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.768096959 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.764836269 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.766283701 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.768302439 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.770449847 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.767504543 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.769644395 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.769154909 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.767913922 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.766200199 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.768291013 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.767032062 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.768640199 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.767541289 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.770205302 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.770368015 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.766112818 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.770991262 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.768928434 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.771325578 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.768729845 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.767342854 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.770949747 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.770373506 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.765921321 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.769747182 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.767785738 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.768717658 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.766535267 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.770313838 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.774868349 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.768552164 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.766713112 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.77043227 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.770335348 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.772301532 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.772217396 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.771190048 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.77032978 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.771950361 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.772302517 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.776206925 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.768920651 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.769889536 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.767529482 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.767343213 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.76919218 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.771694537 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.767771075 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.769728613 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.769491342 seconds)
  done (took 118.438446434 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.768551612 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.770449183 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.769861287 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.769803375 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.770823241 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.768798029 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.774015939 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.76799174 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.769040234 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.770179549 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.773262495 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.768608657 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.770461675 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.769591825 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.769327521 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.7690485 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.76947806 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.769975099 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.768664684 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.772359028 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.768928784 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.771392144 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.76944386 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.773018371 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.770556154 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.771635612 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.771446787 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.768058652 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.770098325 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.770984359 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.769778529 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.770364896 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.767936738 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.769782327 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.774584054 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.767785873 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.769447369 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.770022675 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.77013225 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.773172758 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.771652727 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.773205913 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.767878085 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.770074189 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.768614399 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.771324626 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.774081744 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.768981104 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.769555694 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.771417988 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.771167718 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.777968144 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.773033213 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.769962075 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.772892168 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.771825522 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.771499884 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.772213872 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.772124836 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.774166734 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.771187786 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.770576012 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.775745033 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.777727001 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.771018366 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.773574576 seconds)
  done (took 118.587338628 seconds)
done (took 2438.588844576 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.8268145 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.805924597 seconds)
  done (took 15.340806075 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.9384593 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.887330387 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.773435201 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.810695285 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.772868677 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.79267014 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.790727668 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.772088104 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.773686946 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.775029174 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.773948611 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.960378145 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.794485676 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.77155655 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.776916114 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.867008571 seconds)
  done (took 50.745763362 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.777527998 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.777401848 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.787383371 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.783035505 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.776913421 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.788157554 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.807970928 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.781493537 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.8141924 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.789480777 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.846034877 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.78576189 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.776565202 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.827183587 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.78866299 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.790684603 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.86437162 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.847663933 seconds)
  done (took 34.117549167 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.851703641 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.775244733 seconds)
  done (took 10.340073601 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.794905017 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.771985438 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.783639469 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.771401997 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.782713469 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.788958178 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.790121893 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.781731179 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.79208505 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.778097205 seconds)
  done (took 69.545197338 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.784705863 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.777119936 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.778108569 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.775822932 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.76855519 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.771255094 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.779535616 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.771516436 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.448625922 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.810634647 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.782125764 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.785197012 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.779035161 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.782609568 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.77880806 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.804457964 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.89463009 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.779515553 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.778846829 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.784611772 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.780058006 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.852261571 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.793207507 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.781883313 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.808287603 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.452884738 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.786688549 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.785933895 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.921875864 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.779052958 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.780584284 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.781609082 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.782402233 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.178080919 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.067729417 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.780649484 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.789105591 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.791024216 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.778750358 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.917752505 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.782101891 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.787248605 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.775075472 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.054706883 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.874401649 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.823160333 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.116161113 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.78124803 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.783875116 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.811317164 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.785147919 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.78489722 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.79634226 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.308276563 seconds)
  done (took 127.782838825 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.776732108 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.066433675 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.930017501 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.775047408 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.048570391 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.984315665 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.723505269 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.825750382 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.778660681 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.977877243 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.000397369 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.886455353 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.775466359 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.777265022 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.776783803 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.775152285 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.937700228 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.846353283 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.778696082 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.773548256 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.806028135 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.983821419 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.902434708 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.779127291 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.798263086 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.991537324 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.898340497 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.883124588 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.22726027 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.775400887 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.841365415 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.777555843 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.776596585 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.77491271 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.932325048 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.877757043 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.867996161 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.778612879 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.779388847 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.777473117 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.441523956 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.97341792 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.87734861 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.92206398 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.926179299 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.981455191 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.427755167 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.77816875 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.413897578 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.945308041 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.993202089 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.985015379 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.901478996 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.777833392 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.12906958 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.776180398 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.777887615 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.012451824 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.920731405 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.87936293 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.779428635 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.778735441 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.77592406 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.019581216 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.77777239 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.875745048 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.779845681 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.77856734 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.876625645 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.882517115 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.918525319 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.990826773 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.814012314 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.503533016 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 3.998680392 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.99604737 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.845681561 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.015681838 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.77994064 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.778616916 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.86823167 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.536038774 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.977336779 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.026184972 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.001466804 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.813628329 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.374316676 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.777140623 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.971846827 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.962346958 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.972230839 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.923271742 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.930601641 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.103229791 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.779154582 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.779271441 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.003288653 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.915843884 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.782143679 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.142500926 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.012084299 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.394561756 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.80222024 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.074847887 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.913561199 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.097241898 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.405753925 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.78241596 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.947283903 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.819850552 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.781627404 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.778743216 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.970863084 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.588282341 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.781081792 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.591289548 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.842341214 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.77846973 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.98151877 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.780072774 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.987147913 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.781317075 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.017129364 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.792305269 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.814703932 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.004462293 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.926599985 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.576183597 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.02881168 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.025138472 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.897186604 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.070158274 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.506969146 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.78272326 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.056096595 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.783472304 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.781998214 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.951223635 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.782261137 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.929157835 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.782546503 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.011560017 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.8059067 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.936425115 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.782156964 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.01433375 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.815834395 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.833431495 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.783980117 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.905798141 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.785603964 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.66088073 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.937484079 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.785908097 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.781810047 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.413394026 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.78086233 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.928114438 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.010740133 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.807013283 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.851136615 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.308781847 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.783104715 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.869455647 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.809341101 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.187670966 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.780768144 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.995823123 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.747404246 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.227501275 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.782792187 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.0260087 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.036085253 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.786165214 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.784299334 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.526387535 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.48987877 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.785296181 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.943427158 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.20630693 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.430790146 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.987381583 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.786341388 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.912923888 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.786357091 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.86473371 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.13193388 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.784922526 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.782166998 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.784328543 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.784425381 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.785014998 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.042222535 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.813933661 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.283109927 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.92080109 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.001703597 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.094339681 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.003961782 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.828899469 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.785521921 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.043089082 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.787195379 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.847904086 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.785479639 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.808108898 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.017599044 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.78947375 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.02068678 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.03850352 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.685519272 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.835204342 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.787590313 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.787552965 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.784599223 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.931473431 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.875100331 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.786682345 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.786485553 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.895619032 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.904829073 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.977697677 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.381012417 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.866209654 seconds)
  done (took 878.747422841 seconds)
done (took 1188.32609415 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.786316205 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.787450692 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.772274594 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.796020997 seconds)
  done (took 28.864825088 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.808443654 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.802626246 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.803015681 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.801106787 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.805617377 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.802175282 seconds)
  done (took 12.559025657 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.830128275 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.798370459 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.79736046 seconds)
  done (took 21.161270284 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.870918094 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.200757184 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.905488288 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.235361677 seconds)
  done (took 9.947417638 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.80738482 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.804991602 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.805291103 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.806433114 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.809122608 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.810218475 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.806093016 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.806827947 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.810004104 seconds)
  done (took 18.001996868 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.217142789 seconds)
done (took 96.472830894 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.222817189 seconds)
    (2/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.809750325 seconds)
    (3/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.87243086 seconds)
    (4/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.268416766 seconds)
    (5/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.83368978 seconds)
    (6/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.92905114 seconds)
    (7/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.682195492 seconds)
    (8/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.04720563 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.885834405 seconds)
    (10/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.903684694 seconds)
    (11/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.83809876 seconds)
    (12/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.866364407 seconds)
    (13/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.834253204 seconds)
    (14/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.973465704 seconds)
    (15/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.838474427 seconds)
    (16/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.89349197 seconds)
    (17/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.021422635 seconds)
    (18/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.853457191 seconds)
    (19/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.18261746 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.933011716 seconds)
    (21/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.835139368 seconds)
    (22/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.160189193 seconds)
    (23/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.8967432 seconds)
    (24/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.808382917 seconds)
    (25/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 8.357256637 seconds)
    (26/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.7457933 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.185348183 seconds)
    (28/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.796688862 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.400517801 seconds)
    (30/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.191496205 seconds)
    (31/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.188388934 seconds)
    (32/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.042915819 seconds)
    (33/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.036494691 seconds)
    (34/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.674732043 seconds)
    (35/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.844137447 seconds)
    (36/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.795590895 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.156510551 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.057989966 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.132920533 seconds)
    (40/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.811604956 seconds)
    (41/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.978541091 seconds)
    (42/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.978385357 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.605616077 seconds)
    (44/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.882703906 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.199054542 seconds)
    (46/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.723077732 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.137425219 seconds)
    (48/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.896827559 seconds)
    (49/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.896514636 seconds)
    (50/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.894634185 seconds)
    (51/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.809100219 seconds)
    (52/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.881444248 seconds)
    (53/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.980964925 seconds)
    (54/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.074595292 seconds)
    (55/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.103872778 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.925869485 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.067979018 seconds)
    (58/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.989275275 seconds)
    (59/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.918225123 seconds)
    (60/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.831199045 seconds)
    (61/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.698698834 seconds)
    (62/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.907691524 seconds)
    (63/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.813317441 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.943734082 seconds)
    (65/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.837070926 seconds)
    (66/309) benchmarking ("sort", Float64, false)...
    done (took 5.607523111 seconds)
    (67/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.879911844 seconds)
    (68/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.172461374 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.111249337 seconds)
    (70/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.814030494 seconds)
    (71/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.798867391 seconds)
    (72/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.96355915 seconds)
    (73/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.008510034 seconds)
    (74/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.023499045 seconds)
    (75/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.182959305 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.088939555 seconds)
    (77/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.128779857 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.967502332 seconds)
    (79/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.119597065 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.118509927 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 5.538438648 seconds)
    (82/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.813353822 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 3.355933622 seconds)
    (84/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.901616846 seconds)
    (85/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.439687842 seconds)
    (86/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.948119763 seconds)
    (87/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.151060558 seconds)
    (88/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.815069133 seconds)
    (89/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.066199861 seconds)
    (90/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.096314386 seconds)
    (91/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.796716897 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 3.205387603 seconds)
    (93/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.40426362 seconds)
    (94/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.651454966 seconds)
    (95/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.297859521 seconds)
    (96/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.115167412 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.058443102 seconds)
    (98/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.845063247 seconds)
    (99/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.814118452 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.92711856 seconds)
    (101/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.147636941 seconds)
    (102/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.158075024 seconds)
    (103/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.248931487 seconds)
    (104/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.9948329 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.417855938 seconds)
    (106/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.40519627 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.837501328 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.021551287 seconds)
    (109/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.380796678 seconds)
    (110/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.130842605 seconds)
    (111/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.165245686 seconds)
    (112/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.202024026 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.820572204 seconds)
    (114/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.835892139 seconds)
    (115/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.012852825 seconds)
    (116/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.334044159 seconds)
    (117/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.848323799 seconds)
    (118/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.12273622 seconds)
    (119/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.345939315 seconds)
    (120/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.013071655 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.461386928 seconds)
    (122/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.934012712 seconds)
    (123/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.840233787 seconds)
    (124/309) benchmarking ("sort", Bool, false)...
    done (took 2.265660152 seconds)
    (125/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.838883941 seconds)
    (126/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.98925945 seconds)
    (127/309) benchmarking ("sort", Int8, false)...
    done (took 4.777568286 seconds)
    (128/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.051311823 seconds)
    (129/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.074480889 seconds)
    (130/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.757161001 seconds)
    (131/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.80222807 seconds)
    (132/309) benchmarking ("sort", BigInt, false)...
    done (took 8.375923387 seconds)
    (133/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.225619289 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.034072391 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.078221874 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.70676407 seconds)
    (137/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.884957198 seconds)
    (138/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.947154947 seconds)
    (139/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.011753122 seconds)
    (140/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.106139768 seconds)
    (141/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.802951365 seconds)
    (142/309) benchmarking ("map", identity, BigInt, false)...
    done (took 3.800585419 seconds)
    (143/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.817570876 seconds)
    (144/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.805818411 seconds)
    (145/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 3.783273787 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.919317774 seconds)
    (147/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.815043854 seconds)
    (148/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.89956519 seconds)
    (149/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.88400003 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.61502228 seconds)
    (151/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.172062904 seconds)
    (152/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.95576206 seconds)
    (153/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.916305535 seconds)
    (154/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.328224665 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.875460292 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.054981663 seconds)
    (157/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.844785337 seconds)
    (158/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.226705313 seconds)
    (159/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.024772425 seconds)
    (160/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.041417228 seconds)
    (161/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.896692425 seconds)
    (162/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.836270687 seconds)
    (163/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.924437074 seconds)
    (164/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.818978056 seconds)
    (165/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.411755837 seconds)
    (166/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.421351527 seconds)
    (167/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.840918613 seconds)
    (168/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.803168691 seconds)
    (169/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 8.284613354 seconds)
    (170/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.021836102 seconds)
    (171/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.920676637 seconds)
    (172/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.852685674 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.291104374 seconds)
    (174/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.245444041 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.472249144 seconds)
    (176/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.897608591 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.484930841 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.863074549 seconds)
    (179/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.817989646 seconds)
    (180/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.49848598 seconds)
    (181/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.965086707 seconds)
    (182/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.131411264 seconds)
    (183/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.8186989 seconds)
    (184/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.408203134 seconds)
    (185/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.949810174 seconds)
    (186/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.906683495 seconds)
    (187/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.327862286 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.83819112 seconds)
    (189/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.02095925 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.810373231 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.857883444 seconds)
    (192/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.878773534 seconds)
    (193/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.834573241 seconds)
    (194/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.888078772 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.950595543 seconds)
    (196/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.906916569 seconds)
    (197/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.497728241 seconds)
    (198/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.338659942 seconds)
    (199/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.972270143 seconds)
    (200/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.848233831 seconds)
    (201/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.071287201 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.199450477 seconds)
    (203/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.920290771 seconds)
    (204/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.765549034 seconds)
    (205/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.847839812 seconds)
    (206/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.956606313 seconds)
    (207/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.935469413 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.930046941 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.873849297 seconds)
    (210/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.900570281 seconds)
    (211/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.035163095 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.945879307 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.806134971 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.175339187 seconds)
    (215/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.826142529 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.894099651 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.662116269 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.037768441 seconds)
    (219/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.917145223 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.853165689 seconds)
    (221/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.970090149 seconds)
    (222/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.8388509 seconds)
    (223/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.890502675 seconds)
    (224/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.203304476 seconds)
    (225/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.319107989 seconds)
    (226/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.819733528 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.09086201 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.940585157 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.147121949 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.114210927 seconds)
    (231/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.850491768 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.483389422 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.861917424 seconds)
    (234/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.977601489 seconds)
    (235/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.854044536 seconds)
    (236/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.063557881 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.607530787 seconds)
    (238/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 2.017892101 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.927223502 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.762598528 seconds)
    (241/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.952288073 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.754895668 seconds)
    (243/309) benchmarking ("sort", Float32, false)...
    done (took 5.596375206 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.849487467 seconds)
    (245/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.985793872 seconds)
    (246/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.117681987 seconds)
    (247/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.954474203 seconds)
    (248/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.335244289 seconds)
    (249/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.959174316 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.088273818 seconds)
    (251/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.810337678 seconds)
    (252/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.259326534 seconds)
    (253/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.834158743 seconds)
    (254/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.075278447 seconds)
    (255/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.862121321 seconds)
    (256/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.823428688 seconds)
    (257/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.957352317 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.520852286 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.915996242 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.086072451 seconds)
    (261/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.938058666 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.011709546 seconds)
    (263/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.911210309 seconds)
    (264/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.823603882 seconds)
    (265/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.77864183 seconds)
    (266/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.812247314 seconds)
    (267/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.22918235 seconds)
    (268/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.860287851 seconds)
    (269/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.812202676 seconds)
    (270/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.827916199 seconds)
    (271/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.990556961 seconds)
    (272/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.834023706 seconds)
    (273/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.947060432 seconds)
    (274/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.203204291 seconds)
    (275/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.094544893 seconds)
    (276/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.977109054 seconds)
    (277/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.573401314 seconds)
    (278/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.535602684 seconds)
    (279/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.909574444 seconds)
    (280/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.009099237 seconds)
    (281/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.972563145 seconds)
    (282/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.13444335 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.21471407 seconds)
    (284/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.809451982 seconds)
    (285/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.951507642 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.916081469 seconds)
    (287/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.825161164 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.952861147 seconds)
    (289/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.163594522 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.948545785 seconds)
    (291/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.849905488 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.546549992 seconds)
    (293/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.009192881 seconds)
    (294/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.582651072 seconds)
    (295/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.107094252 seconds)
    (296/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.992479033 seconds)
    (297/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.829591995 seconds)
    (298/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 8.060153432 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.867133243 seconds)
    (300/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.826133396 seconds)
    (301/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.673640259 seconds)
    (302/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.759051607 seconds)
    (303/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.838109853 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.847948671 seconds)
    (305/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.826398335 seconds)
    (306/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.670093972 seconds)
    (307/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.932370299 seconds)
    (308/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.31204287 seconds)
    (309/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.629498396 seconds)
  done (took 1001.893584329 seconds)
done (took 1003.907400748 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.863883801 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.852518833 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.83734581 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.859916915 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.947086114 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.866876551 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.850245453 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.840952591 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.887091103 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.887766937 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.836940517 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.864943819 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.83956678 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.839505945 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.839248194 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.852218997 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.152320168 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.867532224 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.854215615 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.851486083 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.852714883 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.838656192 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.888311561 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.865505656 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.844449934 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.842993449 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.842535778 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.859979349 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.951300129 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.842468084 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.843959456 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.849659538 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.153396857 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.863806423 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.836939272 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.859170221 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.852568209 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.850960123 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.844187249 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.872808332 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.29390574 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.845169953 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.843649998 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.841445452 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.840593607 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.845993562 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.840338349 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.847527927 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.853543125 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.85395037 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.289346353 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.860449057 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.845178164 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.841579226 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.85379857 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.840121759 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.845508194 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.857508895 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.859757835 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.855296048 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.142462996 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.873560033 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.84600626 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.85739628 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.850003613 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.327091831 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.8426487 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.846027404 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.294762154 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.85333704 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.326373481 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.856260908 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.843861658 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.855858035 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.873856776 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.150898635 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.865769783 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.841529336 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.849194601 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.84078727 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.852764487 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.856422446 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.847345772 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.843221047 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.856677103 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.870765742 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.854532671 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.843980264 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.85207475 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.85814866 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.849021482 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.854126504 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.846449624 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.836731064 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.852693448 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.847535336 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.844784343 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.845329685 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.849122227 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.854951402 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.292560419 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.864594423 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.84191031 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.84221398 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.843564277 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.856823819 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.294003834 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.848991085 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.865350805 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.893634489 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.844371987 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.142481121 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.872075819 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.858385243 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.853085382 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.849355565 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.839125615 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.14323113 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.321013375 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.864370956 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.846835243 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.84251533 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.858413196 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.845535508 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.843534387 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.15617787 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.874421392 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.857716105 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.966384903 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.856008271 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.876467829 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.844550735 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.847932064 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.876483385 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.860224217 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.87808511 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.8482448 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.858323016 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.859497765 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.84216481 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.857681596 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.856457338 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.847741663 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.853094402 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.840667005 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.874291378 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.856464782 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.858753089 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.866418287 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.964694231 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.844626526 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.146144212 seconds)
done (took 289.869694891 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.913363979 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.832777568 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.945670216 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.841353434 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.927681771 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.929757536 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.83763338 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.839904394 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.839955726 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.221987677 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.839881476 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.8391771 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.837843798 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.838625364 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.925570241 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.840796792 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.838895858 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.184415587 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.843941072 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.914565428 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.839558599 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.84013455 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.842932028 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.222767358 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.835252134 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.844792145 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.914052224 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.842272754 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.18931423 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.84151364 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.83792732 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.18739044 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.93269602 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.860512981 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.85326972 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.849953842 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.929002974 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.847615553 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.924119422 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.924465997 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.948021975 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.885255756 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.838312804 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.84619724 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.847942752 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.846832091 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.84055409 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.87099497 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.839405841 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.842045851 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.185625214 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.853643719 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.840730925 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.84275305 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.842039354 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.875292631 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.842012112 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.844573055 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.934122566 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.844542657 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.907446279 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.224796985 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.225972825 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.844947819 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.843535909 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.841574967 seconds)
  done (took 182.563126397 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.91079416 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.918337968 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.913247642 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.849082496 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.334757423 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.917678925 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.851527976 seconds)
  done (took 15.467081542 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.851712694 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.844690504 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.89522563 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.897337238 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.847037641 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.997359364 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.846391994 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.859393222 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.841457457 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.900974861 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.84598948 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.850232591 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.853755875 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.842961253 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.898240222 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.859001124 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.961670465 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.849159781 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.848327437 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.996051258 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.842417758 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.854484908 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.91580492 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.858249668 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.846465322 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.855168765 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.430515128 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.849037338 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.844687672 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.846807804 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.843207159 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.889254139 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.846626384 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.841590751 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.844007445 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.963817111 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.846750793 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.842548052 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.847061605 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.848422957 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.84646925 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.84671764 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.846243713 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.845162549 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.847750119 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.872884179 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.847241289 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.848080339 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.848607577 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.846987877 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.899441303 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.848626804 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.844267684 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.84561451 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.902787359 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.855547982 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.848677075 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.845208731 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.847878571 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.846024217 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.000642103 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.896611537 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.844564134 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.897422566 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.847478769 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.847896736 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.847635159 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.846740037 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.904166667 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.849526938 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.896605545 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.847586918 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.010247358 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.872086562 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.850716301 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.849479759 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.855257325 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.851529373 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.846222714 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.855254043 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.846246675 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.851268314 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.856086347 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.847610735 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.846161043 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.962945921 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.958727003 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.847773501 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.861999612 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.853749678 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.848001662 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.901124068 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.849039868 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.846831774 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.900702912 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.964949433 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.919143646 seconds)
  done (took 203.681788804 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.856550131 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.859560595 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.849979623 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.867379769 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.851966432 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.849592944 seconds)
  done (took 12.913777462 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.853752225 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.851314223 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.849931321 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.850475168 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.852239449 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.852258659 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.851162276 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.852726972 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.855608632 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.849491503 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.851203602 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.852654995 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.853755655 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.852099713 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.854776795 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.850391029 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.852201385 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.847981761 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.84984736 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.852390763 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.013968616 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.852956685 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.852843573 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.85297612 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.857058399 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.854144234 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.860098217 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.850228825 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.852504096 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.861152392 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.856651087 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.85092582 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.852623595 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.858664161 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.857658903 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.852193608 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.857098624 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.853920069 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.848516012 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.8530081 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.853215007 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.854025191 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.853960968 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.855918545 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.855311197 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.858694552 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.857903307 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.859023593 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.854136254 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.853181895 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.85323279 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.852342044 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.853426026 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.853529657 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.854317688 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.858868329 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.85975764 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.853774173 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.855341444 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.85526186 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.856369625 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.854376318 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.855491125 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.858464125 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.852127448 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.854993045 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.85308291 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.857717261 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.854427689 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.852110602 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.856992471 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.851964027 seconds)
  done (took 136.428868853 seconds)
done (took 552.84335174 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.132028638 seconds)
  done (took 8.91262459 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.957881162 seconds)
  done (took 8.833698347 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.51835607 seconds)
  done (took 10.299765687 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.853903354 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.880697051 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.854573157 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.854063612 seconds)
  done (took 29.234722933 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.235906727 seconds)
  done (took 9.018723749 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.864575183 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.846198958 seconds)
  done (took 15.562244121 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.913321586 seconds)
  done (took 8.698297934 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.935508563 seconds)
  done (took 8.72211168 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.872657138 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.861907573 seconds)
  done (took 15.531782479 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.83526891 seconds)
  done (took 8.617348213 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.598126368 seconds)
  done (took 11.392263348 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.852080487 seconds)
  done (took 8.649438996 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.90771744 seconds)
  done (took 8.691483234 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.085221934 seconds)
  done (took 9.865894227 seconds)
done (took 163.810415738 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.855243386 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.849514736 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.848276349 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.848843721 seconds)
  done (took 29.184339536 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.888116372 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.888008587 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.889957323 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.901490862 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.89194684 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.890275037 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.88144395 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.880355488 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.900340724 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.89060481 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.890258784 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.889731442 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.887078754 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.880411264 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.892719852 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.890070717 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.901405123 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.890639316 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.879224875 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.892805789 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.8566584 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.899893261 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.89474487 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.856828364 seconds)
  done (took 47.088906763 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.0549804 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.929051815 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.012614382 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.907770754 seconds)
  done (took 9.690364231 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.912913476 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.910466543 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.923063215 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.959957898 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.996020359 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.921634455 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.885491059 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.877942865 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.865557229 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.910722859 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.986979546 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.925551583 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.996923417 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.857647525 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.042168283 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.856972467 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.85555375 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.909295884 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.961951617 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.975207102 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.85768402 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.909268346 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.913349262 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.927441016 seconds)
  done (took 47.92615088 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.856547889 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.864597732 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.862427126 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.857792533 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.85670954 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.858300563 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.863866371 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.857068547 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.877867443 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.859580094 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.857071774 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.857519184 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.856081639 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.858048221 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.856403631 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.868099619 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.870867828 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.856984721 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.860247997 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.864360288 seconds)
  done (took 39.008022991 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.853091841 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.706860347 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.203748088 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.110568138 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.854171779 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.852208773 seconds)
  done (took 31.365624821 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.872209449 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.863942554 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.85726652 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.916097944 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.998639502 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.866703121 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.860677549 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.868987624 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.90699003 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.924849565 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.876766271 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.887000845 seconds)
  done (took 24.487976743 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.854273628 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.856329723 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.85257215 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.866721863 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.866812995 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.863690138 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.863579823 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.849820178 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.867127007 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.874312611 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.862753495 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.867818259 seconds)
  done (took 44.139266694 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938402919 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.894280785 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.892305052 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.545742249 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.227375252 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.06071082 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.506558903 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.192707512 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.851578854 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.125279644 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.950211448 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952078456 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.107480141 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.422394299 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.885267699 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.304788007 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.148648257 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.064049646 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.877141591 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.52081065 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916610879 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.110500373 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.634571542 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.909334774 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.061494699 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.980052192 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.160279715 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.849736305 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982268209 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.88928733 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86218758 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.851420732 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.12642285 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.233943886 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954457146 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85973109 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.474035988 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.563703175 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.837721912 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.665711066 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.585811422 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.977051014 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86086419 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.850833204 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.786507665 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.072500506 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.234877121 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.854673465 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.558825145 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.848562526 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.863253413 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946067335 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.855412882 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.668967694 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.767130346 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.851591029 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.847285877 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856050421 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.424829261 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.956496477 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.111881342 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.82392648 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.944059924 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.528094688 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.265924845 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.999631436 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.854704503 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.852640978 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.783365688 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.600759129 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.909993452 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.181451232 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.868144463 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.500636027 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.16077139 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.992683295 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.792152278 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.123133821 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.458326964 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.825961678 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.076886064 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.848026448 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.784858437 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.7900276 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.783502669 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.121009834 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895221525 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.618842054 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.89966452 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.190784947 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.860737116 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869572417 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875078328 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.076109127 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.736389075 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.856340107 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.68546664 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.003323542 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871688331 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.190912104 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.786399467 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.852473688 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.110108074 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.064598695 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.992384063 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.344961923 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.015475037 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.489058052 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.906356605 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.087952928 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.903131331 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.117497627 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.915424794 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.965269798 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906931162 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.852718057 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.151340718 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.514953239 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.989748405 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.937533142 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.980749927 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.176530271 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.881710903 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.93447085 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.859240736 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.853695948 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.628536634 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.409556421 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.854426346 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.855813268 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.002537376 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.904250103 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.859327213 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.806136313 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.477811382 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.942649815 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.868152958 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.076743488 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.497432359 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.167457408 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.789933809 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.203776523 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.940503135 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.075235596 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.493125169 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.928022263 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.117180039 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.998255509 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.042519104 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.901482921 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87481006 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.953428864 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875767662 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.079605264 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.150748549 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.857606933 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.856837559 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.631297768 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.890265608 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.852175776 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.857759252 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.60491255 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.132462016 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.88172811 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.862022898 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.744809599 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.868184502 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918627859 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.863587854 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.865061451 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.395801291 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.570955112 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.861176558 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.442546919 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.078309303 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.86659412 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.6225795 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.971630528 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.943656332 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.133482638 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.918488579 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.789356568 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.569480135 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.549560266 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.853518781 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.792195381 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.855295486 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86608304 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.865925806 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.054065183 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.126379892 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.902546241 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.532250686 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.900424793 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.868007391 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.860248844 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.856261969 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.36800969 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.976218255 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.129587435 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.909522397 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010227407 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.87557647 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.796276537 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.864405304 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.869458422 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.859923329 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.860078725 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893462058 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.539160753 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.261789706 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.128709505 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.479594459 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.880977606 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.916437629 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.931968347 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.868899784 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.592267601 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.239453546 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.907060057 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880953195 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.881672524 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.630114715 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.578899476 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.441881836 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.175999791 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.18868326 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.313095588 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.161560957 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.901034072 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.21320612 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.803735571 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.429001754 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.929863578 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.218335527 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.813390812 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.957950975 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.509543233 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.21737287 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.881904735 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.096759362 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.252366735 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.646993469 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.01584928 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.083092166 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903999192 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.095744747 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.832589259 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.172861905 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.012896932 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.591387929 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.080756831 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.214403597 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.597895693 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.996049094 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.872300469 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.569409727 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965779755 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.577005774 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.039617013 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.125911098 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.8953971 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35895013 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.873913728 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.092562973 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.215389375 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.097327884 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.995973786 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.801755099 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.879906049 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.876078302 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.868364261 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.86456388 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.73181205 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.11793169 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.872984686 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.798526069 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.056735327 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.154417693 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.76643439 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.868582523 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.864163275 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.164289643 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.477749692 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.033444119 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.049134346 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.388164494 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.870766994 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.799104591 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.799483679 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.55740214 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.871351841 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.841280672 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.076149375 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.972288892 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.77770367 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.019170659 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.947903406 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.120095255 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.878876242 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.144862957 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.140921103 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.564231289 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889307444 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.964661533 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.587798677 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.984560264 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.869807089 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.104357482 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.624714811 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.094702977 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.933904996 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.835005581 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.869630646 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.084567439 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.869353477 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.849127615 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.110873142 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.593583135 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.919815965 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.18119769 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947905959 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.860504325 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.920361436 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.963121518 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.875126894 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945267563 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.876424295 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.87652547 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.878922681 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910819618 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.842651866 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.995889313 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.879737818 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95708387 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.006754131 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.391892988 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.871096591 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.148193926 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.255337253 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.189477603 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.928332761 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.86207005 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.870218341 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.800671876 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008418998 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.086443518 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.134658437 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.988965937 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.977898835 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882933485 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.591896775 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.148110718 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.103061843 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.127813838 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.749883021 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.438328513 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.895083474 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.850876038 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.861226003 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.06710189 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.065339109 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.155151383 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.988712067 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.001402564 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.218442778 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.11712979 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.844212104 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.843629101 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.435249715 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.95920055 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.582566684 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.920836002 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.895848965 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.158012212 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.883496875 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.264511953 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.896285259 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.030404482 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.649487621 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.656635645 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.166905873 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.864192031 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.940425677 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.157079848 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.271990516 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.192071421 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940699871 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.886409493 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.979112937 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022917937 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.742007591 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.875158396 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.874345353 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.921845276 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.581715733 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.87934608 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.14855634 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.184173013 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.86711478 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.760659785 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888803158 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.87793227 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.089100732 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.141187354 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.122244475 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.876476635 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.870469941 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.67924626 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.137024702 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.922259847 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.793456972 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.867942462 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957353417 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.107420927 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.880754911 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.310953636 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.5718938 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.137245013 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.860196141 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.879487377 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.088661583 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.224189196 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.185341283 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.399790753 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.067766711 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.441195958 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.496243863 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.153439294 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.854121229 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.078947435 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.154224158 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.85424926 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.003952789 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.889719268 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.13157129 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.166583909 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.987057309 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.612987863 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.846614222 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.215378583 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.439956653 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.815551865 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.886914418 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.93878058 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.876112031 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.007017781 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.888977205 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.777717241 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.098509877 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.665865387 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.155368959 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.881225092 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.872403617 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.699878479 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.245750122 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912756474 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.022029795 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.877607479 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.552626105 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.229911653 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.136310529 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.031015583 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.888439509 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.883467257 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.878653973 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.865133154 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.077235471 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.076911506 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.162290472 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.061329689 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.91718355 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.884436239 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.095308701 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.090596461 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.915771819 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.027705028 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.032851619 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.92367112 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.793641738 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.383019153 seconds)
  done (took 1675.108193669 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.906321739 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.941166554 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.911441661 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.931164737 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.926626706 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.889880765 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.948645454 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.959442591 seconds)
  done (took 57.22908845 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.879217816 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.170406343 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.890293057 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.883225781 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.890268631 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.881727437 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.057579271 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.892668364 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.891593564 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.893064738 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.884910658 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.880530424 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.197764661 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.908625012 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.894404265 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.867778836 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.891312613 seconds)
  done (took 74.672471132 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.885540638 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.979034985 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.912714955 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.901464899 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.835474248 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.901139541 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.667251892 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.914034684 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.883827217 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.115949924 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.517983521 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.898614757 seconds)
  done (took 90.228792017 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.89068814 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.890267267 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.886306771 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.889623836 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.885727981 seconds)
  done (took 11.261652115 seconds)
done (took 2183.197236658 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.279417839 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.111512699 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.120120935 seconds)
  done (took 6.04641885 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.030929563 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.07949652 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.200538026 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.20374654 seconds)
  done (took 10.334470568 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.170038253 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.250163861 seconds)
  done (took 6.236275437 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.288663675 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.896465904 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.27021536 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.881670177 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.88117494 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.879109055 seconds)
  done (took 22.464987883 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.883666448 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.887941825 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.884822918 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.886573422 seconds)
  done (took 9.361015852 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.865136756 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.585124567 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.867029699 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.882689614 seconds)
  done (took 21.016985209 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.635177013 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.64371549 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.627396876 seconds)
  done (took 9.723686582 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.426670168 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.790084798 seconds)
  done (took 9.033547505 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.139090886 seconds)
  done (took 3.957765324 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.015828168 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.19252575 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.36492768 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.422666818 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.494540061 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.598712395 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.211096283 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.139506658 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.295655325 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.336168402 seconds)
  done (took 24.88827951 seconds)
done (took 138.609024887 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.26036388 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.882004598 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.087001549 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.22100189 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.104537593 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.085032312 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.101183067 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.199543582 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.728627734 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.72315503 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.216183505 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.105240457 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.0484318 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.118094698 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.051779667 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.121941157 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.105460099 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.26862289 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.91102554 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.110348753 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.104493541 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.857451364 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.060393245 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.86710274 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.106257213 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.037460682 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.432597623 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.118749723 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.064293123 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.441688249 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.040011138 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.266043979 seconds)
  done (took 171.664910773 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.64633336 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.886117458 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.884452869 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.884232231 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.424624934 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.884019923 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.884968464 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.885592135 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.045358465 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.036482571 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.88334261 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.434385829 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.892373368 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.886359992 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.897933502 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.884989668 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.243215102 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.743774392 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.909495177 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.912689303 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.917259725 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.389859678 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.913185866 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.426333943 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.26723909 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.911773453 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.885637761 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.909532269 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.888737691 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.880792554 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.895833939 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.888401165 seconds)
  done (took 209.143951951 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.885588092 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.886790271 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.887359164 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.88700047 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.887946573 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.890595844 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.88509734 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.887215659 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.573809733 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.574449486 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.896103316 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.887335327 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.896133348 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.887180136 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.890686818 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.885546425 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.896651405 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.895402289 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.894565039 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.896551552 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.899644805 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.810828124 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.901678953 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.813859875 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.894834381 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.893748264 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.888789246 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.894110249 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.897390716 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.896278756 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.894948318 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.888339436 seconds)
  done (took 221.578388844 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.083353784 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.891008602 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.894695511 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.827544064 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.894921271 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.891684106 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.893024584 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.083404024 seconds)
  done (took 19.297750152 seconds)
done (took 623.51346514 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.323320453 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.167101849 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.070634191 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.916912918 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.182407801 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.952321382 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.912701237 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.975641244 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.653367117 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.981091701 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.557142143 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.933519389 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.646295291 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.937988549 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.042812063 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.970503861 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.48007192 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.571830259 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.092252845 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.992875393 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.083692723 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.87721035 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.989322505 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.683975367 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.668810677 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.919439192 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.086646711 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.48761042 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.924945099 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.080185064 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.623045199 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.291768673 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.925980984 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.912529389 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.966449448 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.946718549 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.263275273 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.92631645 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.044147645 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.681851601 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.003584985 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.535837626 seconds)
  done (took 104.107956662 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.888029769 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.885833235 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.883771564 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.885402631 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.88375377 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.883487086 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.885871314 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.883757584 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.885429374 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.884042978 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.882941529 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.886535418 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.883456681 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.885719219 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.884859796 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.883605316 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.885489586 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.884918198 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.884560149 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.886029111 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.88498085 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.884443672 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.885997732 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.8850233 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.882991634 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.886232133 seconds)
  done (took 50.842703575 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.896376818 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.037408444 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.122177714 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.918202777 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.897739061 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.900221953 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.917439246 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.904629987 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.901539962 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.901737928 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.995185707 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.903353199 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.916846749 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.120443849 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.915353049 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.898015998 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.899123967 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.90013438 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.0459835 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.915299433 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.91878691 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.904473029 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.919400606 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.912608279 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.901479709 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.899908171 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.902660657 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.336450178 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.907706785 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.995988086 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.942950234 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.920178145 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.294228113 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.130502888 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.950271342 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.908020711 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.899470592 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.999134379 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.906308277 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.899920384 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.918838974 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.903183969 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.122302367 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.39637984 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.913023395 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.899244698 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.347328448 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.008549673 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.941545281 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.911441357 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.128102932 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.916528763 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.902268208 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.901555866 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.938392015 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.915139858 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.90064118 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.21175524 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.912301221 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.91715904 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.903282118 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.900178097 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.056157909 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.906999235 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.039601947 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.909799163 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.905382914 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.898906392 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.123335426 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.916270435 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.39659618 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.913293418 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.896077354 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.994755197 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.040532535 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.370439927 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.90388222 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.05305001 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.296954036 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.922651372 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.906867659 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.32834986 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.928648939 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.907812975 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.900835876 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.895567858 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.900332428 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.940117525 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.914304059 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.335035327 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.403543105 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.233927031 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.927461222 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.91817101 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.90197534 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.213777771 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.907628017 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.898083409 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.118294677 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.412306151 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.913367817 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.908366723 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.384777511 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.907798269 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.916803087 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.903268084 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.125912938 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.913780141 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.933981434 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.893624322 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.902642921 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.901597893 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.920538242 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.908196114 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.899041928 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.374210095 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.013191255 seconds)
  done (took 235.158733747 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.893283954 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.899064453 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.893323597 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.894402895 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.892629476 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.896061136 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.894334287 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.892825969 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.900928557 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.894325295 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.891598591 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.895965334 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.890075705 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.89543359 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.936031128 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.901283206 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.551283624 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.895108683 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.889318056 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.890022829 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.542554923 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.899056192 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.892283497 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.895021814 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.892571744 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.897367522 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.895290439 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.932741352 seconds)
  done (took 168.268534087 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.894980332 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.012354445 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.918464821 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.925806255 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.905156886 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.896113277 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.920067959 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.911828962 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.904326684 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.897346878 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.895607798 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.958762907 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.90694772 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.997212818 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.93038496 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.927380853 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.000818825 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.903666747 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.892654882 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.894402023 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.927869229 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.895374264 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.958902447 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.026032487 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.911382783 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.012723326 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.90041165 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.898878579 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.901225779 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.021193053 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.913184335 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.959198327 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.925805821 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.917454804 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.018850484 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.014549158 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.001377846 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.927709212 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.902275327 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.892102224 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.898168564 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.884460358 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.012857187 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.914186972 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.904110814 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.007693702 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.914108461 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.895311896 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.905586841 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.895537308 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.910780254 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.917054107 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.964373723 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.032562957 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.930375407 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.922764554 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.9259116 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.176372199 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.912266841 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.002268788 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.89559252 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.017738661 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.92185046 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.887201783 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.897587871 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.904426049 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.926076199 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.929723345 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.00165609 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.906664227 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.999252041 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.934612268 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.907652754 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.896237544 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.899011398 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.014129291 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.015495226 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.934236834 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.934240716 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.928513755 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.893376831 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.900142304 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.889131008 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.91665239 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.900800473 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.013779947 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.013605854 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.905200714 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.899260792 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.902456842 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.899927598 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.925100961 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.021828606 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.933369047 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.993976155 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.964588128 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.976854664 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.914420463 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.91068156 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.902651823 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.962955114 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.91551799 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.910276508 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.223167627 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.970188549 seconds)
  done (took 205.589624626 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.372112385 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.952080166 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.954126299 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.189876775 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.328968637 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.709369831 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.947157908 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.947671578 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.974303952 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.103159311 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.007678113 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.959044483 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.939871168 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.923847504 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.945524822 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.972537039 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.951456687 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.232194973 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.073532015 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.099473506 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.928835107 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.238518068 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.277943076 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.333273813 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.982179464 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.28563936 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.633566774 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.188346826 seconds)
  done (took 62.284746537 seconds)
done (took 828.0748819 seconds)
SAVING RESULT...
DONE!
