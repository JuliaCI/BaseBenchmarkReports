cset: moving following pidspec: 15699
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.343065558 seconds)
loading group "string"... done (took 0.545466693 seconds)
loading group "linalg"... done (took 7.006670181 seconds)
loading group "parallel"... done (took 0.152424579 seconds)
loading group "find"... done (took 1.098590074 seconds)
loading group "tuple"... done (took 1.808076121 seconds)
loading group "dates"... done (took 1.167955433 seconds)
loading group "micro"... done (took 0.211693606 seconds)
loading group "io"... done (took 0.913169825 seconds)
loading group "scalar"... done (took 35.999465764 seconds)
loading group "sparse"... done (took 11.084705952 seconds)
loading group "broadcast"... done (took 0.901430921 seconds)
loading group "union"... done (took 11.752244407 seconds)
loading group "simd"... done (took 4.109301132 seconds)
loading group "random"... done (took 8.437653643 seconds)
loading group "problem"... done (took 1.843331941 seconds)
loading group "array"... done (took 19.650325583 seconds)
loading group "misc"... done (took 1.620700503 seconds)
loading group "sort"... done (took 3.119621088 seconds)
loading group "collection"... done (took 16.264351245 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.48620076 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.12251675 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.113775677 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.117245618 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.145283145 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.113753711 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122275717 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083203924 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.797805988 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.146642909 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117968685 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.411317536 seconds)
done (took 5.088019401 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.170925858 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082879917 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080661031 seconds)
  done (took 1.291633739 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064807237 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.121157404 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066371144 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066401195 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066597223 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.06573938 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065559956 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065400002 seconds)
  done (took 1.646569017 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072307829 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068955945 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068070024 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.06797361 seconds)
  done (took 1.407147641 seconds)
done (took 5.719337343 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.76228332 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.200730398 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.185587859 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.395599613 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.128423506 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.153081286 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.636505903 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.315912233 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.183939828 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080983432 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.103470599 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.315809387 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106932058 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.632594584 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075282692 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.09001077 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.136254153 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.426527088 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067027106 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081668216 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088549468 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127608557 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.08642092 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074145795 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.141145257 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067231079 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.129368826 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079933949 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065927499 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.206245026 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.171786601 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.654162296 seconds)
  done (took 10.138376171 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.094762953 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096863953 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067911762 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.135909424 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.096453347 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068894743 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070970447 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067342053 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.085859816 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.12771548 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089521573 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100452913 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065110673 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068301281 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083945027 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203887829 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081093876 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080750576 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069521604 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074581828 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.117928096 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077434222 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.07732306 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.07669731 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128046368 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179982636 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097026235 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096758191 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067121296 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080183136 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114493964 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125805967 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065280799 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.06640658 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123212341 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094933273 seconds)
  done (took 4.583500028 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.277195622 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.140275681 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090061614 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.130760714 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064081394 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.106361547 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065097496 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080023717 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.198280984 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.353795297 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.573134513 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110195352 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103078747 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067802921 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068640025 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066372007 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.339950592 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.106804487 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103131914 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.080037455 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069708017 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.06839084 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.340536648 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06688168 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063309638 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067331005 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057439927 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.122821941 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067179948 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.921352719 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.124907168 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066356931 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100300691 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.161142705 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088131721 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.271347766 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067885124 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.109387814 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064324641 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.149746236 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.07017746 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064776368 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065772775 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083720647 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103154866 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.111573541 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065004933 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066768755 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161917628 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064755407 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.078788277 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.971544887 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.151289316 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.077254761 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064100822 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.245589392 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.086155657 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068923172 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064303644 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.17757925 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.133164292 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.066871305 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066296388 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067668446 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068877331 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.350991134 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.067203102 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.7197942 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.068523395 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076544644 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.0688021 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068803009 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072605123 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074504562 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.085380071 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065649177 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.063880901 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.07461072 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065450472 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065443958 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066782444 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083810164 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.358778883 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.065784491 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067665399 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063432925 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.068819614 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085675961 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096036809 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066310881 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064710367 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.200684197 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070399798 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066512273 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.10602356 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067002536 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083997987 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069120568 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113451739 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067692205 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.093784208 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.06638328 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096289295 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069751186 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099239234 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080794028 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067898319 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.397817223 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065842342 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065234515 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068310976 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064614865 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067520483 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066088523 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078369249 seconds)
  done (took 20.813638937 seconds)
done (took 37.941762926 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.268934869 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.075508382 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.07420741 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075062131 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.07484251 seconds)
  done (took 1.789198405 seconds)
done (took 2.990679162 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119164367 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098558999 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063933669 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.094953485 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063714114 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099275343 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098364868 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080246317 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098585369 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063781002 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095170435 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064108649 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064157193 seconds)
  done (took 2.322806316 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082081797 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082419056 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069777711 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081838313 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06324415 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081828045 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080098937 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087748219 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080273642 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072112269 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063471279 seconds)
  done (took 2.035418434 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081149683 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08283075 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070004977 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081664846 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065996226 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080838462 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080517059 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.08477946 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081133532 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072847543 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063290588 seconds)
  done (took 2.034448261 seconds)
done (took 7.58033428 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077144582 seconds)
  done (took 1.259054709 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.582293393 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.145155806 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080603298 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111291477 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.182518324 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.118589602 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.27617681 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.085856929 seconds)
  done (took 8.94368906 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.10026508 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.07042231 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.07139534 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071383626 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070487701 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069072066 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071718018 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068932879 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068207289 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069149818 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068865614 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067619294 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071460915 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070244344 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069039487 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068122244 seconds)
  done (took 2.400354201 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091667808 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090351449 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073190988 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.07411122 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071357426 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.07158385 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073695903 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072837197 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070389502 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071492191 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074000143 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.072924589 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071066103 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064428542 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074011009 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075555117 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070651443 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073698977 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074620031 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074372534 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074571603 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06394069 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071560372 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073277815 seconds)
  done (took 3.058402514 seconds)
done (took 16.850817528 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.113028248 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070888664 seconds)
  done (took 1.372280928 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081174526 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082331568 seconds)
  done (took 1.359012677 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082718337 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.06516171 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.09072804 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077901776 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065863185 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065295026 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.088710009 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065743705 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065451821 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.06551237 seconds)
  done (took 1.931730481 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068585841 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078207249 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.07048319 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081497936 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07389066 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064106385 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072428878 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067500071 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078175744 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062318523 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070928192 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081820218 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.07083417 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083850222 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072140954 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068149118 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070934654 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.06706505 seconds)
  done (took 2.503631248 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065765291 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066659105 seconds)
  done (took 1.336090533 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068473685 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063856879 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067614438 seconds)
    (4/7) benchmarking "year"...
    done (took 0.06621238 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063168705 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062419266 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063185123 seconds)
  done (took 1.655360151 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.388486954 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109778146 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.297248343 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.069891278 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081599975 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.247981892 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065054514 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069857472 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069802674 seconds)
  done (took 2.642880782 seconds)
done (took 14.002749421 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078548627 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085648536 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.095343191 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.360246348 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091319714 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065310753 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113185258 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.189504541 seconds)
done (took 2.293372342 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.233434704 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.608319622 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.384019372 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.195920873 seconds)
  done (took 2.392658936 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.328675828 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.0863878 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058196283 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066030852 seconds)
  done (took 1.753354874 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065064335 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068616994 seconds)
  done (took 1.346952152 seconds)
done (took 6.9380148 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.082545417 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065744797 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065289499 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065533294 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065188285 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.063349604 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065468465 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.06288335 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064203029 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065747185 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067988443 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.065487302 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.065611174 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065498725 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.062973441 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062975838 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063030406 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068261905 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063103435 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062785215 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062677124 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065160881 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063282357 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062755316 seconds)
  done (took 2.814856618 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082622914 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066080639 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070744308 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.07106401 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069475542 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070712531 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070551452 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065913574 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.07086444 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067604918 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069347594 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069433699 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067215277 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069596607 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067419583 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.06943669 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070959005 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06596066 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068637278 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069377049 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070584533 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065890704 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069233609 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070414518 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069101625 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069082508 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067435807 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065954091 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071023048 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068890844 seconds)
  done (took 3.302354521 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.06907965 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063312824 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063552342 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070588119 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063453096 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.06464564 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062888324 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063420903 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064107849 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063039512 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064429455 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062886628 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063138915 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064117696 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064156244 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066344316 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078051453 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063684733 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063269284 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063528897 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.0663412 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062953103 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063605794 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063064752 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.175634998 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062758577 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063356478 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062982292 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063947434 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063377981 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066200822 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066544879 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063044836 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.06945433 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066847299 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062760627 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067121281 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062480801 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063931995 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062730174 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.06272655 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063464523 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063207963 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069689955 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063083989 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064958359 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.06294165 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.063953398 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063321234 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065538045 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062414318 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062387608 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.06512842 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064144964 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067023464 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062353539 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.06362756 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062661533 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064031252 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062367601 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062941902 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062797283 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065091252 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064275819 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.076842701 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069582692 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063128851 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064842356 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063915515 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065533553 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064579905 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076457688 seconds)
  done (took 6.002070463 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090907004 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08664412 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065358781 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06494845 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06164357 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063483291 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066681188 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063677529 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065035277 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069237842 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063560217 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064938106 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064820171 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076250177 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063900285 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064806389 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069033338 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061810746 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063809684 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066724437 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06388407 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066662931 seconds)
  done (took 2.721842531 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.152807959 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06946609 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.10451294 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072621904 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067034253 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072243498 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.06915184 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06914202 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06968767 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06747931 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06795152 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069603642 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067135272 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067249446 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067634303 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067720129 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069430738 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067820041 seconds)
  done (took 2.586627937 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076342133 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065499005 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.084973236 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065346915 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065559155 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067932553 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06989948 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073571109 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068089478 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065224793 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.07346727 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067750924 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067688579 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065209486 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067902312 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065191449 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067703701 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065363047 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073555626 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07016084 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070330853 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073630871 seconds)
  done (took 2.759713676 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078872812 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06707488 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081612507 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067865986 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061520224 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063909485 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069312543 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06550961 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069633403 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067036373 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065414964 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063744024 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068790918 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065302789 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068782254 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065652519 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067055054 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065664036 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067183046 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061739624 seconds)
  done (took 2.586411708 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.0861327 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067203956 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06737384 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074945517 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066814391 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066687562 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074388761 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.06664678 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066984995 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088106815 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066917941 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066674482 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07418589 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071986867 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066564601 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074705142 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074516107 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074457878 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066789172 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066872564 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086743036 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.06687542 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074865882 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067081149 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066960839 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066870077 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067098227 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071597207 seconds)
  done (took 3.233033261 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06657553 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065650686 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063410562 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063094 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063142697 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.06348742 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063144917 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063420848 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06561172 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063755645 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065758834 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065502277 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066038359 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065416191 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065725146 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065961518 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065689837 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063225854 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063415684 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063053258 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065930792 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065673701 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065775835 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063353429 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063250812 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065426441 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063151115 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063472994 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065449633 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063285451 seconds)
  done (took 3.175110553 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.07439531 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072695146 seconds)
  done (took 1.387166301 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062889138 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07984932 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063111766 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069662671 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069838289 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066530441 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073108942 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069360523 seconds)
  done (took 1.790518555 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.08106321 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077065886 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067177779 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079239776 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076163657 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082221639 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131932471 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066712012 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072903739 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064164244 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079326861 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065134265 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072306064 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066390111 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071573124 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07192153 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063862376 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072484391 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067972178 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064344065 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067162794 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074532789 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068499686 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061737929 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.06726039 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087423107 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076389768 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065629991 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068898901 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.072506813 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.070948093 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060140946 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065333776 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065819937 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063185646 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074949238 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080087923 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068347788 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.073698011 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066291457 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075906257 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061369056 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070066369 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.071996708 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075391476 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066433293 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066207463 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060864994 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063350616 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068201723 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060917586 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065821744 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060694893 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074712152 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.068996839 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075812129 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064916281 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067140534 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068707329 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068694556 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072400995 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067864098 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068310433 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065905859 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075555173 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.07086426 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074637852 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061285816 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.06028131 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.06405237 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075203177 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088258554 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072133744 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066417439 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06662692 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.06391252 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069052299 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067185571 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071298759 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072074452 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066242709 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071666971 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073476477 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066311407 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068515085 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.07413412 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064537299 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069018562 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06394896 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08224823 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064996915 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064386702 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064032247 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076331581 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069302654 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065991974 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064015728 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072785843 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060054505 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066157976 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065661999 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065148306 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.074277954 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068700367 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069060803 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.072759468 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071567073 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064675793 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067604378 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061246846 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065025482 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063588631 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071345588 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058903107 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067205861 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065530547 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064929241 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.197945656 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.066283632 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066987688 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073902229 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072623917 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065377557 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063498444 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069263377 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066686084 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069464625 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.073863004 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064800413 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061862809 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061188508 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069723007 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066509682 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069426547 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071147808 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069437803 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060803736 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064746341 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071441629 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075374172 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066293612 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067187118 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072130788 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067729392 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065717804 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072930245 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068943131 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065595748 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072183548 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067320013 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.06159269 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070132879 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069076031 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064769 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069872775 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069224931 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068290486 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067275599 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065609589 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073958525 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067523865 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065631949 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066732854 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064813324 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.07699466 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068089847 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.060861123 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064065593 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075707138 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065102478 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065571059 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064893869 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.06790014 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067465846 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065001373 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.06573337 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068389515 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076677573 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070052841 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067754884 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.07166059 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077226129 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066351844 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068671532 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066362721 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067404924 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067469661 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075065932 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071727865 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070086019 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068370187 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062765546 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07140829 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07313282 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064683911 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063837831 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064892525 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069942834 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071451177 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069565231 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066378303 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063795726 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066531868 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068677966 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068315536 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065275842 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.06521895 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072094713 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064105279 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072895179 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066380139 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075489356 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068742723 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061033529 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068543844 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063975877 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071776862 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060904664 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063823285 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065050505 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066839488 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064214055 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067084488 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059112061 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071594785 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072186889 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065188166 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.063850309 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.06450795 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071172182 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066267472 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06790105 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067999133 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070291168 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074435367 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063681808 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067599883 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.2011746 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.067218284 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060722341 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072554015 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065496292 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065315685 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065784683 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064501063 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069723717 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075570099 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.072768244 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061037624 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068762421 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065089044 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065078543 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062090148 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070958673 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069610917 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067086273 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072676415 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067290524 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066850392 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07040168 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065978315 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067186583 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.066818506 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069875782 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067082521 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069056587 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066186595 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069546736 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066003376 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.065044559 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068661175 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066227422 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066414992 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071988523 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.06583201 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06737302 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068668312 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067686877 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067690119 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.06657697 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065540237 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069215398 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06734637 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066912122 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068829192 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061737942 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073440866 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.06640135 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073680768 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067082637 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062742769 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073021312 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068328015 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072320594 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066920028 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067312364 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067787049 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066129395 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069166251 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073395298 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064840091 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076079263 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073898879 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066887687 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069025854 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066582515 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068423282 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065065865 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067197452 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067216021 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066847701 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065492039 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070900687 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068510645 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066491635 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06770364 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066873173 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066288946 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067301546 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060726461 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065252537 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065543878 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065690993 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075484611 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066446021 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065760566 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064903307 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066881881 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065255509 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063076427 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074221989 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075228024 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066674637 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073126756 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065550546 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067551965 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076559725 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060331835 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064169988 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064001104 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064161558 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073511621 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066783342 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075025128 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065692711 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064780706 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.06285067 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066042874 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063573582 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.05938097 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062627848 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068376239 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.06408272 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063942303 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064682496 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067117294 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065260665 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073791543 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063944628 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066018955 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064870204 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.192630068 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.067212762 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067244679 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070787327 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067919455 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064967594 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064039902 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066610955 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066794471 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068051311 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.0659633 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068287323 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075597947 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066580808 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.068803507 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070394169 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061346114 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069342681 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066145727 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066377114 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.064848187 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069673062 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069351436 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068008615 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074419609 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066265741 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067472664 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066476936 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064666656 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065872141 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066345517 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066533261 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065673113 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068057724 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074705979 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064289401 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.068912843 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06657508 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067342174 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072809284 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067075628 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069079048 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072946074 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066921563 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068312638 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074471629 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070769582 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069414535 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067813432 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068174555 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072422009 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065920463 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072924805 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066991204 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067251833 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069330498 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064095874 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065517426 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066118833 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065920355 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072693355 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067054626 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065287018 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065201115 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064210124 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.06727326 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069900994 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073100188 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068355136 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069648668 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.06125301 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063484769 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067489187 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063546324 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068093481 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068752734 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071353553 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.067920048 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066159113 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065080103 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.07474465 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071278995 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069710964 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064007171 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069343155 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066292861 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067852565 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066955227 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066145662 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067318106 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069633284 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067456913 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065580267 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073043596 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.06973907 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066894056 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067626801 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066930801 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066402086 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061784403 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066426414 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068461756 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071369039 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068609236 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065729685 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076166729 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063732685 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066230403 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068502293 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064628713 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.069896224 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060778737 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067075586 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065644017 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065316417 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060221099 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.063822532 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.062878657 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.066585136 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064053977 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060064669 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.074403569 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.072851926 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067322853 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06350752 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.193652517 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061182112 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061949382 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065792416 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067642554 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068028341 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076696548 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065872431 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064754382 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061251804 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06654199 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069112611 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069520155 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064002793 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061750336 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065096566 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070069336 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071932828 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065671706 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066326631 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069559186 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068531038 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064860165 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069510045 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063435208 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070728203 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079819987 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.06770458 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067637872 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072443177 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074327324 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.0671226 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.06156562 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067596219 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069651583 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067373235 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067588288 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067454299 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081849846 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069351838 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.06573289 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065081361 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069283823 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065615723 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074372796 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067205476 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066707479 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070256948 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068795097 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075579812 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069105205 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074350209 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069864148 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069470156 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065668154 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06682464 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064308093 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065455112 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.066939015 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.06701663 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071620246 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074490982 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065229932 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077074955 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075340573 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068353773 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063307982 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066428453 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066007982 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061714988 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.06655207 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.06465701 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064634966 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063963943 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065043239 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.06704576 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07109392 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066781999 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066440797 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065582228 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060903623 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068176099 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068175769 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066820061 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062482618 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065680621 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066378357 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069969666 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068951689 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063756363 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067290201 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067748719 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067221275 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061316981 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072597466 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065298059 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.06807678 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065531201 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066527976 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066978205 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069703222 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070676014 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067110585 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068283563 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069433322 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067729333 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063101178 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.06278405 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070423404 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063285298 seconds)
  done (took 42.324715621 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099527758 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062885956 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061401206 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061283857 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07270264 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062553788 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061230575 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062733798 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062577437 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064984381 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06171461 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061706454 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070258408 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077143156 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073401986 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06584788 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061438235 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06246442 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061286307 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062770462 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070198527 seconds)
  done (took 2.733467306 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.072942693 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.069516214 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072569087 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074523173 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066569242 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070292822 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071965181 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070010892 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075171754 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066472915 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084216556 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070361663 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.06662709 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.066784766 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066471848 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070195823 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075318672 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066485983 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070134573 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071767821 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070055172 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072005946 seconds)
  done (took 2.87070029 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066182077 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065078958 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067424394 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061513288 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066054348 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.060934922 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068661556 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063616233 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068648337 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064470664 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064728629 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064580821 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067498454 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060610432 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065537525 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063846196 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107634774 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068475189 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065148886 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066204396 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060981432 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.06777425 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061181751 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061497893 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064411784 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069055522 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066606363 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063537737 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065104765 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064712087 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065131438 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063069328 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067148826 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065994354 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064711408 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064908878 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.06533826 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065051093 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061118165 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063915076 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065837322 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061690011 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065531652 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066866705 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.06362271 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063636603 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066592403 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.06510261 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060504934 seconds)
  done (took 4.530988673 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079541431 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108545444 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067283139 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087588743 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079337192 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.074722156 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068790806 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.08899027 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.06333583 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063886599 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080635471 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079632917 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065400147 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069644283 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.068840307 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065017545 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066374746 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064222812 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068774048 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064858582 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069048334 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.07145563 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079053639 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078554272 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.06878899 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064380454 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064666691 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069456996 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077570537 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069597124 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069432112 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070712595 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079335161 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070797246 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064158634 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066916531 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.08084179 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065145488 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067616649 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063166809 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067310797 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069053605 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071110965 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.080673494 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065475335 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069994487 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064615901 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062317268 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077123214 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067148924 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072574604 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078857054 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068472872 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.064976305 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069145698 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079138201 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064554297 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063139825 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068207487 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077051758 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062544482 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068599567 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077958891 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066473841 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.07182689 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078486803 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070204433 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068420169 seconds)
  done (took 6.301017224 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074525704 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.071719658 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079677876 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079399 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071627902 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.071739499 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.07129918 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.071235652 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071376721 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.075951193 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071504687 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.092093896 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067176908 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074106613 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071793153 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071603893 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.07139986 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071456624 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071576236 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071472924 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072152506 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.0789486 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.07138545 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.078792243 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.09757761 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066973858 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072019615 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071677833 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079486203 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.07130841 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.07878681 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071720528 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071541602 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079488687 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079089288 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.07101066 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064732504 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070904897 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071498286 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071113623 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06684536 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079191079 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070851227 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066621603 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071842348 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070780875 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079131985 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078287955 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074060881 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076006377 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071173205 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079085647 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070963603 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071392068 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.078822569 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.103525908 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079029405 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079029529 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071435933 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079172634 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079206947 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085942665 seconds)
  done (took 5.982359881 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083524757 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074371032 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076003925 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061199761 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063625744 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069059843 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06374075 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063787235 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073896575 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073581384 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076402048 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069094044 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072054227 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076401125 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068986067 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071832734 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069129707 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068877731 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074200537 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068899433 seconds)
  done (took 2.75625677 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073952944 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.081714239 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.06607388 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071089552 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068353888 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071134629 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067833672 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068358221 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066253229 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068484441 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075006829 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075178261 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066299482 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071087665 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.074941292 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071568424 seconds)
  done (took 2.466965956 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.073324065 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071945202 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.078866062 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065907166 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064119949 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062223809 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065153364 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061246839 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062310057 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.0776547 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065164059 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.067448704 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065284993 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063753175 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062272332 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.067737672 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061847538 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063325761 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.064985178 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077175717 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.07588467 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063955184 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.065894662 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065374606 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065387575 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.069963715 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064741432 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063156522 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062621777 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065241818 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065645574 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069003386 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062651255 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.062951715 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063777587 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062711292 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064853145 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065496235 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067422864 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.064811915 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063273272 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.06517911 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065174654 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066010079 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062525549 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065679411 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061586529 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067514961 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.06308731 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065298572 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065072116 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067523656 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065866639 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071807575 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068084754 seconds)
  done (took 4.967953644 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078191621 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068789039 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061124765 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063567399 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069369251 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067091418 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069455217 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067075961 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067752566 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063330179 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066892897 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068327654 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066981994 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06883431 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067424542 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068714992 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061418004 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067022157 seconds)
  done (took 2.553171659 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.069907298 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065677193 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.071836641 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065686234 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.064901838 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06734946 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061632681 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063795975 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063909689 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065042713 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065521084 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067901774 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06397945 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067916717 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065049473 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065704819 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067631488 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063894668 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065326149 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061621151 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067287057 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064093186 seconds)
  done (took 2.781899642 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.092475396 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.08073909 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.136329541 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.077817319 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.082495193 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071157561 seconds)
  done (took 1.878323999 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08917219 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078085502 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066489456 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087124942 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072694003 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066852362 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066734036 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067225876 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075414701 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075673203 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066799209 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075105098 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074972458 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074637598 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072461617 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072232913 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067214291 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067055037 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065686552 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083111952 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066834257 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074928212 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066851527 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0668019 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066535749 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074750078 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075219862 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075150471 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066630991 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074971521 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072489474 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067068154 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075454514 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075617455 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069279744 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075583329 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067219042 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08406894 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072562034 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07471701 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06842853 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072953895 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075292938 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071974915 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075142283 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067206813 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071240601 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066900174 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066947753 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085120274 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072464401 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074254394 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072718724 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075606398 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075138135 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085046748 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075320626 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074396138 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07270388 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077896563 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074430272 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072569575 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074235473 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075310957 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072656459 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074391465 seconds)
  done (took 6.17063659 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080785769 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085425117 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066776213 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075392946 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07451489 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06714855 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067384735 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067120197 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06683782 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066997884 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1065752 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067541738 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074894709 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07487063 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067244224 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067444471 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067050485 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074873016 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066639296 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085111198 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066845061 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074577758 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074580526 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074412676 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075593764 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072361771 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067255761 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066823154 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066983311 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066796299 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071593921 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067100667 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074874951 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066413238 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07505537 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0673994 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06711052 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071658826 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067433219 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072473111 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074757118 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083629581 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067053951 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06690638 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07571844 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067004242 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067134818 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066732899 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066888629 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066985148 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075608933 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075747474 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07609032 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074569088 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067342889 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067156121 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067386791 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067577257 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067502339 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073218151 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07517508 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067077161 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085341355 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067217491 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067326643 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074938285 seconds)
  done (took 6.087820047 seconds)
done (took 127.97750969 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.183066716 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.166340079 seconds)
  done (took 1.686586231 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068053665 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.096922107 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076489389 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.127305129 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066356183 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100086002 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098813781 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077529197 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065852655 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065762311 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065859242 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068264135 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131040951 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066041909 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065669351 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068365511 seconds)
  done (took 2.658311887 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.097164514 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.157126031 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.098578572 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064855547 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.095972593 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072690895 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064654062 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074353114 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070707498 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.06487435 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072542789 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070169717 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064804707 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070093511 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070691658 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072593891 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064894572 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072358089 seconds)
  done (took 2.770001518 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.10024246 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.090910225 seconds)
  done (took 1.542906329 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.154381264 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.104671008 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.149422519 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.343994186 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.165982405 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.229462248 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.126841635 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.126965505 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117247939 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123853087 seconds)
  done (took 2.991838577 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.097047086 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.150300614 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.255112579 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.11479256 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072347513 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094576542 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.11593398 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078057574 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.08043751 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080077083 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080021341 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076039093 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098531522 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073341996 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072782299 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075865651 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.101845483 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071681025 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073657409 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076272232 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.098926571 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065698657 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073031905 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072087871 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077029251 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077331016 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065402677 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065436678 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076091987 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073652201 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076437612 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.09295981 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076804564 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106379782 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069555371 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107268611 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075930731 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073237501 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073499645 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073357054 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078433035 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078361422 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072335684 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075464302 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064606204 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075776584 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065363755 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065226692 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077843006 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066497562 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077293639 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076548637 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105878457 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066391121 seconds)
  done (took 5.935792704 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.100738987 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.103314266 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071302908 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.110808367 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099490961 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070846377 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.1009079 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.092697975 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102811257 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069758434 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068006162 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070539905 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082019319 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082832565 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.111469767 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.103795023 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073588634 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069955561 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.103049592 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102251869 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068207186 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095202827 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.089415777 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101210358 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067178381 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070202964 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067933775 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.0700674 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076490268 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078432068 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069534534 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080552084 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084353709 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078177676 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066562784 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067469104 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06780584 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079369378 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078980497 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078838202 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077209126 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067148857 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067865554 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.06930872 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069913505 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067243864 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078699136 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.07982168 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078720828 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069103254 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069760288 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067528319 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069174037 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079955077 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077141129 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080861392 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079817177 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067978423 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068585477 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071455607 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080769658 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078872269 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078743137 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069082513 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078361541 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067646983 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079705365 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083586012 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067975103 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.06940026 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068718705 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06952138 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069608572 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077889701 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077570755 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069585421 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069187056 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067916347 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079450514 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078270069 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068023755 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076592829 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067011162 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068073714 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069414292 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069322758 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077208104 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.07928612 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.07534889 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067521255 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069156984 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067911636 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066104841 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075162878 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077927838 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.076476949 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.07660841 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067962149 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077252367 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076843693 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068495183 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079087227 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067271107 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.196623818 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06987945 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078749013 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.07845196 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079681387 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070376509 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068832845 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079159163 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080366167 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068291479 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078405701 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08111416 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080444329 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.06847096 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081289734 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069431051 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079991895 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070315021 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079404654 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068635498 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079950373 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069324747 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068300653 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068578088 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080182272 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069586352 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068632888 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069611962 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070638849 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079109245 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082532841 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.0700734 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081357805 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078803897 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069621931 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079579487 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068198285 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.07843722 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069100844 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070437153 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067069593 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081802816 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06787731 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068897199 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069528231 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080192998 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068504831 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080241114 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078560639 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067721415 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080930401 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080432342 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076698207 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.08048745 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070620125 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068520782 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068188203 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068753778 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077502292 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080423524 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070018536 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068920212 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.079124663 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.07950248 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067415685 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078256752 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077692354 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078358246 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068168773 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069290335 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080120948 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080230385 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077645777 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078637448 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078175183 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068013519 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077263685 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077949717 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067854238 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083662426 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067842605 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082092015 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078836056 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07656117 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078985933 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080212861 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.0801075 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080025699 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082402377 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068233466 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068128095 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079377249 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067736394 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068276102 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076788842 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068323215 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068630476 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.080803426 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067222182 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.077768762 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066442713 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.076957294 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06614305 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068257565 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081210497 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.198063319 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070238374 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079384906 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069463535 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.077833596 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081493791 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.077986713 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068565428 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069486896 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080174071 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079966145 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068904041 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069472872 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070621961 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.07830025 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078182467 seconds)
  done (took 18.570713852 seconds)
done (took 37.515956225 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.209132128 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.152140824 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.198165759 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118463671 seconds)
  done (took 2.131950812 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.121929785 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101393373 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094799288 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065327556 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.101670192 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065391761 seconds)
  done (took 1.944166902 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.311119919 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.211552344 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.18286817 seconds)
  done (took 2.095491427 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.200214915 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.187264079 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.397363431 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.254671372 seconds)
  done (took 2.5384123 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.142775632 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.088959138 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067211661 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083618546 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.133988852 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.160940932 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101190965 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125706113 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078726216 seconds)
  done (took 2.426312963 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.147044041 seconds)
done (took 12.679441197 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.125733264 seconds)
    (2/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.205142041 seconds)
    (3/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.201147155 seconds)
    (4/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.099458307 seconds)
    (5/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.107909727 seconds)
    (6/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.209536827 seconds)
    (7/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.07632248 seconds)
    (8/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.219155155 seconds)
    (9/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.197256595 seconds)
    (10/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.151050992 seconds)
    (11/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.170194931 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.081864927 seconds)
    (13/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.074159848 seconds)
    (14/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.175904386 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077353337 seconds)
    (16/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073268988 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.122058554 seconds)
    (18/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.071405214 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073769078 seconds)
    (20/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073428863 seconds)
    (21/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.098721867 seconds)
    (22/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.175847182 seconds)
    (23/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.148882461 seconds)
    (24/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.089059509 seconds)
    (25/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.150512147 seconds)
    (26/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.14902612 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.102610842 seconds)
    (28/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.06428487 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.099818815 seconds)
    (30/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.07512711 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087351683 seconds)
    (32/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.06636302 seconds)
    (33/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.197432318 seconds)
    (34/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.109980548 seconds)
    (35/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.184691037 seconds)
    (36/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071488462 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.089449098 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071226451 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.089360973 seconds)
    (40/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.067349476 seconds)
    (41/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.061844412 seconds)
    (42/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.075047256 seconds)
    (43/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.185858414 seconds)
    (44/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.074899317 seconds)
    (45/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.151043937 seconds)
    (46/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.213029854 seconds)
    (47/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.07475431 seconds)
    (48/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.074679642 seconds)
    (49/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.159017469 seconds)
    (50/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.155527959 seconds)
    (51/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.072117342 seconds)
    (52/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.169875151 seconds)
    (53/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075400988 seconds)
    (54/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.178570493 seconds)
    (55/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.051245255 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.112107044 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.126827671 seconds)
    (58/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.051496556 seconds)
    (59/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.159817079 seconds)
    (60/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.108325785 seconds)
    (61/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072402733 seconds)
    (62/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.071726703 seconds)
    (63/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.185767837 seconds)
    (64/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072694688 seconds)
    (65/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.067113364 seconds)
    (66/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.078757249 seconds)
    (67/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.077562252 seconds)
    (68/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.051240488 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065196395 seconds)
    (70/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066295049 seconds)
    (71/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.070744842 seconds)
    (72/309) benchmarking ("sort", Int8, false)...
    done (took 0.137420326 seconds)
    (73/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066574078 seconds)
    (74/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.160064013 seconds)
    (75/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.052949221 seconds)
    (76/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.172521968 seconds)
    (77/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.05204958 seconds)
    (78/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.066238365 seconds)
    (79/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.107832694 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.064722879 seconds)
    (81/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.072629151 seconds)
    (82/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.050917901 seconds)
    (83/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.070964186 seconds)
    (84/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.157114053 seconds)
    (85/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.116882499 seconds)
    (86/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.290336499 seconds)
    (87/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051872485 seconds)
    (88/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.076263981 seconds)
    (89/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.373295646 seconds)
    (90/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.159306183 seconds)
    (91/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.051863818 seconds)
    (92/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.071989582 seconds)
    (93/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.118715536 seconds)
    (94/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.052149681 seconds)
    (95/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.081774291 seconds)
    (96/309) benchmarking ("sort", Int64, false)...
    done (took 0.066518599 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.142784436 seconds)
    (98/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076573408 seconds)
    (99/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.06196083 seconds)
    (100/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.147386144 seconds)
    (101/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.05214699 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089720392 seconds)
    (103/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.065923323 seconds)
    (104/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.073380977 seconds)
    (105/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.098283311 seconds)
    (106/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.071834097 seconds)
    (107/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.073604516 seconds)
    (108/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.208237751 seconds)
    (109/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.074647317 seconds)
    (110/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.052335072 seconds)
    (111/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.050774721 seconds)
    (112/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.051505057 seconds)
    (113/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.074976852 seconds)
    (114/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.076668815 seconds)
    (115/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051322162 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.086434286 seconds)
    (117/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072782868 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089774046 seconds)
    (119/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068690264 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065589397 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090930851 seconds)
    (122/309) benchmarking ("sort", BigInt, false)...
    done (took 0.185860974 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.135184473 seconds)
    (124/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.092912819 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.135872953 seconds)
    (126/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068455002 seconds)
    (127/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052294274 seconds)
    (128/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.216847743 seconds)
    (129/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.050785383 seconds)
    (130/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.12124988 seconds)
    (131/309) benchmarking ("sort", Bool, false)...
    done (took 0.13257393 seconds)
    (132/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072973637 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072516266 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.105070952 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089093295 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070635408 seconds)
    (137/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.084621199 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.132534179 seconds)
    (139/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.149468999 seconds)
    (140/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073357791 seconds)
    (141/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072466675 seconds)
    (142/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.154991242 seconds)
    (143/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.103089832 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091252888 seconds)
    (145/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051234599 seconds)
    (146/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071584461 seconds)
    (147/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051484939 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064878323 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.07198916 seconds)
    (150/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.137742348 seconds)
    (151/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.18505662 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.070484857 seconds)
    (153/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.135931275 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.074817721 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065106644 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.075650154 seconds)
    (157/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.078857208 seconds)
    (158/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080879378 seconds)
    (159/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073134369 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065144474 seconds)
    (161/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.151508983 seconds)
    (162/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.08922232 seconds)
    (163/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.066302102 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.13965513 seconds)
    (165/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.108530588 seconds)
    (166/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.051068178 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065603507 seconds)
    (168/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.066860841 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.092652466 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065076026 seconds)
    (171/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.053393798 seconds)
    (172/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.051636701 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.088748571 seconds)
    (174/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.067365346 seconds)
    (175/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.051078459 seconds)
    (176/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.072090464 seconds)
    (177/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.050837623 seconds)
    (178/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.07189705 seconds)
    (179/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053286957 seconds)
    (180/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.173729473 seconds)
    (181/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.074472294 seconds)
    (182/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072815179 seconds)
    (183/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.097963796 seconds)
    (184/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.06500824 seconds)
    (185/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051018104 seconds)
    (186/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069335573 seconds)
    (187/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067266044 seconds)
    (188/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.066208037 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.087568231 seconds)
    (190/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.063298936 seconds)
    (191/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.080981417 seconds)
    (192/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071108288 seconds)
    (193/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.182093408 seconds)
    (194/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.086630179 seconds)
    (195/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.207173915 seconds)
    (196/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.053265064 seconds)
    (197/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.053123596 seconds)
    (198/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.064581838 seconds)
    (199/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.115486313 seconds)
    (200/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074299651 seconds)
    (201/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072734906 seconds)
    (202/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.07347499 seconds)
    (203/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.165269955 seconds)
    (204/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.051521068 seconds)
    (205/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.075814611 seconds)
    (206/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052444087 seconds)
    (207/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065991867 seconds)
    (208/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066313669 seconds)
    (209/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.099091641 seconds)
    (210/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.053073247 seconds)
    (211/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071625275 seconds)
    (212/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.168778237 seconds)
    (213/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.052520793 seconds)
    (214/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067921694 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.120214493 seconds)
    (216/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.062993283 seconds)
    (217/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064208217 seconds)
    (218/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.099344018 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.06535385 seconds)
    (220/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.108680113 seconds)
    (221/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075548751 seconds)
    (222/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.051199305 seconds)
    (223/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.132847561 seconds)
    (224/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.072980066 seconds)
    (225/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.05265871 seconds)
    (226/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051768902 seconds)
    (227/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.06999741 seconds)
    (228/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065553738 seconds)
    (229/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088685089 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.0859174 seconds)
    (231/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065090583 seconds)
    (232/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.165341168 seconds)
    (233/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.088974779 seconds)
    (234/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.052547348 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.093302886 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.093255692 seconds)
    (237/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.061700735 seconds)
    (238/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.066726576 seconds)
    (239/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.174619723 seconds)
    (240/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078782893 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065829836 seconds)
    (242/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.088161616 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086477536 seconds)
    (244/309) benchmarking ("sort", Float64, false)...
    done (took 0.125959282 seconds)
    (245/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065056156 seconds)
    (246/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.105723955 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065236862 seconds)
    (248/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.06957562 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.089527104 seconds)
    (250/309) benchmarking ("sort", Float32, false)...
    done (took 0.126451069 seconds)
    (251/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071307531 seconds)
    (252/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.102125817 seconds)
    (253/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.060962312 seconds)
    (254/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.051679166 seconds)
    (255/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.051002188 seconds)
    (256/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.051226011 seconds)
    (257/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072737291 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.106765132 seconds)
    (259/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.071326555 seconds)
    (260/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.051372282 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.108074052 seconds)
    (262/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.13089262 seconds)
    (263/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.086360077 seconds)
    (264/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.173039422 seconds)
    (265/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.051887725 seconds)
    (266/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.066842489 seconds)
    (267/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.051973755 seconds)
    (268/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.06266666 seconds)
    (269/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.051206266 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.090061112 seconds)
    (271/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.05270688 seconds)
    (272/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052339628 seconds)
    (273/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.085037953 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.100798539 seconds)
    (275/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.05140706 seconds)
    (276/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065416675 seconds)
    (277/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072743028 seconds)
    (278/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.065031869 seconds)
    (279/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063652649 seconds)
    (280/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.134507536 seconds)
    (281/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052404981 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063826352 seconds)
    (283/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.070401436 seconds)
    (284/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.080104524 seconds)
    (285/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.05347626 seconds)
    (286/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067471032 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.071969047 seconds)
    (288/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.06189892 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065045665 seconds)
    (290/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070194886 seconds)
    (291/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.065421547 seconds)
    (292/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.072283365 seconds)
    (293/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.05108637 seconds)
    (294/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.051094965 seconds)
    (295/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.171442843 seconds)
    (296/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.08680075 seconds)
    (297/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.05256452 seconds)
    (298/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.065653935 seconds)
    (299/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079265359 seconds)
    (300/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.052274284 seconds)
    (301/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070184605 seconds)
    (302/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.066872561 seconds)
    (303/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.064964729 seconds)
    (304/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.051949813 seconds)
    (305/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054901698 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.064893544 seconds)
    (307/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.067485362 seconds)
    (308/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.06546735 seconds)
    (309/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.060683672 seconds)
  done (took 30.337807187 seconds)
done (took 31.740994566 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.087168915 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091558266 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074116141 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092184771 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.08006782 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076184185 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072108496 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077664275 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079035885 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080894021 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077660259 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054518419 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.07354981 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073659349 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.07391881 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09043873 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077366751 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.07239867 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072438843 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064349645 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072442366 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.06518712 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.06674946 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054258793 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.076927254 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.07100973 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071583973 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073344482 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.064752821 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065249057 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068682842 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.07266999 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065181421 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077160782 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071644616 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.071911734 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.07381234 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075490435 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067042991 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065107657 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073738976 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065287386 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072366208 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073206044 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071497764 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070728152 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072697474 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077614487 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090981637 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067983537 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.07391866 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075366839 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075924996 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072180746 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069015799 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072494781 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070831485 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090705201 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073848234 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067632424 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073252862 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073504205 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070286965 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072150278 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072570971 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.07461975 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074689155 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070421047 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074536702 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070630844 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.06514811 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072312133 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068358414 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065328142 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075416781 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076210099 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064026898 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071388899 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072250008 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071487751 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064214778 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067209336 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066582253 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070929952 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067365283 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054584322 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068324407 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070932644 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.06435099 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072788816 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071247898 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.07113094 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066565694 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074494463 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06467903 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069638072 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065138495 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.06485545 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066577556 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068761887 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065299066 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066951349 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073848389 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066466444 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070723874 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078196506 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065474923 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071500123 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064155906 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064487999 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078866482 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073646514 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064911344 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067164725 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064040761 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071793073 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063902635 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064870525 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064864944 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064144711 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.069529358 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064241828 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066232872 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070996091 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076072173 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063764939 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067089943 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065843574 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064133996 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069316828 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064150021 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.197802902 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.068454805 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062376499 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067747381 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065697555 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.07267506 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067855311 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.07313756 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066468138 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.07280659 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070263027 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070555996 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070529861 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064225185 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058418896 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067659867 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067338963 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067564116 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065950149 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06711542 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066324114 seconds)
done (took 12.38325063 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066533774 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.142618693 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098063438 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094616899 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085511192 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066321401 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.07585298 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101593527 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067416421 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.1020944 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086877105 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084714525 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.111733662 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064416171 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065491517 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069405405 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.06682822 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081163595 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100647662 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.08602097 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115485641 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065189953 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093976901 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089506568 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086539722 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.092536656 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066868211 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069533294 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069438544 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.100031883 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086144195 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069410383 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066525662 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.100109103 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092057495 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082765235 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.06606333 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082076659 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066228121 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065788283 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067155152 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.09738481 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079550013 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079730445 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.06986608 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068688499 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066752718 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082855798 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088134049 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078193145 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.08593902 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102475983 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068612299 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065273181 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064472598 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084680313 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065268749 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068584439 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065634093 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067838279 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.06598009 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068708695 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080558862 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081505181 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069071994 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079439947 seconds)
  done (took 6.769977333 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.08263795 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.08987685 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082629383 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082524294 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065500195 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066300554 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066467877 seconds)
  done (took 2.031325579 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066206706 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087260913 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089434382 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088742664 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084022377 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087478425 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075180237 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.06636576 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.081137703 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067702842 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086695559 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101393275 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066925679 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072734221 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090363397 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066353453 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089783236 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066091597 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069151239 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089106538 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068165615 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081580734 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069494905 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066467795 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080336632 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066169315 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112559106 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07015692 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067955603 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069086633 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064280617 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106365813 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.07967031 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075064918 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066121567 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080360917 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080802582 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064293474 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082258755 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071523035 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079832236 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066142684 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.06682309 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.063981927 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070265474 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076169567 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066706514 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066905844 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068340401 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085388858 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066902069 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079268543 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069095426 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068440964 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067289005 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069788948 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075668414 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067325965 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085373568 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067141906 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082632048 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082224726 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079853204 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.081940261 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068622939 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079405368 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080094204 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068735927 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06795604 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069662101 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082280125 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064690799 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067513764 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076453136 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067927203 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088410044 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088661846 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067202403 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075003857 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066579801 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.065812777 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066061645 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.08856147 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068192246 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065924309 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069906791 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069185645 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064381303 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065171197 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069358702 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064074838 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067589962 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068995684 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069352325 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068437354 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082618053 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068408897 seconds)
  done (took 8.715406097 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068307762 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.06858323 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069478808 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067294144 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067471911 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067437202 seconds)
  done (took 1.929957648 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093182578 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069157647 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080869549 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072397664 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104208033 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086292653 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086570652 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078540832 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083473483 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078564985 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086362145 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087662252 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092413503 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072876916 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086902088 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071765355 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086667336 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075519957 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.07815505 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072738114 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086428534 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072555496 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072697135 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081424652 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.07576032 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071655698 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066902294 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078151082 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078032654 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078617642 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072045699 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075359892 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070257316 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077864343 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.08618034 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070277984 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071663588 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076627139 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072208661 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075269324 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088004726 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072547492 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074394788 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076674487 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078040433 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.07089565 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076567215 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075603143 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085418627 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076680493 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076355674 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071098573 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074521809 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076637028 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070382513 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077926344 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076628408 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085848721 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071673013 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070283151 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068443588 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074979489 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07741647 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074955315 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078167254 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076066049 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069997766 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072100494 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072436354 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.070891445 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076870634 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068610844 seconds)
  done (took 7.063499279 seconds)
done (took 27.992764319 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.542888551 seconds)
  done (took 2.034736928 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.599031439 seconds)
  done (took 2.11432832 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.571613847 seconds)
  done (took 8.081032621 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.38678153 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.468303905 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.686481931 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130367801 seconds)
  done (took 3.214379628 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.67427135 seconds)
  done (took 2.193292267 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.208161509 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.1957074 seconds)
  done (took 1.930739542 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.37456929 seconds)
  done (took 1.884136905 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.098974631 seconds)
  done (took 2.610280343 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.259681315 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.162503299 seconds)
  done (took 1.93708691 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.457889644 seconds)
  done (took 1.970933982 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.821495629 seconds)
  done (took 6.336652379 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.211563636 seconds)
  done (took 1.767454958 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.238659227 seconds)
  done (took 1.754089874 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.687398985 seconds)
  done (took 3.20325242 seconds)
done (took 42.551638025 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080287568 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081119072 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080971802 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077944296 seconds)
  done (took 1.824187115 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076252763 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072299644 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076123264 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072433127 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076702301 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071997573 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074058765 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076929597 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072205422 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073040189 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072065339 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072185006 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.0748414 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074201687 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070692896 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074621528 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075768829 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071975168 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.0754645 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072157245 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070668732 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074178687 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074752681 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.07155919 seconds)
  done (took 3.285807694 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077373774 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072233953 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074432001 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072070259 seconds)
  done (took 1.82056167 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077209167 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.0911183 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088965444 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077005028 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091255616 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085932259 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068948312 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068685778 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072905244 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076754026 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.06785397 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.09548795 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087377618 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.07667019 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079040763 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065649041 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068385315 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086546746 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076984051 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077267566 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069592085 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076746384 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067962623 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088399337 seconds)
  done (took 3.404453581 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077289894 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103481997 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077367304 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087320747 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089258755 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065211808 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.07391317 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089224383 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.122815597 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065447853 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070280826 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065254782 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.07229315 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064961018 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076023665 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104879962 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.108034831 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068398073 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095934537 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065156544 seconds)
  done (took 3.172864366 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072245963 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069506726 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065880593 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068638236 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077615109 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073001281 seconds)
  done (took 1.960022996 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068240044 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067027518 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067274905 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066294305 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071282017 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067203755 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.0659808 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067381283 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067205876 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066981029 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.06635428 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065175627 seconds)
  done (took 2.336577045 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.171606291 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.0685173 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069541392 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066080858 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070968874 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.0660489 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079862528 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067500832 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090166642 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066255585 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066453275 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.06808234 seconds)
  done (took 2.482397612 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205144484 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075981118 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234996666 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136597303 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111169399 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115043845 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103752109 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112868446 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.142378177 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101176723 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166725665 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164688264 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106796607 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136793092 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08927849 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097505614 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154640158 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161531923 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103220895 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164566648 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143278381 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124255232 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147519119 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1012094 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105251377 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121058789 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070847193 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080266281 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169713485 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131262446 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145732368 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1110779 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093462454 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175828585 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170202118 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141191444 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133966236 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083431086 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.102217797 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.134261187 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198574785 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087616641 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160301325 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246082026 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081375309 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135790055 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120381523 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.119674253 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106645477 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089771826 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146181936 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182176003 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.137645175 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087134944 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112707526 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115514623 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.115014123 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103423133 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180641135 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159762508 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127943826 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071656303 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09976868 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152960215 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131133003 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108033846 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.125898135 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09336482 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132786603 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154176283 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118222342 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14314388 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.128642876 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088655902 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11885561 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139383208 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127561796 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169888649 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124363891 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072989058 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124680108 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10344755 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081431968 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.143408877 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075623335 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17374287 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09810276 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.105268365 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112363549 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108234665 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108261158 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159304182 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140405501 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.24479686 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.06637943 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103879187 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.120884995 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147407375 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087723141 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108618502 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116201716 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078443152 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139328255 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074676215 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123169507 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075302952 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124446365 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132117203 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076048027 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122202498 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101768859 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100093623 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134183494 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160292964 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088742511 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082647997 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165487665 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121664916 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103651414 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14383539 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155581826 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.099265092 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102276578 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148952432 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178764 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089787553 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162945372 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107567063 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083871212 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087466887 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123905627 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11263787 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.122157552 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082351374 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118730404 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168418217 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074939314 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09566747 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132135226 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078792766 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080049334 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102441876 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099596165 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094374388 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099560376 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103216014 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135910241 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121661771 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102462919 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269334596 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098625069 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170083023 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088352177 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100658819 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104253351 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069963716 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.136053598 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156579516 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079568273 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16365067 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.122920673 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104821211 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118123271 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082570129 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139826743 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078379643 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070385595 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144355405 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11115677 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110643557 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.149601911 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104057447 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.126217301 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.118851726 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135320071 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13164871 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.1290262 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105262543 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088141246 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111490696 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125322599 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.07268469 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090918618 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079970621 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103430043 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095173252 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083528516 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141726908 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1242402 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100362309 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111533478 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096402779 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146760178 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076513917 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128371146 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.118068677 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093294366 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.150628058 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151273576 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130742174 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098523654 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143100131 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069470361 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072809839 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.232945433 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124365354 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08385176 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08313324 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117188889 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147207621 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129418359 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138473344 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112513719 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122601109 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154710686 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069569313 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.115778765 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146936526 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122228237 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104654526 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090250265 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099085875 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141421077 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107684964 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181061436 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113426018 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126379953 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152681934 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.100210713 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079939132 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108598908 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134912298 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103952273 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144154135 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099373637 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087848089 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109622144 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074451185 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099652123 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127078509 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119286322 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135648692 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.114386674 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132588278 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076968854 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116462983 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120252955 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121402683 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063708917 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118847623 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159633485 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093802077 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11749156 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151249539 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078703318 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.123663711 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.320189973 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146932234 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085251014 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110091405 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11900044 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127151485 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120707758 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139284081 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108488485 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13461958 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108968795 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086159173 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086986918 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097108197 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103927536 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094324022 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.10766094 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114927571 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095537657 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131754148 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102605866 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111191225 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117934018 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097429441 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089537303 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097567338 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17336702 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118671762 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170541642 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098697593 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.145035596 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163277665 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074737363 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078913084 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.07845208 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139444653 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083882981 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13021089 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.097758438 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106026746 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123660622 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141893599 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094782538 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.0686299 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108500759 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137005688 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111787563 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097254175 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103118035 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161149928 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.099959084 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079069949 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112778826 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103579006 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101280819 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166123469 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.060839184 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.095425774 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074434675 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079014632 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124053845 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145669493 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.077952928 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.10152853 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116059947 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10755406 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123905138 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09769044 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097172025 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111413051 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144060321 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123295679 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.085406625 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106368308 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120514689 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145696135 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099588033 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.091634175 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158166986 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160344485 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.148537953 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.083754124 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10797292 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10843284 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103801221 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130005509 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080932409 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152617363 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078416629 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125906163 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097463373 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084438236 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12021953 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.093487032 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083886846 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137596175 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110093169 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079075394 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074065923 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110180912 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112682356 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100990846 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.072217591 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129403008 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.070932567 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122357506 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157049764 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077295111 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.359610331 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098461656 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082469534 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110711347 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104804357 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091762613 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.099991788 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175208951 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.090861372 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153084684 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14375859 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114227938 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139254225 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101910336 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.637985484 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.079589873 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154032767 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118296728 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174953964 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098104847 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119070856 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111058473 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124416937 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145132596 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107072663 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.18102542 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133380579 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.117219001 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080174425 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10391296 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103811541 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089084461 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105801614 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113797308 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115950074 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093655863 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.11571025 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12335347 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082407149 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096222932 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156394299 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117312085 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144373653 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139978385 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084842147 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117086341 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137147989 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079763451 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.121575594 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151021013 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105795741 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247417 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080945501 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.103208724 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170557213 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073173122 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162446361 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120504155 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109701807 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113816484 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.115081999 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131341274 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107395013 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12204447 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094048727 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110077561 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112237454 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082413135 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077618544 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103777797 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111591401 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097723256 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098550287 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.096910591 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151270401 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071496581 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09584644 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103490487 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144072614 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174427712 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.08830847 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083231208 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118084459 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112888878 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113083154 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120241326 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079189708 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082376799 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081811518 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077340476 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.108457809 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112221856 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104627759 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111454694 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163757524 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.08280098 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.225565943 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095589099 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10487334 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069741867 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078818316 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095739067 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097291926 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107927817 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100468184 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168751557 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094445478 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089705003 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091956997 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073392729 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230151879 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129059345 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111501826 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118380024 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098222245 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.063433078 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110330772 seconds)
  done (took 58.495388742 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.108564203 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082917794 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096295528 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149332877 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.12217898 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.211866638 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157617566 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199514728 seconds)
  done (took 2.792618797 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068555416 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.09431131 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099604208 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.08345533 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066180858 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068888552 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.224806028 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080964077 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066676848 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088761346 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079655659 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069526807 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.420367666 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066183135 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067958362 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.063180628 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067308951 seconds)
  done (took 3.431443066 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.369307909 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.602168767 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.372528515 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073564853 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.878229451 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089560313 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.072817376 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.12827816 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.074382354 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.526396503 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.711514958 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.126302201 seconds)
  done (took 18.68792729 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076230011 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070097438 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.084407061 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084137406 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073091096 seconds)
  done (took 2.053375556 seconds)
done (took 107.318959264 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080264769 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.390942116 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053927696 seconds)
  done (took 2.139719203 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.083633556 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084527743 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084257505 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083249085 seconds)
  done (took 2.010285954 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.07436114 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076201084 seconds)
  done (took 1.818075435 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.226082664 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.139673101 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.08700246 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082791819 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078075256 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079610547 seconds)
  done (took 1.912468781 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072398775 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075056768 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072792732 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076023183 seconds)
  done (took 1.963810704 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076602965 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052567198 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054659077 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.056807581 seconds)
  done (took 1.909101667 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.08578582 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079440234 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079153998 seconds)
  done (took 1.914761534 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.101616977 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.084743559 seconds)
  done (took 1.855305422 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081116253 seconds)
  done (took 1.751189873 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.097810477 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.113977654 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.128488112 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.109147683 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.136103003 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.108798743 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085179541 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086469747 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077166292 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087337626 seconds)
  done (took 2.700931873 seconds)
done (took 22.172638876 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078791485 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.367346921 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361344145 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089777735 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668895422 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356799155 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.99816639 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092372835 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.11355401 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067490752 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084008497 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649699401 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.990784885 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.324527213 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.977074645 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.419106121 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.65068647 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068273559 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067947018 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06812732 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.984957153 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067728478 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068025238 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068777909 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.648443862 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371345239 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067953681 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.414435013 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068246089 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069805214 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355066496 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068638868 seconds)
  done (took 16.406384227 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070158414 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.11820072 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074496578 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083796756 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.07051172 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069584989 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071829211 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069053961 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.11968591 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068346169 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084802811 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067694792 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071977155 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068838147 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087112434 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068249631 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06875205 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068894963 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06820604 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068815175 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086438206 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067901107 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06812008 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068461048 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068124841 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079497174 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068496225 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06833865 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068605501 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070421702 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072017399 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069309379 seconds)
  done (took 4.078516899 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115151421 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125293758 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074704382 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103084162 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112765054 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070385233 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143788051 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092936604 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127867342 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068278702 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084578906 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068543242 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100866451 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068847414 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088415851 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06888755 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069625216 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069137521 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068366518 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068803179 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087095667 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068145202 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068887659 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069375502 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068666596 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081428449 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068926112 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069184762 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069135568 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.0702697 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071744016 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07006794 seconds)
  done (took 4.335960599 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072757892 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075451254 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.08197634 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083587028 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069306608 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072159871 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072736376 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069503027 seconds)
  done (took 2.282721071 seconds)
done (took 28.778995948 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078160065 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069699315 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072744827 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081296897 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073796629 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079133421 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067101305 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074852985 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072340238 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073211648 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.07517457 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067968869 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071450378 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067714583 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074058684 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067952046 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079676219 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071854153 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078862594 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079730062 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070266712 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073539551 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074474793 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.07992412 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.07949068 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079258568 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.078018935 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072817987 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069096688 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070992736 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076633437 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083955397 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068962743 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079805066 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068155436 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068361059 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071783557 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068228716 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.07939298 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077406296 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069803366 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076435794 seconds)
  done (took 4.780067705 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087550602 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090639991 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084725016 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061897321 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066836147 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065249286 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.08860333 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059685794 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060071449 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088128089 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056369997 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059501466 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062585274 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054304841 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059612072 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057048368 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061690286 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055906322 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059411594 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059436947 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058521319 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054563766 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060488333 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062900196 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059367595 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062108872 seconds)
  done (took 3.394792442 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074045514 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084380978 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.087911756 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.12684742 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.103382237 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077162006 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.07818322 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092386918 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.085743494 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067470044 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070875943 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093256472 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08788296 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073773069 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067619397 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.08437676 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082173559 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069268262 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073820928 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090574226 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.085587085 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.084020657 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092545835 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081282779 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066896541 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069645732 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071432673 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081035653 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072119237 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076594099 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071548031 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.0709571 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069262587 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.07911568 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071065186 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069172034 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090346929 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077005296 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078168138 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068299854 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071199322 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068942479 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089539053 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.122889278 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066940313 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074131786 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075490229 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077009763 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067650156 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08624706 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078541863 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067450921 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070691957 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06711506 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067743168 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080309253 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069843122 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069736216 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076374102 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070330722 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.086092273 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071398103 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082856401 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067102238 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075302002 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066785148 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.0683967 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066752575 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092860967 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069391568 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108205753 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068752037 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068290429 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077030747 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075074433 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073984835 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067897215 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082419001 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077805509 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071411853 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076093883 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070993354 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070779307 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.088456138 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070288278 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069489588 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068830003 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.084999145 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070223358 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069266293 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08049088 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067708195 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070818801 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083960459 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067213482 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069013411 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073522932 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072576971 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067508573 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078487029 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072386203 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068378316 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076941498 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067611771 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070553416 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.07813069 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073588238 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066685057 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072722802 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073599599 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068440089 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.06915146 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070499325 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.06914468 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075715481 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074079077 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072010104 seconds)
  done (took 10.62425905 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.160100643 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.154097577 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070894605 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.144729237 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076984731 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079364684 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.148027229 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094598282 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068064849 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069875152 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069059807 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110279399 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106044243 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.115306693 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079777689 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067976168 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083456582 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114385229 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.149953749 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.143328003 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083633679 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076896017 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070452871 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069333197 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071118663 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078558974 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085367941 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076883787 seconds)
  done (took 4.450246239 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.080100285 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.097542176 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074169411 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089805345 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090631354 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068567325 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070474891 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069963822 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080888408 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079088029 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067637038 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073878022 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074826291 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.07129631 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069601242 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074743444 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075168759 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069298602 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071695601 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073336502 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.07774513 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080726468 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072032792 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.06757492 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.0747285 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067562327 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.06435937 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084567536 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068505374 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.09020456 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066281453 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.07508719 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082072326 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068924668 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067953513 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068084202 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067689748 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067506934 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069472103 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066752632 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066459216 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057934024 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066780238 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079188473 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074318107 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056753728 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072491412 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072962878 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073078379 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065585224 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071498252 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070832426 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071305232 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074815232 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072591429 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073133311 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068872578 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065694354 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075974757 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067564261 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064994687 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066238127 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072010479 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065818598 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075355573 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071961195 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066032537 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067143724 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069175395 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.074050391 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.06776289 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.07048326 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065370158 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069548123 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072134511 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069453471 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068628991 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066469638 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067446414 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067923429 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055662018 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067884226 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053624402 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.07052671 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065825399 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066000566 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067739988 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072332782 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080097989 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068776731 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073402277 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068518659 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.06814951 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070540815 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.06060733 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070634979 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083215872 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082208378 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067604223 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.06562237 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081931065 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072320289 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066798884 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056477997 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075304 seconds)
  done (took 9.200196057 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.089701636 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069916358 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083522025 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.091179363 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087055888 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075235304 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077279666 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069809499 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.082487149 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074030376 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077109328 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.069371986 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077749844 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077091874 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.07034028 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077673739 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072309744 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.08303721 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082574475 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068460607 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076440191 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080437787 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089931637 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.080482805 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.078908821 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.080612462 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089718898 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.072369637 seconds)
  done (took 3.946224585 seconds)
done (took 38.074016034 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.768871367 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.948297736 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.770016914 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.158310119 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.975763027 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.787527672 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.893917342 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.762662439 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.012914635 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.802985931 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.009580365 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.818075303 seconds)
done (took 65.416896386 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.85076966 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.902576041 seconds)
    (2/2) benchmarking "String"...
    done (took 2.059979802 seconds)
  done (took 5.665690385 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.073850716 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.302297484 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.011635955 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.763479269 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.770253049 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.072712731 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.568069216 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.289760227 seconds)
  done (took 30.485114824 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.859833755 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.995389114 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.470035401 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.465211139 seconds)
  done (took 15.541345483 seconds)
done (took 63.39904946 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.784952481 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.811207397 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.794205842 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.751819695 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.823949155 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.782164029 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.849753964 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.959984557 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.76525653 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.752785523 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.76623027 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.201097013 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.76643023 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.877581603 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.766685852 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.763722702 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.775078308 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.195686398 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.922472288 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.771087366 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.782987901 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.8005323 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.767227933 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.76846406 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.820567081 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.76537479 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.184042071 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.778422276 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.390400242 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.770447426 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.795087943 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.013504607 seconds)
  done (took 204.226823432 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.765894596 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.765766647 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.849613947 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.803466793 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.253150649 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.946082458 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.885528024 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.314255618 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.76985153 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.796415433 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.033375108 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.766774667 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.051247771 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.71632702 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.814727131 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.766081777 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.038224563 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.07239314 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.819086402 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.938417313 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.786020057 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.913278211 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.879200036 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.021350513 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.807052299 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.778523429 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.913159219 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.780818207 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.959703326 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.017047783 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.785163598 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.80748003 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.001151062 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.640232167 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.767675568 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.786553518 seconds)
  done (took 170.520124656 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.931664401 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.767379886 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.767183284 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.76789299 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.779470076 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.766768459 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.89182591 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.892699048 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.231625255 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.173589337 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.819570062 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.607167884 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.768667943 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.834274437 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.778974384 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.768915559 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.782978076 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.795138481 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.769087975 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.767578164 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.892512554 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.780606461 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.956340913 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.77666565 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.767824652 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.77360208 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.138849165 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.768555781 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.77360387 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.031508379 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.76920033 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.769023734 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.668342116 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.655480675 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.859732833 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.770755827 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.773751568 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.768298671 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.769328109 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.989010267 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.769905538 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.769185811 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.769708437 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.772761623 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.953559816 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.771252335 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.897350824 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.770819046 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.271691906 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.770572962 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.771222694 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.707272509 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.470971606 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.770776435 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.768707746 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.772945424 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.769519959 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.768715216 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.776101538 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.626206667 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.843789063 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.772087225 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.773780275 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.77535599 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.770446007 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.852339383 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.770710611 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.799483431 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.832449325 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.984588889 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.892875085 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.771954753 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.837701796 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.866514791 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.771072583 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.770467616 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.770705771 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.770632236 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.770231214 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.852829984 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.770785665 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.899884093 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.779533996 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.773341004 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.821959474 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.771288515 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.839739672 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.771105401 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.663600072 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.773388454 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.771609151 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.106813696 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.839784569 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.772418534 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.771178675 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.771536141 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.902982364 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.894496928 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.552170154 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.773888406 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.472798421 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.773221067 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.911990496 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.773591432 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.961347649 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.774160233 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.854887133 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.776663566 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.773454218 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.772117303 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.8037203 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.774780484 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.830699473 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.771817426 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.142751788 seconds)
  done (took 402.065230765 seconds)
done (took 780.505115893 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.430059195 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.39525759 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.514711517 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.414849263 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.394764016 seconds)
  done (took 13.863436881 seconds)
done (took 15.575521187 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.860142429 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.86622535 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.799407992 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.864303474 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.794627891 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.863585935 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.844020468 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.798740172 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.832050279 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.799374469 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.831310606 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.799108674 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.787603471 seconds)
  done (took 25.454849506 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.010228453 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.019393013 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.846277942 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.020278815 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.823359337 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.008141007 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.940836606 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.928358951 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.932117975 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.799484826 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.788550528 seconds)
  done (took 22.83424312 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.020023725 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.019195312 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.849349878 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.020023237 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.823987014 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.017935532 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.945422552 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.930786598 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.931976853 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.789683371 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.787473831 seconds)
  done (took 22.851446041 seconds)
done (took 72.853176636 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.781544132 seconds)
  done (took 3.497719411 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.805469914 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.944745723 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.788222715 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.784672097 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.783069128 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.782725825 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.784505783 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.781675012 seconds)
  done (took 16.174221227 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.782863117 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.783194359 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.782454223 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.78358914 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.782231582 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.780405339 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.783565076 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.781599273 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.780874423 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.781640028 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.780740544 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.780548501 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.783765223 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.783675807 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.781295324 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.781284073 seconds)
  done (took 30.231530524 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.782561188 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.781288336 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.781000704 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.781333403 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.781905764 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.782168153 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.782769559 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.781070344 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.780718507 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.781959059 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.782257039 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.781680749 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.783157357 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.781437303 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.781863226 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.782503442 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.781263205 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.781863258 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.78772123 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.781693503 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.783407179 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.781438262 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.78253959 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.783861823 seconds)
  done (took 44.494229415 seconds)
done (took 96.112599921 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.690142065 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.224934514 seconds)
  done (took 8.633836994 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.78502693 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.784627768 seconds)
  done (took 5.330041826 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.784863736 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.785888243 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.78428609 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.784634466 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.785852662 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.784281207 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.786241191 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.785624047 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.785969745 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.785929482 seconds)
  done (took 19.572038207 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.785471793 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.78670315 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.78262229 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.784773565 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.785440606 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.783508271 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.785613951 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.787016668 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.786305079 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.783701743 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.785670755 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.783772243 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.786386949 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.783036678 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.78680296 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.784589117 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.783603213 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.783741827 seconds)
  done (took 33.849331205 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.786536768 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.785887674 seconds)
  done (took 5.293660752 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.783317842 seconds)
    (2/7) benchmarking "second"...
    done (took 1.784061802 seconds)
    (3/7) benchmarking "month"...
    done (took 1.784123138 seconds)
    (4/7) benchmarking "year"...
    done (took 1.78324082 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.783783926 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.784171721 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.783028936 seconds)
  done (took 14.206222399 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.786897241 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.948322495 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.018771485 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.447836574 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.788770531 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.79001376 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.730759376 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.790499088 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.792083102 seconds)
  done (took 19.815461296 seconds)
done (took 108.417968089 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.595609177 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.78364345 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.145645581 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.839611815 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.847934493 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.123927221 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.797733213 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.000470605 seconds)
done (took 42.854598936 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.78789632 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.337858574 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.364814319 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.464044334 seconds)
  done (took 12.889041535 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.770672536 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.333115167 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.823800027 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.382316452 seconds)
  done (took 20.079497506 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.151706654 seconds)
    (2/2) benchmarking "read"...
    done (took 2.143338226 seconds)
  done (took 6.02211217 seconds)
done (took 47.500876253 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.785254027 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.788984356 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.789107051 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.788017465 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.788817659 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.786176228 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.788397363 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.785470832 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.787093576 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.790439693 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.788644985 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.788280811 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.788902554 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.787906394 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.786051397 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.786326035 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.785737968 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.788802172 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.786477727 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.787184471 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.78717632 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.789533293 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.786394947 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.787904797 seconds)
  done (took 44.626596606 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.790001996 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.788340016 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.789661644 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.789888339 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.787929987 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.789211739 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.790166223 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.787162311 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.790507492 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.790165757 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.787631812 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.788031058 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.791343709 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.788226349 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.790497775 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.788386429 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.790309405 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.787139749 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.790971238 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.787941161 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.7900416 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.788450973 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.787617939 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.791089364 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.787627812 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.787873421 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.791027599 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.788550737 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.79103753 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.788493913 seconds)
  done (took 55.401018516 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.795085553 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.799148677 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.790620781 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.791541718 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.791488328 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.790892198 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.790647365 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.791126093 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.790802647 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.791639797 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.790633758 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.791316499 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.791570441 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.791262319 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.791765708 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.79211073 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.792128493 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.792412722 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.792849339 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.79205592 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.792142359 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.792446686 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.791949666 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.791968903 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.792495514 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.79296068 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.792813117 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.792398231 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.792444088 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.793672308 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.793397939 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.793142201 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.793723011 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.792718357 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.793558647 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.793345871 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.797448239 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.800952835 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.793188075 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.79355414 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.793395901 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.79278842 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.792851046 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.794081843 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.793667383 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.793787746 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.794175829 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.793079635 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.79335358 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.7938818 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.79374426 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.79394617 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.793914106 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.794031163 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.793415856 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.794676991 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.793907578 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.793636176 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.794570284 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.794773179 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.794490888 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.79388249 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.79469788 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.794845905 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.794898656 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.793925807 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.794071028 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.794357625 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.794248147 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.794838294 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.795344844 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.79462922 seconds)
  done (took 130.850111849 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.795144896 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.792656228 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.793202866 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.793109981 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.792189704 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.79460858 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.793174988 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.795493774 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.792764743 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.79546988 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.795798964 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.794077777 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.79316123 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.796922622 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.795275329 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.79391187 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.795554264 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.792655462 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.796349691 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.796318453 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.796032453 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.793819417 seconds)
  done (took 41.207664516 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.796286585 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.795528442 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.793717823 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.795734406 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.793292403 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.796815099 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.79675746 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.79799609 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.796136769 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.794014727 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.794358951 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.796498343 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.793502893 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.794423707 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.794276068 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.794416541 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.797584315 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.794181336 seconds)
  done (took 34.045975634 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.79484202 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.794104546 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.79783119 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.794589779 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.794739891 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.796558652 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.794350183 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.797206174 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.796437044 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.79566747 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.797854039 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.797716544 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.797982747 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.794558918 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.797639663 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.79687245 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.797956679 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.795267142 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.798390326 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.795608714 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.795223756 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.798578107 seconds)
  done (took 41.251474642 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.798558155 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.7988201 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.796354424 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.796020425 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.795405975 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.800751657 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.798194477 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.795622966 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.799196746 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.798519962 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.795422473 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.801471777 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.794708794 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.796068078 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.795441824 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.794664392 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.801947474 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.794966445 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.797417881 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.794053583 seconds)
  done (took 37.676813336 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.797192106 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.799990043 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.798018489 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.797458383 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.797347552 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.798430341 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.799823219 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.795166037 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.795532766 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.797705067 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.796273845 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.795045298 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.798049408 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.796781004 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.796185007 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.796329603 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.795564121 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.79660315 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.797444167 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.796587653 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.796526445 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.796396508 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.796780243 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.79983599 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.796159173 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.797085919 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.796669397 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.796740591 seconds)
  done (took 52.049984277 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.797047927 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.795487738 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.794498923 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.793737474 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.794950624 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.795574662 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.788785719 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.788329702 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.791211861 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.787766646 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.790522775 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.795763855 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.789277948 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.790197065 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.789994009 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.789597489 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.794243224 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.787561081 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.786543098 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.787456716 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.789552475 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.789717846 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.791885307 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.785790588 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.786188915 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.789465427 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.7864773 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.786262132 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.791850184 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.786518988 seconds)
  done (took 55.443496163 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.807516528 seconds)
    (2/2) benchmarking "in"...
    done (took 1.807070356 seconds)
  done (took 5.337087065 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.785799256 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.789350609 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.789358266 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.786273854 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.786994811 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.789911129 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.789220871 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.786661642 seconds)
  done (took 16.027030512 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.789648808 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.789924365 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.790155859 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.789642759 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.789672408 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.789860789 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.795131536 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.790742325 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.790693414 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.790387107 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.7971012 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.798461778 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.792960174 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.790299235 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.78984677 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.792202768 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.79003608 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.790363179 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.790595163 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.789914404 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.7909839 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.792843975 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.790969767 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.787613346 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.793271625 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.800276088 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.794236881 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.791029507 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.790752825 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.794702517 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.790579605 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.787740804 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.791638956 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.791641901 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.79051236 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.792765782 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.799033902 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.790724487 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.79680992 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.790343411 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.792006539 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.789486452 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.791462551 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.792750189 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.792548268 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.792013662 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.794120618 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.78883227 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.791310264 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.794543009 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.796621386 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.790282284 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.790933782 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.795480405 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.792909932 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.798064397 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.791636723 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.798384239 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.801229322 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.801701157 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.804675941 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.800240695 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.79347965 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.798182752 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.802931982 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.816689296 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.797305455 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.788694987 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.791408391 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.792764497 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.798208594 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.806374867 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.803021875 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.792628157 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.794242267 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.792612111 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.793459671 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.793238287 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.799221538 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.79576941 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.793095155 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.793356117 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.803019264 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.817860848 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.792499115 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.793025726 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.792583878 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.793583098 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.79569642 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.804156691 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.793107847 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.793100778 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.793076404 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.793633417 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.795287672 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.793886666 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.792754237 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.794147229 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.790483292 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.794416006 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.793886219 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.797417492 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.803323678 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.793696589 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.793345834 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.800407513 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.793995507 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.793996188 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.800417721 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.793864673 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.794352756 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.795598579 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.801480265 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.79232979 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.798901238 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.804009168 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.794827096 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.796883242 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.795131269 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.794362661 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.804790794 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.823352378 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.79613296 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.79429961 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.800866573 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.807474958 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.796185101 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.798951827 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.795965478 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.793623007 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.793268877 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.797336853 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.796887497 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.797748286 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.795538309 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.796914079 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.793778 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.796271511 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.795731688 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.797897666 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.797348678 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.796723905 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.798547639 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.799689951 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.796670138 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.798452295 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.80381954 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.799345341 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.798166854 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.797904633 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.794074472 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.796751817 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.797965701 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.796745729 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.796788646 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.796994143 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.797305572 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.797003491 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.796450253 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.797840209 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.797209359 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.79914771 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.802579259 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.798035873 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.80076641 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.797796317 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.794813218 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.797100774 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.797877647 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.797860448 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.797482584 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.796711796 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.802323707 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.805946095 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.797582347 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.79744609 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.800927637 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.798175714 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.798294849 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.798367429 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.802518888 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.807732491 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.798425761 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.805303233 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.799768041 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.798275138 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.799868281 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.79885992 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.800863823 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.798631706 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.802486599 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.807568874 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.812290237 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.808141717 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.800901522 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.803784074 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.80172237 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.803200493 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.802612429 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.799536448 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.799693104 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.798471614 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.79915719 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.800050844 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.800642298 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.799413671 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.799092159 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.799705279 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.799357003 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.799118427 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.799527627 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.800901629 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.801278509 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.797310739 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.800081537 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.800070996 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.799559792 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.796943396 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.799654682 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.800508704 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.80064775 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.800349327 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.806717879 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.798865238 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.805775618 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.800217571 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.800166448 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.79885669 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.798780934 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.800854278 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.800209099 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.801795324 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.795715011 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.79632622 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.801535221 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.803956814 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.794069876 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.797682024 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.795425863 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.791629007 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.798930904 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.806287407 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.795404578 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.79479442 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.795761796 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.794610396 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.797649637 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.801269349 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.791950958 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.793853289 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.793376731 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.794929158 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.793947417 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.795502725 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.795158594 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.796347029 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.796130479 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.794818047 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.795582763 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.795407942 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.794579127 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.794434311 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.794186672 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.799291922 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.803503523 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.798529016 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.794547797 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.796703884 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.796079309 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.800151085 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.795117518 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.795080728 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.794865524 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.807253431 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.8055654 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.801299064 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.796370748 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.794808251 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.79917814 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.79588714 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.800381591 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.794932377 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.796093864 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.79543849 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.794747371 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.792481947 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.79620965 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.795402157 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.796909143 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.797115301 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.800169134 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.795648881 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.795783365 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.796003849 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.796753343 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.795623784 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.795714482 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.798629125 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.798039888 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.798972353 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.796036981 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.796460823 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.804452508 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.796136834 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.796594938 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.795914167 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.796725926 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.79535601 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.800037144 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.794948513 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.798822397 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.804083454 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.799097164 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.809097884 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.797199492 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.803866495 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.795132492 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.798964607 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.80300046 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.79381579 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.793541172 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.795598928 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.79499068 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.801064746 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.798219229 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.795349663 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.799111677 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.794768105 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.794626674 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.793876301 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.796654018 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.79361835 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.793364221 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.801907009 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.795364424 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.802875863 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.795982734 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.791080404 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.793533339 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.793230624 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.792111921 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.798720143 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.793087325 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.794203375 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.792480149 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.793421175 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.792757578 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.795971902 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.791511018 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.789717112 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.792174357 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.798199084 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.797088867 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.79442993 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.790587797 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.798074862 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.790215494 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.796819164 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.794339428 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.790537739 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.78979544 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.789428579 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.791214226 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.794011932 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.791574677 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.789735537 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.790760935 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.793852791 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.78965604 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.794271417 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.790765557 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.789226858 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.791438161 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.800095701 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.813486126 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.792100177 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.793491705 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.786438645 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.79159872 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.794446528 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.792706211 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.789276611 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.792196072 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.799174502 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.797173244 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.790107324 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.790396636 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.790513676 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.789297325 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.789199045 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.789168665 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.790879598 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.789287164 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.78951234 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.789434774 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.79172362 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.789076499 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.79143049 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.789784868 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.790498811 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.798553702 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.788743103 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.793691055 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.788851716 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.788303309 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.788585388 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.789059967 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.788962773 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.79195893 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.78855534 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.789705543 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.796141744 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.795390018 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.792030142 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.789816941 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.788052522 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.787684098 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.788434721 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.789013938 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.790916348 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.78768318 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.788971916 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.787593094 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.788302207 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.787912673 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.79002332 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.788936941 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.78730775 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.790873058 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.794892851 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.789678473 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.784078541 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.786879618 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.787001234 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.786147507 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.78760475 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.795785671 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.790466123 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.798184064 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.796122101 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.791607202 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.787745525 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.792329356 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.795449021 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.786503914 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.788352591 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.787613808 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.790431785 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.787598093 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.790186066 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.787974485 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.793054027 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.787475724 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.787459123 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.795183046 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.788765419 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.787662329 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.788467515 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.795176271 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.786826931 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.783917192 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.786804905 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.786191928 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.793515094 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.793827141 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.788024931 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.789931309 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.786483652 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.788522731 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.791833819 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.789665118 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.787274098 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.784171256 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.78795819 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.78771046 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.788544123 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.783509633 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.786904729 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.788027525 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.789576178 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.793642709 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.786033666 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.788353741 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.786695935 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.78715303 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.786920299 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.788719709 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.783864271 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.783187519 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.786733901 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.78540763 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.786700906 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.79200907 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.786196062 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.788696931 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.787168685 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.786803367 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.789350645 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.800407366 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.793124363 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.784982527 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.787551839 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.787312266 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.793344136 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.787455903 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.786960461 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.788215493 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.788822783 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.786777141 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.792391706 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.787042493 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.789596001 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.801470206 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.787023649 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.790531435 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.787628533 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.789687083 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.787269951 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.783973311 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.786570059 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.793738084 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.788900467 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.793330433 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.786675226 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.79281947 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.78733512 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.786243882 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.788867819 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.788726135 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.793438929 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.78876275 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.786978838 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.784850246 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.788258185 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.798461 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.784413857 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.79325998 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.814376341 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.786239519 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.785986168 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.784797442 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.784864967 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.786514222 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.78938279 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.785574344 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.784827974 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.784931843 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.785788358 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.792954648 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.791128549 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.787699324 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.787071967 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.785832049 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.788728923 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.78644026 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.78265193 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.786227727 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.785113269 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.785139651 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.787387076 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.786655905 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.786113984 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.797761861 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.794030681 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.785904937 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.788235392 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.783868934 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.789476554 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.788457505 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.794046128 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.795053441 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.787243641 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.787181356 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.788895847 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.787193509 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.783816552 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.790058209 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.787254757 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.786799474 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.784771687 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.799194733 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.798563366 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.792043304 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.787357093 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.788205725 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.787271668 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.788161745 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.790004484 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.787435682 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.787831131 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.788493641 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.789878853 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.786755444 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.791139875 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.789193904 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.792523473 seconds)
  done (took 1070.964672224 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.784831774 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.787701988 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.784932473 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.784684858 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.7847327 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.784735884 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.785202869 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.7862733 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.785359806 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.785160094 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.78514839 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.785810254 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.787664386 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.785719206 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.785543773 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.785377887 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.785947603 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.785210514 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.787304077 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.786649693 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.785548206 seconds)
  done (took 39.222009924 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.788097481 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.785114038 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.789953619 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.787772009 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.785727026 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.788255176 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.786072739 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.788571489 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.787853098 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.785421253 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.787395208 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.788541289 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.785752169 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.790653777 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.787088116 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.789743719 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.790557241 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.787808502 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.791063761 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.787476505 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.789757533 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.78836826 seconds)
  done (took 41.059815751 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.7910196 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.792357182 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.791090322 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.788605369 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.790332099 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.788170859 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.79088083 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.793283502 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.789968411 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.791615228 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.789741598 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.791511575 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.799696463 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.794302662 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.793291451 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.791490287 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.935218907 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.791746825 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.793324754 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.791521072 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.787715892 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.796545092 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.788317415 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.791142956 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.791209084 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.792280556 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.792170914 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.791386242 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.792110296 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.797518693 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.795632024 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.791941877 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.792240326 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.793074013 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.795435043 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.793593828 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.795328861 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.792700941 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.789395254 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.791635696 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.802874724 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.806936634 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.792581578 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.798016341 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.793068083 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.792601537 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.797245298 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.797281381 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.789459691 seconds)
  done (took 89.726746169 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.792473211 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.795618828 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.789793687 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.792094926 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.792965476 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.79256735 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.792398116 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.795523585 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.789865009 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.790436854 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.793396499 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.791729347 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.79462814 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.795386524 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.79516032 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.793000299 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.791230969 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.791542673 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.796211351 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.79144 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.791697007 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.79396485 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.79463176 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.791625241 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.795747083 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.792440883 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.791738735 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.794927649 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.791839615 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.793793652 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.794474131 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.794363998 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.794689863 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.791764828 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.792751121 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.796988818 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.794661264 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.792109509 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.795069595 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.792549928 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.798626677 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.794025527 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.795423884 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.794716254 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.791174624 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.791510049 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.794899671 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.791443253 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.791352948 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.793741238 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.793843356 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.793757897 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.794413073 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.792585822 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.795226679 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.795036558 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.79223967 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.793272052 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.795083782 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.792051784 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.792532691 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.794496423 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.792794663 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.79665044 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.794443319 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.791836933 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.792569744 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.795230187 seconds)
  done (took 123.683576391 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.795354849 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.796343061 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.795215739 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.796360945 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.795755672 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.798708489 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.795730377 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.796108329 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.796401137 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.796239566 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.798975476 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.796322111 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.796756629 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.796486074 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.796340282 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.796672556 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.799491482 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.796961883 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.796597485 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.796829391 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.797226271 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.798265082 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.796369425 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.796271703 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.797350824 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.798259853 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.797241859 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.799381083 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.797848602 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.796789765 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.797113624 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.796589828 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.797622568 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.796846492 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.797594019 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.797495465 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.797809546 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.797873729 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.798805481 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.798129452 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.797894015 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.797629544 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.79731359 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.79863855 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.798050385 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.797787567 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.798032449 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.798703817 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.799048586 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.798269227 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.798077765 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.79884261 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.797869661 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.798809904 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.798684366 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.798215528 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.799197637 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.799637992 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.798091519 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.797948855 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.799053882 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.798585848 seconds)
  done (took 113.183392046 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.798781246 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.79897986 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.79568548 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.798434699 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.798867629 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.795832532 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.798651467 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.798348658 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.798373384 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.800086707 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.799031908 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.795927771 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.79559327 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.798360795 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.797177945 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.796426387 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.7961201 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.796361691 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.798264681 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.796701711 seconds)
  done (took 37.685046961 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.79672175 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.79926539 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.795409123 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.796345236 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.804140948 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.797159069 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.79907732 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.798617482 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.797149121 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.799210155 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.800431122 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.798425619 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.79716407 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.796341067 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.800204353 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.798937223 seconds)
  done (took 30.509173077 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.798084274 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.799927718 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.800199702 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.800107578 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.800277586 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.798135905 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.800773911 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.797785158 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.798022796 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.801061886 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.802621139 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.800197611 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.800626476 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.800944789 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.798305836 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.803892263 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.798799764 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.798497417 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.801792277 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.800624384 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.798988835 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.80015775 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.800844993 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.800809771 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.79867032 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.798900144 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.802030857 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.798358137 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.798576185 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.800903984 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.798907552 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.799593705 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.800899898 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.7987667 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.802391569 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.798705965 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.801737919 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.803317273 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.801504312 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.802236194 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.801478092 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.799331606 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.802024292 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.806241986 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.799332208 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.801648842 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.799598649 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.799925689 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.79957414 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.79993426 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.802598538 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.802598575 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.801603715 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.802533236 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.802761618 seconds)
  done (took 100.76440596 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.802940959 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.803005672 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.800351653 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.801906255 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.802522409 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.800715897 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.802467258 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.800651701 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.799912339 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.803467747 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.801124754 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.804260166 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.800531014 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.803920124 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.802040346 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.803069415 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.801137202 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.801020653 seconds)
  done (took 34.172754418 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.801236133 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.801319141 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.803429027 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.8008661 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.800577252 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.803788475 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.800823921 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.806838638 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.802994416 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.801542426 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.801294818 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.804060154 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.80501812 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.80402711 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.801303926 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.801438053 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.803354316 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.80343039 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.803501007 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.80096497 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.803979251 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.804029719 seconds)
  done (took 41.39729322 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.803531315 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.80445031 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.817713598 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.819850719 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.823033618 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.830690463 seconds)
  done (took 12.63717246 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.802971195 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.804796211 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.801413208 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.804934636 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.803969403 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.806659294 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.802086577 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.802270572 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.804196378 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.8037354 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.804276028 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.80433517 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.804817386 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.801922965 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.804502621 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.804729857 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.804903978 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.802550964 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.802975979 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.804974209 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.802142555 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.808933105 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.802394887 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.802247458 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.801825022 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.80283234 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.805002692 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.804361102 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.803268017 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.804637875 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.805703619 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.802657709 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.807108393 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.803886211 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.806766776 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.806486057 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.802350037 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.806314937 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.806573946 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.803344955 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.806470998 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.804801123 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.805641442 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.80504578 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.80744445 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.803529423 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.804008554 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.803306383 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.80406616 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.808572168 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.806930562 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.803944512 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.806665256 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.806918518 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.806563707 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.810046983 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.804833737 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.80428453 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.806749283 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.804871373 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.805041795 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.807525869 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.805622273 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.805766525 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.808277377 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.804999268 seconds)
  done (took 120.861594611 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.8057732 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.805196196 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.805357364 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.80619983 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.806993551 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.806514699 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.806378574 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.805435411 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.805697512 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.805801789 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.808549823 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.805250737 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.805562956 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.805704723 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.805653323 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.806066352 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.805933738 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.805071532 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.805713814 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.808594316 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.805377859 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.806702929 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.80561839 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.807791268 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.807077891 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.809180326 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.808002784 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.80646599 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.805903574 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.806104248 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.805604324 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.806578203 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.808092359 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.806808737 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.806392162 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.807134317 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.80749718 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.808226212 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.806973923 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.809006569 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.807014461 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.809220585 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.807091225 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.80856333 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.807144945 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.807309007 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.806709043 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.807745836 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.810620603 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.80857411 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.808060973 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.808778306 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.808022856 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.807949348 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.807481403 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.80793682 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.807681811 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.807866323 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.808115936 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.810356795 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.810504591 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.808432374 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.811232353 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.808715973 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.808208537 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.809931003 seconds)
  done (took 121.026714416 seconds)
done (took 2492.533441722 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.800658159 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.975525896 seconds)
  done (took 15.52142729 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.979907698 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.932257872 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.816760748 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.850421729 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.816989083 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.835838171 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.833165406 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.816608008 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.81735803 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.816698963 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.816520676 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.002558268 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.835139787 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.816660399 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.817202342 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.910374304 seconds)
  done (took 51.469172364 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.821143652 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.821584118 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.833086613 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.824376381 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.821640386 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.840543065 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.854956893 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.824817336 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.882395317 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.834353138 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.952752666 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.832777279 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.821112213 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.882276051 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.834896638 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.837039362 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.907782986 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.897368222 seconds)
  done (took 35.07769865 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.901180945 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.827681981 seconds)
  done (took 10.488664932 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.845352039 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.831980623 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.813942394 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.837764901 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.82300698 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.818887938 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.819891397 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.824762055 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.850442785 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.830072814 seconds)
  done (took 70.052241505 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.826547343 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.822520009 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.821966837 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.821018437 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.814368207 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.818486332 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.820864528 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.81872484 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.520451618 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.858927859 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.829266342 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.827401413 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.821760311 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.822984185 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.82001609 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.845727194 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.950876048 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.819847332 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.818960843 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.82846613 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.824039311 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.883547364 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.835839435 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.822616049 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.852348998 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.51626785 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.831037803 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.828889914 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.944307778 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.819595128 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.823657438 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.823328313 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.825281395 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.212075462 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.150938305 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.82408711 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.830908253 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.830810041 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.820837009 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.946621206 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.824503368 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.828210883 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.814245616 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.141320568 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.919491211 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.866074544 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.187806729 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.826501952 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.824008246 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.852915831 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.826018165 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.825337342 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.836908222 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.342944722 seconds)
  done (took 130.251305489 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.819620356 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.133128027 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.972704073 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.82035858 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.092642591 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.025608634 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.762795536 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.867907899 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.821936265 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.022791591 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.982785753 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.930435503 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.820257512 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.818921451 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.818836632 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.818252928 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.980696179 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.888555244 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.82241819 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.81997775 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.847588212 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.028991791 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.948359027 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.821658871 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.842014077 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.030732816 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.94393554 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.926744818 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.099165569 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.81801308 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.886054436 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.821736162 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.820863484 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.818493438 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.97603538 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.917908771 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.911573484 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.822790071 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.819947276 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.821020665 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.484355464 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.018570439 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.920374646 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.96454356 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.016740514 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.026401684 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.470769476 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.81937242 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.458075612 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.984040894 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.034538888 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.02792791 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.946054563 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.823468374 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.056169796 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.819232204 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.820250827 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.057664743 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.96801898 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.928804827 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.823511017 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.821231383 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.820240048 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.065501065 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.822496458 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.919659309 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.824323302 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.821277421 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.921709132 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.930902453 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.964077196 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.036595062 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.856888884 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.695923331 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.331903981 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.036632491 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.892168359 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.058932353 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.82588676 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.820826569 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.907307062 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.578700518 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.983045181 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.070578899 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.044018956 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.857911798 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.418019417 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.822705668 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.021567237 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.00982351 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.018774478 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.030462017 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.975396491 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.01540473 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.821377993 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.821906176 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.056942033 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.962459392 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.826241975 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.180067831 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.058302808 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.394160276 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.845243174 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.118383352 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.958143131 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.191858089 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.449885852 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.824350022 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.99109224 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.864244018 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.824419554 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.822747231 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.014479491 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.634004904 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.825945974 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.346768789 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.887641651 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.826366362 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.027165989 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.82712062 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.034835451 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.826867849 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.060998564 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.103967327 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.859825259 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.997964841 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.031339148 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.619911071 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.071755641 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.069668981 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.944302256 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.047995668 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.416297194 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.82730582 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.100104849 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.826431535 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.825020224 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.992684208 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.825127355 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.972227326 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.828796296 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.054006982 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.851062501 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.980496586 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.829054157 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.059753101 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.863410374 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.878722383 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.828624177 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.957575079 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.828370024 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.835868165 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.981837628 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.82711061 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.825852767 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.264981965 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.825770762 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.972662722 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.056497291 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.852068409 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.896165097 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.353106546 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.825949969 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.913193616 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.854017639 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.246847744 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.827491554 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.984649785 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.769011128 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.274956642 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.826766869 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.06828098 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.012009871 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.827786027 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.827080839 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.569174016 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.535941664 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.825629707 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.985941651 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.254636777 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.471460798 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.030460832 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.831068701 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.956144538 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.831340437 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.908763604 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.174714424 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.827425849 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.826700803 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.82708138 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.827142018 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.829809263 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.037156456 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.861541614 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.3364067 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.965340285 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.045473971 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.138799772 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.047747925 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.87399048 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.829522635 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.092299724 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.830493988 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.894283973 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.830649767 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.852892209 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.061869691 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.831175461 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.041426057 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.080277863 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.731475474 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.880181989 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.83212695 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.82936443 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.827605624 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.98096174 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.925102751 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.830991471 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.829744498 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.941345894 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.958051316 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.023576581 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.422986146 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.005852365 seconds)
  done (took 888.373019794 seconds)
done (took 1202.976087153 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.829749208 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.829482214 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.816796302 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.830449782 seconds)
  done (took 29.074997208 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.836395883 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.834641947 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.837216329 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.834575863 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.836683742 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.834822837 seconds)
  done (took 12.782573819 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.038777863 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.830883121 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.83104022 seconds)
  done (took 21.468972666 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.904259787 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.246202996 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.939299097 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.280520896 seconds)
  done (took 10.139514571 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.83802489 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.837352412 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.837155697 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.837968955 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.838284588 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.840275867 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.837499146 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.837820522 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.839721079 seconds)
  done (took 18.315241581 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.273370317 seconds)
done (took 97.821255155 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.207386551 seconds)
    (2/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.197843811 seconds)
    (3/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.014604709 seconds)
    (4/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.943918249 seconds)
    (5/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.930083622 seconds)
    (6/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.125431645 seconds)
    (7/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.922524778 seconds)
    (8/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.830705588 seconds)
    (9/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.414153531 seconds)
    (10/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.127549284 seconds)
    (11/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.172566407 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.972436406 seconds)
    (13/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.918487595 seconds)
    (14/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.03550838 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.878687598 seconds)
    (16/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.856675237 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.480596645 seconds)
    (18/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.062012255 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.86032635 seconds)
    (20/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.857298219 seconds)
    (21/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.498514623 seconds)
    (22/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.023779311 seconds)
    (23/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.211401464 seconds)
    (24/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.848336471 seconds)
    (25/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.965888964 seconds)
    (26/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.985817072 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.505274659 seconds)
    (28/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.937980164 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.077793368 seconds)
    (30/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.944598994 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.8161518 seconds)
    (32/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.839660705 seconds)
    (33/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.36107323 seconds)
    (34/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.113836422 seconds)
    (35/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.431226998 seconds)
    (36/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.860063494 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.206521683 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.938228203 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.126191157 seconds)
    (40/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.922256971 seconds)
    (41/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.910919329 seconds)
    (42/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.969778438 seconds)
    (43/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.818954494 seconds)
    (44/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.987039428 seconds)
    (45/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.90794623 seconds)
    (46/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.821887121 seconds)
    (47/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 3.624161336 seconds)
    (48/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.858690765 seconds)
    (49/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.140941278 seconds)
    (50/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.48866424 seconds)
    (51/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.166254225 seconds)
    (52/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.071119008 seconds)
    (53/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.967013383 seconds)
    (54/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.200238249 seconds)
    (55/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.998554424 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.882980243 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.930233634 seconds)
    (58/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.818832529 seconds)
    (59/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.944576846 seconds)
    (60/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.750227947 seconds)
    (61/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.978303421 seconds)
    (62/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.918543893 seconds)
    (63/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.132078006 seconds)
    (64/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.120231191 seconds)
    (65/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.91829796 seconds)
    (66/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.959207163 seconds)
    (67/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.834578524 seconds)
    (68/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.241861882 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.216318782 seconds)
    (70/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.948321171 seconds)
    (71/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.982791111 seconds)
    (72/309) benchmarking ("sort", Int8, false)...
    done (took 4.795845044 seconds)
    (73/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.89486164 seconds)
    (74/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.929469485 seconds)
    (75/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.74945108 seconds)
    (76/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.223931263 seconds)
    (77/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.868017533 seconds)
    (78/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.960399555 seconds)
    (79/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.112606533 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.4308093 seconds)
    (81/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.85252156 seconds)
    (82/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.112077615 seconds)
    (83/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.190265407 seconds)
    (84/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.838238444 seconds)
    (85/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.969611649 seconds)
    (86/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.073965282 seconds)
    (87/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.205826734 seconds)
    (88/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.838976462 seconds)
    (89/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.853105285 seconds)
    (90/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.023674657 seconds)
    (91/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.946063433 seconds)
    (92/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.926552291 seconds)
    (93/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.834964187 seconds)
    (94/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.978456961 seconds)
    (95/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.356430843 seconds)
    (96/309) benchmarking ("sort", Int64, false)...
    done (took 5.547472502 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.862321531 seconds)
    (98/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.861052668 seconds)
    (99/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.092223251 seconds)
    (100/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.863190505 seconds)
    (101/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.798572262 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.104646905 seconds)
    (103/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.05483545 seconds)
    (104/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.941344289 seconds)
    (105/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.978515409 seconds)
    (106/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.239263317 seconds)
    (107/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.123918207 seconds)
    (108/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.729124274 seconds)
    (109/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.868762559 seconds)
    (110/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.362944932 seconds)
    (111/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.044190177 seconds)
    (112/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.122058482 seconds)
    (113/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.943798649 seconds)
    (114/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.836550351 seconds)
    (115/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.793285219 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.053666059 seconds)
    (117/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.863322211 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.734095295 seconds)
    (119/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.910035135 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.136403534 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.997956258 seconds)
    (122/309) benchmarking ("sort", BigInt, false)...
    done (took 6.842830887 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.841295951 seconds)
    (124/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.842128537 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 8.121771568 seconds)
    (126/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.905230579 seconds)
    (127/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.475005056 seconds)
    (128/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.825356705 seconds)
    (129/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 3.342806556 seconds)
    (130/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.917692004 seconds)
    (131/309) benchmarking ("sort", Bool, false)...
    done (took 2.279175909 seconds)
    (132/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.866185751 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.117654616 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.825867178 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.885462006 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.068155312 seconds)
    (137/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.120945459 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.952026563 seconds)
    (139/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.456856879 seconds)
    (140/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.867197328 seconds)
    (141/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.942181533 seconds)
    (142/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.340520707 seconds)
    (143/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.830570928 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.681215757 seconds)
    (145/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.154052707 seconds)
    (146/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.873839754 seconds)
    (147/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.722744688 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.065094706 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.868992329 seconds)
    (150/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.934094894 seconds)
    (151/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.185982246 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.938766054 seconds)
    (153/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.844107285 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.141931443 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.134241171 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.179850723 seconds)
    (157/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.353748857 seconds)
    (158/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.681346689 seconds)
    (159/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.871630416 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.226177299 seconds)
    (161/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.106072266 seconds)
    (162/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.857869493 seconds)
    (163/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.899574836 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.947580946 seconds)
    (165/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.338147646 seconds)
    (166/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.901173101 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.170675885 seconds)
    (168/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.998588012 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.890712539 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.078851507 seconds)
    (171/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.92519296 seconds)
    (172/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.013457506 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.634545153 seconds)
    (174/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.010144723 seconds)
    (175/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.939748 seconds)
    (176/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.929623143 seconds)
    (177/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.051825593 seconds)
    (178/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.875898789 seconds)
    (179/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.827288849 seconds)
    (180/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.922693683 seconds)
    (181/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.843770044 seconds)
    (182/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.92823886 seconds)
    (183/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.976133832 seconds)
    (184/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.846555992 seconds)
    (185/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.049079401 seconds)
    (186/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.86292346 seconds)
    (187/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.905230763 seconds)
    (188/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.900132869 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.488566605 seconds)
    (190/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.908111057 seconds)
    (191/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.672904785 seconds)
    (192/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.878657528 seconds)
    (193/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.155525286 seconds)
    (194/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.950130049 seconds)
    (195/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.044691505 seconds)
    (196/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.992346461 seconds)
    (197/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.177757386 seconds)
    (198/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.928677794 seconds)
    (199/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.367888775 seconds)
    (200/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.681846943 seconds)
    (201/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.051822027 seconds)
    (202/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.868524014 seconds)
    (203/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.789649463 seconds)
    (204/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.953437271 seconds)
    (205/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.283281622 seconds)
    (206/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.968179992 seconds)
    (207/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.089138724 seconds)
    (208/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.84742815 seconds)
    (209/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 3.674217842 seconds)
    (210/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.829529111 seconds)
    (211/309) benchmarking ("perf_sum", Int64, false)...
    done (took 3.45831516 seconds)
    (212/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.853470786 seconds)
    (213/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.062660447 seconds)
    (214/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.845816324 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 3.229915494 seconds)
    (216/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.8297795 seconds)
    (217/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.916948267 seconds)
    (218/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.999578194 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.186827279 seconds)
    (220/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.156669727 seconds)
    (221/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.959656044 seconds)
    (222/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.043037847 seconds)
    (223/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.778395892 seconds)
    (224/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.862505496 seconds)
    (225/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.239341965 seconds)
    (226/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.145934281 seconds)
    (227/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.955345079 seconds)
    (228/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.248551022 seconds)
    (229/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.757976714 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.785855771 seconds)
    (231/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.127880791 seconds)
    (232/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.847326107 seconds)
    (233/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.084592221 seconds)
    (234/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.466627553 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.874560486 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.89954108 seconds)
    (237/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.085284887 seconds)
    (238/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.852517159 seconds)
    (239/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.899422747 seconds)
    (240/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.524914085 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.514190807 seconds)
    (242/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.873231394 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.856185143 seconds)
    (244/309) benchmarking ("sort", Float64, false)...
    done (took 5.665683584 seconds)
    (245/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.945283972 seconds)
    (246/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.020607246 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.098557474 seconds)
    (248/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.97642658 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.236190617 seconds)
    (250/309) benchmarking ("sort", Float32, false)...
    done (took 5.611429465 seconds)
    (251/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.881082457 seconds)
    (252/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.831066056 seconds)
    (253/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 3.929644993 seconds)
    (254/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.97757506 seconds)
    (255/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.161887092 seconds)
    (256/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.926252627 seconds)
    (257/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.233797392 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.832524688 seconds)
    (259/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.88519527 seconds)
    (260/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.975828116 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.599413572 seconds)
    (262/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.966408005 seconds)
    (263/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.870756619 seconds)
    (264/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.846848064 seconds)
    (265/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.108851605 seconds)
    (266/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.263142169 seconds)
    (267/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.830437972 seconds)
    (268/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.20849917 seconds)
    (269/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.256638009 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.54652441 seconds)
    (271/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.73260643 seconds)
    (272/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.360144377 seconds)
    (273/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.873929841 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.919935555 seconds)
    (275/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.234654664 seconds)
    (276/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.850173316 seconds)
    (277/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.950694918 seconds)
    (278/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.098931544 seconds)
    (279/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.933085862 seconds)
    (280/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.847197162 seconds)
    (281/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.250755058 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.966662144 seconds)
    (283/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.874851561 seconds)
    (284/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.765043651 seconds)
    (285/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.836126469 seconds)
    (286/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 3.467296178 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.625616561 seconds)
    (288/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.129463762 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.178420938 seconds)
    (290/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.892444842 seconds)
    (291/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.516447682 seconds)
    (292/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.977803914 seconds)
    (293/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.450960306 seconds)
    (294/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.047094805 seconds)
    (295/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.849196675 seconds)
    (296/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.93323592 seconds)
    (297/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.426425922 seconds)
    (298/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.520691009 seconds)
    (299/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.539339722 seconds)
    (300/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.218369721 seconds)
    (301/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.878715365 seconds)
    (302/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.93068453 seconds)
    (303/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.850037973 seconds)
    (304/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.235831466 seconds)
    (305/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.839720203 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 3.386645204 seconds)
    (307/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.70864619 seconds)
    (308/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.660952822 seconds)
    (309/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.163077778 seconds)
  done (took 1009.153465163 seconds)
done (took 1010.999424875 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.885604984 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.877351504 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.860025172 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.881690525 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.97360613 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.894523334 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.870989868 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.862229984 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.909020654 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.909621583 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.860956528 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.894325095 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.863135057 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.862487762 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.859654692 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.876220735 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.172260897 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.890157497 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.878647653 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.870921154 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.87928644 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.860530296 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.911091155 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.896921013 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.865443563 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.864058389 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.866717106 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.882458458 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.97442944 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.866716852 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.864537008 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.875106708 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.171377109 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.886280622 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.856673201 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.88297611 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.87586817 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.871928048 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.866000929 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.897346217 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.309110886 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.871056052 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.866233958 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.863078197 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.863691144 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.867136618 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.865341901 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.868687048 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.876856697 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.877787145 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.306321072 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.885705431 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.868628132 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.86417194 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.874322402 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.865468973 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.866551453 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.87960934 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.884554453 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.880279715 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.163904343 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.895510116 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.865550494 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.880694144 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.872200519 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.344595158 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.864814332 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.868222156 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.311100625 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.873630381 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.345608034 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.879709369 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.866302276 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.879794997 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.896967551 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.172880757 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.886582231 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.864291863 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.873566308 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.864505177 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.874004481 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.878699941 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.870250824 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.866103403 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.880181554 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.898811357 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.875982396 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.867700263 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.874912239 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.886720607 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.873993112 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.878296496 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.869563273 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.861463644 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.874877939 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.869820271 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.870255299 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.870411586 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.871119971 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.87661112 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.310873336 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.890381686 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.86295296 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.86280834 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.865552385 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.882865641 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.310014887 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.874301014 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.888274831 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.913490072 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.867818086 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.1652689 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.896581672 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.883194385 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.876116752 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.8701444 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.861927604 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.165809115 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.337664949 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.888991245 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.868639017 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.86666318 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.884435879 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.86904395 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.863925406 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.177386991 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.894829191 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.882596514 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.989759557 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.878733896 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.900071787 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.867083366 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.870691924 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.899269422 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.885451094 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.89959961 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.869904893 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.884770577 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.886128878 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.865207485 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.881273687 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.878699981 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.868968572 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.876199998 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.863037074 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.899261234 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.882167867 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.882537442 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.889681733 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.992163797 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.86608287 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.167379113 seconds)
done (took 293.358805533 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.93542268 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.862659501 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.961269318 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.864450297 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.949115222 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.949983655 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.86159871 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.862431774 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.862634578 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.242142285 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.862943011 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.862473132 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.864984301 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.861899454 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.9466378 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.864850424 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.861672352 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.205794195 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.865986174 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.934217761 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.859662807 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.862617561 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.864690446 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.247447626 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.862199681 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.865477008 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.935788771 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.864354805 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.209833775 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.865066922 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.858418423 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.211901901 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.954701165 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.893545458 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.875119377 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.863311413 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.950918006 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.878634219 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.946415785 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.946171998 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.962084168 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.89701478 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.862461677 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.861426099 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.870071277 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.867821116 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.863755065 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.894259302 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.862234888 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.863753467 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.206695411 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.876502283 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.864875161 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.864030571 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.864155908 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.89772005 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.864988219 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.867867587 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.956963722 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.867906496 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.929354037 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.248251608 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.245882684 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.866870857 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.863309682 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.864454309 seconds)
  done (took 184.05093945 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.934618093 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.952613621 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.937611275 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.873570393 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.356351462 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.942584442 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.873069673 seconds)
  done (took 15.668494023 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.874963253 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.867723859 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.917193598 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.91769244 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.868357555 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.018607098 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.868335321 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.880128929 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.865034752 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.921680217 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.869454874 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.868264664 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.874562267 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.868900846 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.91670045 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.880002239 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.98258596 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.869799455 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.869611998 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.020281014 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.86675827 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.875693278 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.926547346 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.8804765 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.870054752 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.874769362 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.451970534 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.869123398 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.865647411 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.869174477 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.865908309 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.912120242 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.869842836 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.865293521 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.867058727 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.985448172 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.869676078 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.867592096 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.869230147 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.868900823 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.870234273 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.869927939 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.869576822 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.867665147 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.869951568 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.894911798 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.87002042 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.871112471 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.869709346 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.871060739 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.921783022 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.870314297 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.867301549 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.868813001 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.925817914 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.877493395 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.872136832 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.867970668 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.870995243 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.866886762 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.021561853 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.917785869 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.870453391 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.918700586 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.870761849 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.870789445 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.871706003 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.871318912 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.925742278 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.870845825 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.919522229 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.86937651 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.030589913 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.895322137 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.871791408 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.874498676 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.875070731 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.872008193 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.865296124 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.878680399 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.86954983 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.872390226 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.877707977 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.869349199 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.870310498 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.985942871 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.982000582 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.870021908 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.885403209 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.879266748 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.870337934 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.925411273 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.872382017 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.870732972 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.924632495 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.988635417 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.93055224 seconds)
  done (took 205.853370748 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.876339272 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.880177037 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.875103413 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.888544398 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.873000921 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.871758265 seconds)
  done (took 13.068258504 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.875107925 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.874225694 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.873566542 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.872757863 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.873682349 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.873161481 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.874501114 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.874291767 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.87695951 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.873978759 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.873579385 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.873996525 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.873650533 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.873729049 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.873571693 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.872471886 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.875103482 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.87040288 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.87392647 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.874524437 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.017818971 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.873684327 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.874621508 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.87429126 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.878258954 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.873576796 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.881869341 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.87400144 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.874578147 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.880741368 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.877265984 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.874453137 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.87558225 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.88049418 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.8795789 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.875678491 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.878173461 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.876400355 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.872273133 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.876081004 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.876141063 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.87561093 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.875109114 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.876378277 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.876894927 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.880513696 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.880237362 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.884109666 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.877126806 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.875862297 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.877188323 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.875558992 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.87591949 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.876697802 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.878246276 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.881034303 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.880413798 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.876884495 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.876253893 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.877567899 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.87647959 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.876637726 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.877684904 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.881097055 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.883162177 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.877731226 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.877048325 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.880076203 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.876262343 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.876936811 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.877854218 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.873903164 seconds)
  done (took 138.041989718 seconds)
done (took 558.493478424 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.178549646 seconds)
  done (took 8.98502998 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.930283728 seconds)
  done (took 8.84494791 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.462946532 seconds)
  done (took 10.271189167 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.876890961 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.885544734 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.882452406 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.880385204 seconds)
  done (took 29.344585269 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.994360666 seconds)
  done (took 8.80327825 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.88590344 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.871789434 seconds)
  done (took 15.602259773 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.932177326 seconds)
  done (took 8.741742471 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.938290742 seconds)
  done (took 8.749167613 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.876025881 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.887274157 seconds)
  done (took 15.586143679 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.858731929 seconds)
  done (took 8.667350137 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.58958864 seconds)
  done (took 11.407760801 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.881054799 seconds)
  done (took 8.703912963 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.945113401 seconds)
  done (took 8.75526166 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.118396736 seconds)
  done (took 9.927838578 seconds)
done (took 164.19611202 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.874819908 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.875124546 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.874868457 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.873246021 seconds)
  done (took 29.307521284 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.913079966 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.913137741 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.912991366 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.922740822 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.91544037 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.913473183 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.904702628 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.904874289 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.923904507 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.915843771 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.914522565 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.915278539 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.912670467 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.905184453 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.916054843 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.915354692 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.923995507 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.91457618 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.905729753 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.916141728 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.880860505 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.924680901 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.916523669 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.880632001 seconds)
  done (took 47.693401521 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.078175169 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.950844471 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.034628625 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.935518059 seconds)
  done (took 9.810682084 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.933587154 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.93455144 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.945809472 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.984070045 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.009964756 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.944048025 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.906556796 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.902106547 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.888396306 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.934634062 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.010893409 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.94945035 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.023296104 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.880688487 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.061320496 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.881963843 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.880741241 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.932758065 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.984817562 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.005179395 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.881760956 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.934437451 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.936892988 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.950944945 seconds)
  done (took 48.510744107 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.879891528 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.889847439 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.886382569 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.880967982 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.880502834 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.880777035 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.888137786 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.881847115 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.902419252 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.881689005 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.880383462 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.882434202 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.880016444 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.882095589 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.881356801 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.89452136 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.894654862 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.882531756 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.885896374 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.888612702 seconds)
  done (took 39.517488494 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.874808504 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.730644575 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.229151982 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.132547332 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.876126866 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.879550527 seconds)
  done (took 31.536217205 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.896185272 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.888074445 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.883271173 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.939201325 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.021714144 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.891742527 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.883275406 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.892595788 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.928894244 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.949326311 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.902170992 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.910334382 seconds)
  done (took 24.800039997 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.878275932 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.879509539 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.878349661 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.895603973 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.894321175 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.890544801 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.891243831 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.877688371 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.897457744 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.902538558 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.892134271 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.896069479 seconds)
  done (took 44.491876375 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966340458 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.922342292 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.932321959 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.571756861 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.256623947 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.089952659 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.492844687 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.218522079 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.882027813 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.151672565 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.06107034 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982815972 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.135170955 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.37966882 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.913914704 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.350540898 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.182643915 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.09697404 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.90673147 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.640834724 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944403821 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.062888278 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.752678492 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.93971098 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.09083067 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.008283995 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.139720675 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.879095791 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018160256 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.919469475 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890743361 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.88021905 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.15345671 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.265304047 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985111303 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890038178 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.49926807 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.593357104 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.869450352 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.692043308 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.739711119 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.020490188 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890835718 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.880280113 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.816090429 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.120901384 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.264210471 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.885817418 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.59195288 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.879995621 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.892389309 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975216126 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.884765996 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.697858751 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.80043093 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.882953176 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.878079791 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887304233 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.455856393 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.079831355 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.079131451 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.858264939 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.973807149 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.725872637 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.292383348 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.033859588 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.885335485 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.885543835 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.816862592 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.641084056 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.93975819 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.211647916 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.903566475 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.533563599 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.204056292 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.123219283 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.825352369 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.160747445 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.417586192 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.857518414 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.110348757 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.883011272 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.818999967 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.828214834 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.817511507 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.159141775 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921264295 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.670608275 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.925530733 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.220653046 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.894400621 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902298426 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907572235 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.108091042 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.76847371 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.883534102 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.921794885 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.029115941 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905774181 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.220720425 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.818485898 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.8876081 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.140115242 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.095012176 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.960933821 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.387939226 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.054113291 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.456761667 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.938663156 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.057779088 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.933294907 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.157265458 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.94416605 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.089918882 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940962133 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.885772541 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.195283629 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.486937861 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.023466014 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.124219116 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.012655509 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.214857009 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.915002158 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966977014 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.895306756 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.885040887 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.727964829 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.439730312 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.886362367 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.888394927 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.963116908 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.933955471 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.885418013 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.834775675 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.513449517 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.105679007 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.900791706 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.109926964 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.46987304 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.199773925 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.821274419 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.216226455 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.942057328 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.110150348 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.542455273 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.97628171 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.148047694 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.96330306 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.003356604 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.937192706 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904723827 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984831587 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908725346 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.05393723 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.181155702 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.889791262 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.889906494 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.748626931 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.924597488 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.895325642 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.892275763 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.639667194 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.172970935 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.914049049 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.894313321 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.777142721 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.90143442 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951935676 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.893391159 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.898570176 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.428054479 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.600466684 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.895021087 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.474707589 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.114234684 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.898805635 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.724011976 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.00539444 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.976018618 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.172337941 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.948990435 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.822134232 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.600921869 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.581169431 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.889146069 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.823304218 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.889025488 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897644163 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.900614751 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.086918855 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.168425872 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.93578667 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.657410623 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.932920683 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.900391159 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.894168864 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.888958983 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.40020336 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.096919005 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.086862115 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.939223294 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.033613322 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.90391114 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.826357267 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.893326313 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.894669604 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.890136295 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.889343636 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923152286 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.659942878 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.272868695 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.15051941 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.499629862 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.904147373 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.715865372 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.950026097 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.889101018 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.710991695 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.233676418 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.923325945 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.021003977 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.901277876 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.732051718 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.600114508 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.461709752 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.207449645 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.210485865 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.352870375 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.110154098 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.923383949 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.230603487 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.826850408 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.449824555 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.95108803 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.2396911 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.836113064 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.979444676 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.547788981 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.247485839 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.909491524 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.119601655 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.296736509 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.779454503 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.051873988 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.103789579 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927871006 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.045615289 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.85799945 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.417033475 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.034605659 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.719414014 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.115274644 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.23252402 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.747811969 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.03433541 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.89204455 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.603109526 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.984676873 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.603227536 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.064188365 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.094918513 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.978547116 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385894917 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.900054833 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.119427731 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.25183351 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.059049373 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.022166698 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.830221954 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.904430595 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.903973972 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.896182167 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.893205125 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.760373423 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.149983345 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.90538113 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.829328813 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.019452638 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.195357469 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.802790336 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.900861151 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.893763268 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.231324642 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.441253269 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071158022 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.001006258 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.417674243 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.901968054 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.831182305 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.830199951 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.588460066 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.901215569 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.870738313 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.108562817 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.000525591 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.812280503 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.979930775 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.146945129 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.151907706 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.910091577 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.177958541 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.17317572 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.591799553 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920391483 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.996544049 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.7547703 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.02076191 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.898315843 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.132590513 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.65077732 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.122720613 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.960203704 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.853075851 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.895385884 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.11037264 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.896777592 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.921187722 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.145111647 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.620692006 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.904270322 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329271419 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.97166599 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.985026506 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.959193358 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.988949249 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.906814305 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977382881 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.907672327 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.909134547 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.907520433 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94736732 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.977927149 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.036972081 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.911950748 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994170602 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.105971503 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.423654232 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.903287915 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.183147897 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.2687722 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.229034469 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.959500946 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.898608533 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.904955242 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.833484714 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047765039 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.124563923 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.172622235 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.028684769 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.013826508 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923252004 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.720302542 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.124149993 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.142365042 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.174203361 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.794348407 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.410303468 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.941100971 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.899859722 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.9101646 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.110824584 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.128965282 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.207335121 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.047152341 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.979104299 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.271624066 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.174632489 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.900397359 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.901235631 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.490213769 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.907124184 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.733639606 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.944463917 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.959431352 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.190674363 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.91083343 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.288696687 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.922581918 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.06038787 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.673637419 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.676441725 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.192201512 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.894233973 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.964325898 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.184177891 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.298185036 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.216133739 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968097903 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.912500771 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.009827361 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048246385 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.781858209 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.901390245 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.901108108 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.950969312 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.611723948 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.912370296 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.181549652 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.214162503 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.899894238 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.786451564 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92599407 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.912225565 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.125973331 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.179293296 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.15605903 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.912588766 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.907664537 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.718176746 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.186259713 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.962270847 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.836506862 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.907058648 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002316711 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.150880596 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.922798807 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.355380401 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.613958255 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.180989089 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.904254699 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924500242 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.067961144 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.273054995 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.233371326 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.440986851 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.118897466 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.491427126 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.490713 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.206747617 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.908917728 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.07821621 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.210279796 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.90732632 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.99346946 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.944803874 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.183978087 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.217314518 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.910069018 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.791781783 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.875401207 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.245754805 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.464404108 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.842546336 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.91368377 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.965191541 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.904938973 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.033239399 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.915878951 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.790548178 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.074623262 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.691946665 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.177279417 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.910341055 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.897460717 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.754556308 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.216796518 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940710698 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.049351886 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.906892878 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.579802357 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.255492996 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.16242115 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.988605097 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.915841321 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.909469603 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.906575183 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.892790715 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.101575231 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.102852853 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.18667861 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.019453096 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.945129152 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.911666582 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.122868937 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.118125877 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.99366392 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.060303624 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.996061254 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.949769835 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.812465495 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.414547279 seconds)
  done (took 1691.679639019 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.914954239 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.922591176 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.907645417 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.942123055 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.933592575 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.94018192 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.956143994 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.00220833 seconds)
  done (took 57.36217908 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.905974008 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.10642232 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.916621034 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.907180255 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.917678864 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.907392245 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.077430668 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.918593112 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.915912602 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.917889539 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.908344487 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.906917397 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.225228609 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.931202278 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.923253893 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.893312564 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.916466252 seconds)
  done (took 75.041977032 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.909264048 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.996617698 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.939102739 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.926933477 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.866832211 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.910279385 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.718273332 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.926645246 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.90328094 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.133117444 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.544125313 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.911180602 seconds)
  done (took 90.529640392 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.909533302 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.906097152 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.905975689 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.907224533 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.903930918 seconds)
  done (took 11.37232085 seconds)
done (took 2203.488137679 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.151881087 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.125208824 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.137520182 seconds)
  done (took 6.096615783 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.046161545 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.093278249 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.21276386 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.218305833 seconds)
  done (took 10.406489883 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.181101271 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.283166588 seconds)
  done (took 6.296897934 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.297904548 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.898015233 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.285472795 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.891663435 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.895146003 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.892344476 seconds)
  done (took 22.51476195 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.895517384 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.897952405 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.897017045 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.89644957 seconds)
  done (took 9.41474981 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.874674406 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.576121953 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.875457598 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.888771926 seconds)
  done (took 21.041369449 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.64079047 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.651024917 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.635396929 seconds)
  done (took 9.753542394 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.438234119 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.816332573 seconds)
  done (took 9.079759062 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.168521786 seconds)
  done (took 4.013585575 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.043678428 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.220278805 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.399156603 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.438988667 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.531023535 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.613034468 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.23137887 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.156213153 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.33783536 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.356850842 seconds)
  done (took 25.174086095 seconds)
done (took 139.257007553 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.285273844 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.147738027 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.111492538 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.286723606 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.132117497 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.110668353 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.131211308 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.269739615 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.750322153 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.750140141 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.242511473 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.130530896 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.079407041 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.145421261 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.079302475 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.271202188 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.12952206 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.296700541 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.94068401 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.135535235 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.131196649 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.879271394 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.084765621 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.892959873 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.126603817 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.058149893 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.450328437 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.269124 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.085718678 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.456978427 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.05528923 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.277891286 seconds)
  done (took 172.041574079 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.655246798 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.895658687 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.8913197 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.893357777 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.497019321 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.891219616 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.889101108 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.884037927 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.147586716 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.139666658 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.881271635 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.490254157 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.885455145 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.877294451 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.889240127 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.875133236 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.276535201 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.712644785 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.890796538 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.895012558 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.899538716 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.450169623 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.898487253 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.512375674 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.295385789 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.892417481 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.861467018 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.887841959 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.868349638 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.86670257 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.873304983 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.855562707 seconds)
  done (took 209.457318156 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.852357389 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.852660159 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.849688649 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.848905817 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.863103928 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.857435454 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.850362449 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.847902162 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.423446701 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.416466336 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.86026116 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.870403423 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.860866301 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.847547847 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.863844646 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.84687738 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.852762823 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.85431582 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.850622984 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.85416278 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.859106324 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.650818206 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.858212974 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.641003797 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.857007513 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.855907929 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.84975437 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.858007783 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.853104019 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.855749885 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.861171401 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.849085566 seconds)
  done (took 219.886368282 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.050824017 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.854594981 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.85600437 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.808114492 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.856028822 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.854269314 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.850797943 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.052310527 seconds)
  done (took 18.989852535 seconds)
done (took 622.230657379 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.299440238 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.131300318 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.028537058 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.879064008 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.129692614 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.912483077 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.875132792 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.939117878 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.606840345 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.943829862 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.571768812 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.893264525 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.662363823 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.898039145 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.004235248 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.933073009 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.451822018 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.538122819 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.055187315 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.922002 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.046675352 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.840694266 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.949246104 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.631864756 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.679550902 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.889713044 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.064580973 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.456852967 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.888926035 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.043235068 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.645799886 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.260646408 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.885767361 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.873308673 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.928037299 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.90906007 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.228436016 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.884464812 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.99786753 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.642852377 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.941600775 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.486713453 seconds)
  done (took 102.639146983 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.847835105 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.846657498 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.844692832 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.84599219 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.846844094 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.846333432 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.845448207 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.84582559 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.846762402 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.846478744 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.846096486 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.848003101 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.845780867 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.848389927 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.846506442 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.846118786 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.847424517 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.849646083 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.846921945 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.84583585 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.847207406 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.845828209 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.847723881 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.846355591 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.848030331 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.847064207 seconds)
  done (took 49.814828271 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.859257472 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.00078283 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.082096915 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.87633378 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.858860103 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.862087982 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.878319672 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.864359862 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.861564007 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.861294368 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.95135856 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.865316017 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.878662353 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.08129231 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.874516507 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.86054768 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.860570452 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.860739666 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.011038403 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.876626152 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.880048729 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.865353517 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.879177004 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.873851444 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.862929171 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.860819477 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.863863649 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.329356357 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.868411832 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.953956548 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.902739327 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.882586877 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.297533109 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.091093978 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.913506459 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.867955797 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.86239742 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.958603119 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.866359058 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.861440026 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.879287429 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.866653554 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.084777011 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.357635855 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.873799972 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.862372247 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.338380293 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.965919061 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.902398292 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.8729968 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.087004752 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.877626706 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.862992828 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.862132359 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.898488135 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.872415907 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.862099764 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.220004023 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.872892678 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.880006657 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.867292283 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.86227269 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.015995048 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.869657308 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.004318974 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.870364472 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.870595734 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.862676706 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.084692891 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.877013144 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.366019209 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.875399692 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.864198857 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.954773007 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.009867681 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.364566777 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.876220249 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.021302547 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.314489714 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.886743705 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.870274575 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.321170117 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.890662264 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.871093216 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.866618188 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.866478861 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.865623063 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.918375521 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.880661247 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.295731251 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.361930343 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.23518317 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.891264448 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.880064408 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.86560703 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.222747172 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.872734193 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.866021837 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.080586241 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.384524898 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.877467577 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.87326471 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.345186867 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.878464295 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.884875749 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.873678492 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.089515827 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.878597269 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.911584837 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.866221631 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.87241708 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.868350507 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.884229406 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.872428187 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.866468431 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.336661771 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.974041572 seconds)
  done (took 231.142000833 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.861767067 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.861254482 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.860823726 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.861559634 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.860257992 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.866209923 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.860352193 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.861512863 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.865459568 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.85938032 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.859136118 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.861220797 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.861085475 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.861680621 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.385155927 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.86810501 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.47260476 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.863053893 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.860173921 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.861177582 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.542342714 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.871138572 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.860768618 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.862475794 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.861422674 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.864207035 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.867830551 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.897903413 seconds)
  done (took 167.801647567 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.868577147 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.052920586 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.885556403 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.904958691 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.876822329 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.865848682 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.892272422 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.887817421 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.873074747 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.865957594 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.866440108 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.929485193 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.880223757 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.000436075 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.90028211 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.899559676 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.974780027 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.876121913 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.866991556 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.866623431 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.896418637 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.866334456 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.930080896 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.9977916 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.887026379 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.985323743 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.873934606 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.869655955 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.868475003 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.987781368 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.884939501 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.930414215 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.896809226 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.88791714 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.992560767 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.990578774 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.980707408 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.901859685 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.875399903 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.86906224 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.867754743 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.858224888 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.989147379 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.888326903 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.870853505 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.979410194 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.889825372 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.871732066 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.879425019 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.86894922 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.884269466 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.887717457 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.938429439 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.004546882 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.90598278 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.895722329 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.894566158 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.164848559 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.88030815 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.972548073 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.866567236 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.990533244 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.892474752 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.858844157 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.870034397 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.875497807 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.898959308 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.90351301 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.98026002 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.879870289 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.973861034 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.907790531 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.878866377 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.869884 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.872719545 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.989135923 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.993659933 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.907222993 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.910090522 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.90455716 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.868495237 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.871181051 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.86058748 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.888301623 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.874514968 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.987486563 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.994429106 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.880653332 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.874148132 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.87809622 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.872371226 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.897274857 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.997691221 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.907814697 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.971558373 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.94546943 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.945379842 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.885295373 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.881712545 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.872744116 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.934346825 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.88274517 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.8785988 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.209965319 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.939711697 seconds)
  done (took 202.829357713 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.335831897 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.919193403 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.919995724 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.1653818 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.294522518 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.665567198 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.911849818 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.912971492 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.941566086 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.076350437 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.9711604 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.923147956 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.896342366 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.882457934 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.908361016 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.928409275 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.909321476 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.197809039 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.025866229 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.039619897 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.886646993 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.192179353 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.226995057 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.300184484 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.935404362 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.23115466 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.596831027 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.153658675 seconds)
  done (took 61.157209344 seconds)
done (took 817.169912396 seconds)
SAVING RESULT...
DONE!
