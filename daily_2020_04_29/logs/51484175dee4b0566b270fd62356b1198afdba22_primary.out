cset: moving following pidspec: 11881
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.37842653 seconds)
loading group "string"... done (took 0.578061978 seconds)
loading group "linalg"... done (took 8.171144042 seconds)
loading group "parallel"... done (took 0.170599196 seconds)
loading group "find"... done (took 1.236727779 seconds)
loading group "tuple"... done (took 1.8906569 seconds)
loading group "dates"... done (took 1.348429742 seconds)
loading group "micro"... done (took 0.221126678 seconds)
loading group "io"... done (took 0.995617985 seconds)
loading group "scalar"... done (took 40.873004987 seconds)
loading group "sparse"... done (took 12.707979242 seconds)
loading group "broadcast"... done (took 1.018025033 seconds)
loading group "union"... done (took 14.268130157 seconds)
loading group "simd"... done (took 5.209168456 seconds)
loading group "random"... done (took 9.808473319 seconds)
loading group "problem"... done (took 1.731781603 seconds)
loading group "array"... done (took 22.700940065 seconds)
loading group "misc"... done (took 1.741927901 seconds)
loading group "sort"... done (took 3.548337708 seconds)
loading group "collection"... done (took 19.238018985 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.560793104 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.138387036 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.150132015 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.13654321 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.167884379 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.134320388 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.142420517 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.100897763 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.926065726 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.171250499 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.128193772 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.422483783 seconds)
done (took 5.568564933 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.191032442 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094522303 seconds)
    (2/2) benchmarking "String"...
    done (took 0.097192467 seconds)
  done (took 1.235852758 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.083722394 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.143920759 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.085271132 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.08525216 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.085910734 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.085003365 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.084587816 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.085556504 seconds)
  done (took 1.700157407 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.088808546 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.086653286 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.084144653 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.086590746 seconds)
  done (took 1.393800834 seconds)
done (took 5.660160313 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.808073307 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.232444714 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.20313178 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.433390724 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.151271359 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.198417433 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.66302007 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.329251528 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.20682312 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.095388389 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.130794197 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.371782505 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.146622723 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.659337304 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.093580799 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.110493831 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.158739418 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.435697022 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.086835038 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.103082617 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.111070776 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.147492208 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.104569687 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.095459173 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.171859289 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.086693568 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.162158547 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.105585907 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.084749581 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.239128527 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.193447751 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.688677663 seconds)
  done (took 10.892663389 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.115646971 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.11761297 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.087531694 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.144418489 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.113652085 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.088784997 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.094081879 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.085875737 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.109724444 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.148608824 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.10744799 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.122070365 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.082653032 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.084007487 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.099289727 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.227723208 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.096390174 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.104309545 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.086319027 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.096768115 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.126129395 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.093762917 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.09733798 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.098164389 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.14793909 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.19957221 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.116162031 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.116074576 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.083581115 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.099961802 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.135116981 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144802844 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.081799741 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080729217 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.145342046 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.111004367 seconds)
  done (took 5.176525851 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.005902293 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.169214607 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.109339885 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.152148991 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.083123151 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.128045424 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.083698342 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099563457 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.227827374 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.390039246 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.643999935 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.154582596 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130815111 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.120385475 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08487182 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.087844943 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.109836954 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.085768414 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.550604209 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.118906062 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.127375511 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.101188634 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.089554121 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.088813785 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.083399472 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.091117424 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.084891535 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08712098 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.130252515 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.092359365 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.316025546 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.142261012 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086559576 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.955178823 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.185859871 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086556863 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119518447 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.18023786 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10803552 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.157327199 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08510088 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.221424824 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.184130612 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.087105864 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.090497989 seconds)
    (45/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.083518138 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.08461053 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.10458344 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.124623462 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.140499795 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.083289846 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.085407485 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.189190219 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.081996157 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.100701613 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.182151411 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.169770994 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.081957054 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.315445369 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.110876465 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.090675703 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.083613484 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.206052065 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.134907166 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.08747058 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.085958704 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087366056 seconds)
    (67/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.083162642 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.089554409 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.380978662 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084168922 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.126842731 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.088105506 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.094892605 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.089142371 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.090164982 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092937036 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.093191292 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.108510382 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.084992593 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.092127332 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.084590791 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.083452722 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.085158573 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.098773168 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.414795458 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.085244045 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.090601238 seconds)
    (88/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.081521341 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.082701192 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.110280989 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114744077 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.082960221 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.083307897 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118198771 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084379455 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.084012263 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085086167 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.09731595 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.088048853 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.232010196 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.088828917 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.156719394 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.115363188 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.089088161 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117651954 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.098995376 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087530898 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.484635364 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.083755978 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.091336504 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.084801824 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.087302711 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.084479907 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.097401605 seconds)
  done (took 24.109344133 seconds)
done (took 42.231416144 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.269833194 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.084144266 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.08448923 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.084520779 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.084610306 seconds)
  done (took 1.743805154 seconds)
done (took 2.86308342 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.14423964 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117596068 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082378643 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.116345941 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085541197 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.119923291 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.119213593 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.095080524 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118292233 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.082134814 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.115576682 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08268355 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.082378251 seconds)
  done (took 2.495080451 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096552294 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099784877 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085625177 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098292814 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081909703 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.097934851 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.097553678 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105161976 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097540968 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088169003 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.079175637 seconds)
  done (took 2.140319344 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095956761 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099792243 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084967668 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097027062 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079128689 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.097256769 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09711087 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101496564 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097683478 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089633154 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.078587104 seconds)
  done (took 2.127228397 seconds)
done (took 7.871682237 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.09058506 seconds)
  done (took 1.189001703 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.549768503 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.655796196 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.095122604 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.118945011 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.210450546 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.126089199 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.253278983 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.098963959 seconds)
  done (took 8.382072038 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.111345511 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.097013827 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.08487452 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.087094154 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.084621614 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.086880808 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.085237713 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.084466384 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.087941801 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.084216822 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.087538753 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.086045929 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.088501897 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.088521965 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.086656379 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.08486353 seconds)
  done (took 2.601548788 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.112180297 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.111431597 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.089114136 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.090916809 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087754493 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.08746545 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.090408396 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089776918 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.087067028 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.088276706 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090760853 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.089628107 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.087335123 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079967116 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.090332164 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.091307221 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086073179 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.089446744 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.090446826 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090832763 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.0906692 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.080012194 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087652199 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.089349619 seconds)
  done (took 3.379783287 seconds)
done (took 16.662439828 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.121576092 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.08565854 seconds)
  done (took 1.312172216 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.092986582 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.095086936 seconds)
  done (took 1.301549203 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.093926467 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.080578126 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.102800516 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.092726805 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081495844 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.080639074 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.101001599 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.081115918 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.081366998 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.080884798 seconds)
  done (took 1.991036648 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081074002 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.09151001 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.084544565 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.094377188 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.087910375 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.079128217 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.086976002 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.082795392 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.091069179 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077843583 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.085629227 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.097961684 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.086060575 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.100396892 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.086424212 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083190308 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.085085929 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.081737333 seconds)
  done (took 2.681359047 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078873803 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.082236778 seconds)
  done (took 1.28054757 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.079524122 seconds)
    (2/7) benchmarking "second"...
    done (took 0.078182014 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081249897 seconds)
    (4/7) benchmarking "year"...
    done (took 0.081765836 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.07817155 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077413931 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.078434999 seconds)
  done (took 1.669759165 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.420764634 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.134208715 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.338150722 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.088620256 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.09754456 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.277081066 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.082068635 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.087424639 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.086993597 seconds)
  done (took 2.772581931 seconds)
done (took 14.133168534 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.096572812 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.10253653 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111352154 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.398521301 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.108217184 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.082761399 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.131676805 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.192783911 seconds)
done (took 2.355655001 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.233061054 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.807132616 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.502980805 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.225933348 seconds)
  done (took 2.656743846 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.35034767 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.103533348 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.074778878 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.083702463 seconds)
  done (took 1.742987785 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.083153619 seconds)
    (2/2) benchmarking "read"...
    done (took 0.085721804 seconds)
  done (took 1.295492477 seconds)
done (took 7.056724228 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080742269 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.204764943 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.105090839 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.079643155 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.082294492 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.081994488 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.079981743 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.080355563 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.079735272 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.082192211 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.081674284 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.081740042 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.081944907 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081972695 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079327782 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079429377 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.081762654 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081302683 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.07982542 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079529557 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0790164 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08151771 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.079104717 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.07950761 seconds)
  done (took 3.245879406 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.096411843 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.081270821 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.08630282 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086061873 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.083678852 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085890004 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.085941154 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.082126033 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086148098 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.083774857 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083680362 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084201703 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.083761866 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.083507532 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08392075 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.084051719 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086423455 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081808375 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084096129 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.083784385 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.086019557 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08206601 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.084146102 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.0864434 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.083938922 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084064238 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.083891735 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.081340665 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.086073673 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.083959205 seconds)
  done (took 3.674581088 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084975578 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.078893368 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079741028 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.088043101 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078897395 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.079376039 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078803231 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.079255351 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.080266737 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.07889058 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079472301 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.078272018 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078112671 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.079807764 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078894568 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.082635028 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.096606676 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078879484 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.078812952 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079134279 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.082653159 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078388186 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.078500714 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.081215637 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.079062844 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078747525 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.078900422 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078606589 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.07933422 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078683091 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.082561918 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.08347952 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.078639346 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.086929502 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.083307012 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.078922803 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.083637368 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078242723 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.078756403 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.078470918 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078824986 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.078718225 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078462133 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.087619685 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.0788725 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.079779248 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078891281 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.079771575 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079225383 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.081302734 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078358799 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.078686705 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.081014893 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.079742217 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.083994163 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.078053529 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.07952336 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.078098062 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.079387727 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.078747963 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.078995721 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078600421 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.082346311 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079334829 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.096412459 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.087823489 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.079331818 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079997652 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.079521623 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.082163117 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.080602484 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.094918102 seconds)
  done (took 6.960934425 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.101364802 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.101483894 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082127387 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.081524229 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077749609 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.079740474 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.085754709 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080034623 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081818478 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.099340263 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079865127 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.08216821 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08177455 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.083982368 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079680528 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.081732235 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.088418912 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07727309 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079530108 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.083486053 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079627124 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.085112854 seconds)
  done (took 3.007188445 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.163414129 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.083930722 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.122450958 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090552762 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085861024 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.090397897 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.085955668 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085526809 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085736173 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083660871 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08368025 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085382796 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085957143 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083423368 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083357366 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08357366 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086208237 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083266773 seconds)
  done (took 2.796249557 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.090534622 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.08194449 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.104351125 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.082271693 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.082151098 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084230209 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086415781 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.089740672 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084025478 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.081942628 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.089566758 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084504932 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.084093509 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082019167 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08396218 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082333441 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.08426434 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081930265 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088948447 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096061726 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086522788 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089640081 seconds)
  done (took 3.045865803 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094060998 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.084114563 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.097494482 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083100008 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.078187151 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079637524 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.086196486 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081497338 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.085309814 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.08340945 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08180599 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.079710208 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.083956855 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.0818804 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.084154284 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08181123 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.083821521 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081714388 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083478128 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.07663366 seconds)
  done (took 2.818040557 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.097523114 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083401787 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.082841004 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.089429013 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082946716 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082898912 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.089206823 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.08259932 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082682756 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.104111016 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.082765245 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.083463739 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.089409611 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.086940488 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082867241 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.089085742 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.091842206 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.089142994 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082755077 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082609477 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10398464 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082662793 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.089400398 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.083090136 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083029827 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082545014 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083077301 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.086926337 seconds)
  done (took 3.580839243 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081011976 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.080438598 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081019108 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.079996067 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.079204579 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.080214171 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.080020112 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.080378951 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082550289 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.079559822 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082565216 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.082100073 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082208824 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.082099617 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08179551 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.082071024 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081941836 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.079873023 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07998029 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08032845 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.082034353 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082061958 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.082121173 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.079412998 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079550299 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.082141684 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079613827 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.079468865 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082099984 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.079621627 seconds)
  done (took 3.578775386 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.088470788 seconds)
    (2/2) benchmarking "in"...
    done (took 0.086957139 seconds)
  done (took 1.327983423 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.076698907 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094374415 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078799145 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.087681857 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085355765 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.082751248 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.088692621 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085629483 seconds)
  done (took 1.826202216 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.099436241 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.090978628 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083043253 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.092362898 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.090518327 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.100144335 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.145230534 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.081697156 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.092452283 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.082239491 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.098268636 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083721874 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.091926053 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086540993 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.092444167 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09560483 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.079456465 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.085817664 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.083363736 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.079898786 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082456299 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095185184 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091893322 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.076692768 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.086640404 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.109451306 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.097820814 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.080840766 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088272973 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.093626091 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.091507123 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.075042996 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.080921911 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.081274634 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.07892449 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.090500286 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100506129 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088389268 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.094459422 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.081836253 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089899444 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.076601523 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.090119697 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.092289129 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.097732049 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.081349747 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.081937577 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.076874524 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.08249314 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.087836301 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.076807452 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086051035 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.076743677 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094016718 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.089507855 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097354882 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080163143 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.087721317 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.088689408 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.089210463 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.093338994 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.088176995 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091586853 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.081358924 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.097834046 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.091317152 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093456605 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.07638597 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.075761056 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080057663 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.095698361 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.11109981 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.091788195 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.081305454 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.081513591 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.078978613 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088824105 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082140648 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091310069 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.092766055 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.081151327 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085535691 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093397393 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086559862 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.088058073 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.087700312 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.079932081 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.083637258 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.082341043 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101525631 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.080040021 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.078520689 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.081352642 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.09627186 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.090278694 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.079843871 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081509048 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092380452 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.074799708 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.080258644 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.08091249 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086182327 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.093516772 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08330328 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.083662746 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.093595838 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.086564587 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085487233 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087048152 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.07706684 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.080388132 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.082124228 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.091762026 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.074361968 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087134127 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.08392559 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.080142512 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.091499652 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.078191378 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.079397607 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092211238 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.091301785 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.07873082 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.077118103 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.0865664 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.079839412 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.08184757 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093452393 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.07845981 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.075310211 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.075731715 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.087844375 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.079398421 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.087615916 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083826064 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087541152 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.074978281 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.078354809 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.083979198 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092402112 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.083250796 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.086314639 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.089868277 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.085954544 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.078958909 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.092787501 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.08704585 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.082094393 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.0895478 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.084098245 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.075115967 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.081778816 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.086575947 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.078768431 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.087299586 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.082409948 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087672845 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.080447608 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.0792937 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.085710192 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.08099917 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.082377861 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084795314 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.079007226 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.093855659 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.086266378 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.07494103 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.077308031 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.085573231 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.08071805 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.079369096 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.082443989 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.086869131 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.080297493 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.078293735 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.07958806 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.086987435 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087240036 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083272872 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.080882461 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.089845985 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.09732907 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.079784108 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.087521607 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.079355182 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08003468 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.080585096 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.093518928 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.090415522 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082520133 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.08665275 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.077232732 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088311475 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092380648 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.082559212 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.078610419 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.082116888 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.082640738 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.090432225 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.082781263 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.077668875 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.076421149 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08444217 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08074179 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.084971278 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.077908724 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081723328 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.084669868 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.077348316 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.084332412 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.078827764 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.093815836 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086776009 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.075420404 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.082465138 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.078564233 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.090554046 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.075386858 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.081245339 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.082492228 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.080410186 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.079047004 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.085638111 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.074143405 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092549995 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092268128 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.085330727 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.082318453 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.079626635 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091708391 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.085580841 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087914693 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.087054104 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.090238076 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094618236 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.082642047 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.086885543 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.09400794 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.080046305 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.074401307 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.091178574 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.077618855 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.077942156 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.078387162 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.078041353 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.323577333 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08982742 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.092963856 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.078261639 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.092358335 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.08283704 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.087703234 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.080770653 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.09553334 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.093417967 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.090120398 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098074687 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086875618 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.085067981 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094260101 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.084313753 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.085729275 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.085612862 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092615659 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.08476112 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.09124944 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.086796354 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.090527989 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.086271114 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.081905317 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.09033489 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.083266515 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.090405735 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094317539 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.083568936 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090247663 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.091608293 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.084334202 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091189191 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.08811407 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.086532446 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091869382 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090735052 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.089044398 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.091048947 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.079413247 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096367222 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.083069343 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.097448361 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.088573265 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.080087403 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.088925422 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.090063007 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.087259589 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.083122204 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.082795792 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.088302668 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.081588697 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.089116367 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094454927 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.083042481 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.098520944 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093983557 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088401308 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.08931338 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.087707474 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.087641596 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.084314939 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086520858 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.082369764 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.087067041 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.082204804 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.090801624 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.089139963 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.086947732 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08887148 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.082607834 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.087379525 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.083066227 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.076612033 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.084505257 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.084505526 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.081759655 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094636182 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.082331912 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.084469904 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.08128405 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083557069 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.08098128 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.079143273 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.088775401 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.089043968 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.082110118 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092553776 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.084409568 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.0879179 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097650605 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.076055587 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.080253537 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.079718208 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.08284073 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094737801 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.081740574 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.095978626 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.086953688 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.083709267 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.078714294 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.081986273 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.079899052 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.07670919 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.079590977 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089807982 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.083325835 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.079988771 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.080786625 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.087673937 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.081722453 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093447692 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.079803699 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.085520766 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.080861152 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.078153584 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.082680214 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.082805952 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.087608223 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.081555987 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.081434911 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.077580792 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.080555641 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.084498902 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.086211861 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.079622859 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.223180977 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095223246 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082822956 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.090265464 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085523368 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.077097032 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.08939672 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.081795792 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.081404465 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.083288409 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.089150168 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089081702 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.082289226 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.096786155 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.084443295 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088134188 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.081560396 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.079246651 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.080832862 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.081721185 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.08182033 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.084651696 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.082870088 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095364598 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.079744794 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.08786509 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087377477 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.085112848 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.092622822 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.082320025 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.087831794 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086863514 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.083144423 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.088350752 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.095342488 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.085024637 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089034139 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.082058684 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.087097021 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092033243 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.083757305 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.093222601 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.087389763 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.081632504 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.087432705 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.082102623 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081689965 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.081217392 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081116749 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.091957875 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.082120496 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.083931787 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.083235355 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.079112616 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.085293683 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.083153783 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094623208 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.08831612 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088293314 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.076129828 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.078905535 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.081663728 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.082527184 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.087237451 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.088099617 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091462394 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.088064223 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.085068105 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.080285309 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.095590026 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091483038 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.089398119 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.082650794 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.08909433 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.082033085 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.088354372 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.08569316 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.087052093 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082114171 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.089124624 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.087375121 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.083781605 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091844169 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.089356174 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.082473245 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.087409136 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.087323687 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.086478567 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.076931186 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.081938064 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.088111414 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090372935 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.087996025 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.081215205 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09690894 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.08204208 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.086823213 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084227084 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.080504604 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.089757209 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.076383247 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.087116829 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.081904102 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.081481873 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.076299543 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.083596512 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.08277916 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.087845367 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.083224125 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.076074187 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096206266 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.094652077 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.086924801 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.080117788 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.07971794 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.076619004 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.07657823 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.083589923 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.081377585 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.087035389 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.09584922 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.083807128 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.08297805 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.07600337 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.080194765 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087755477 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.087884068 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.216045502 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.077714723 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.085199084 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.088856588 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.093941858 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081296816 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.081712754 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089461211 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.08885352 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.08021387 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084238787 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.078909699 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.089578963 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098498184 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.082795274 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088564519 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.092267378 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09548715 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.082351013 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.076931427 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.082434649 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.088089062 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.08759111 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.082964396 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.083642452 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101771932 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088774574 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.083886484 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.080634308 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.088610809 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.084451793 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.095735231 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.082823614 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.082243185 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.093307999 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.088397641 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089234524 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.092210209 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09305402 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.087816815 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.087721401 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.080922838 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08643344 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.079495364 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.084114675 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.082235981 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.081394618 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08553839 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.088214552 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.083773425 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098602356 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.095532072 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.08390342 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.078278224 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.083824328 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.083877386 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.076437449 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.082526248 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.07944666 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.079705404 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.080349473 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.080473904 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.087587179 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091070537 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.08544528 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.08201975 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.081324396 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.076476705 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.090991756 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.088579787 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087596409 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.078813996 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.082026442 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.081538417 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.089595421 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08390158 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.080194811 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.08782074 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.087408559 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086827297 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.076814519 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.093270248 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.080557454 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.088093007 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.083943054 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.081406503 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.082157127 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089285775 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085314176 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082610158 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.088936212 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.088466681 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082451711 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.078919854 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.078625305 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.090724689 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.079039462 seconds)
  done (took 52.685112767 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.11450905 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078660915 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078067747 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.078214549 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087419343 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078656465 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07774233 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.078726281 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.079003335 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.080269604 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078175022 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077884244 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.08554166 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.093047249 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.088486928 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082110941 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07798358 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.078675162 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.077327691 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07921562 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.085863869 seconds)
  done (took 3.038662576 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.086670169 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.091062972 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089629351 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.097743027 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086898603 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.085700473 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.090613605 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085855796 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093779519 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088499595 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.093914766 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086043238 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.088787516 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.088161484 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088453073 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085871186 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.093816517 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086961376 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.085485762 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.090566705 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.085559665 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.090751864 seconds)
  done (took 3.222830656 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.080921007 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.081665663 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.088668024 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.076608577 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.081023915 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.076643485 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.084105697 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.079748687 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.084035082 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.0837971 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.083743884 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.083336925 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.088173732 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.077047433 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.084652292 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.079070237 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.124464704 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.084890224 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.081430605 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.082639658 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.076959162 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.088824789 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.077461478 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.077383134 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.083390052 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.084338656 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.08216833 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.079828122 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.081859113 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.083901818 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.081431005 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.079563555 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.088045242 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.087502606 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083079756 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.083518901 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.081168666 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.081354298 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.077151869 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.079546009 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.090256246 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.077531798 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.081705685 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.090814322 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.079701144 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.079997741 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.088130981 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.081394541 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.076317685 seconds)
  done (took 5.336591155 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.090327058 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.129568509 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.083457698 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.10972126 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.09505652 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.087273297 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087068793 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.111024673 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.078957908 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.079549557 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.096262361 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.093682472 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.08109453 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.085846435 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.087673497 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.080770553 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.082051289 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.079947999 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.084358567 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.08014259 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.08394459 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.08807188 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.094286303 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.092714236 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.084232108 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.079451789 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.079852288 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.08523147 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.092135547 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.084428739 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.084782464 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.086436324 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.095031332 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.083609967 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.080087948 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.082898566 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.095964938 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.081026528 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.083125712 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.078309418 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.08269463 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.084819783 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.087476809 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.096316289 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.080632757 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.086132869 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.080507344 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.078524693 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.092473083 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.083278847 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.087828298 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.093819699 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.08481489 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.081533037 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.085198893 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.095374712 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.080790809 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.079536299 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.083660047 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.092258121 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.078220781 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.084724613 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.09275021 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.083109761 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.087236367 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.093609223 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.08579705 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.08433524 seconds)
  done (took 7.331722858 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.089268061 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.111596864 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.098279431 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097979224 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091501568 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.092047429 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.091603578 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.091334389 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.091637976 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.096057322 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.092320721 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.132181083 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.087357176 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.094166164 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.0915536 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091909774 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.091794862 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.092012608 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091212554 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.091203592 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.091985618 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.0973898 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.09191756 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.097593703 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.093964824 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.087551038 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090911124 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.091378864 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097346618 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.091336007 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.094102789 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.09089949 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.091530719 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.097444006 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.094328612 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091540353 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.080623669 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091293741 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.09154782 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.091140686 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.087075055 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09782026 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.091800041 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.088018336 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091743838 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.091352949 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.098283237 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.095042362 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.094503252 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.095971142 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.092692996 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.098222172 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09171562 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092183034 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.098199218 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.10052223 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097471156 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.098725121 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.091764092 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.098056092 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.098380182 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.100424804 seconds)
  done (took 7.137083033 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095077392 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.087109083 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.096093091 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.077995454 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080294015 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.087926981 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080104508 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.083199253 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.089293475 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.08901466 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090843865 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088408697 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092030392 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090897085 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.08895699 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09053325 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088584582 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088310317 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.089387357 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088261969 seconds)
  done (took 3.058620834 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.090520104 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.11727713 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.082308778 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087047448 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.084939354 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.086950251 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.084710935 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085617207 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083859292 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085110325 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09104356 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.091250851 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083098636 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.086822084 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.090978663 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.087462324 seconds)
  done (took 2.700228846 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.097067947 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.086853825 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.094231057 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.081381819 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.082053073 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.077488017 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.081255776 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.076337909 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.077495586 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.09409067 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.080741251 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.092202223 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.080911498 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.08016546 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.07785286 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087141685 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.077495845 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.078787552 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.080939 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.092570267 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.085400062 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.079429086 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.084845131 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.080779175 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.084218434 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.085609677 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.079964241 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.082328926 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.079126238 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.081360903 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.084167206 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.084971224 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.078300175 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.078819531 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.080337713 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.096653492 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.080828771 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.081259363 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.08650686 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.081118721 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.0793006 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.083456104 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.08083412 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.08204753 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.077400111 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.081154805 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.077535924 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.083665403 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.078486626 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.084154703 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.08090844 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.083329453 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.081122195 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.088251771 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.083453211 seconds)
  done (took 5.856508541 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093793676 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.085334328 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.076853102 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079354524 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.084765896 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.083076096 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.085498388 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.08317237 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082878071 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.079648487 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.083404345 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.084505875 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083663414 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.085307139 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083406924 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085182466 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076920174 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.082679919 seconds)
  done (took 2.810742383 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.085559973 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.08191192 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.088817686 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081497148 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.081780849 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.083846349 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076970778 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.079701568 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079542517 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.081575067 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081747554 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.084224663 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07950094 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.083990107 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.082126539 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082247887 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.083686082 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079669018 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.081727165 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07696428 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.083724499 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079707142 seconds)
  done (took 3.102202331 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.110622233 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.101525489 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.157266915 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.097362385 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.10460719 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.090066705 seconds)
  done (took 1.963353187 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106869882 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116863172 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.082439528 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084609331 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090581447 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085405331 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085269869 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085754577 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09314188 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090088167 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085473733 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093212488 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09310337 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092032468 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09072606 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093672074 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085654648 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085859205 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082471178 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097454179 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085678547 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093367916 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085641084 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085311874 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085916647 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092707772 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092540892 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090415076 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085385567 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093634068 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091334155 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085790712 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094014395 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090712014 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085165674 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092904262 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085963691 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097362484 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090930727 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092110882 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.085127729 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091521093 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093506459 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089595572 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093064933 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086262293 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089815988 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086212356 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086260285 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099571036 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090786861 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091628607 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091036887 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093354286 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09284589 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099148848 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090634778 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0920258 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090766743 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090473244 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092010677 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091120267 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092141239 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090579706 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090596287 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091757061 seconds)
  done (took 7.292441112 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118826222 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.083127687 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086850505 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090428191 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092006708 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085902353 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085914287 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086050969 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086182168 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082937929 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123891644 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086330074 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092847275 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092589451 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086313826 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086243015 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086004101 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092765972 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083255738 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099604268 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085846635 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091960144 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092698794 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092636886 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090870397 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09103731 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085858245 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085932833 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085395066 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086032954 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089457882 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086281304 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091627167 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.082673407 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091875493 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085377973 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085594528 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089207429 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085351689 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090419727 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092039312 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097478707 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085975901 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085335923 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091019129 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08568819 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085592201 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082850333 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085330107 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082996124 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090793571 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090676121 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090524859 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092158694 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086216042 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086522371 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085757387 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085534847 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086695479 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091235703 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092786552 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085844105 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100507365 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086068178 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085770922 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092290098 seconds)
  done (took 7.224113425 seconds)
done (took 149.752580676 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.209661935 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.182530913 seconds)
  done (took 1.677634127 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.089636228 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.119223041 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.09978045 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.152185133 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.087020023 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.123371184 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.120204076 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097885675 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.089572586 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.089573129 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.089875022 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.092061759 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.15604894 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.088462407 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.0899774 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.092232593 seconds)
  done (took 2.980412671 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.120805558 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.185560087 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.127294115 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.08709744 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.123380181 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.095170106 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.087281579 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.100302046 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.093965452 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.089750263 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.095527364 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096385332 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.088750208 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.094317465 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.094229764 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.095468214 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.089005691 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.095344644 seconds)
  done (took 3.167701237 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.120473831 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.11452337 seconds)
  done (took 1.545634466 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.179132547 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.151724039 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.220879781 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.360165646 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.168933157 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.159637132 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.158867468 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.157311138 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.130954127 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.151577552 seconds)
  done (took 3.144179933 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119125951 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.174131641 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.312377099 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.139325882 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.094614149 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.11274399 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.141484664 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.099976224 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.10236154 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.102069288 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.102294621 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096752798 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.121367013 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.094831147 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.091131895 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.09670981 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.124758171 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.090232559 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.091102271 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.096765735 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.12492526 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.08770525 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.095050422 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.089871933 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.099756574 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.098943598 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.089258271 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.087799349 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.097580276 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.091440812 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.097679142 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.111932156 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.099049312 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.125069747 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.092422054 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.126015247 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097043959 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.094780646 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.090581556 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.09499169 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.098277275 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.098422701 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.096504153 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.096203253 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.089082367 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.096479073 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.089476241 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.087649225 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.098869651 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.089284946 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.098580441 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.09777256 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.124836309 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.089985108 seconds)
  done (took 7.077583332 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.12393485 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.123104392 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.088700064 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.130818798 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122652065 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088285915 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.124124864 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117642314 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.127354848 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.08930559 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.087236382 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.088638054 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.097913458 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.101067103 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.13088568 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.122951116 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.088148637 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.08665637 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.126456232 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.125397566 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.085478781 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118410731 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.116234695 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.126300159 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.085945461 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088485339 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.087268737 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.087632577 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.094264633 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.094921621 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.086930749 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.097312776 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.105363879 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.093530381 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.086526026 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.086772737 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.086515208 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.096585989 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.096592583 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.096511629 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.09499907 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085766499 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.086795683 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.087689127 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.087745592 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.085857016 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.095395014 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.096452371 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.095259319 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086721277 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.088089173 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.086545343 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.087745597 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.095828009 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.094401615 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.097842476 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.097377124 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.087021814 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.086601517 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.089137214 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.09736749 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.096756603 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.096989226 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.08807237 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.096529077 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.087743265 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.098715607 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.100399139 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.087245908 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.090529604 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.086855988 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.086909748 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.087637376 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.094077287 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.09461545 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.087858254 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.086328934 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086481545 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.096533488 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.095003899 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.086616529 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.093518989 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.085861677 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.08651618 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.088035809 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.088032443 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.09390514 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.096661715 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.088614759 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.086682095 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.086275429 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.08727646 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.085074586 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.093498891 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.09521847 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.094734987 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.094615927 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.087515989 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.095323806 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.094071858 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.087002671 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.094130903 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.08580031 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.08708397 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.086890975 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.093081735 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.092972924 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.094185342 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.085434227 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.222015292 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.097243161 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.099928915 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.088989309 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.096013932 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.099115433 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.096689507 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.08750268 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.099284597 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.088128589 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.099717975 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08788434 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.098148222 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.087807814 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.096346122 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.088349596 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.086423678 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.086972491 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.096633645 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.08856793 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.086767094 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.088169433 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.087449748 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.096095178 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.09961325 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.088605325 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.095981101 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.096648864 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.08858885 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.096512755 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.086879446 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.096698126 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.088539714 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.088223737 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.086322056 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.098692667 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.087644806 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.087263428 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.087654063 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.098198908 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.088101992 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.097028181 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.09521483 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086633045 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.101179181 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.097732464 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.094621476 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.097793491 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.088540379 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.087213332 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.086588087 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.08660826 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.094141155 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.09605105 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.088747114 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.086707209 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.094580912 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.097143445 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.085885679 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.094333883 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.09420307 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.0953096 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.086729351 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.086987667 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.098100276 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.098095237 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.095008995 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.095154907 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.095683955 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.087656991 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.094435334 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.095054545 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086896328 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102508566 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.087178603 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.099175948 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.095710855 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.093474929 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.096421817 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.096364891 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.097115889 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.097648438 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.099450942 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086391775 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.086434912 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.095620026 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.086649178 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.086617931 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.094629397 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.089081596 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.088656231 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.100383952 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.084497586 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.096774163 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.086251845 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.094931549 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.085807768 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08765619 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.099689928 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087043565 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.087421225 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.094323983 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.086351553 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.093299417 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.096255095 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.093899778 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.088233012 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.086899319 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.094582471 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.094126362 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.085383053 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.224974165 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090179596 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.097027449 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.096207042 seconds)
  done (took 22.604376197 seconds)
done (took 43.527544297 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.220967948 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.17109613 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.182789377 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.13128668 seconds)
  done (took 2.116001009 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.121895926 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.113746404 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.105293466 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.083398722 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.111178481 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.083694693 seconds)
  done (took 1.958585896 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.288938383 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.206498345 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.190297648 seconds)
  done (took 2.022545446 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.225909556 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.208245477 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.484500199 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.298971776 seconds)
  done (took 2.652522563 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.156894665 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.100898705 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.082599273 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.098924929 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.141628984 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.169888926 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.11130913 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.135365376 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.094918215 seconds)
  done (took 2.485224276 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.160436953 seconds)
done (took 12.73867404 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.112981059 seconds)
    (2/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.104553045 seconds)
    (3/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.221928343 seconds)
    (4/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.100374121 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.08368655 seconds)
    (6/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.21793566 seconds)
    (7/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.093583156 seconds)
    (8/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.089850954 seconds)
    (9/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.223014 seconds)
    (10/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.224773575 seconds)
    (11/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.100606584 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.091986095 seconds)
    (13/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.091733687 seconds)
    (14/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.093644557 seconds)
    (15/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.253787082 seconds)
    (16/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.09211882 seconds)
    (17/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.09049495 seconds)
    (18/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.093917996 seconds)
    (19/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.100957679 seconds)
    (20/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.089634736 seconds)
    (21/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.123431574 seconds)
    (22/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.097597465 seconds)
    (23/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.200826992 seconds)
    (24/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.242023679 seconds)
    (25/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.449571391 seconds)
    (26/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.215572143 seconds)
    (27/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.091471661 seconds)
    (28/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.198574659 seconds)
    (29/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.100433288 seconds)
    (30/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.236442729 seconds)
    (31/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.093390275 seconds)
    (32/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.094498335 seconds)
    (33/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.11148802 seconds)
    (34/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.079061507 seconds)
    (35/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.136872083 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.119066881 seconds)
    (37/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.090263737 seconds)
    (38/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.097502744 seconds)
    (39/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.113863344 seconds)
    (40/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.083535812 seconds)
    (41/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.090514172 seconds)
    (42/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.185974498 seconds)
    (43/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.083612706 seconds)
    (44/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.08095847 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.083711166 seconds)
    (46/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.08811609 seconds)
    (47/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.0907931 seconds)
    (48/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.085155497 seconds)
    (49/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.09468621 seconds)
    (50/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.066480892 seconds)
    (51/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.109440664 seconds)
    (52/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.211083923 seconds)
    (53/309) benchmarking ("sort", Bool, false)...
    done (took 0.164438512 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.145842707 seconds)
    (55/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.220145597 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.107148919 seconds)
    (57/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.0787766 seconds)
    (58/309) benchmarking ("sort", Int64, false)...
    done (took 0.08442017 seconds)
    (59/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.084433483 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.165935314 seconds)
    (61/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.123081148 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.105740394 seconds)
    (63/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.185271801 seconds)
    (64/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.098135227 seconds)
    (65/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.089646531 seconds)
    (66/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.078391581 seconds)
    (67/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.088864501 seconds)
    (68/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.082659319 seconds)
    (69/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.088936443 seconds)
    (70/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.167609315 seconds)
    (71/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.096915114 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.142438079 seconds)
    (73/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.08006551 seconds)
    (74/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.174802385 seconds)
    (75/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.178252135 seconds)
    (76/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.083588832 seconds)
    (77/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.166407884 seconds)
    (78/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.088314129 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.104555787 seconds)
    (80/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.082707603 seconds)
    (81/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.207008958 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.114988535 seconds)
    (83/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.091168277 seconds)
    (84/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.176271232 seconds)
    (85/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.066043884 seconds)
    (86/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.090288417 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.144340678 seconds)
    (88/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.120664954 seconds)
    (89/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.085526489 seconds)
    (90/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.187542979 seconds)
    (91/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.168269452 seconds)
    (92/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.067702328 seconds)
    (93/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.093707653 seconds)
    (94/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.192629937 seconds)
    (95/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.320992869 seconds)
    (96/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.094298233 seconds)
    (97/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.090552511 seconds)
    (98/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.066619752 seconds)
    (99/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.20178284 seconds)
    (100/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.089011215 seconds)
    (101/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.230587951 seconds)
    (102/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.097293583 seconds)
    (103/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.091777986 seconds)
    (104/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.089046358 seconds)
    (105/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.066682056 seconds)
    (106/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.219717982 seconds)
    (107/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068594772 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.11148228 seconds)
    (109/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.090875213 seconds)
    (110/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.066154068 seconds)
    (111/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.088005023 seconds)
    (112/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.097009748 seconds)
    (113/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.176944472 seconds)
    (114/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.090267734 seconds)
    (115/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.066783805 seconds)
    (116/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.079331188 seconds)
    (117/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.084835844 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.088846672 seconds)
    (119/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.167572001 seconds)
    (120/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.136896089 seconds)
    (121/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.06661565 seconds)
    (122/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.090736859 seconds)
    (123/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.09049311 seconds)
    (124/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.085876991 seconds)
    (125/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.085632727 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.084062552 seconds)
    (127/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.176319876 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.095602453 seconds)
    (129/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.067440209 seconds)
    (130/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.139202747 seconds)
    (131/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.091033187 seconds)
    (132/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.087937083 seconds)
    (133/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.08363784 seconds)
    (134/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.089699182 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.099505134 seconds)
    (136/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.083631002 seconds)
    (137/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.230203463 seconds)
    (138/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.132451269 seconds)
    (139/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.067348678 seconds)
    (140/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.066482008 seconds)
    (141/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.089063252 seconds)
    (142/309) benchmarking ("sort", BigInt, false)...
    done (took 0.211421298 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.09938252 seconds)
    (144/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.17255513 seconds)
    (145/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.067949305 seconds)
    (146/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.067339751 seconds)
    (147/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.108326719 seconds)
    (148/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.134114616 seconds)
    (149/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.143224839 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.109791812 seconds)
    (151/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.089152673 seconds)
    (152/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.091914724 seconds)
    (153/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.087523872 seconds)
    (154/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.06571628 seconds)
    (155/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.200859368 seconds)
    (156/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066339643 seconds)
    (157/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.085092014 seconds)
    (158/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.079782913 seconds)
    (159/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.066860401 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.094986593 seconds)
    (161/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.089850734 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.105195125 seconds)
    (163/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.190599793 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.109202472 seconds)
    (165/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.164973289 seconds)
    (166/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.066760187 seconds)
    (167/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.159384558 seconds)
    (168/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.166006781 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.105993335 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.126171639 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.14779041 seconds)
    (172/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.080312999 seconds)
    (173/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.087969546 seconds)
    (174/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.066579991 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.145903938 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.106669841 seconds)
    (177/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.088056285 seconds)
    (178/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.185896431 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.082755162 seconds)
    (180/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.10538679 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.103949662 seconds)
    (182/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.087094621 seconds)
    (183/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.066861188 seconds)
    (184/309) benchmarking ("sort", Int8, false)...
    done (took 0.163531123 seconds)
    (185/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.066056733 seconds)
    (186/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.082833291 seconds)
    (187/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.066477952 seconds)
    (188/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.170930238 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.106880369 seconds)
    (190/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.065936889 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.105434287 seconds)
    (192/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.172997546 seconds)
    (193/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.108698555 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.108456925 seconds)
    (195/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.087511491 seconds)
    (196/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.067377701 seconds)
    (197/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.066127836 seconds)
    (198/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.213829712 seconds)
    (199/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.065950689 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.104387496 seconds)
    (201/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.093456989 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.093803815 seconds)
    (203/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.095816475 seconds)
    (204/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.154687977 seconds)
    (205/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.08957677 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.08266084 seconds)
    (207/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.06699778 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.10696537 seconds)
    (209/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.236162462 seconds)
    (210/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.141985563 seconds)
    (211/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.098056964 seconds)
    (212/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.082019766 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.094051894 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.102578785 seconds)
    (215/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.163647167 seconds)
    (216/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.108079691 seconds)
    (217/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.068209372 seconds)
    (218/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.086835451 seconds)
    (219/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068446146 seconds)
    (220/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.08454618 seconds)
    (221/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.084519629 seconds)
    (222/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.179528341 seconds)
    (223/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.09684206 seconds)
    (224/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.089500231 seconds)
    (225/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.090533539 seconds)
    (226/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.093893172 seconds)
    (227/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.068058959 seconds)
    (228/309) benchmarking ("sort", Float32, false)...
    done (took 0.152202717 seconds)
    (229/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.089889225 seconds)
    (230/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.200652231 seconds)
    (231/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.145125308 seconds)
    (232/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.083205742 seconds)
    (233/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.066668205 seconds)
    (234/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.067306966 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.157258233 seconds)
    (236/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.067749573 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.084302576 seconds)
    (238/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.084922517 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.095856181 seconds)
    (240/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.117081078 seconds)
    (241/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.124400233 seconds)
    (242/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.188983115 seconds)
    (243/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.079634356 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.086766904 seconds)
    (245/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.109257554 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.106579166 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.084075495 seconds)
    (248/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.080513741 seconds)
    (249/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.084071589 seconds)
    (250/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.170636567 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.084161629 seconds)
    (252/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.122272353 seconds)
    (253/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.066901889 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.084011945 seconds)
    (255/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.197209909 seconds)
    (256/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.084043721 seconds)
    (257/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066908116 seconds)
    (258/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.084762933 seconds)
    (259/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.084688404 seconds)
    (260/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.068127431 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.083746112 seconds)
    (262/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.095463731 seconds)
    (263/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.085144542 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.090135248 seconds)
    (265/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.067268502 seconds)
    (266/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.098627946 seconds)
    (267/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.0877935 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.113776266 seconds)
    (269/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.079256142 seconds)
    (270/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.066937884 seconds)
    (271/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.06653583 seconds)
    (272/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.084403293 seconds)
    (273/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.067299887 seconds)
    (274/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068206927 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.129950798 seconds)
    (276/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.089579879 seconds)
    (277/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.086305494 seconds)
    (278/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.078287813 seconds)
    (279/309) benchmarking ("sort", Float64, false)...
    done (took 0.150880156 seconds)
    (280/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.166529902 seconds)
    (281/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.138049903 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.111157769 seconds)
    (283/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.083987929 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.126511221 seconds)
    (285/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.096273743 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.138460723 seconds)
    (287/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.083242105 seconds)
    (288/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.067820429 seconds)
    (289/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.080161051 seconds)
    (290/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.19657823 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.083654955 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.089012552 seconds)
    (293/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.066180672 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.154574481 seconds)
    (295/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.066024391 seconds)
    (296/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.077915366 seconds)
    (297/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.065841023 seconds)
    (298/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.066052375 seconds)
    (299/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.083071387 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.083079709 seconds)
    (301/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.079805066 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.087767516 seconds)
    (303/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.066323918 seconds)
    (304/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.106235432 seconds)
    (305/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066134735 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.082416844 seconds)
    (307/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.066684416 seconds)
    (308/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.083586907 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.130308019 seconds)
  done (took 36.353126258 seconds)
done (took 37.706341535 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100484719 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.116441976 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.092978319 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.110015885 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.100680634 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.093636733 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.090833309 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.09516093 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.097653918 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.09916527 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.097701102 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.071095928 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.093226087 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.09327707 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.091720086 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114202057 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.098476854 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.092439732 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.092285673 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.081110262 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.092281244 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.084163396 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.083739618 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070456587 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.095928627 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.089108002 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.093526514 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.093580482 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.08367793 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.084101934 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.086557509 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.093153519 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.083807939 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.096437811 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.090577327 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.092229913 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.093802548 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.093531751 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.083863214 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.084059946 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.093284366 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.0832952 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.091552233 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.089879817 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.088033269 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.087702327 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.091977193 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.093410854 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112946212 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.088954719 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.093627673 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.094472081 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.09536663 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.089131601 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.086262408 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.091562474 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.087222116 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.112916995 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.092726719 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088862229 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.094603874 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.090442032 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.087487479 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.091794327 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.091876534 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.094651068 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.09330881 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.08773825 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.093797515 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.087951832 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.083690069 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.091935249 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.085852413 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.083845029 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.094741931 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.096215499 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.080351342 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.087623359 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.091547566 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.092446734 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.083091584 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089114364 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.08297895 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.08889298 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088736059 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069817791 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.085914035 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.090516062 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.080284196 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.0917494 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.09090256 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.091404919 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.08340544 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.09374054 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.081091358 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.087201046 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.083414751 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.08339103 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.082715928 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.085760769 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.083197614 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088928306 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.092047888 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.083057553 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.08844505 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.097053312 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.083535288 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.090793509 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.080607313 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.080518676 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.095072366 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.093444291 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.082903098 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088657322 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.080276636 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.088828421 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.080329843 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.082804264 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.082334199 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.083323205 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.087618164 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.083915064 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088113646 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.088415405 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.095862808 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.082487127 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.085392284 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088286328 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.08305108 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.086680071 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.082687754 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.082353773 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.082017261 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.076848421 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.08782847 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.082412434 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.22638945 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089583391 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.091220052 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.08206722 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.092760649 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.087066416 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.089909771 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.087543605 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.080631678 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074846307 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089284926 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089003512 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.083682166 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.084058922 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.083162707 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.083588043 seconds)
done (took 15.139214516 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.082235594 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.147445549 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.110594007 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.109872663 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.102996748 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.085123177 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.091292776 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.112149694 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.084082898 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.117943392 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.105622777 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.103759002 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.12780796 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.08098801 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.084949985 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.086540681 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.083649999 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.09850445 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.111980958 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.108193803 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.128428757 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.081624203 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.106884024 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.106866553 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.103979344 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.118452432 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.085017996 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.085996293 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.087462499 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.109002312 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.10921114 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.087570884 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.085194128 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.111833575 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.107652937 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.096948149 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.083222449 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.095014186 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.083017416 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.081643262 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.082915558 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.108269677 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.093738259 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.094442278 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.084047464 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.089885613 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.081064423 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.097201771 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.10395022 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.093169529 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.102271997 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.113145019 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.084693193 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.099656225 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.080886537 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.100303127 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.092003284 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.084376838 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.08441138 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.089768282 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.084600186 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.087527382 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.097858839 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.094926631 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.088644348 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.099798131 seconds)
  done (took 7.803511469 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.099988586 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.1131673 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.101544745 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.102122846 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.083928038 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.08527547 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.08425548 seconds)
  done (took 2.114387783 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.082859501 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.10451187 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.107248065 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.107214972 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.096404704 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.108186598 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092599967 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.084742762 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.108050944 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.083423892 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.103494447 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.114271433 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.086018285 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.096336282 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.108226774 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.084687314 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.107512852 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.084615707 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.085706377 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.107482232 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.086926975 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.108478704 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.096328524 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.085082867 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.096073477 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.085173945 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.129284406 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092578758 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.083444397 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.085885106 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.083543525 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.12409704 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.095399598 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.096786252 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.083868979 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.098041384 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.096095994 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.085207739 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.09377072 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094881918 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.096255079 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.086154489 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.083720131 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.083372811 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.087464041 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.094322012 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.083889031 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.085732852 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.085962474 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.102260869 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.083297088 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.095821797 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.085818998 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.088192772 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.09011054 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.087220459 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.093413094 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.083643052 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.102679067 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.083031552 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.100029544 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.099337796 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.096304787 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.099689963 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08523315 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.095595201 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.0962115 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.085916663 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.086731959 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.086781571 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.099956693 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.085973674 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.086287042 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.094311286 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.084625118 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.107383579 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.107523699 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.084325733 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.09847774 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.085616549 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.083646806 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.084741351 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.107372683 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.088136902 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.083483308 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.089144667 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.086608421 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.085269176 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.083905923 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.0888183 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.082877796 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.09046181 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.086074249 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.085604441 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.087697358 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.099728974 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.084988529 seconds)
  done (took 10.43055245 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.085421867 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.085951708 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.087693564 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.086183023 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.085826854 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.086362262 seconds)
  done (took 1.986474975 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.106044924 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.083678436 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.096688655 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.087366815 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.120239766 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.101712155 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.102932315 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096451839 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.099875801 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.095431266 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.102041508 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.103151594 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.107212054 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.088554439 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.102001346 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.087959218 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.102676151 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.090512482 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.095182599 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.089188651 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.1037523 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.088259853 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.088412117 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.103344993 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.092310371 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.087535494 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.096373596 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.095191459 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.095039056 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.095873277 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.088214807 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.091436226 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.093333594 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.095246142 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.101890784 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.093013822 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.086678851 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.092691166 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.087411623 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.091047971 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.102542793 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.088569922 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.089694175 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.093155215 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.097795646 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.093449283 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.092758334 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.096900329 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.101794921 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.092550344 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.093288426 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.087589624 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.091218185 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.092830164 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.093320502 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095674335 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.092950096 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.101932927 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.088164633 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.093507624 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.084097426 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.091325223 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.095026567 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.091473687 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.093234531 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.092829055 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.093239707 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.088759639 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.088909856 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.087374639 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.093885958 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.087731005 seconds)
  done (took 8.231826072 seconds)
done (took 31.993308339 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.528988603 seconds)
  done (took 1.951806382 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.627571571 seconds)
  done (took 2.079623069 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.531599503 seconds)
  done (took 7.977593705 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.383426512 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.460704055 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.75791878 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.152942644 seconds)
  done (took 3.238407336 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.735542935 seconds)
  done (took 2.193519208 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.248219194 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.242841338 seconds)
  done (took 1.957905189 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.371422419 seconds)
  done (took 1.819254346 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.090869391 seconds)
  done (took 2.540097733 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.244545858 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.176280405 seconds)
  done (took 1.873247448 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.459756379 seconds)
  done (took 1.911774314 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.233977104 seconds)
  done (took 5.687982758 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.231977061 seconds)
  done (took 1.719207748 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.254767287 seconds)
  done (took 1.709964161 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.745100161 seconds)
  done (took 3.200866693 seconds)
done (took 41.326622031 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.099140107 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.105116251 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.104015598 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.099835782 seconds)
  done (took 1.834449549 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.090718702 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.088734531 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.09250598 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.088360346 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.092189508 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.089352757 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.089891783 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.090866286 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.08827265 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.089187485 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.088633714 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.088349542 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.091286824 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.090365093 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.087236846 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.091723872 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.092702623 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.089099871 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.091338117 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.088969306 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.086775074 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.091539614 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.09170302 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.087719169 seconds)
  done (took 3.606246553 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.093849884 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.090381728 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.095161847 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.08939617 seconds)
  done (took 1.825692932 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.092255555 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.103629332 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.104691497 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.094752404 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.105816365 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.101335545 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.085087503 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.084990905 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.086082417 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.094323186 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.084413373 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.110809593 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.104058124 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.094087545 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.096541574 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.0811474 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.083735961 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.102913911 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.095568197 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.094781048 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.086601681 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.094465306 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.084493066 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.104435512 seconds)
  done (took 3.721005572 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.093753644 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.11635672 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.096075115 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.10650412 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.108147616 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.081453307 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.096044285 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.109153973 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.142799027 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.082044027 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.087300322 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.08182844 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.090086397 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.081916116 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.096763202 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.12442424 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.127957817 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.085239613 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.113958843 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.081823645 seconds)
  done (took 3.461548597 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.088341987 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.089016823 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088291689 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.084001761 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.095299195 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.090913656 seconds)
  done (took 1.996599319 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.084035103 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.085075129 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.085920167 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.085279566 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.090165264 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.085317654 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.083907904 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.085623306 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.085213008 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.085507176 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.0852786 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.083961104 seconds)
  done (took 2.480744091 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.196882098 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.087042687 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.086313193 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.084312807 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.088273353 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.084403405 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.099048894 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.085782993 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.111697195 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.084826675 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.084562753 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.087039249 seconds)
  done (took 2.637563976 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21244319 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.091198515 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250565152 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164522416 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12312367 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127785524 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130344083 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127884545 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.149750289 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113565093 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174723507 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176487571 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122154052 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150275666 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10619873 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.116075196 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165275817 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179491229 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120017225 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175975244 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156670194 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14106192 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15971053 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116134283 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119326686 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132646809 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.086657036 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095134643 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183964298 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143295825 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157743852 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12532564 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105210805 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1921048 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176671963 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153406523 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16184479 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099977593 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.116755751 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.14764172 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210397147 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103214391 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169396269 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122844512 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.094230572 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142433617 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12821034 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.271916844 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.11974481 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106783423 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157088503 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196142303 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.145206962 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102131733 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138021136 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126330428 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.125445998 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133734856 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191901722 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170086661 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141771718 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.087909258 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125505985 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161709896 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145802424 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.121207535 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.135071375 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105585305 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145037138 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166854418 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135037853 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155169199 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.128884269 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103668654 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13469625 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149629517 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140292777 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184025784 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137540647 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.089190701 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135575986 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113989388 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095872247 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.159083663 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.092182045 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187473476 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116628622 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.119144161 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143535874 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123999048 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123825068 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16862251 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153677421 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118372403 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.081606774 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117986152 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.130610225 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153080982 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102088266 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121611108 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126004333 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.093964648 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.290738335 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.091658226 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13890317 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.093451963 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137729255 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143949644 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.093494819 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137393468 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119326385 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.117894634 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144852361 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16992023 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104521255 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097252392 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176002558 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132104706 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.112897932 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151152667 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162738604 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.11614686 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11307272 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158473777 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178685928 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106810895 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172091508 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118506679 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099838711 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.102089616 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136158155 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125783419 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.136418233 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096706917 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.130849291 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17394203 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.090767828 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11151556 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147259547 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094547982 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096579048 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120083265 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119381468 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.111788944 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.113935066 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.116055596 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148249562 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135850067 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119365132 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13729345 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113632986 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177123713 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105991152 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.117103876 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11832671 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.084883849 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.139593404 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162748712 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094035593 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16742023 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.132285076 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279395006 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135968277 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10035672 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1502416 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095688873 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.086774162 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15427188 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12610082 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12551307 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.158662665 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130170992 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.137150268 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.131028335 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144070014 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142502026 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.141522833 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120480304 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.104407624 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129451858 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14014023 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.088820454 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.104711711 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.095758869 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120402107 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11036666 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099756312 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155668912 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135581873 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125277835 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129217097 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112610467 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160609702 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.092012627 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140287763 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.133028018 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11088341 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.161068595 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162258059 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146316912 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115611148 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148738101 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.086417865 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.089909977 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.101889644 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134783201 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099533494 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099517255 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128277048 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159091428 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141070465 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147526683 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137281874 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131601851 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165251801 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.086181065 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.132572805 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151685955 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132454675 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.118174818 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.254226422 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.115777053 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154679008 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120362298 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195426074 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129294449 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139852862 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169732913 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.117433472 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095714383 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119154541 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145510444 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116929739 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150945836 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113402539 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103371313 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1224131 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.091069858 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112012245 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138599698 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133168875 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150677304 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.125877083 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146224615 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094155878 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128293369 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136480378 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135023494 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.079416844 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132389551 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175843237 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110589911 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132156396 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161570366 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095141076 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.151841304 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179639786 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157546515 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100484281 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121426882 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13403666 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136981136 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131981882 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148717225 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119192752 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151921796 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124685517 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.099722647 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102212969 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110856373 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117740233 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.106953508 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.112694664 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.122530903 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.1110551 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141239163 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116118854 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122794931 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.28103673 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.115608309 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.108606254 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112300759 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187444032 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133292667 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185410498 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.115818221 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.151046694 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171742486 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.092823649 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095148959 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.094053804 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149213902 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100935392 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143759045 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.127046604 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131020475 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137275946 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150770184 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112285758 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.085457459 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12385134 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145619142 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137514979 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113322246 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.116467191 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170375261 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.113735865 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095052102 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12705453 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131352205 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119596717 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183440647 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.077621472 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124209243 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093241597 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095735532 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138809685 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163989843 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.095602736 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.115024007 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13465461 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125531853 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137102084 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112977374 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125142655 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143566825 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157669068 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140325963 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.10459496 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125947887 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138945096 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161521451 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116544953 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.111629339 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179805069 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.309990916 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.166220953 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.102495647 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131897136 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129211608 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124566902 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149592695 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100536043 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170314979 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098024648 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148462135 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115748866 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102914977 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141706284 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.127046292 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104035296 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155338943 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131487593 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098848461 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093187731 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129254314 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132652149 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119191235 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.091348165 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151149238 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.089821711 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145594513 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183286784 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096659683 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120173353 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111030464 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09556193 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118604956 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117031156 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102148079 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.11500388 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179443825 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.100921349 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156013529 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144553989 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125961429 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148691198 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117256204 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.654727026 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.09257043 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160296814 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129292827 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182071784 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114052665 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131824742 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123892248 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131552495 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150831026 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115099917 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.190935588 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139464169 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.126279528 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093674903 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113627166 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11522494 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.099100247 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119254903 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124231478 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124495489 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.104349972 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.123889738 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130456795 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.095766904 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108968583 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159425543 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126711288 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149203734 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144700776 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098752747 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127740492 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143403328 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093684582 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.125909373 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158094825 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11628033 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110426512 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.094425899 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.109465796 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176290134 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.08790179 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19630797 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129299156 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120957754 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125835242 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.116626301 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137978203 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114447301 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130578164 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102874439 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.116729402 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123889783 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094360921 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.089852402 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116293903 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120487042 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.110519003 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10619666 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.111891417 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155622906 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.086788073 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110068754 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126092277 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14832692 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173256005 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.099824848 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097199659 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125955656 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120813068 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.117915546 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.393078865 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.098331004 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101631336 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.099767213 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.100827196 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.123812373 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131795992 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136829718 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127270664 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174481868 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.10250445 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.247431352 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115033548 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122951057 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.087863298 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.096609925 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115636385 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114844164 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122489209 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129567291 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18595937 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.113683373 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.107442442 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107163107 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.092440165 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100762918 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140383803 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127944293 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133316718 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117454191 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.079348667 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122163545 seconds)
  done (took 65.096464624 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.120121838 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.092973918 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.11747543 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.161297945 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.136554355 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.214032497 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.166286864 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.203854452 seconds)
  done (took 2.800406161 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.083699264 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.110249306 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.122355446 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.100813637 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.085223888 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.086688911 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.244220362 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.099501681 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.085210297 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.108903291 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.095696784 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.086843975 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.432705805 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.084452391 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.085397761 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.077760467 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.086578048 seconds)
  done (took 3.640451865 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.394263687 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.61948147 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.353688015 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.092774314 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.849958261 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.103195686 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.189887264 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.154286663 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.098922781 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.537804944 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.381104519 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.14648197 seconds)
  done (took 18.497635213 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.096911537 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.09391757 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.106742425 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.106410804 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.095806787 seconds)
  done (took 2.075397013 seconds)
done (took 115.139302481 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.095173642 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.438463149 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.069812027 seconds)
  done (took 2.110839619 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.103341892 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.103944698 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.103205056 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.100890077 seconds)
  done (took 1.996114504 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.090467922 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.095054085 seconds)
  done (took 1.763893935 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.242378666 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.190269639 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.114973196 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.095766433 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.095897011 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.09613677 seconds)
  done (took 1.868379771 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.086158265 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.09045828 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.088249029 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.091295688 seconds)
  done (took 1.93228645 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.089648356 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.067145698 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.069210076 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.071953816 seconds)
  done (took 1.874727524 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.100097374 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.099573155 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.09430795 seconds)
  done (took 1.871672173 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.115300598 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.108632694 seconds)
  done (took 1.800467671 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.094377192 seconds)
  done (took 1.672585144 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.101589768 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.114995158 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.149315115 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.131644039 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.155285475 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.131180126 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.10322295 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.103503086 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.097252111 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.104264959 seconds)
  done (took 2.769396362 seconds)
done (took 21.881095328 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.093946572 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.385628402 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.379042439 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.109431659 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.696129312 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.375963751 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.989768044 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.111563754 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.159865792 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.086796082 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.103602403 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.675483057 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.98008435 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.33990539 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.966435324 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.346960429 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.668062562 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.087308618 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.086846598 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.08692647 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.972728906 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.086437322 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.086377736 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.087223533 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.668135157 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.39146685 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.087211894 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.344539933 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.087901691 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.089499968 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.37517469 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.088219616 seconds)
  done (took 16.652544964 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.086255087 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.140699837 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.091652445 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103428325 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.088958492 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.088076936 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.090186313 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.087613027 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.139209505 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.08721293 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.104432028 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.086944279 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.091110043 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.08844107 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.107837763 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.087880205 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.088783504 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.08852873 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092644041 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.088610033 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.107083196 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.087654586 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.088161326 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.089447345 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.087981986 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.102472587 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.088609716 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.088272412 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.087674378 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.090269225 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.09123919 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.08865531 seconds)
  done (took 4.618292139 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.13185548 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.14476198 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.092949872 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.125408616 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.130910887 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.089930113 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.16628871 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.113744099 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.147423794 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.088500199 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.105522828 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.088134445 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.122746771 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.088571662 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.107931796 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.088199376 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.088941447 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.088435419 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.08769788 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.087913169 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.107653668 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.087708941 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.087611035 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.087848475 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.087994473 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.102164882 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.088720595 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.087914428 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.08742556 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.089532405 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.091404152 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.087971051 seconds)
  done (took 4.871848484 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.086498044 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.091333586 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.09875662 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.099007836 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.085072531 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.087649303 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.089032309 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.085411247 seconds)
  done (took 2.318116208 seconds)
done (took 30.04658612 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.092736899 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.085297572 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.088732012 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.104377589 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.091239389 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.095612333 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.082665525 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.092280579 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.088971299 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.089716719 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.091033893 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.08609475 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.087604962 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.082158294 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.089876583 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.083801609 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.098091196 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.087929933 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.097076959 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.097865225 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.086192065 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.088899986 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.09163375 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.097240879 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.097162624 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.096735599 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.092851759 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.088681681 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.084700546 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.086706992 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.093253447 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.100137252 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.086656799 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.096401801 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.083068089 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.08363118 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.087656354 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.086175186 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.096975491 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.091942167 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.08470964 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.09212373 seconds)
  done (took 5.372702029 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.09996371 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.107125051 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.100125791 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.077747455 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.083091082 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080372179 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.104414905 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.076096866 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.076084844 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.104653273 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.071784115 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.075703266 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.07870748 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.070004503 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.074928426 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.073135446 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.077863639 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.07061467 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075286054 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.07602707 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.104432707 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.070034881 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.093767385 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.077882737 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.072201016 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.077562185 seconds)
  done (took 3.75277528 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.089034841 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.103548783 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.110454193 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.160381882 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.12857695 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.097527109 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.099404789 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.109556809 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.113454434 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.085471485 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.090539505 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.109110815 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109670346 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.091565352 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.085311032 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.101218972 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.100436509 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.086739004 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.091976208 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113161404 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.105555433 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102152082 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.110425915 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.101443715 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.084717139 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.087470651 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.089733062 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.101387631 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.087778344 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.09605705 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.090435449 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.08920216 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.08698888 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.096227047 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.087617493 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.085089602 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.110765552 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.09716999 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.098442259 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.086333657 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.095387459 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.086679129 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.11143945 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.145013831 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.084836032 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.090052014 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.089447661 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.096339183 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.085597312 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112922315 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.097451648 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.08504833 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.086662737 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.084899269 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.0846895 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088633018 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.087273325 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.088364788 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.095664015 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.092670857 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.107393802 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.090793107 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.103472452 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.085175757 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.0959246 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.084964368 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.086862345 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.084438389 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.113479498 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.087027727 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.1296935 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.08604545 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.084235243 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.096525774 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.095958813 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091841005 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.085606864 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.103467919 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096848609 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.089954964 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.093701313 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.088903471 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.089464509 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.116151127 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.085845777 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.085029564 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.084761402 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.089817764 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.089661309 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.086439937 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.097978808 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.085738696 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.089121832 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.103793159 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.085713343 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.086604629 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.091798118 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.089136701 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.084825457 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.097238646 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.090039374 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.08693746 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.096241099 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.086182499 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.089797335 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.098396115 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.09281396 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.084523053 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.088466808 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.089711115 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.086990762 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.087314371 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.089631446 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.087483017 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.092430886 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.092165499 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.091383675 seconds)
  done (took 12.720715717 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.17565613 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.172274356 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.089006171 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.163533278 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.094787411 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.095891101 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.166288331 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.111639317 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.086438769 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.088223437 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.087053472 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.126644491 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.122107792 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.135384179 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.097139678 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.086888724 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.1090905 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.130983257 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.168460263 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.162286896 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.109285715 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.094351085 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.089347275 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.08820721 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.088086454 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.096456742 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.105647744 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.095938547 seconds)
  done (took 4.877361013 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.093732516 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.118299175 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.089412259 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.10726241 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.103017678 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.081697445 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.087074997 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.088317143 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.102067924 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.092698614 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.083997959 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.092258421 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.090754719 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.087434219 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.086744803 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.090742751 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.09343373 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.089036849 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.087659003 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.089586914 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.096676879 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.105130051 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.09036743 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.086395788 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.089476647 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.086143734 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.077056517 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.098753105 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.086181834 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.110914894 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.083435146 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.089021736 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.101104176 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.087170885 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.086280003 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.086786659 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.083850685 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.083589255 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.087545545 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.081999212 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.082458718 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.072372448 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.084998443 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.093992588 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.09976147 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.070526278 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.088306773 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.089098849 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.089515525 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.081419172 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.088864875 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.088626716 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.089133034 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.094196132 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.087846932 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.088784232 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.08706385 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.091383584 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.092763868 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.085640924 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.079531879 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.082362511 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.088984813 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.078090419 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.098460856 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.08868023 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.082637026 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.083476104 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.08725637 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.098488103 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.085516931 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.088434234 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.081473316 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.08563231 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.089003097 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.088133157 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.087116981 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.085318945 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.085512257 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.0864455 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.069824843 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.086273095 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.068049994 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.088679595 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.081576131 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.082089623 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.086598255 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.088121854 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.094949153 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.08527731 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.089731984 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.086765733 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.084689944 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.089062057 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.074899337 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.08932116 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.096994374 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.09716084 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.083852259 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.082227396 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.100068051 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.088567915 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.082902556 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.072136093 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.090748655 seconds)
  done (took 10.891701181 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.105576262 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.083315076 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.102509646 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.109512306 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.10391686 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.09085923 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.096305184 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.086657038 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.102055003 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.090170908 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.092653053 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.083450181 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.096884409 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.095237334 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.085344614 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.095757768 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.087589271 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.103776797 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.100319209 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.083472397 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.094854726 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.099147753 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.10769486 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.100930572 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.099621247 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.101098405 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.107373866 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.094600316 seconds)
  done (took 4.344707862 seconds)
done (took 43.553640661 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.687334322 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.945948198 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.68027487 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.923965316 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.984363776 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.697387959 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.779980402 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.674425172 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.948514167 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.716202462 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.027920829 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.787637788 seconds)
done (took 64.59201837 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.692274115 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.813736895 seconds)
    (2/2) benchmarking "String"...
    done (took 1.910201551 seconds)
  done (took 5.3249659 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.880197808 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.350658816 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.917127674 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.673638707 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.681021826 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.949826428 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.475359726 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.123059083 seconds)
  done (took 29.772914575 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.821389688 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.904693471 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.374440029 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.404218063 seconds)
  done (took 15.150093234 seconds)
done (took 61.513192525 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.679315505 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.714738812 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.6888749 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.65463264 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.76855389 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.689335712 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.772724694 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.683537422 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.671968062 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.660948106 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.675081353 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.10518702 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.689242805 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.796625585 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.672525736 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.673330918 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.722228967 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.124295644 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.830162385 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.690609642 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.686514753 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.707358926 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.670859031 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.681242349 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.705621761 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.674160298 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.066741692 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.670273441 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.517557042 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.678490487 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.721926837 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.022074117 seconds)
  done (took 200.365730036 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.673596469 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.70599624 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.705335676 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.710015211 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.036604617 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.862942492 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.776604787 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.079443976 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.679495366 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.707475311 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.883158235 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.673107788 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.908493818 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.620979391 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.70122283 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.758494102 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.848424296 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.905707008 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.703275093 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.843375437 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.683663794 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.774966097 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.716784941 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.855705501 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.71230585 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.745789206 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.676991723 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.685461252 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.867020848 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.828964641 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.68625668 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.676072779 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.876395306 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.544443113 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.684896283 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.708889517 seconds)
  done (took 166.107585063 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.862372321 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.675472612 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.67407301 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.673874747 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.679164815 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.674497342 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.797995117 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.799725317 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.309915197 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.251152572 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.731925289 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.674710549 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.462852272 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.674069914 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.740670186 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.687642299 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.674603581 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.675986702 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.689899914 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.701746832 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.67537496 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.677873192 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.798296853 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.692726491 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.675747628 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.684435391 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.675409123 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.682691644 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.04109075 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.676151842 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.847986783 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.680732543 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.681576268 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.914878889 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.67675905 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.677916452 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.517014394 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.306120286 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.759095016 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.678219239 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.682662795 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.676856788 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.894938753 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.677960862 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.676513054 seconds)
    (45/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.674527561 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.674537954 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.677933841 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.804320077 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.676640204 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.796772222 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.680102119 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.1573803 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.675799934 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.678250479 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.564857321 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.265130276 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.676954635 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.678288649 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.676534141 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.678912308 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.682819618 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.599466946 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.752590334 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.678202254 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.681044308 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.682516883 seconds)
    (67/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.676108232 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.67752935 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.720392743 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.676811753 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.714691828 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.736182358 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.812003537 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.799946515 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.684226081 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.744297128 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.770138555 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.677398108 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.67776302 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.679684435 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.677289438 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.758581786 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.678091507 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.799496492 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.687514072 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.678309091 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.731321383 seconds)
    (88/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.679098638 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.745769034 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.678755296 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.53071972 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.68256325 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.679317828 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.946007398 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.743720742 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.677872504 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.680125551 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.801438351 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.799311213 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.407880666 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.678254046 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.432975718 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.818416538 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.680947113 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.809066798 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.678845453 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.759834968 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.685776149 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.679326329 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.714261838 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.679320131 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.733722794 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.683425463 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.052828911 seconds)
  done (took 390.80882505 seconds)
done (took 760.804401736 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.286264 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.253672859 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.354400504 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.27230561 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.246801892 seconds)
  done (took 13.017390931 seconds)
done (took 14.620421704 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.763985136 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.769753685 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.702713149 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.765454184 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.698020637 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.764431537 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.750038191 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.705480764 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.735414058 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.705120876 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.736868981 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.704001026 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.69259538 seconds)
  done (took 24.097711488 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.919249263 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.920174549 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.747247421 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.91705773 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.723113056 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.908369661 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.838365187 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.833482457 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.829927613 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.693451126 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.691314695 seconds)
  done (took 21.626679822 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.934484372 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.94281187 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.753199284 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.91892611 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.727294118 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.9274011 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.840760714 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.835575689 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.828524533 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.693238145 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.690136836 seconds)
  done (took 21.697448496 seconds)
done (took 69.025733246 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.688210992 seconds)
  done (took 3.292858097 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.71214727 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.878602596 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.69480355 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.690672706 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.689171517 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.69130948 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.692459021 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.688893964 seconds)
  done (took 15.345385026 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.68493442 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.687088824 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.684976381 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.687555501 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.68444118 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.687112844 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.685279132 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.68572034 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.687799791 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.685739294 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.687459334 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.685566142 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.688043167 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.687807334 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.689137363 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.686975275 seconds)
  done (took 28.592266103 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.687792632 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.685115035 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.68595531 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.687747451 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.685812059 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.686308231 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.685948339 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.685647822 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.686898221 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.687137348 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.686217806 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.686618495 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.686208212 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.685584046 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.68694455 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.687776687 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.686185895 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.686809644 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.690705515 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.687206838 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.688195963 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.685965982 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.684716947 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.687009475 seconds)
  done (took 42.089730605 seconds)
done (took 90.925121651 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.443476063 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.707530102 seconds)
  done (took 9.758082481 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.691295393 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.691653282 seconds)
  done (took 4.996417888 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.691610667 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.691581976 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.690850334 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.691999426 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.691106304 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.690431923 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.691140279 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.690956944 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.691367911 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.692228627 seconds)
  done (took 18.523044708 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.69023884 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.691447407 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.688090144 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.691325214 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.693659301 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.689079684 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.691848729 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.692555984 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.691386838 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.689352888 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.692805579 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.690101162 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.693348223 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.689238856 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.691398447 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.689597017 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.689907094 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.688947096 seconds)
  done (took 32.043419129 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.691545681 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.691374054 seconds)
  done (took 4.992108523 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.690015037 seconds)
    (2/7) benchmarking "second"...
    done (took 1.689674742 seconds)
    (3/7) benchmarking "month"...
    done (took 1.689016489 seconds)
    (4/7) benchmarking "year"...
    done (took 1.689261963 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.689744516 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.690139912 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.690351508 seconds)
  done (took 13.437948801 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.693959604 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.837229824 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.90831479 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.297479646 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.695941829 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.696255063 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.597025985 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.696858164 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.698453925 seconds)
  done (took 18.731756191 seconds)
done (took 104.091656151 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.614264817 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.688579666 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.925586103 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.758574279 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.752704292 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.986902421 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.716123178 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.977435286 seconds)
done (took 42.032367031 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.742004538 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.421787188 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.434758136 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.746205524 seconds)
  done (took 15.214537156 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.669643891 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.982043266 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.693304889 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.498155787 seconds)
  done (took 21.459335214 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.059516069 seconds)
    (2/2) benchmarking "read"...
    done (took 2.038716819 seconds)
  done (took 5.714157449 seconds)
done (took 50.743010278 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.694278631 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.693545353 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.692449425 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.692902428 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.694244422 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.693699588 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.692765202 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.693925248 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.694702118 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.694884985 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.694225907 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.694288741 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.694381448 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.693832531 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.691794673 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.691300744 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.693046026 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.694763986 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.692391767 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.692677336 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.692582032 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.694929398 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.69274912 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.692342142 seconds)
  done (took 42.255215107 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.694960406 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.695640559 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.695842727 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.695905513 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.692928862 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.696620721 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.697050228 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.693297459 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.696660852 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.695287575 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.694285994 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.692725063 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.695678603 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.694344931 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.697076369 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.69299404 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.695937846 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.694055318 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.6959089 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.693611561 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.697203336 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.693219828 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.693152855 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.696218429 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.69410853 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.694827619 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.697123498 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.695049143 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.696333082 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.694706953 seconds)
  done (took 52.467183385 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.700148343 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.704054715 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.69667803 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.697318269 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.69802561 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.698525246 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.696916235 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.697095752 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.698772282 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.697221486 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.697606727 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.698869758 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.698750721 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.697667283 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.696984893 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.698467933 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.696680676 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.697718139 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.697480076 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.697360211 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.698416734 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.698301832 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.698276845 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.697189032 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.700622157 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.697383008 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.696969813 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.697919731 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.696900467 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.697847333 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.697810662 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.698448535 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.698376501 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.698448961 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.698402045 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.698708227 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.702856316 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.704497646 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.698586521 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.697344859 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.698771038 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.699221867 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.698512905 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.699104702 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.698657236 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.698625095 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.698905246 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.699087891 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.697934829 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.699332744 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.698280599 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.699201443 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.69935124 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.698979601 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.698811802 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.699491544 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.697796556 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.70030001 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.700060692 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.698660057 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.698251556 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.699423418 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.699308972 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.699665204 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.70030525 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.699955545 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.700107337 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.701211175 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.698580219 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.700434855 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.700916565 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.699774612 seconds)
  done (took 123.930254641 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.700285311 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.697484952 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.697791448 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.699710082 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.698299913 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.701140626 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.697721861 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.700776498 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.697391485 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.70247112 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.699858404 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.698400772 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.698574912 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.701270669 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.699451007 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.700535497 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.700059272 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.699130369 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.700142116 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.701603934 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.700241165 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.698665871 seconds)
  done (took 39.00883717 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.701193079 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.701165284 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.698652074 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.700144582 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.698253927 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.701141572 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.701134778 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.700907562 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.701528587 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.698881312 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.699982195 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.701869364 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.698444613 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.698413091 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.698710312 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.700197806 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.701555849 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.69871659 seconds)
  done (took 32.21973668 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.698335372 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.698880239 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.701803571 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.698691847 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.699847074 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.702675427 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.700222246 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.703230614 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.702534004 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.700652915 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.703865543 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.703113562 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.702537447 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.700353681 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.702294534 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.70116081 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.701905943 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.700829121 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.701613379 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.700956019 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.700403195 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.703244236 seconds)
  done (took 39.048712186 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.703773214 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.701858969 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.699469836 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.701193913 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.69954139 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.703441577 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.702474972 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.700674466 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.703276965 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.702709799 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.700206782 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.702101555 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.700617667 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.701201172 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.700692046 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.700478442 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.703249592 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.702150848 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.703857564 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.700821362 seconds)
  done (took 35.654665523 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.705984438 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.705125479 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.705313768 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.706635699 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.706256444 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.70592274 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.705132573 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.705829975 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.706793359 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.706685735 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.706377177 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.707187914 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.706346881 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.707820726 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.705492334 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.707047239 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.707042909 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.707366785 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.706249702 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.706115336 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.708019419 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.70622805 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.705613019 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.707534766 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.7058324 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.707172545 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.7063366 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.70717055 seconds)
  done (took 49.401592353 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.70433348 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.704545102 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.70189148 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.703184654 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.703509651 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.701549809 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.703068485 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.702988988 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.704665973 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.703110946 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.705737142 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.704582053 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.706149184 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.705540323 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.705210406 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.705085406 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.705274158 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.702471676 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.702706996 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.702847967 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.706024205 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.707035987 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.705845675 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.70412483 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.703656783 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.705727144 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.703101349 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.704516871 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.707774541 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.706086594 seconds)
  done (took 52.755006013 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.726359906 seconds)
    (2/2) benchmarking "in"...
    done (took 1.727128874 seconds)
  done (took 5.078843016 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.704028943 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.706236919 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.70602234 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.704102127 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.704753471 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.706554926 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.706561625 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.704266963 seconds)
  done (took 15.267980471 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.709564445 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.706552786 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.706207258 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.707004427 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.708064453 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.70834178 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.717658527 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.707328138 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.711368167 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.709596436 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.718207694 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.715988009 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.713929047 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.710478794 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.711256824 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.712673384 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.709918715 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.709183492 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.70965675 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.708760631 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.708855581 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.714464184 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.715410685 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.705371716 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.713284419 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.72195436 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.716642941 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.709245355 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.71083386 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.716771068 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.71079265 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.706045539 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.709962593 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.709739413 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.70913222 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.710165836 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.720674962 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.714224264 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.718072941 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.711177575 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.710342969 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.707556296 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.716195182 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.716141958 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.716014859 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.712065677 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.71087208 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.707073019 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.709595678 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.714738585 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.712015988 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.710954738 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.706604047 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.719421526 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.717416511 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.721467558 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.713328574 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.716053156 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.721648049 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.723314753 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.726103468 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.719743699 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.714366506 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.709746129 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.723208374 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.735574375 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.720866853 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.708610358 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.707928409 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.710270052 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.721178835 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.725511206 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.72292424 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.712839485 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.711973602 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.710894734 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.713982122 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.710355598 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.722392802 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.717729412 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.711358416 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.711608084 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.725199777 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.735936303 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.714523015 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.712019674 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.711505942 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.713930264 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.715036771 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.72547237 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.712373294 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.712050663 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.712664659 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.713855641 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.714922639 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.712771568 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.711704836 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.716755431 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.708468363 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.713120467 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.712969312 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.71853566 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.725152928 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.71384639 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.712319367 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.723477248 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.713987153 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.716168289 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.723505597 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.713820397 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.712362943 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.714823669 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.721847424 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.709951611 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.718905957 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.721575833 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.714989259 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.718286802 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.713287445 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.713605873 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.726630186 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.74227846 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.713381245 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.714024132 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.72194222 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.724629558 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.714321889 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.719335187 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.714061307 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.710594714 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.711483415 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.717647482 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.714181607 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.717339464 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.714883629 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.71830091 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.711364506 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.714018675 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.715239959 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.719510632 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.717084502 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.718327022 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.718346733 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.720150623 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.715495956 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.720140682 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.723828931 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.716063909 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.719262483 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.716806433 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.712483636 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.714283346 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.718058594 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.718113122 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.715670416 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.715733303 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.718861603 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.715331624 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.715228422 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.716426285 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.714877816 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.71782257 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.72213517 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.715976837 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.722353032 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.717988072 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.713567725 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.71535364 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.716227508 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.715847357 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.715409785 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.714817579 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.721594156 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.723977423 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.715878704 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.716808319 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.722082582 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.716138888 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.716867835 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.716416545 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.721532634 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.726068234 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.716181468 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.725676378 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.717552762 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.717035701 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.716555278 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.720291854 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.719598459 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.717498849 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.723352077 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.724000583 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.732052249 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.729002604 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.71837308 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.720333353 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.720327861 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.719913183 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.724268607 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.717634867 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.717602685 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.717008008 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.719259126 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.717262333 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.721938151 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.718130127 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.717262554 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.717374495 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.717657097 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.717897294 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.71745261 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.721947791 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.722615485 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.715836986 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.719072532 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.718400215 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.719878613 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.714063776 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.717031426 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.718222517 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.716555086 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.719454709 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.727629366 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.716896943 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.721821529 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.723791913 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.721767907 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.717887439 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.718821804 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.725667617 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.72159126 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.727737508 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.72032783 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.721649176 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.728606428 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.719585259 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.71915616 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.725888386 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.719975861 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.717237953 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.72457199 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.725929559 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.718581727 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.720215215 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.718101038 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.721331251 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.719044261 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.728795574 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.716239842 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.722758461 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.71933964 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.721840709 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.717159381 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.72367699 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.725378198 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.720130613 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.725448576 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.720275821 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.720987879 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.724172678 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.720793125 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.722957548 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.721051865 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.725528068 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.728455416 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.728268619 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.722137383 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.724408455 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.722282458 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.724257436 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.723873075 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.72244468 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.723627569 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.736955596 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.729662621 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.731219926 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.726189283 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.722434584 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.73074001 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.723856246 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.728497097 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.723328479 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.724529175 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.725501753 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.724552117 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.718058565 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.724282941 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.722023552 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.72582617 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.725470325 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.725070947 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.722934497 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.722978488 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.723170731 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.724485624 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.721857486 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.72409027 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.72244795 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.726600554 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.727897088 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.72246136 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.725354893 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.731250215 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.725099557 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.726558822 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.725119571 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.72582881 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.723359923 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.725724134 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.722197521 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.72983121 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.730376288 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.731100069 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.734366586 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.727247319 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.735094014 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.72372 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.728275479 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.731341342 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.721262639 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.723307398 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.724508174 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.724393874 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.733407373 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.724490159 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.724335656 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.728021399 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.72286381 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.724304093 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.721952518 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.723493877 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.72355636 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.724142876 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.735546314 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.725941795 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.730454328 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.728602689 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.72163302 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.724297353 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.722809881 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.723966737 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.730033343 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.724724783 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.726708157 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.72657944 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.724837382 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.724205898 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.724985188 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.723894173 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.723172969 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.724336802 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.734389002 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.725428276 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.72891834 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.724808324 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.735198232 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.724848383 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.735303452 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.726416687 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.726315095 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.725446324 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.725940598 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.726995141 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.725578048 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.729865879 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.72534316 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.727426406 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.728281021 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.726647111 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.728630513 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.728914046 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.72524006 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.727555241 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.737685037 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.748873761 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.729491601 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.730215605 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.722602164 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.730026418 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.729986917 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.724909923 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.724831566 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.731754503 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.738574672 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.733267658 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.728867446 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.726438727 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.728828847 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.726818694 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.726376849 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.726591161 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.726278345 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.726373524 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.728828227 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.726397218 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.733703113 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.726479116 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.728031854 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.730858596 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.729647074 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.739647792 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.728038804 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.728766585 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.727781873 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.726685343 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.730199635 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.729467846 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.726611138 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.730977043 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.727779878 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.73240666 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.735940744 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.733976522 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.734045451 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.729370576 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.727220361 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.732171545 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.729551357 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.726936517 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.728529451 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.727970735 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.732686595 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.728036135 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.73021543 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.727108612 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.727892549 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.729838756 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.728668061 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.735556177 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.736876641 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.730954789 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.725681723 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.727746698 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.727843622 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.729519549 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.731988344 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.742244656 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.735068811 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.74291435 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.738216129 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.732641722 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.732095772 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.735184104 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.7391249 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.728026538 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.733306475 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.729777644 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.73339413 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.731166164 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.735257136 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.730494599 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.742012344 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.732801618 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.73035792 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.741683258 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.734667461 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.729511943 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.734323102 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.73612099 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.731214255 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.726967279 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.730247308 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.732276317 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.740185517 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.7338062 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.729513379 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.734766284 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.730048098 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.734185325 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.734313491 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.729659432 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.734203245 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.727702255 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.735576383 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.730687556 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.730960578 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.727200145 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.73102187 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.731896296 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.737146602 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.738635997 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.727810467 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.73736386 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.734658911 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.733075195 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.733690243 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.732123389 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.728808736 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.729283155 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.732765558 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.735094722 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.737447604 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.739826359 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.735044629 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.734663337 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.732645119 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.731928544 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.737690875 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.745401858 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.737676387 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.728656203 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.732413071 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.732677939 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.739268103 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.733726616 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.733086315 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.734556864 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.737589381 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.732970076 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.73230913 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.730667068 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.738611844 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.752390621 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.733448709 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.735187898 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.7360196 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.739566668 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.731894323 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.729483095 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.733455261 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.736545692 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.738401526 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.740077948 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.733033809 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.74238394 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.738225014 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.736575123 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.736596008 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.739166998 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.742285802 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.739426196 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.734419337 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.733259811 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.741341074 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.753463072 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.733717192 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.746346083 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.76523837 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.736445659 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.735754698 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.733307818 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.736014123 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.734530149 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.736901888 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.735222213 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.735283217 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.734287557 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.733930167 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.737052653 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.742789015 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.739059453 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.735029854 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.734159479 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.734684833 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.737881679 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.732019073 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.733377186 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.734083386 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.73430278 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.734563404 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.735372364 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.738240236 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.750515373 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.747827622 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.736009141 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.73489887 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.7330676 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.743194675 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.74026388 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.749096575 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.742822659 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.736042633 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.736399343 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.740186394 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.735820533 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.732571393 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.738413955 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.738741342 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.739644773 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.73350249 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.752136308 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.745907191 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.745838619 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.740554953 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.739170883 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.73732899 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.739742834 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.736384894 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.736008338 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.740721556 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.736453219 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.738648621 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.736066967 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.736680536 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.742121671 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.745457623 seconds)
  done (took 1029.930436456 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.734275931 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.733631812 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.734171748 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.735731084 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.736518945 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.733614764 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.735169963 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.734823148 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.734528127 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.733692545 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.732778536 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.733024991 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.732571731 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.733147741 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.735104936 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.734471725 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.735041279 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.734954985 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.734971985 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.735430148 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.734439331 seconds)
  done (took 38.075144605 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.737358235 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.734089499 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.734545918 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.737103016 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.734562254 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.737774312 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.735167204 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.737229439 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.737564351 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.734961041 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.738457212 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.737036281 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.73423148 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.734625185 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.735924467 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.738454176 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.738328004 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.735279917 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.736995723 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.738500846 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.738547038 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.736146968 seconds)
  done (took 39.857305556 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.739096081 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.738390637 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.740312822 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.737063173 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.739451023 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.736922428 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.739451916 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.738189032 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.739679102 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.740433341 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.73846493 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.740879227 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.748851269 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.743878277 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.740195408 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.739400306 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.882246584 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.739143667 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.740244305 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.739325707 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.735978887 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.749156259 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.737706915 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.736855933 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.739783852 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.740036732 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.741667357 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.738995134 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.740248319 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.74082054 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.743908807 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.739835593 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.742210835 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.74483294 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.740166726 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.741256328 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.743469129 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.740851783 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.737404246 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.740775034 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.752452725 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.759786283 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.741032589 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.749235203 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.740683988 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.741024346 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.74658796 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.748881025 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.738386911 seconds)
  done (took 87.131058212 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.738746428 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.741413145 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.737495174 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.740523136 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.741067892 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.74245846 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.74298697 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.744511061 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.740408411 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.739905093 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.741173843 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.738235728 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.738759456 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.740964553 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.741756802 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.738650361 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.739958969 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.738404867 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.739121707 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.738120676 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.739929914 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.742175079 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.741580166 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.740672518 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.743394693 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.740675319 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.739022694 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.741329606 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.739829751 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.73964212 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.742635034 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.741596014 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.742820497 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.740194522 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.740222214 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.743151965 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.743423338 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.740447633 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.742921828 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.740099261 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.743037449 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.742737581 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.742744309 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.742927186 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.739683815 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.739543939 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.74100724 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.739994622 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.741121701 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.742045605 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.743714339 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.742029623 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.743745096 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.740463707 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.74296555 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.743530245 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.740560051 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.740135958 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.743832637 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.740836334 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.739840295 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.743203578 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.741142742 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.742566586 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.742553161 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.740700603 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.741589441 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.743752745 seconds)
  done (took 120.062184927 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.744266208 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.745426471 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.74418424 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.743827011 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.744975966 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.744157405 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.747153752 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.745532014 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.745490908 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.74404407 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.745540712 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.744707668 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.745762468 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.745595469 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.745263134 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.744862733 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.744659645 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.744659276 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.746310386 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.74546693 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.745427854 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.745558594 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.745131543 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.745246059 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.745958098 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.745291758 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.745580298 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.745567779 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.745818221 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.74508652 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.745408542 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.745871407 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.746449432 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.745140723 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.746358732 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.747161339 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.745741682 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.746075007 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.746068766 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.746108954 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.746187211 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.745773096 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.746105117 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.745755896 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.746681527 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.745280709 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.74662211 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.746777015 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.746221078 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.746800466 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.746273159 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.746091789 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.747677031 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.747005268 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.746536123 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.746890116 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.746883773 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.747404472 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.746922047 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.74784648 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.74744991 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.746286902 seconds)
  done (took 109.903557093 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.745816718 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.746057519 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.744262497 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.744554403 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.746112505 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.743209464 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.747959306 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.74760465 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.746775528 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.747554308 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.747202372 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.744794209 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.747045071 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.747783249 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.745293766 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.746826565 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.745120735 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.745119782 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.748173201 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.745373345 seconds)
  done (took 36.584910667 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.744972472 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.748765945 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.745133672 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.746092179 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.747668376 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.744556934 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.747871118 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.747425408 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.744633893 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.748097777 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.748279948 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.747980572 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.746231835 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.745108643 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.748594517 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.74704733 seconds)
  done (took 29.612547796 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.745300951 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.75029612 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.748691103 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.749692284 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.746744426 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.745246468 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.748261641 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.746188268 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.747059835 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.750141978 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.749871002 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.749030874 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.749157563 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.74896811 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.745415714 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.750328364 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.746069622 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.74723228 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.74857295 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.749551918 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.748783703 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.746422918 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.749691868 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.749849865 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.747279502 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.747503251 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.748855221 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.74746724 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.747386861 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.750349005 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.748724062 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.746485946 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.747772246 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.748617299 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.74986305 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.746892141 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.751661352 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.751558965 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.749832377 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.750263675 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.750934669 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.748070697 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.75020155 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.751053645 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.748220487 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.750015808 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.748432608 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.747841418 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.747956693 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.749436909 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.750717047 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.752404201 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.749385811 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.75080995 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.751409569 seconds)
  done (took 97.848956741 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.751060809 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.750983582 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.747932766 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.75149396 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.750629444 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.747994688 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.750548438 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.748309025 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.747764256 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.750570077 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.749533942 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.750703647 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.749068743 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.751204509 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.748921791 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.751666164 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.749120848 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.749356543 seconds)
  done (took 33.163932043 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.748965715 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.749970191 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.755849896 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.748809177 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.748639684 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.752043433 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.749547151 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.751803816 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.751753773 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.74918917 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.749092915 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.752070244 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.751682972 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.752241016 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.750468469 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.749411029 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.752248191 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.751932911 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.75007597 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.750041332 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.753598376 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.752670995 seconds)
  done (took 40.189197558 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.752176078 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.752749516 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.770672097 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.772659126 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.775030558 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.78577807 seconds)
  done (took 12.277225721 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.75020503 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.753320325 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.751065324 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.753038902 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.753113663 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.751202701 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.750319031 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.752586336 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.756015771 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.753445643 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.751777547 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.753594128 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.753919632 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.750728589 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.752236609 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.753409225 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.749948572 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.749823455 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.751092945 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.754112057 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.751679169 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.753620517 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.751554653 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.751728252 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.75199745 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.75198163 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.75489991 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.75165506 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.750579039 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.754766447 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.755919339 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.752894018 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.755693036 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.752770216 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.754478242 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.754873228 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.753306929 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.754976519 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.755007004 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.753107726 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.754914937 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.756574352 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.755731717 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.752371063 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.755195161 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.752740134 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.753009752 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.752773442 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.752901312 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.756609601 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.755329147 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.753543922 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.755599981 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.756547137 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.754774789 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.756504005 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.75252361 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.753573624 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.757194638 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.753746744 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.754111487 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.755986162 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.755403187 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.756225539 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.75729893 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.752746809 seconds)
  done (took 117.406720082 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.753304119 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.75409124 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.75410381 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.754480918 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.75423449 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.753810205 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.752569637 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.754072293 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.754847509 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.754381679 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.756296202 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.753196365 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.755332468 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.753656842 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.75442767 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.753448286 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.754576448 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.754409699 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.754863076 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.756939121 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.754894229 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.754297576 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.754715956 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.753951503 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.75547617 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.759744098 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.754744009 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.755762283 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.755846494 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.756748478 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.754497437 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.755874545 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.755791923 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.755077488 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.754586925 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.75419578 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.75526588 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.756653513 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.755355129 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.75793065 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.754932457 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.75859819 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.756796021 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.75654213 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.755746033 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.75616688 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.756856792 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.75535831 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.757165871 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.756562166 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.755480475 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.755504149 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.756233159 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.756250334 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.756210652 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.756500188 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.756073475 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.756382833 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.756095523 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.759673892 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.757024794 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.75604598 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.758391302 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.756141245 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.756755273 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.757907762 seconds)
  done (took 117.543684766 seconds)
done (took 2398.291628634 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.792948539 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.83817742 seconds)
  done (took 15.304764851 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.92353268 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.875133857 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.75986052 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.765408785 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.761375077 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.784092196 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.756886169 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.760548268 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.761935001 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.7618972 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.761261915 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.947065186 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.775500449 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.761809497 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.761270087 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.857334467 seconds)
  done (took 50.454326674 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.765198335 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.765800147 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.776569014 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.771197901 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.76461366 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.7785011 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.801491604 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.771198558 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.800661999 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.782357491 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.833672361 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.779262324 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.764711653 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.814402145 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.779092101 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.781336388 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.860012988 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.845470591 seconds)
  done (took 33.911697949 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.843928331 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.774125405 seconds)
  done (took 10.301382586 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.769081579 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.813293996 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.786219946 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.788724135 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.784985772 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.782379881 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.780873854 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.756669878 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.76381623 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.783651115 seconds)
  done (took 69.48969136 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.771176518 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.767107239 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.765743105 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.765777818 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.760082415 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.76276205 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.764969109 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.763871973 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.424520343 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.805581867 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.772772415 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.771226168 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.767191192 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.768006135 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.760499289 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.790584688 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.888065321 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.760582248 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.759730635 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.772515701 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.765583713 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.817538067 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.779799696 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.764619816 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.79606634 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.423822288 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.779542107 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.773127255 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.870258092 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.761833753 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.765693215 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.768008906 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.77052107 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.174406713 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.029163285 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.767514494 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.783068567 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.77475536 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.760597252 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.879703648 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.76844685 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.775055346 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.528297541 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.008133994 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.866755543 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.809164646 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.104603831 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.784651437 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.768904564 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.797290853 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.773202885 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.769649795 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.78076409 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.261833435 seconds)
  done (took 126.64387026 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.76034881 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.111244445 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.932368805 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.764423275 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.051293254 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.974477635 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.762823321 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.811431492 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.764069346 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.992824221 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.019056228 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.869911012 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.763566596 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.761174334 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.761344716 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.759203966 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.918662565 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.837779581 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.76393472 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.758452825 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.792621052 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.00744673 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.888627262 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.764234376 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.791799637 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.977379736 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.891388271 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.867004503 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.492419307 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.760502817 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.828919246 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.767316395 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.763597709 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.760663195 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.920642961 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.859171283 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.847175834 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.763087146 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.759801617 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.759637452 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.425539658 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.964988174 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.861759908 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.895826188 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.017875762 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.971100666 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.551276995 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.761477169 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.504600926 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.930912559 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.996802576 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.996440214 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.886838833 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.766037652 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.101031006 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.759540461 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.763077365 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.015371682 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.987999982 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.863853442 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.765604565 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.763933891 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.761615463 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.006683974 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.764612064 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.862614732 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.764962346 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.761608502 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.863012479 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.866138745 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.997440961 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.980955409 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.798714921 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.109958478 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.288407376 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.013355776 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.832949858 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.017156867 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.766288758 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.762133781 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.845391953 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.622211511 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.020362057 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.011970996 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.013112493 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.802982607 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.494538512 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.763605077 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.993995692 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.989697935 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.027978896 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.014162376 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.003842703 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.116255035 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.763797344 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.764007474 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.097248088 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.892101078 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.767015295 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.112049963 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.998465205 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.294887581 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.793773565 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.072464628 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.897781572 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.765427318 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.398771848 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.765561951 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.99670348 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.808924908 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.765250385 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.765035772 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.98768769 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.759177671 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.764004552 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.416100735 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.830359555 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.769334336 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.001375498 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.76639445 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.03780525 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.767661217 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.000372549 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.295674873 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.799283925 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.942771657 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.01465216 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.767855336 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.009041925 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.012313084 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.883570932 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.989055036 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.484916601 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.764086584 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.054249839 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.768624799 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.764929144 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.940025758 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.767337333 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.911505791 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.769510574 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.063570529 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.792415924 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.000382141 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.770439736 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.02517788 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.80199573 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.820979324 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.769678034 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.895358907 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.766671776 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.60086847 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.927955278 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.768518536 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.765542672 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.338707817 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.765005104 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.917912683 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.996760964 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.791242659 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.843498013 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.440988236 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.766804393 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.856045539 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.793853616 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.162566468 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.769588021 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.465079657 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.768980355 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.767202136 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.766998863 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.008486141 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.954093864 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.770236765 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.768420375 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.678599308 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.766763891 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.766827185 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.951690893 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.11267692 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.767741678 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.974097901 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.769572196 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.89934196 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.772408479 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.850101783 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.106123095 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.76895907 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.768296076 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.768213391 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.767902471 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.767140877 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.982150997 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.796991771 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.267028067 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.908323779 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.044759866 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.082898699 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.013509974 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.816161815 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.772314852 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.028202388 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.771874858 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.834718885 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.771382769 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.792388041 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.00083525 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.772204049 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.035873052 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.045331919 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.717479993 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.820119135 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.771162761 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.770872886 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.768776539 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.918190149 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.858685553 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.772358001 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.76828727 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.88873687 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.89601748 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.982757103 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.771881251 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.935379097 seconds)
  done (took 880.458127122 seconds)
done (took 1188.23885688 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.768851494 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.76971825 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.756133692 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.76883801 seconds)
  done (took 28.752865336 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.772021609 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.771934316 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.771350021 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.770696512 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.770579456 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.770558446 seconds)
  done (took 12.311732429 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.808137977 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.765684316 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.768714843 seconds)
  done (took 21.027035936 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.849407967 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.156115996 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.905532085 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.188764912 seconds)
  done (took 9.785940621 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.773012364 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.773258372 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.77224014 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.77310398 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.772880472 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.772714013 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.772829143 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.772103574 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.774227704 seconds)
  done (took 17.64377407 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.834856107 seconds)
done (took 95.045420476 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.845555299 seconds)
    (2/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.772757364 seconds)
    (3/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.850253107 seconds)
    (4/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.984207132 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.863690218 seconds)
    (6/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.747249128 seconds)
    (7/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.809174475 seconds)
    (8/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 3.121711661 seconds)
    (9/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.787556926 seconds)
    (10/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.921054113 seconds)
    (11/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.926521532 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.788191701 seconds)
    (13/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.030543007 seconds)
    (14/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.852495587 seconds)
    (15/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.194603395 seconds)
    (16/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.791091249 seconds)
    (17/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.930407562 seconds)
    (18/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.859229995 seconds)
    (19/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.907638264 seconds)
    (20/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.79936548 seconds)
    (21/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.766489206 seconds)
    (22/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 7.10061772 seconds)
    (23/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.884802109 seconds)
    (24/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.193096603 seconds)
    (25/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.751877264 seconds)
    (26/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.377212333 seconds)
    (27/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.022634435 seconds)
    (28/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.002303208 seconds)
    (29/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.865572218 seconds)
    (30/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.972021946 seconds)
    (31/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.778241849 seconds)
    (32/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.78286544 seconds)
    (33/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.767137353 seconds)
    (34/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.162551079 seconds)
    (35/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.609383895 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.446824902 seconds)
    (37/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.795373056 seconds)
    (38/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.76697551 seconds)
    (39/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.865526352 seconds)
    (40/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.006594796 seconds)
    (41/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.942539045 seconds)
    (42/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.866060815 seconds)
    (43/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.95741405 seconds)
    (44/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.882957292 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.385183594 seconds)
    (46/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.790145048 seconds)
    (47/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.151298944 seconds)
    (48/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.831422125 seconds)
    (49/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.902831754 seconds)
    (50/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.055839208 seconds)
    (51/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.671088883 seconds)
    (52/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.970586057 seconds)
    (53/309) benchmarking ("sort", Bool, false)...
    done (took 1.990917081 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.390486872 seconds)
    (55/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.126583764 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.714306756 seconds)
    (57/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.864169562 seconds)
    (58/309) benchmarking ("sort", Int64, false)...
    done (took 5.435648565 seconds)
    (59/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.77432358 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.859199274 seconds)
    (61/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.944395066 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.883640029 seconds)
    (63/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.873823648 seconds)
    (64/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.025057158 seconds)
    (65/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.791295082 seconds)
    (66/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.749724398 seconds)
    (67/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.897104161 seconds)
    (68/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.933282789 seconds)
    (69/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.79068941 seconds)
    (70/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.974536203 seconds)
    (71/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.455934202 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.888118766 seconds)
    (73/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.859219183 seconds)
    (74/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.749767633 seconds)
    (75/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.952361927 seconds)
    (76/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.778024585 seconds)
    (77/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.966644095 seconds)
    (78/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.797419637 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.062453698 seconds)
    (80/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.111227397 seconds)
    (81/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.061969266 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.891255657 seconds)
    (83/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.787878681 seconds)
    (84/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.206637474 seconds)
    (85/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.919348671 seconds)
    (86/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.934673694 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.872022721 seconds)
    (88/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.852814046 seconds)
    (89/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.878507018 seconds)
    (90/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.133410796 seconds)
    (91/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.001944228 seconds)
    (92/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.756333583 seconds)
    (93/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.867119113 seconds)
    (94/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.659107859 seconds)
    (95/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.005107773 seconds)
    (96/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.935896075 seconds)
    (97/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.77254503 seconds)
    (98/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.714128506 seconds)
    (99/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.542832346 seconds)
    (100/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.075621248 seconds)
    (101/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.760313248 seconds)
    (102/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.538584465 seconds)
    (103/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.86579784 seconds)
    (104/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.791438371 seconds)
    (105/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.858345802 seconds)
    (106/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.963760592 seconds)
    (107/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.758689952 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.477676239 seconds)
    (109/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.86399139 seconds)
    (110/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.903742335 seconds)
    (111/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.134930037 seconds)
    (112/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.917106071 seconds)
    (113/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.754495701 seconds)
    (114/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 2.528720772 seconds)
    (115/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.090185602 seconds)
    (116/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.064441902 seconds)
    (117/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.775116141 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 3.586939521 seconds)
    (119/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.898668559 seconds)
    (120/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.994157299 seconds)
    (121/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.919434272 seconds)
    (122/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.807476627 seconds)
    (123/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.797789252 seconds)
    (124/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.836917276 seconds)
    (125/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.792308684 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.126936741 seconds)
    (127/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.699104866 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.107469811 seconds)
    (129/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.00917104 seconds)
    (130/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.785265649 seconds)
    (131/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.809043255 seconds)
    (132/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.090987647 seconds)
    (133/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.169633873 seconds)
    (134/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.801432539 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.027807055 seconds)
    (136/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.929919951 seconds)
    (137/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.754503664 seconds)
    (138/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.917103178 seconds)
    (139/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.534222565 seconds)
    (140/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.012139303 seconds)
    (141/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.875442253 seconds)
    (142/309) benchmarking ("sort", BigInt, false)...
    done (took 6.773136247 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.036851246 seconds)
    (144/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.955150349 seconds)
    (145/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.75769434 seconds)
    (146/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.827449775 seconds)
    (147/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.784889323 seconds)
    (148/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.279228068 seconds)
    (149/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.920778604 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.777546666 seconds)
    (151/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.810760047 seconds)
    (152/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.777498224 seconds)
    (153/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 3.529289853 seconds)
    (154/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.005789025 seconds)
    (155/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.557332236 seconds)
    (156/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.945599151 seconds)
    (157/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.780738524 seconds)
    (158/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 2.045023262 seconds)
    (159/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.842683465 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.192032638 seconds)
    (161/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.797560956 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.726103404 seconds)
    (163/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.789148829 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.587414693 seconds)
    (165/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.788100504 seconds)
    (166/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.993439838 seconds)
    (167/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.787361766 seconds)
    (168/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.786744501 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.924973536 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.772474848 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.907871099 seconds)
    (172/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.914126038 seconds)
    (173/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.911035055 seconds)
    (174/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.093622318 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.825579077 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.788131402 seconds)
    (177/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.823406244 seconds)
    (178/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.778035045 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.176360821 seconds)
    (180/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.798309815 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.717493253 seconds)
    (182/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.159191821 seconds)
    (183/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.766181954 seconds)
    (184/309) benchmarking ("sort", Int8, false)...
    done (took 4.771064848 seconds)
    (185/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.881839597 seconds)
    (186/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.873927976 seconds)
    (187/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.052651633 seconds)
    (188/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.856211643 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.133607438 seconds)
    (190/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.094681171 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.710251353 seconds)
    (192/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.922615884 seconds)
    (193/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.833179108 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.461655485 seconds)
    (195/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.875435474 seconds)
    (196/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.761340853 seconds)
    (197/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.146351722 seconds)
    (198/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.76853572 seconds)
    (199/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.772543796 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.923534925 seconds)
    (201/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.78722389 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.095481205 seconds)
    (203/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.285386935 seconds)
    (204/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.789914824 seconds)
    (205/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.026134247 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.465120704 seconds)
    (207/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.162614496 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.713472675 seconds)
    (209/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.79001947 seconds)
    (210/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.049558405 seconds)
    (211/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.791712263 seconds)
    (212/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.133784047 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.429842077 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.985318474 seconds)
    (215/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.782286499 seconds)
    (216/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.810998726 seconds)
    (217/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.875242293 seconds)
    (218/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.790300482 seconds)
    (219/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.952518783 seconds)
    (220/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.130868828 seconds)
    (221/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.861647856 seconds)
    (222/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.223796533 seconds)
    (223/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.277013078 seconds)
    (224/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.818419757 seconds)
    (225/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.788906846 seconds)
    (226/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.781051742 seconds)
    (227/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 8.184746756 seconds)
    (228/309) benchmarking ("sort", Float32, false)...
    done (took 6.605731775 seconds)
    (229/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.899578007 seconds)
    (230/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.783783092 seconds)
    (231/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.888795065 seconds)
    (232/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.884295615 seconds)
    (233/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.976847845 seconds)
    (234/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.953455177 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.787811362 seconds)
    (236/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.109864398 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.141374209 seconds)
    (238/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.921449495 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.127729065 seconds)
    (240/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.729673928 seconds)
    (241/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.868693089 seconds)
    (242/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.940323702 seconds)
    (243/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.020726527 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.192167035 seconds)
    (245/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.78448211 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.324992855 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.153433403 seconds)
    (248/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.893375074 seconds)
    (249/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.785310736 seconds)
    (250/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.135262992 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.20048332 seconds)
    (252/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.852229117 seconds)
    (253/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.155831287 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.11382508 seconds)
    (255/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.96834777 seconds)
    (256/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.801418644 seconds)
    (257/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.963314891 seconds)
    (258/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.855735927 seconds)
    (259/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.783377912 seconds)
    (260/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 8.14567682 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.141065148 seconds)
    (262/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.793713817 seconds)
    (263/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.897003665 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.204339104 seconds)
    (265/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.965062129 seconds)
    (266/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.657211799 seconds)
    (267/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.814297775 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.783725305 seconds)
    (269/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.958089263 seconds)
    (270/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.159436331 seconds)
    (271/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.966640236 seconds)
    (272/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.849019286 seconds)
    (273/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.115405879 seconds)
    (274/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.774500747 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.568503046 seconds)
    (276/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.810254458 seconds)
    (277/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.870127243 seconds)
    (278/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.939190224 seconds)
    (279/309) benchmarking ("sort", Float64, false)...
    done (took 5.544176134 seconds)
    (280/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.78840259 seconds)
    (281/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.76945481 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 3.216297069 seconds)
    (283/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.814031942 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.021445671 seconds)
    (285/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 3.419721472 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.801742351 seconds)
    (287/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 3.433518072 seconds)
    (288/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.774971624 seconds)
    (289/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.026958456 seconds)
    (290/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.798676184 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.112192517 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.593450642 seconds)
    (293/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.526417316 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.929971667 seconds)
    (295/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.161620936 seconds)
    (296/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.919101803 seconds)
    (297/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.904246638 seconds)
    (298/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.661570514 seconds)
    (299/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.893234836 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.064151173 seconds)
    (301/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.699139493 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.830635833 seconds)
    (303/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.856706589 seconds)
    (304/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.833621274 seconds)
    (305/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.135765539 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.014580681 seconds)
    (307/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.079475288 seconds)
    (308/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.800922508 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.997345832 seconds)
  done (took 977.937287117 seconds)
done (took 979.685355874 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.821630744 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.818659159 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.799189545 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.820832683 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.91281431 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.824840911 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.809833808 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.800768497 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.847135408 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.848665333 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.798599403 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.822488305 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.802438349 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.80134038 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.799209426 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.816537216 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.117041178 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.839532551 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.819075039 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.809787131 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.819749588 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.798894627 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.850084012 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.823200815 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.80406079 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.802944271 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.80424178 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.821250552 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.914089515 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.80400334 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.803092737 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.812975624 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.116267533 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.831219932 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.796392313 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.822060474 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.812922991 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.81041973 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.805037381 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.833963536 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.207037186 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.842926713 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.804589293 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.801939769 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.80121611 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.804816962 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.804847295 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.806892992 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.816439375 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.819707888 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.197804752 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.859867482 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.806403355 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.802331634 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.81325987 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.803439683 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.806516716 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.820781023 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.824666558 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.819020838 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.101895022 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.839364464 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.805116887 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.821232261 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.810902735 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.234280267 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.841444455 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.80578849 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.207935136 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.848728964 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.23464592 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.855396658 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.803594305 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.818418358 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.835472182 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.119476508 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.836415476 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.802544791 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.812355353 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.800982627 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.813737203 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.817562869 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.807087229 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.804710459 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.81963673 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.828668502 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.812973926 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.805736386 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.812853058 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.824800792 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.811286077 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.816273399 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.807883993 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.800169587 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.814419526 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.807241688 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.808209604 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.807329622 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.809887718 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.814313624 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.206734813 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.866116039 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.801847766 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.80092603 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.804338564 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.81959177 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.206015311 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.849632142 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.826057178 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.851118415 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.806089643 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.10258134 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.840517242 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.820924106 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.812417475 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.806923223 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.799718791 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.103309928 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.233264809 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.863924397 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.805563088 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.802569546 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.82130893 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.805126598 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.800539773 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.122773977 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.837086759 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.81989775 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.927104568 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.814156746 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.836930694 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.801494893 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.806810663 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.832069787 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.821727594 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.836294295 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.806305457 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.821872972 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.821418398 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.79980258 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.814456512 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.814625994 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.804875759 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.807374211 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.798776246 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.832410797 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.820292909 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.818525505 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.825475246 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.926106043 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.801692958 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.102597852 seconds)
done (took 283.808276111 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.884385424 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.79350226 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.899308121 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.798506841 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.883194625 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.889360698 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.795114584 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.797267985 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.798218795 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.211796902 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.795869611 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.796991145 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.797067615 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.795661521 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.882446409 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.802734952 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.796491092 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.143207563 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.798136332 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.877374885 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.795135292 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.792392921 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.795756659 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.248639601 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.791925981 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.792702695 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.882198139 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.796360658 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.163824679 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.792074195 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.790028426 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.200215111 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.901256567 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.811537063 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.803880387 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.798745277 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.87712399 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.796529556 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.878281219 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.877575097 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.892103612 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.831516511 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.794170129 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.789918826 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.794606741 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.790522657 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.786938181 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.816117966 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.783176504 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.786364398 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.15991957 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.798663675 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.78542486 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.787502119 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.785291207 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.819522919 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.786250795 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.789101375 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.889437244 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.787370378 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.851860106 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.192794219 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.167907495 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.787783105 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.78553945 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.782751907 seconds)
  done (took 179.56141513 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.851579808 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.860408306 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.850809564 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.790279648 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.833833269 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.853783306 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.789059568 seconds)
  done (took 14.531136991 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.790546788 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.784193023 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.836335514 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.833393173 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.782155676 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.938327642 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.782479162 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.79376113 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.781081321 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.81011297 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.784244811 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.78368322 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.791227536 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.777154546 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.831155753 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.793354394 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.899013143 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.78367624 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.782811299 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.932209742 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.780305378 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.789162935 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.809987728 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.795656817 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.785080796 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.790001908 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.379715507 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.784288715 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.780097564 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.782125742 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.777789447 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.822380233 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.7803634 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.777226055 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.778267444 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.896270981 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.781214502 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.778105336 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.780996002 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.78085251 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.78123818 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.781069762 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.78090003 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.778157573 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.781030766 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.804413489 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.781599136 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.7816727 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.780121948 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.782654264 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.807616741 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.782414554 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.779761896 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.778953404 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.824366805 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.789888918 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.782334675 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.779114299 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.782651458 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.777999931 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.931229107 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.831697716 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.780656379 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.831401678 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.78314128 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.782108508 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.782468787 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.781077363 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.874275987 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.781961775 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.830165666 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.77774291 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.941179269 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.803823115 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.782854002 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.783780742 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.785634021 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.7823072 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.775206065 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.788427884 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.778956164 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.782082718 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.787803776 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.778262729 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.778229459 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.892973287 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.920336165 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.778696406 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.794225526 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.788381125 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.777876436 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.825666281 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.779934611 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.777279107 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.83736769 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.898343515 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.810320277 seconds)
  done (took 197.136449727 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.786438978 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.790005738 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.784096307 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.799944766 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.783199002 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.780753325 seconds)
  done (took 12.419367924 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.784243958 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.782452288 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.779759004 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.779890669 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.780640191 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.782069215 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.78248879 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.783835013 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.784360529 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.780435418 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.782067604 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.780173162 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.779803739 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.778920994 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.781136861 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.777559336 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.780643525 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.777502432 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.779943059 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.77979402 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.937816825 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.779887481 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.779978615 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.785937305 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.785031155 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.780526377 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.788717742 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.779224141 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.779704978 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.789682732 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.785626797 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.781571279 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.785384976 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.786387184 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.785041441 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.786094214 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.784275888 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.781167436 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.776646456 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.780285287 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.783264713 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.780047492 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.779059673 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.780876957 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.782120168 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.78865635 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.784126369 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.788280487 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.781144083 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.780597084 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.780464954 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.779197644 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.779634881 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.782432456 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.785631767 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.787074381 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.785635786 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.782110877 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.779493125 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.785104492 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.780055199 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.780488726 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.78202412 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.785206148 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.778115468 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.781639683 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.784686588 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.783674379 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.780338258 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.778736702 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.780681798 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.775716252 seconds)
  done (took 131.159515548 seconds)
done (took 536.540692717 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.865250482 seconds)
  done (took 8.558965311 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.869654151 seconds)
  done (took 8.648129177 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.355472305 seconds)
  done (took 10.0807923 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.832029843 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.840914358 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.820692471 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.813593944 seconds)
  done (took 29.059560158 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.168609007 seconds)
  done (took 8.890627217 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.826767051 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.803742922 seconds)
  done (took 15.417452178 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.94574987 seconds)
  done (took 8.66717344 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.823914247 seconds)
  done (took 8.554260273 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.806144268 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.795555308 seconds)
  done (took 15.344019169 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.779162782 seconds)
  done (took 8.497017335 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.961961976 seconds)
  done (took 9.77047603 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.819498352 seconds)
  done (took 8.602309761 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.817543503 seconds)
  done (took 8.531102184 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.853188196 seconds)
  done (took 8.566042206 seconds)
done (took 158.884018762 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.797624187 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.793249104 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.793649977 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.794069638 seconds)
  done (took 28.889902659 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.831131307 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.832480457 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.834822289 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.843460608 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.834697609 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.831280697 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.825917823 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.825386226 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.843866832 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.835048839 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.834963606 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.834682211 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.834479004 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.826881631 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.836114959 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.834320465 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.842962948 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.833718059 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.825665431 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.835260455 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.800246107 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.843639876 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.835521012 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.800040121 seconds)
  done (took 45.669524497 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.998647013 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.872514907 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.953851532 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.852195764 seconds)
  done (took 9.390354915 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.851497263 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.854378631 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.865798801 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.904234337 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.926952111 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.869280249 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.82755824 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.822597073 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.809007443 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.854249112 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.930184087 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.849059659 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.942404697 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.801561839 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.987878969 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.800747721 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.80266859 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.853897074 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.905894831 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.917876995 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.803021587 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.853031489 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.856514287 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.848272474 seconds)
  done (took 46.451791327 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.799369702 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.807845482 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.808194376 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.800108771 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.800764246 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.802160822 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.808247998 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.802446104 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.821679154 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.802633059 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.800177984 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.800393296 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.798573796 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.80053877 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.800365414 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.813543072 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.813780961 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.802353355 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.803936299 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.807001811 seconds)
  done (took 37.809039065 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.79636538 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.649640842 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.149686275 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.054434307 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.797959939 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.798288687 seconds)
  done (took 30.961639562 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.816316181 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.808577143 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.803680869 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.860958249 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.951446055 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.817572428 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.802255005 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.815512491 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.850283324 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.875717674 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.830311294 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.833250352 seconds)
  done (took 23.780582964 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.799050342 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.801605723 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.803408229 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.817523904 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.815108747 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.811131882 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.810369671 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.796943083 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.818314939 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.822910901 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.812414831 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.816827642 seconds)
  done (took 43.444673918 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.882143715 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.685825708 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.246217181 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.267257765 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.333738058 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.00736803 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.797110048 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.892708836 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.802674807 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.072011993 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.085609914 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013038852 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.064598606 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.622299677 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.819908638 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.253659347 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.102486757 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.027450062 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.839691421 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.406408089 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915406946 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.410209108 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.472007685 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.918503837 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.022440027 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.94538609 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.073081658 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.768450168 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.864665439 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.821326682 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.822226608 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.813424995 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.088267792 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.93854197 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.888393728 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.823192305 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.236790396 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.526570709 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.79614666 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.484154281 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.306261021 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.92290492 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.82032643 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.81475266 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.745396887 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.3990475 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.914054951 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.817385473 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.515418298 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.814319971 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.824256318 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.892021212 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.817077432 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.629337168 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.503135334 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.090283613 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.810980022 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.82090487 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.380589624 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.801428079 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.489667167 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.757725989 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.908588632 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.417361879 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.262084092 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.964425008 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.816966494 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.818607302 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.749409074 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.468722227 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.922217246 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.959073049 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.834385738 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.462329124 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.100383375 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.173575079 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.867894421 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.088543004 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.670128822 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.758220969 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.039099051 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.764801639 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.748858369 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.654659979 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.748503188 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.027204469 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851042209 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.383483625 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.849015545 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.906203931 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.826292739 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.837448414 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.822124142 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.038486588 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.69278079 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.816735095 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.05838303 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.072224119 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.838319908 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.909076282 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.750712443 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.819580158 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.070933658 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.026475871 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.139740128 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.273600994 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.903736141 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.817121024 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.831804865 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.811787682 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.834425828 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.085246056 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.877139881 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.807039085 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929522183 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.775145023 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.063100939 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.845513679 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.919788013 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.126015423 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.050530279 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.136325767 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.06770021 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.883747101 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.818475597 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.819594874 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.483484179 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.42729916 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.04125552 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.813033876 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.377749698 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.836985607 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.821770715 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.752659891 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.450693041 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.127731969 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.896084323 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.03997049 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.822600284 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.097233106 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.751632984 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.962590012 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.814879085 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.039366102 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.457327519 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.884813832 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.077007253 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.148324349 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.134952131 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.837094329 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835974755 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.916012166 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840301736 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.335291821 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.080374192 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.821761679 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.823663936 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.480854768 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.872975623 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.825491704 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.823495997 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.354836213 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.092992107 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.848515411 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.827709389 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.707221239 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.833311471 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.885677485 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.823866456 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.829710598 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.346322614 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.33209373 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.827068272 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.506469418 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.042773351 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.829017675 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.422375861 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.989413133 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.83890622 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.091295077 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.888303162 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.753920722 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.521976698 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.523217616 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.82178229 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.755521996 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.826312707 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824254506 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.828368745 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.017989554 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.093116117 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.862628006 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.473030034 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.9198335 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.831295093 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.826953229 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.825670361 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.342932141 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.810954918 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.513092586 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.840323842 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952291928 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.8347581 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.754511357 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.825320941 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.823639192 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.820011625 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.777302966 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868205673 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.471813325 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.030425899 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.078728225 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.236186519 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.834451816 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.479631011 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.932406763 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.853618577 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.074590935 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.53857121 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.841148398 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915097898 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.832832661 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.435173286 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.559476972 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.39131166 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.12434527 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.138880333 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.168568739 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.391922093 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.049343915 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.914976694 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.056585191 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.352336659 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.8824086 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.926577904 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.772862247 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.844076914 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.464948084 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.171961626 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.841994053 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.048171706 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.113797807 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.144654762 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.956595978 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.032439763 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.857517474 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.823836764 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.755503128 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.344511095 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.848703813 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.238395327 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.022480335 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.914100363 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.08258705 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.910686391 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.824845664 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.165056801 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869345745 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.534529916 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.188452573 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.408165275 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.14801378 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.052450353 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.833209335 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.268953333 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.1758691 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.197531651 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.852124143 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.759073655 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.834602466 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.835165461 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.821960546 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.804153139 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.681372317 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.078266344 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.835232111 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.060996913 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.150943197 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.089139754 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.729173549 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.833739973 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.824832342 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.076115275 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.769816108 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.878267099 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.316630497 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.298164884 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.83230585 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.755469104 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.756149303 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.524738424 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.830155392 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.796355036 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.032312435 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.932780249 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.511478926 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.376617435 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.035811748 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.072654699 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.832453885 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.093089811 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.102702231 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.317666826 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.842606955 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.916462978 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.082081944 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.546730099 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.053041238 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.064949763 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.37322567 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.05765039 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.287654496 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.788478933 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.832649708 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.04569619 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.055136868 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.170430507 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005461385 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.544961329 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.843738397 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.21522644 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897451104 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.176756164 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.021972114 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.927045796 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.842705795 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.914466736 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.840794182 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.84003632 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.840121892 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.843832537 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.166689197 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.947757519 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.851274808 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.913414223 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.839053083 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.402721969 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.847026993 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.108022318 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.188258939 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.168431931 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.901378142 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.836285948 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.835084429 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.765848988 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964050159 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.275853006 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.104206276 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.955455362 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.974677128 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855393224 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.093886514 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.13676875 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.159523703 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.106629824 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.727557784 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.520827833 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.97093572 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.05532963 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.844154619 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.039695389 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.049648632 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.13710779 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.3028739 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.018971339 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.041068611 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.104367379 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.206555982 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.830928462 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.419246029 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.840818385 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.258909044 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.872372127 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.175186728 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.093116472 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.845811871 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963718559 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.843732029 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.029915875 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.286533521 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.457573617 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.18795912 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.693934289 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.846062563 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.113742155 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.169861617 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.149116207 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917748164 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.84847777 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.532225932 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970461342 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.721692875 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.072640115 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.835204323 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.043703045 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.545620661 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.842457546 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.11103894 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.148110336 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.831369708 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.75258656 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867805541 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.844131977 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.05405833 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.050322379 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.084750691 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.841562398 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.841650399 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.645872722 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.111910993 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.901026693 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.766229782 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.835889028 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.881715393 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.068188206 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.85359497 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.348905883 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.537087131 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.1147345 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.754586707 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855903724 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.305218836 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.227127015 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.168515744 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.363424893 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.058344733 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.393484636 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.742601267 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.222166917 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.838128381 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.296060497 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.226174454 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.836621044 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.384986571 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.960049344 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.108466996 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.16558505 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.850114878 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.591974807 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.871802114 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.059351957 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.207008009 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.77511705 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.841562515 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.867796264 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.840039344 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.829364669 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.847534771 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.793497397 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.333416142 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.690062432 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.329592591 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.842225988 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.825631131 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.151056586 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.424326128 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961586749 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.865513113 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.844751238 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.547079248 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.125761429 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.09119245 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.401684004 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.921470785 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.842395559 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.839558466 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.764360218 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.035946169 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.03338587 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.123865207 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.248219426 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.962837621 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.843370754 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.054074959 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.048306945 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.17806504 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.977049596 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.027012859 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.964916035 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.763167422 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.554946406 seconds)
  done (took 1641.817469767 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.841493612 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.855746582 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.848663864 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.862475029 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.864196016 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.861788674 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.910790352 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.849461619 seconds)
  done (took 56.651030892 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.841687497 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.025725707 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.852327816 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.843573423 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.864153861 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.842426815 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.01390179 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.859334041 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.848447166 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.850899618 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.842571035 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.839124123 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.105400305 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.867570075 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.839435506 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.822738722 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.314606213 seconds)
  done (took 74.240412701 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.842498348 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.8555218 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.870308443 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.838786188 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 9.14825429 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.853421094 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.93650746 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.867575836 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.842885009 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.265080239 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.136488373 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.855317994 seconds)
  done (took 90.068079928 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.851998453 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.844174083 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.845038249 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.840672995 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.840954239 seconds)
  done (took 10.981823039 seconds)
done (took 2141.891722258 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.107473818 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.010996061 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.061978952 seconds)
  done (took 5.820515698 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.977387416 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.027086809 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.148531711 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.167168631 seconds)
  done (took 10.069330619 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.116970582 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.211342295 seconds)
  done (took 6.07244936 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.155123418 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.855067254 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.252710371 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.82593363 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.829950625 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.827117535 seconds)
  done (took 22.231741754 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.824271317 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.830389844 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.825136393 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.827379348 seconds)
  done (took 9.046540583 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.79967901 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.491126402 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.798995795 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.813949589 seconds)
  done (took 20.639732168 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.968428739 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.935617672 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.964857105 seconds)
  done (took 7.601799047 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.96101139 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.614237981 seconds)
  done (took 6.305078949 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.984274405 seconds)
  done (took 3.716085469 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.841953424 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.085480624 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.313980812 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.350937177 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.468198759 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.645840037 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.163872279 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.052602292 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.257075558 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.275664587 seconds)
  done (took 24.184745743 seconds)
done (took 130.806304689 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.163154152 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.839690798 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.015843697 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.162551307 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.148459233 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.008901331 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.012189092 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.157503801 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.846532996 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.840366623 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.167210107 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.160214133 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.958266578 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.824728791 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.971907692 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.825525422 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.032140777 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.180490991 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.848353138 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.061918916 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.031486224 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.808502889 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.001297093 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.825736963 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.034260584 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.955834073 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.353109489 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.824628683 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.983973942 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.366205831 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.959096784 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.203777327 seconds)
  done (took 166.2998723 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.802088158 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.801189791 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.801697032 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.801576375 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.340812516 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.802179195 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.803311437 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.80113835 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.240635593 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.22836353 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.801728316 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.335173022 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.803696238 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.801144742 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.803330163 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.801842308 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.417153892 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.802913015 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.802192323 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.801564028 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.801046494 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.193045635 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.801828949 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.244534451 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.414985113 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.80333638 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.801805862 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.80267975 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.803255554 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.801719258 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.804113681 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.801523601 seconds)
  done (took 207.388505938 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.718982535 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.805764091 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.804475971 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.803381022 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.804160336 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.804686724 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.802919321 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.802370705 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.572380741 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.563582955 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.804013341 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.804069733 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.806826713 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.802617337 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.803339826 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.803283521 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.803402806 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.748329695 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.803214127 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.803528601 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.805207205 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.52843511 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.803798935 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.557892743 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.804292686 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.802769113 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.804632916 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.804695464 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.803344174 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.805154238 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.807165808 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.804710002 seconds)
  done (took 218.318361427 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.057889199 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.809997811 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.809394417 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.734901079 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.809502974 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.809254452 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.802888387 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.05710458 seconds)
  done (took 18.613648098 seconds)
done (took 612.352336651 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.254766439 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.102543362 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.985573736 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.830900403 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.192092848 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.879347357 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.826192029 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.895205264 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.441922198 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.899322005 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.492899218 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.858340103 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.57910347 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.857253814 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.948751688 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.890174932 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.378557213 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.459967062 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.008747973 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.007255821 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.005995865 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.738353513 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.912384865 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.487180485 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.602381643 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.789353366 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.892449657 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.379048938 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.839088155 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.986048058 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.567893105 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.133776662 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.84457152 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.830278617 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.8845464 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.862629194 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.09216016 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.842149333 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.950528141 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.549014803 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.012561515 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.358709368 seconds)
  done (took 100.071978152 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.798045093 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.794594526 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.795031919 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.794118036 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.796461192 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.795632664 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.795397333 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.795830027 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.794105047 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.794925368 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.794326284 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.795671395 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.796008229 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.796417753 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.795405846 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.795463117 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.79513483 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.795955521 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.795011209 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.795085714 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.796040225 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.796341546 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.813567185 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.79622822 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.795933355 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.795393587 seconds)
  done (took 48.433930917 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.812058272 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.977742274 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.058397328 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.834312311 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.814283899 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.81534996 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.832458135 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.818761162 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.815129275 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.815683634 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.91623941 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.819336824 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.830360327 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.058191872 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.831791665 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.81320936 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.812568222 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.814129698 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.984869022 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.829288115 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.834886509 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.818898525 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.833501176 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.826116317 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.816801401 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.813847014 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.816909216 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.239942244 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.82604151 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.914656666 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.861891401 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.839279298 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.182090121 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.06795565 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.871760772 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.827159369 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.813271415 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.918139786 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.819889024 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.81509865 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.832395242 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.819635538 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.054488618 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.310086954 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.831212307 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.813580589 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.252910466 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.929941063 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.85762424 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.826155431 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.058153949 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.834068703 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.81601219 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.815132907 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.852614112 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.820166451 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.816688741 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.106895369 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.830175649 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.833130301 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.819280366 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.815658324 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.990418612 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.824674056 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.978621711 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.825430304 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.82180673 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.817061899 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.056777156 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.833533505 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.316541655 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.830066232 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.813720672 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.918372548 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.984289698 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.27993675 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.829818444 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.989691415 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.19784494 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.841026116 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.825908379 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.233016315 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.844831675 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.824394725 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.818460991 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.817710244 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.81586104 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.858895195 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.833121222 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.236113054 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.321987748 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.125249079 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.844102965 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.83319979 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.816830774 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.107615447 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.826739181 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.816319455 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.053038383 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.325283338 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.832443181 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.824448933 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.305100735 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.834038939 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.835915887 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.82642842 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.063205487 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.836008513 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.859689704 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.817424215 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.824661431 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.822093782 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.835797232 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.824914951 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.816892353 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.296114797 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.942627225 seconds)
  done (took 225.463169289 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.813797857 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.816914344 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.812112077 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.817426233 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.812689185 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.817869087 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.813019881 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.811875945 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.819616316 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.813637049 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.813152569 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.814973694 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.817187992 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.813460123 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.825176187 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.819847998 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.424099122 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.814726281 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.815072226 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.814262976 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.473092338 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.82083067 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.813298985 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.813803409 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.812247001 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.813382188 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.825319675 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.81686911 seconds)
  done (took 165.843066028 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.8198318 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.935886637 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.838995489 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.848014031 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.830404679 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.816880241 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.842549342 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.835042631 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.826486813 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.816123032 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.816293842 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.881682984 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.831052547 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.915677119 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.8515054 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.852282114 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.923305067 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.827554816 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.817813059 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.817696087 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.849696403 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.811764118 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.882019947 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.94903909 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.838476761 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.939730313 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.820849262 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.822933295 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.821009455 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.94025375 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.836557908 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.880235127 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.850549367 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.842149807 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.943806539 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.939381243 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.924461084 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.849377007 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.826342008 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.818434975 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.819124657 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.803856632 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.937855661 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.841127927 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.823134585 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.921756177 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.840710776 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.82193507 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.829494307 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.819571521 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.834828569 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.840584001 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.890037484 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.956877098 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.855167815 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.84771119 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.846990928 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.092247353 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.829274503 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.922813592 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.811208086 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.939128733 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.843124755 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.804619244 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.820281412 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.827393142 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.850240029 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.854830533 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.926381021 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.830516593 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.922695101 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.856619056 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.82812466 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.821525492 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.823529012 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.939404735 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.940817679 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.855744811 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.861677107 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.855238153 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.812563437 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.822782842 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.805352049 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.840585932 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.828048528 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.938075999 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.941780014 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.829689001 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.822973512 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.823187363 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.82400145 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.84955967 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.948981741 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.859680012 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.915019697 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.890314364 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.899765489 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.837537274 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.834747938 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.827586646 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.887976373 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.839283595 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.833822142 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.139216067 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.891594645 seconds)
  done (took 197.399947417 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.224797842 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.874495909 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.880536909 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.15394178 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.171395368 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.82320137 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.870390705 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.871778747 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.896520235 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.062583851 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.942541287 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.891121013 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.859394232 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.846892273 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.868940804 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.893050432 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.878475499 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.217636044 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.970266474 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.021409548 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.860577067 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.144641865 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.150920064 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.260002225 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.907205935 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.27404667 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.441904091 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.005929686 seconds)
  done (took 60.008281533 seconds)
done (took 798.940625026 seconds)
SAVING RESULT...
DONE!
