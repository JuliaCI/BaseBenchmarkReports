cset: moving following pidspec: 7980
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.282791788 seconds)
loading group "string"... done (took 0.643970667 seconds)
loading group "linalg"... done (took 8.161776638 seconds)
loading group "parallel"... done (took 0.170392708 seconds)
loading group "find"... done (took 1.251549558 seconds)
loading group "tuple"... done (took 1.958795244 seconds)
loading group "dates"... done (took 1.322470971 seconds)
loading group "micro"... done (took 0.20062886 seconds)
loading group "io"... done (took 0.974586631 seconds)
loading group "scalar"... done (took 40.551439597 seconds)
loading group "sparse"... done (took 12.846855442 seconds)
loading group "broadcast"... done (took 1.027637677 seconds)
loading group "union"... done (took 14.511766841 seconds)
loading group "simd"... done (took 5.076113261 seconds)
loading group "random"... done (took 9.34110649 seconds)
loading group "problem"... done (took 1.655702535 seconds)
loading group "array"... done (took 21.903898393 seconds)
loading group "misc"... done (took 1.696854316 seconds)
loading group "sort"... done (took 3.42144099 seconds)
loading group "collection"... done (took 18.74058853 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.530017798 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123744834 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.135969485 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119818167 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.148907225 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 62.939050535 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.120380826 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.082205983 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.806177472 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.150447726 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.113865415 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.411405975 seconds)
done (took 68.008589395 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.171602421 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.084746932 seconds)
    (2/2) benchmarking "String"...
    done (took 0.079370944 seconds)
  done (took 1.159513645 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065823226 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.124548398 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067117031 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067660612 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067151412 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066736017 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066784385 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066690556 seconds)
  done (took 1.523690329 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.0713194 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.06811365 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.065375757 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067949608 seconds)
  done (took 1.26979523 seconds)
done (took 5.205997863 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.783068229 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.207850276 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.183752947 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.404388753 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.134875062 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.179351205 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.633244488 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.254993859 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.197105781 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.094663073 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.112650519 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.356253431 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.12366718 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.635812305 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078790093 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.096569842 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.137910343 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.372589579 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.070388612 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085143238 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.092531937 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.130079646 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.088571316 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077176091 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.152284369 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.068834983 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.140593202 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.082838405 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.067435917 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.218590799 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.175396142 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.648953746 seconds)
  done (took 10.119430634 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.098993042 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.099041062 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069115821 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.124667067 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.094524355 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069946764 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.075857695 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067996748 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.092632206 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.129123736 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088346778 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.107150962 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066623401 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070009269 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.0828834 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.195077703 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.08079463 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081448647 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.068258515 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.078605283 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.107199189 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.080501255 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.079916735 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.079664806 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129728474 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.166966139 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096676752 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097101118 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067700983 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081263817 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.11501503 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128083985 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064959222 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066590436 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124630045 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093290566 seconds)
  done (took 4.454543564 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.982920032 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.149523244 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089662547 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.134984542 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064908921 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.109729893 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.068549706 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083084641 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.23589323 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.344799277 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.612845603 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.147030313 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116051621 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103998694 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070745781 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.069575924 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068258617 seconds)
    (17/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064776728 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.21297244 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.108188807 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.098594934 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.084697095 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071289804 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.070247149 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072591313 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064622913 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069621458 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.088037152 seconds)
    (28/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.065021592 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076001028 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.328136706 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.125458568 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069175526 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.834239114 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.164074299 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069555288 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105860251 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.160662879 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092420821 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.138627111 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068624086 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064921191 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.158220169 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064894919 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.205086615 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067998523 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.085779091 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10931686 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.120446439 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066189356 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066853015 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.167610105 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06574405 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.082246935 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.167426458 seconds)
    (55/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.092912315 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.151742058 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064602623 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.290118254 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.093305598 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072110876 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.066148404 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.15424878 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.111593203 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067657696 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.068641579 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069514396 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068965531 seconds)
    (68/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064592411 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.0659036 seconds)
    (70/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.362682652 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.068318079 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077539296 seconds)
    (73/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.916805893 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071993256 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072463396 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079725167 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079555584 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.091967174 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.06792954 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.07437963 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.068357613 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.069289051 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067741619 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.093576077 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.391342024 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.068164948 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.072606357 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065373967 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.093317025 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098411879 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.065922611 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066082475 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102230214 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068939889 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066805588 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064032916 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068159234 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.117636326 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.072015914 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112730043 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068126459 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.142256331 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.094989186 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069062129 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101273059 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.078568759 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.0713689 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.469135745 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065681352 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.072938462 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065986865 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.068250311 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067516558 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078159466 seconds)
  done (took 21.342172039 seconds)
done (took 37.895863416 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.238899228 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.084891396 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.082426412 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.08301234 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.083218279 seconds)
  done (took 1.655364203 seconds)
done (took 2.720869111 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.125907023 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098813327 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06516531 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097946084 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068056491 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100663892 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.10081175 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083948416 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099548383 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064842454 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097362078 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064922244 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064837441 seconds)
  done (took 2.214873754 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.080224182 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082635773 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069483189 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081748166 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062681164 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082025009 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080669299 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088079013 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080735782 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072225772 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062712499 seconds)
  done (took 1.900887759 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.080476964 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083246147 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069402081 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081355779 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062435578 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081254441 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081039534 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087410702 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081399607 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073752648 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062604951 seconds)
  done (took 1.897948728 seconds)
done (took 7.066632678 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.07352749 seconds)
  done (took 1.118852063 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.521630063 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.539114282 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.076407647 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.100024832 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.192838021 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.10719199 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.230146386 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.083242926 seconds)
  done (took 8.065097135 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.107319914 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069944042 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.07073391 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.07003048 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.069699205 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069359673 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.070137754 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069574559 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.069740921 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069412745 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.06855288 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070607403 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.070405607 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.0702163 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.069679687 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.069494679 seconds)
  done (took 2.283133769 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.096589715 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.095183689 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.07334792 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074850676 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072741276 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072169365 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.07461283 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074275046 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071171981 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072934727 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.075404505 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073258052 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073242944 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064633755 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074253611 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076515451 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071390293 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074117118 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075247076 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076095835 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075837812 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064130872 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073326274 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075083132 seconds)
  done (took 2.954753165 seconds)
done (took 15.476430011 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.112579027 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.078056332 seconds)
  done (took 1.24352061 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.076451595 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.078274202 seconds)
  done (took 1.21709306 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.07434334 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.061924209 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.082577573 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.073294216 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.063536976 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.062944092 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.081478415 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.063810789 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.06370395 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.064424886 seconds)
  done (took 1.754686345 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.06347512 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.071850364 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069164917 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.079082627 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.070259786 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064734297 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.069261785 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.065532014 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.073535772 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063683205 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.068230409 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082766276 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.068501417 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084019769 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.068769086 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.06777283 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.069081593 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066986211 seconds)
  done (took 2.330163015 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.061320755 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.062001541 seconds)
  done (took 1.189741604 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.064374614 seconds)
    (2/7) benchmarking "second"...
    done (took 0.062371865 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066118119 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065620004 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062966175 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062683915 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063476939 seconds)
  done (took 1.509577332 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.39671745 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.122354983 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.327932655 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070515861 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.079500881 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.257414887 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064317611 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069178355 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069139714 seconds)
  done (took 2.561336984 seconds)
done (took 12.875766582 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078548429 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086107129 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.097213162 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.405116697 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093277644 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067840153 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113007641 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.175440822 seconds)
done (took 2.192814897 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.206749989 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.051783009 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.480078783 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.208791192 seconds)
  done (took 2.81054921 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.338656975 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.080930156 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.0771324 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067078346 seconds)
  done (took 1.640904214 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.169332505 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070204817 seconds)
  done (took 1.313284642 seconds)
done (took 7.045697024 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06345267 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.08969316 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.064067378 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.065117265 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.064599693 seconds)
    (6/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.065027638 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.064710047 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064934052 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.064600415 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.06445669 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.06431651 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.064127362 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064462699 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065392481 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06505371 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.064242764 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064258358 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.064809627 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064724841 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0649072 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06479865 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064521333 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064462308 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064818789 seconds)
  done (took 2.682332239 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.078249339 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065214687 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.068026424 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.067969709 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.068820752 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.068051916 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.068645092 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067206259 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.068699972 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.066627311 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069053964 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.068613949 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.066304559 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.068707569 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066461051 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.06919637 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.068177386 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067062255 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066310015 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.068813552 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.068292846 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066876894 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.068979755 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068237322 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068664423 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069001189 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067198241 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066893255 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068205036 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068717154 seconds)
  done (took 3.128453027 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.063970873 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.059390283 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.061203446 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069928367 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.061245353 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.061590974 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.060591717 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.06134782 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.061633303 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.060896789 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.062032196 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.060702413 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.061483599 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.06178349 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.061558409 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.065359358 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078617245 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.061025071 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.061114088 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.061242871 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.065011142 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.061346468 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.061383343 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.060829311 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063710738 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.060581921 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.061064486 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.060610194 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.0617519 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.060845694 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065143015 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.065425684 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.060698867 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069621848 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.065732242 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.0608486 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.065172515 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.06066317 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.061489648 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.060650379 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.060978897 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.061127108 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.060754219 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070210409 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.06094296 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.062040122 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.060917068 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.062024267 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.061663783 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.062725297 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.060459457 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.060996326 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.062545195 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.061856548 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.065735327 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.060954972 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.061780267 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.060632875 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.061360647 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.060638898 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.0606333 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.060649672 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.0638811 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.061209358 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078317869 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069629419 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.060926401 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.062285577 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.061086244 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.063925575 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.062139924 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076452967 seconds)
  done (took 5.615015842 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.081431011 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08458707 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06635771 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065755021 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061865886 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.061417961 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069588464 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061537143 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066414444 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08072068 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061676303 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06610493 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06653529 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066238692 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.061876708 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066488218 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069575529 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062050474 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.061491491 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.065663202 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.061879174 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069720691 seconds)
  done (took 2.577562714 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.140288122 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065794702 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104743833 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072144629 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069910282 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071903391 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067485685 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067628852 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067556003 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067969307 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068281274 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067797476 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069807969 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067823715 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068204791 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068533213 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067551689 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068713427 seconds)
  done (took 2.433739387 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076175637 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066919848 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086242351 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066904353 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067433772 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06641976 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070487859 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071512532 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.066884712 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067206578 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.071330289 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066925637 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.066600945 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066805497 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066823315 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066784449 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.066553185 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066989946 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071459919 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070658131 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.080164324 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071521601 seconds)
  done (took 2.63117431 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076876375 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.064925127 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081333325 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06810647 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061743745 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.061686212 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.067190245 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06631449 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.067501658 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.065866495 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066250541 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.061671414 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068658097 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066489461 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068770991 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066167999 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.065847393 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066634851 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065891888 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061572956 seconds)
  done (took 2.432065868 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079950092 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06514103 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064494617 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070549272 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064727124 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.064081837 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070565427 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.064974846 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.064374069 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.084518988 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064401804 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06481169 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07047008 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.06806164 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.064499523 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070282121 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072768841 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070271012 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065027557 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064848207 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.084598264 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.064978112 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070254715 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064312675 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064832239 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.064615179 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064423752 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.068533017 seconds)
  done (took 3.007991129 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.063322967 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064039487 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.064357851 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064247101 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064495442 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.064380648 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064762062 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064566017 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064550528 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06449328 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.064244766 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.064105705 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064197112 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.064322687 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064273322 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.064399781 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064550171 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.064813929 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064602383 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064590708 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.064240903 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063823844 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.064185517 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064567756 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064350798 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064249079 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06477529 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06431557 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064201202 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064489608 seconds)
  done (took 3.028561072 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.072549728 seconds)
    (2/2) benchmarking "in"...
    done (took 0.07219272 seconds)
  done (took 1.243062477 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.061866108 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077235266 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.060598614 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072167225 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.06965161 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065794503 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.070517412 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069905637 seconds)
  done (took 1.641902813 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082666885 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.074297213 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.064245554 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.07466025 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.074074086 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083908709 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.124740641 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.063725978 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.0740093 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064337644 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081343479 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065898825 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074188269 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068887622 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074080103 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.077131462 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.061064659 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.06815276 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.065084517 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.062228408 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064371681 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077108257 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07328981 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062187808 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.068851299 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091135718 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.079485249 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.063126308 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070337297 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.07620332 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073504967 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060622592 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.063608517 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.06385298 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.061754479 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.073851604 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08153406 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070352174 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.075959838 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.063647471 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071179586 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061288319 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072290067 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.073903871 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078971248 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.063477214 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.063573036 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060761445 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063977921 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069380064 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061256859 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068047971 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061271547 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07519512 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.070921179 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078729357 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.062181961 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069313064 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070295116 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070527106 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075156966 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.069777639 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073348535 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.063099472 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078860754 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073039875 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074648142 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061281671 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060705588 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.061413872 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077394482 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091480814 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072546257 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.063311141 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.063576529 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.061676221 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070427098 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.063509599 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072399416 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074663062 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.062783397 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067760479 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074846781 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067766992 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069365897 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.068910331 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.061894802 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.066288047 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064853782 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082894718 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.062470585 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.061746874 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.06455234 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078634949 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.073154329 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.063283406 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064671938 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075410235 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060824471 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.064075153 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064144206 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069336627 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076448064 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067782339 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067407539 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.076985787 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072295277 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06847657 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070720268 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.060510515 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.063862593 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065719167 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.07481587 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060706678 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069984073 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.067435233 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.063445862 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.075126945 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.062561347 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.062971114 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075619763 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074611663 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.06202252 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.060519321 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070043955 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.062791155 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065100357 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076993094 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.061818717 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061290903 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061291731 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.07083782 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.062803881 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070432153 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067142492 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070955832 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.181963804 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.062621644 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.068430953 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.076581353 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067429122 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069524676 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073761465 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069866965 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.062359652 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.07589818 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070239853 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065581275 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072813264 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067392356 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061689207 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065981558 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070403029 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.062172944 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070669907 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065341188 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.07010103 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.06344149 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.061942166 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.068451315 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.063607447 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065926178 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067960335 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.061879217 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077835523 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069846505 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061447027 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.061107359 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.069619948 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064874578 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.063115376 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.06552154 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069726647 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.063420306 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.061414964 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.062730429 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.069119594 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070548818 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065968315 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064104037 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072855173 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080538545 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.062639731 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070178047 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.062915829 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.064888401 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.064204669 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077637301 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073825249 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067219059 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070253987 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.061007863 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072243452 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075597098 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065874069 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.062087601 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.06573175 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.066913065 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074800477 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.066555509 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.063893431 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06209891 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068906165 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.065526629 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070138694 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.063192312 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.06602301 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.068214332 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.062246363 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.069154189 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064112095 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.077669842 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07082575 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061468094 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065575319 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062116754 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074440747 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061342645 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064552795 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065793262 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.064018194 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.062480866 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070157145 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060829779 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075263551 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075859575 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068838654 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065744674 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.063282145 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075357097 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069242894 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071818053 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070432601 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.073156566 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078541466 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.065883359 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070503386 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.078146495 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.063396424 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.06084904 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072696729 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.064652438 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.062248509 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.062579139 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.062912754 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070633034 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070391903 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073141977 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060304542 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069611508 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.061505013 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065860859 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061295343 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071710886 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.07078816 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067195607 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074957369 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.063746325 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.06308129 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070481644 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.062907641 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.063848248 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.063959248 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070185039 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.063495008 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068848236 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065465604 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068815646 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065234649 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.061201698 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068857007 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.063176173 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068580511 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071856009 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.063069181 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068872145 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070331973 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.063482915 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.193552764 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067980215 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066464529 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071120117 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069422336 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069191458 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070225103 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061429548 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075066163 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.062820625 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076581292 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068745321 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.060749862 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.068375218 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.06992378 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.067696285 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.063598864 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.063927511 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068790228 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.062634339 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069840155 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075339575 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064927441 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.078615216 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074409289 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069363803 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070464587 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068764311 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068876165 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065458169 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067057739 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.063667314 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068668055 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.062702913 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071149384 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070131487 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068231151 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069346638 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.063623562 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068626298 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.064337798 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060829188 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066365509 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066488059 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.063791861 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07676639 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.063414722 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066060578 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.062819806 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.064342503 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.06250632 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.061052317 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.069996335 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070807397 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.064388036 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073726839 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065736502 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.070026546 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078940238 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061047969 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.062008828 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.06187657 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064472697 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076060774 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.063636843 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077077385 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068560769 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065834563 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.060872005 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.06380515 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.062352193 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060956729 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.061443401 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072289261 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065303404 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062889011 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.062978069 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.070395581 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.063848304 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075789713 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.062467413 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067553835 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.063347371 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.060963235 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.065953486 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066115311 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070303881 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.063760561 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064542357 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.061324665 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.063213273 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067429833 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069517421 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.063608869 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069282782 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075371 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063046434 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070566236 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065851501 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061524247 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.07052021 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.063029738 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.062359502 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.064444436 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069722715 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070267168 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064105405 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077898194 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.063375303 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072091863 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063356371 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.061740114 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.063149954 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.063579387 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.063327167 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066159007 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.064500365 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076243071 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.061515495 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069129667 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068647112 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067156343 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074279677 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.06426708 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070023359 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068803601 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.065262995 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.07038863 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076767333 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.067154845 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071211281 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064228534 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.06898471 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073259989 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066233165 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075107613 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068794805 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.064028942 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069353691 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064698404 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063564129 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.063350583 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062665101 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073566981 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.191167935 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.06715847 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067062316 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.062634572 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.06873364 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066495919 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077512032 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070330259 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071153291 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061565389 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.060917407 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064030574 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065124035 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069507322 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070079946 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073001363 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070204809 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066706707 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.062875253 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.0781109 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074022587 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071467688 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064938829 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071334084 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.064525147 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.0703605 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067833167 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068966434 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064062076 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071355193 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.06946259 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066128362 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073692492 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071085475 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064057554 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069779704 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069778916 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.06857419 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061971574 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.063534116 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070151475 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072346389 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070267086 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063578351 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078774158 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064844031 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068312251 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065754886 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062970621 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071630295 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.06199565 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.069909609 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.064335528 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064215905 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062326338 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.06645007 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064916146 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.07082274 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066205245 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061948323 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079053582 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078811378 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069767725 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063287858 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062885556 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061486078 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.06165747 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066702261 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.064297252 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069753307 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078406007 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065982502 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065959042 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061714419 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063526806 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070742214 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071395091 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.06172967 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.06151779 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066029409 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069398843 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074964432 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062308521 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.063539002 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070708974 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070574215 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.061848776 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066097625 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.061098811 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071187243 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080211998 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.063712177 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069222348 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07299823 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076291043 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.063637944 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061823494 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.063407612 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069664903 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069049483 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.064173978 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.064891561 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082541353 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070751916 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066233317 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.062811178 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070538446 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066065551 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077297238 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.064770135 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.063975445 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072327872 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.073145399 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070625805 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074100201 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074978088 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069891513 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070156258 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.062604834 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068646231 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.062746023 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066015549 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.064488131 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.063813467 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067426851 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.06974029 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067833432 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078691535 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077483501 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.066696485 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.061334231 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066507206 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066205462 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061772934 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.064169718 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.062303418 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.062395825 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.062539879 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.062683475 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069687021 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07247464 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068176594 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.063780316 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.06328578 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.188386152 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.074517336 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.071566074 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070749443 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.061889165 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.063989217 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.063991167 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.07206377 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066152075 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065331748 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.071144829 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069305034 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069297231 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062363066 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074996991 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062917599 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070015816 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066077402 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063486586 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.064089016 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071358374 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06762573 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06462202 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070664253 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.071048751 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065144177 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.062200399 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.061413873 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073372172 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.061947471 seconds)
  done (took 42.083461242 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.096433173 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062392208 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061885868 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061655308 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07102715 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063183915 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061950029 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063230789 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063643201 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065695054 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062678013 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062326921 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069284282 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076546514 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072047285 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066545093 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062094736 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063415481 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062402255 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063307903 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069374546 seconds)
  done (took 2.568001327 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.067809519 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.075659648 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074200872 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.078906168 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070644475 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066729869 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074413921 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066977712 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.074338743 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072197189 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.07442606 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066995165 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.072590167 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.071981765 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072672857 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067396811 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.074684074 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072486329 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.066580308 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074411466 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067555219 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074775635 seconds)
  done (took 2.7356801 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.062544858 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.062148046 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069859241 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060976487 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.062514907 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061734246 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.065884608 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.061499886 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.065660504 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066272094 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065987657 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066072383 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.069814221 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061755505 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066639649 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.061800681 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.106704165 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.06529453 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.063597362 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.064249313 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.06169319 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.070526962 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061876195 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061874681 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065192308 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.066405236 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.063193057 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.061888838 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.063590699 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065454233 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.062751738 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.061573748 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069504264 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069243679 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.066331257 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065458543 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.062614954 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.063052067 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062302743 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.061922916 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069634022 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062474342 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066049036 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.087016844 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.061278418 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.061191511 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069401607 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.062663439 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060928018 seconds)
  done (took 4.37874887 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.070903755 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.107570392 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067450887 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090331587 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.075340342 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.06830187 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.067551263 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091056443 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062652685 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.06372434 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.07642842 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.076569672 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064733905 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.06659164 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.069071277 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064850448 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065995178 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064157633 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.067975928 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06416742 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.067932771 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.068794884 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.075257057 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.075880718 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.065784715 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063781423 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063956032 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.06610657 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.075598089 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.068018352 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.066249558 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.066880791 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.07593056 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.069556087 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064015153 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.064539855 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.076496971 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065085502 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.064573996 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063525517 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.064004037 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.06621463 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.069260529 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.076496549 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06465234 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069548308 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064867084 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062455898 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.07559246 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.064311203 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.068526804 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.076668512 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06557185 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.064993124 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066322103 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.075652389 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064736162 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063911096 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.064841906 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.075260113 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062911032 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.065335225 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.076305116 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.064057994 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.068609785 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.076463667 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.069981328 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.065882209 seconds)
  done (took 6.033722802 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06958331 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.092148091 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078716142 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078183858 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072338007 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073072919 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.073019171 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072667764 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072223542 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076041419 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072657886 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.112794998 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.068682202 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074452966 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072498879 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072327879 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072439161 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072768069 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072516185 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072542401 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072478458 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07807799 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072594709 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.078244528 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.075185219 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06860799 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072348747 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072557292 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077964205 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072105176 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.075688717 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071925727 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072592285 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.078350821 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.075279236 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.072541237 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.062533402 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071920761 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072243758 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072052097 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068860595 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078049471 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071960137 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.069138485 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072413155 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.072062176 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.078167167 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.075054695 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074062143 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075910396 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072068132 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.077997547 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07200517 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072397461 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.078648537 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.080644661 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077696051 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078059487 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072379487 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.078309942 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077799881 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.080434937 seconds)
  done (took 5.836189437 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074159499 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067693798 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.078278754 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060994165 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.061447964 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071120455 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062098733 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.06138144 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069809192 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.072595452 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071475531 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071419373 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07361055 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071004207 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071837323 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073494322 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071745013 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071422015 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069417154 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071560222 seconds)
  done (took 2.593799309 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073997868 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.077907564 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066615392 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071373507 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.066798719 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070883139 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.066403204 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067232566 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068102767 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066952118 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072447538 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072604454 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06761 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071052801 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.072298617 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071196541 seconds)
  done (took 2.308002863 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.080192534 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.068706693 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.0763091 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.062959361 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066897482 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062004586 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.062424389 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061379798 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062079187 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.0754135 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.062663565 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.073932993 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.063135912 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.061844136 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062385241 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068463613 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062528042 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062985566 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.062762608 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.075545036 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.070028545 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063885641 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066850325 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.06284612 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068347669 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.069612598 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064565316 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067356666 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062817995 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.063064474 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.06882399 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069493158 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.06272112 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063215393 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.062461185 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062587673 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.062790573 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.080305305 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068318428 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.062832012 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.061344129 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067743873 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.063525797 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.063580654 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062075561 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.063165659 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061936805 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.06891716 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063030337 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.068286572 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.06321401 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.064855145 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.063327271 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.070262459 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.065134073 seconds)
  done (took 4.813101284 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075660015 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066957616 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061374323 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.061222755 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.066722623 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067419245 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.066615305 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067546572 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067448401 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062010392 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067961374 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.066451318 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067557334 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067249148 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067533331 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067189556 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061696899 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067269215 seconds)
  done (took 2.394955663 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070651445 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066451876 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.071104874 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066040136 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066244568 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.065901056 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061918617 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.061484625 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061944805 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06639636 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066464823 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.065950696 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061687523 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.065851602 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066728656 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066522868 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.06630598 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.061632054 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066361498 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061865556 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.065946322 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.061861923 seconds)
  done (took 2.624511189 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.092457575 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.082789837 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.138439887 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078789151 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.08668804 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.072161924 seconds)
  done (took 1.742432099 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089847188 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097371073 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066630192 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066794984 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071994921 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07018352 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070037655 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070027848 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07452764 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074666226 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070297602 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074137836 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074038557 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075841012 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072661551 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071955326 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072612578 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069924258 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067403499 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078539197 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069803133 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074830992 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070289728 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069814788 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070089723 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07588787 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074152556 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074706556 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070399311 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074483647 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07231376 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070297444 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075013527 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074639995 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066822308 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074198959 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070482608 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078970444 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072503295 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075878909 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066943982 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071985472 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074469206 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073343871 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07420436 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069895154 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073428244 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070008447 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070076712 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079944264 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072595436 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075727273 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072076061 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075005156 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073855311 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080266234 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074548374 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076025263 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072268982 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074944737 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076597168 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072361875 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075846085 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074330562 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072027221 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07572345 seconds)
  done (took 6.046866527 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100093697 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066276477 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069381756 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074803713 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075747129 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070849096 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070227787 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070463236 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070849356 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067650758 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104369788 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070792564 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076334073 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076741888 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070621782 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070452763 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070466247 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077004882 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067936116 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080826513 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070631159 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075563961 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07580705 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075275849 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073633247 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072121837 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070137089 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070373466 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070852783 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070185433 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074068456 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070412334 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076797735 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068345999 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076069203 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070446048 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07029245 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073810587 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070224056 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072308966 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076359984 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07922108 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070008732 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070190546 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074658147 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070163682 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069917045 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067353465 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070093434 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066996703 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074232626 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074339048 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074891903 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075641409 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069592965 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069835693 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069512745 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069587413 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071696647 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071784879 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075615819 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069489233 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079868573 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069861187 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069570664 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075449171 seconds)
  done (took 6.039803832 seconds)
done (took 123.694736306 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.191328211 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.163307662 seconds)
  done (took 1.536069797 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071744257 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.103074037 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.082496283 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130437684 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.06973106 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.103648691 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.10020935 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.081202448 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.06998829 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071121414 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.0714406 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.073825423 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133247307 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.069184712 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.069174497 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.071754399 seconds)
  done (took 2.569568442 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.101912016 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.164067175 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.106713436 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.068739328 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104170889 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077173989 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.068753752 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.081990497 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.075774304 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.071431638 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077304651 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.075060553 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.070473951 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.076978565 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075682531 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.076804634 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.070639222 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.07716966 seconds)
  done (took 2.721084451 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.099579381 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.09178909 seconds)
  done (took 1.397402421 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.167223164 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.130050415 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.196033963 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.327074163 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.143930418 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.417953903 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.132053293 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.131506942 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.106658945 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.128429635 seconds)
  done (took 3.081492624 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100729275 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.18294552 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.286889015 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.118527374 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.074377877 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.105629817 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.118182436 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.081782572 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.079124627 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.078919392 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.078790392 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078132399 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099458943 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.075846916 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075318637 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077709253 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102894519 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075070237 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076334295 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076121386 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.103041356 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.070220717 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076615535 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074593041 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.07742465 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077087813 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.070812497 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069473428 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075560549 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075348794 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078925906 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.105258652 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076838634 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.10064778 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.073304989 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.10268671 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078603042 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074129564 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075103416 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073888789 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077209274 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077056535 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078321788 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.07761664 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.07096631 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078126522 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.071060879 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069341697 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.079619466 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.070850211 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.079774502 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078059002 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.100430006 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.070694996 seconds)
  done (took 5.956796538 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104318515 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.103856311 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069325088 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.109011225 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101512865 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069277771 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.102544537 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096594923 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.104345917 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069421947 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069080827 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070605486 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078550651 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.081076656 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.110325701 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.104093008 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070750601 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068443741 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.104442746 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.104252751 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067591048 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100977222 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.096833793 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103505642 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.06675314 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069551672 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069029729 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070980847 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.075761866 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.076998387 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069999069 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078665554 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084756368 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.076778609 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068297264 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068688807 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069185118 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.077307703 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077392226 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.076588247 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.075565179 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068511003 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068768716 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069705358 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070242275 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068986141 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077049619 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.078219875 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.076275117 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069357 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070350035 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068884127 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069973227 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077460507 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.075776568 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.078141892 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077576445 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069195314 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069313048 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071720672 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079001965 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078371305 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077951922 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069680551 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078646299 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069124349 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078501427 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082601815 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072257637 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070360133 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068846079 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069280413 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069904834 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.075599692 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.075743452 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070172238 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069167684 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068754651 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078604418 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076156551 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069227128 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075578946 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068748802 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068884526 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070224871 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070211108 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.075868975 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078006272 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070659511 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068726748 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069243736 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068726857 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068224713 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075987229 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078314387 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077770004 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076960434 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070275583 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077115184 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076224201 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070221821 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077418231 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068977029 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070268049 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069966791 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076812302 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.076100964 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.077588847 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069388265 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069193056 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.075957513 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077980517 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069068212 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.075461325 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078129115 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.07652721 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068794479 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078560244 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069486541 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.077694665 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067313088 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.204765995 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070712582 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.07802457 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070460574 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.06934013 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069585385 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.077060762 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070566821 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069722056 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070181879 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069782527 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.077498715 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080809396 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071384164 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076422262 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.077175469 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070667469 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.076604282 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069198737 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.077261727 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070035363 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070375314 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068106403 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079501048 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070242664 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068879084 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06967159 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.07847642 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068800358 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077547209 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.075141768 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068637744 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081166351 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077232779 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.073628123 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.075744211 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068583091 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.0692253 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06882107 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069388212 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076114804 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077779783 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070675903 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069305226 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.076695964 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079523253 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068740801 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.076828961 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077198756 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077598066 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069690742 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069733363 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078716851 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079328241 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.076915316 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.07637703 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077462229 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070278288 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076302817 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077169154 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070150575 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083401951 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069721892 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.080423225 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077956204 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076145616 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077183806 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.078625735 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.078770826 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.07942016 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082127753 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06907711 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068863496 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.077051341 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069378156 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069733195 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076063364 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070545255 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070270433 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.080245046 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067797513 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.075907522 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066961059 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.074747942 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066819852 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069185669 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081488213 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069538892 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070713883 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077212857 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069623948 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076132877 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079258369 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076718747 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071720279 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070137208 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077917396 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.077649931 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069279785 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069129285 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070785603 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.076304093 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.075886426 seconds)
  done (took 18.228887185 seconds)
done (took 36.706379878 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.201094864 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.151760605 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.18382709 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.1119991 seconds)
  done (took 1.954628299 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.102158042 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.094567823 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.087267197 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065742606 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.093246551 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065515267 seconds)
  done (took 1.746382517 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.316575811 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.203372561 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.187453768 seconds)
  done (took 1.948340162 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.216650823 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.202040626 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.457534119 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.279082684 seconds)
  done (took 2.490493195 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.139305874 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.081951365 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.064492814 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.077372241 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.120321028 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.16551083 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.091401476 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.12232303 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.071255432 seconds)
  done (took 2.227846852 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.142782354 seconds)
done (took 11.769248166 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.097247958 seconds)
    (2/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.23526065 seconds)
    (3/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.204595709 seconds)
    (4/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.200364421 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.072448464 seconds)
    (6/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.121291189 seconds)
    (7/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.210089581 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.068972801 seconds)
    (9/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.079673222 seconds)
    (10/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.178452882 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.146052376 seconds)
    (12/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.119236715 seconds)
    (13/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.117040824 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.11448407 seconds)
    (15/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.075109613 seconds)
    (16/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.204090221 seconds)
    (17/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.075892052 seconds)
    (18/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.093101085 seconds)
    (19/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.43588395 seconds)
    (20/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.073479978 seconds)
    (21/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.073692524 seconds)
    (22/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.074280925 seconds)
    (23/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.249688291 seconds)
    (24/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.237899991 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.102986196 seconds)
    (26/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.090600634 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.117656426 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.123258257 seconds)
    (29/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.12609313 seconds)
    (30/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.084321354 seconds)
    (31/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.177674062 seconds)
    (32/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.06676884 seconds)
    (33/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.162972522 seconds)
    (34/309) benchmarking ("sort", Float64, false)...
    done (took 0.130859469 seconds)
    (35/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.077466266 seconds)
    (36/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.075174499 seconds)
    (37/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.241263088 seconds)
    (38/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.179102418 seconds)
    (39/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.227242819 seconds)
    (40/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.06623033 seconds)
    (41/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074123257 seconds)
    (42/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074677159 seconds)
    (43/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.078079218 seconds)
    (44/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069915164 seconds)
    (45/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.178702926 seconds)
    (46/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.065007077 seconds)
    (47/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.066512155 seconds)
    (48/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.101380715 seconds)
    (49/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.076318971 seconds)
    (50/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.073557213 seconds)
    (51/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.216618605 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.101232883 seconds)
    (53/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.089472831 seconds)
    (54/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078429975 seconds)
    (55/309) benchmarking ("sort", Bool, false)...
    done (took 0.154436292 seconds)
    (56/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.074677645 seconds)
    (57/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.065873814 seconds)
    (58/309) benchmarking ("sort", Int64, false)...
    done (took 0.066656537 seconds)
    (59/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.080771728 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.082318253 seconds)
    (61/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.136288409 seconds)
    (62/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.194468442 seconds)
    (63/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.145873592 seconds)
    (64/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.065457744 seconds)
    (65/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074190486 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.099678597 seconds)
    (67/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064680048 seconds)
    (68/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.073500729 seconds)
    (69/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.072968229 seconds)
    (70/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.074278302 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091224962 seconds)
    (72/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066527985 seconds)
    (73/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.123836972 seconds)
    (74/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.075503575 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087059836 seconds)
    (76/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087420037 seconds)
    (77/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.0765409 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.103490253 seconds)
    (79/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.073676327 seconds)
    (80/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.087534333 seconds)
    (81/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079427965 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.099210036 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.112080587 seconds)
    (84/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.074610857 seconds)
    (85/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.065781521 seconds)
    (86/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.211555838 seconds)
    (87/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.067747604 seconds)
    (88/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069572973 seconds)
    (89/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.068510054 seconds)
    (90/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.119525049 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.136049126 seconds)
    (92/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.067555705 seconds)
    (93/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.078469185 seconds)
    (94/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.214692639 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.266175509 seconds)
    (96/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.144435365 seconds)
    (97/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.071229382 seconds)
    (98/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073666653 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.120630469 seconds)
    (100/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.067602449 seconds)
    (101/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.175648032 seconds)
    (102/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075315671 seconds)
    (103/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.078187357 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.099984259 seconds)
    (105/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.076190916 seconds)
    (106/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073324656 seconds)
    (107/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.091127568 seconds)
    (108/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.17087807 seconds)
    (109/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.07284344 seconds)
    (110/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.067391207 seconds)
    (111/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.065862002 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.0827414 seconds)
    (113/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078063596 seconds)
    (114/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.131294679 seconds)
    (115/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.074907998 seconds)
    (116/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.135865393 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.078025557 seconds)
    (118/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.066786644 seconds)
    (119/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.065733275 seconds)
    (120/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.072275244 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.101121987 seconds)
    (122/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.071517485 seconds)
    (123/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.167311565 seconds)
    (124/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.229529038 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.126292396 seconds)
    (126/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.074914975 seconds)
    (127/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.177833559 seconds)
    (128/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.066497566 seconds)
    (129/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.066362493 seconds)
    (130/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.135944114 seconds)
    (131/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.073883422 seconds)
    (132/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.075099872 seconds)
    (133/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.200638367 seconds)
    (134/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.169604616 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.081243823 seconds)
    (136/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.07104239 seconds)
    (137/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.064340678 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.130096817 seconds)
    (139/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074576915 seconds)
    (140/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.174160971 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.095494673 seconds)
    (142/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.088779264 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.129006263 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.090751856 seconds)
    (145/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.080750365 seconds)
    (146/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.177768377 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.077423886 seconds)
    (148/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.17150578 seconds)
    (149/309) benchmarking ("sort", Float32, false)...
    done (took 0.13158159 seconds)
    (150/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.067093283 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.112314135 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.087416909 seconds)
    (153/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.066196669 seconds)
    (154/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.064681903 seconds)
    (155/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.191879277 seconds)
    (156/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.177510616 seconds)
    (157/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.066299355 seconds)
    (158/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.065071454 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065514805 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.115345396 seconds)
    (161/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.168562059 seconds)
    (162/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.066546854 seconds)
    (163/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.075369397 seconds)
    (164/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.072249391 seconds)
    (165/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069958538 seconds)
    (166/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.073073564 seconds)
    (167/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.140643861 seconds)
    (168/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.167383085 seconds)
    (169/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.071798 seconds)
    (170/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.210910351 seconds)
    (171/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.065213416 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065908081 seconds)
    (173/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.074323425 seconds)
    (174/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069012798 seconds)
    (175/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.177962351 seconds)
    (176/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.194300381 seconds)
    (177/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068202965 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.09023385 seconds)
    (179/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074101424 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065660117 seconds)
    (181/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.073781983 seconds)
    (182/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.171992792 seconds)
    (183/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.087858463 seconds)
    (184/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.134574981 seconds)
    (185/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.070492073 seconds)
    (186/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.066917031 seconds)
    (187/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.137051242 seconds)
    (188/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.074865979 seconds)
    (189/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.078737143 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086449785 seconds)
    (191/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.067942752 seconds)
    (192/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.065905355 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.066154312 seconds)
    (194/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.091001826 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.086369909 seconds)
    (196/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.066984582 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088075368 seconds)
    (198/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.066946448 seconds)
    (199/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066428904 seconds)
    (200/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.066151483 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.122758516 seconds)
    (202/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.0666201 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.073005917 seconds)
    (204/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.166577263 seconds)
    (205/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.066972847 seconds)
    (206/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.066559629 seconds)
    (207/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.069908122 seconds)
    (208/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.067124703 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.085384578 seconds)
    (210/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.228315588 seconds)
    (211/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.078636631 seconds)
    (212/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.069208868 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.067700266 seconds)
    (214/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.174221676 seconds)
    (215/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.068600071 seconds)
    (216/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.068127217 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.07910219 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077070736 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074806638 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066905486 seconds)
    (221/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.136343606 seconds)
    (222/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.068735054 seconds)
    (223/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.180698784 seconds)
    (224/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074933447 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.13380934 seconds)
    (226/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.070078224 seconds)
    (227/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.067262315 seconds)
    (228/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074484817 seconds)
    (229/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.073805397 seconds)
    (230/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.079092263 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065987316 seconds)
    (232/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072522152 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.09044663 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.143014133 seconds)
    (235/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.069418744 seconds)
    (236/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.065022932 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.136956093 seconds)
    (238/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.066323292 seconds)
    (239/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072436884 seconds)
    (240/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.065504551 seconds)
    (241/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066698906 seconds)
    (242/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073903662 seconds)
    (243/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.169333353 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.122067883 seconds)
    (245/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.068235427 seconds)
    (246/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.069961274 seconds)
    (247/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.066369979 seconds)
    (248/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.066045452 seconds)
    (249/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065676312 seconds)
    (250/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.06726483 seconds)
    (251/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.066482898 seconds)
    (252/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.068222718 seconds)
    (253/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.176587489 seconds)
    (254/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065979941 seconds)
    (255/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.173016005 seconds)
    (256/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.065574389 seconds)
    (257/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.143605957 seconds)
    (258/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.067189875 seconds)
    (259/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.093102013 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.066165253 seconds)
    (261/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.06745185 seconds)
    (262/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.069886932 seconds)
    (263/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.066843233 seconds)
    (264/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074593394 seconds)
    (265/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.067597324 seconds)
    (266/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.071023033 seconds)
    (267/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068719952 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.075045511 seconds)
    (269/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.066597695 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065990738 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065907162 seconds)
    (272/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072961766 seconds)
    (273/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.066220504 seconds)
    (274/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.06798178 seconds)
    (275/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.065333524 seconds)
    (276/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.067517811 seconds)
    (277/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.07254887 seconds)
    (278/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.067503656 seconds)
    (279/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.078484649 seconds)
    (280/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.06673888 seconds)
    (281/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.06629673 seconds)
    (282/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.066719121 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.130565191 seconds)
    (284/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.066874609 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.136524155 seconds)
    (286/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.0738615 seconds)
    (287/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.066379448 seconds)
    (288/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.067016048 seconds)
    (289/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065457034 seconds)
    (290/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.066352052 seconds)
    (291/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.066061818 seconds)
    (292/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.139356585 seconds)
    (293/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.066781659 seconds)
    (294/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.077963239 seconds)
    (295/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.125123826 seconds)
    (296/309) benchmarking ("sort", Int8, false)...
    done (took 0.143151494 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072615175 seconds)
    (298/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.066682313 seconds)
    (299/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.066345076 seconds)
    (300/309) benchmarking ("sort", BigInt, false)...
    done (took 0.190069352 seconds)
    (301/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.066487882 seconds)
    (302/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.066590316 seconds)
    (303/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080057952 seconds)
    (304/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072680103 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.065856904 seconds)
    (306/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.066691336 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.066373445 seconds)
    (308/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.078995331 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.066316504 seconds)
  done (took 32.634765589 seconds)
done (took 33.887566531 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08319723 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095121843 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073204183 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092865204 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080631384 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.096179072 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074042367 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078594564 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.081231775 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.079867959 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078758365 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.073283051 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.075048969 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074952543 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.07336177 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.0958522 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.079999963 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074338248 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074590147 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065633512 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.07444399 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066621429 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.065545423 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.072721297 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.07725846 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073515081 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.075517762 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075317344 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.06658626 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066612943 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071076994 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074831997 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.06639074 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078184384 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.074911756 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074238906 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.075442224 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.078079167 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.065906956 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066383764 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076177495 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066225602 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.073899002 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072483722 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070956825 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.073179278 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074111808 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078612555 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096016905 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070969446 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076041872 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076604959 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077438082 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071757488 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.071277728 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073775873 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.072443651 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097103493 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074172216 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070931227 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075612075 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074717753 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072523939 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074018449 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.07368098 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076471615 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.078576034 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072986554 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075869931 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073169002 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066107989 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073971036 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.07048353 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066108397 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.0770064 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078608949 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065216384 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070064882 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073859586 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.074399848 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068684812 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070936103 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.065492295 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070558485 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070895021 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.073102411 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071272437 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.07319309 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065638025 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074478821 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073219357 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073661079 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.065852422 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.078572069 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06599234 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072451496 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.06608845 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066337549 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.06547926 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.07100854 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065854027 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070963726 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074900399 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065420754 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070382985 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078961169 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065911582 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073504112 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065510564 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065897524 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.076447699 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.075418271 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065722461 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07109402 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065393438 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.070995932 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.06544193 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065548657 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065917108 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065658721 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070177747 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065762882 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070618791 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070856707 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077717417 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065438382 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070046386 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070728958 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065771142 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072786798 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065744333 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065650835 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.06506338 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.079246362 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070885428 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065923632 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.07074805 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07079694 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073912816 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.064722358 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073876518 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071337636 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.069815696 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071702498 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065425754 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.07646571 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070958448 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07044726 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.064842026 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065193541 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.064710685 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065272881 seconds)
done (took 12.386941737 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067676077 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.115570248 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.091859971 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.092884519 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.08256446 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067329281 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.074039194 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.091259009 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.06828387 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.095636847 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088455823 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.088221073 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.108539794 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065643261 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066573198 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.067800634 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.068077435 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.077894522 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.093028018 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088954523 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.104451547 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066909298 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.085253688 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.085790574 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.083641305 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.089816149 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067762287 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068006059 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069886738 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.08701992 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.092152726 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069662437 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068058776 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.089235352 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.083446037 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.079912396 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.067405396 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.075100569 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067302947 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066338694 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.068343965 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.087043598 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.074216791 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.075226768 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.068137939 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.074479334 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.068231879 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082347372 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.087198877 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.075057526 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.081149262 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.089089977 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070214023 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.082813335 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066271307 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.081545541 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.076076067 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067551686 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067157968 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.071890447 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067639646 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069582744 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.077492285 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.075726332 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071390484 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.0808872 seconds)
  done (took 6.48511073 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.081764718 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.093728792 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083097767 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083435101 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066194952 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067055759 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066766669 seconds)
  done (took 1.882778201 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068353741 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086611128 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089849325 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.09042239 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.08270576 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.09096373 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074757304 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.06754399 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.095834599 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066245891 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08666978 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.097819395 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.070155315 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.078641773 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091465336 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066747755 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091058391 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.06682759 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068023966 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091027167 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071963959 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.093804055 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.078451426 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067457505 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080178004 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067268473 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.098411296 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07457629 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068498372 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.06841281 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068329573 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.093577938 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079380214 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.08123437 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068218992 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08171379 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081045534 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070007041 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.077532769 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.076578302 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080077501 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.06804404 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066126315 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068357295 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070171114 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.078227773 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066283772 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.068406826 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068115125 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086223887 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066164407 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.078945996 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070884246 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073131157 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.072796822 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072265145 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075682925 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.068653869 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086196324 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068359281 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083828688 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083174049 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080164772 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082956915 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.067112668 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079180517 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080142675 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.067737031 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068975636 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.068583463 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083004359 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.070390545 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068545376 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078133011 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.066611303 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090811235 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.090447655 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.066985191 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080389758 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067790045 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068435006 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.07876881 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.090527033 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072603684 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06815174 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071623952 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06925644 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.070133513 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066674581 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.071587722 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068568021 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072556383 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068917223 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.071079596 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069940143 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.08402308 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.066609398 seconds)
  done (took 8.703155879 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.067493768 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068255072 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069245176 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067925678 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067829009 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068607582 seconds)
  done (took 1.777581517 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.094909555 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.06737812 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080345546 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.067913726 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103381091 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.083701765 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.083794353 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.085003452 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.08160915 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079691513 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.083660087 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.086461661 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.087518848 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.070061041 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.082984918 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.068847412 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.083458549 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.072334788 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079059375 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070617351 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.081052679 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.070645664 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070654968 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.087146139 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.071595072 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.068881597 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.077389237 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079189382 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079372285 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.091505042 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.070107411 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071877428 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075793805 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.083429469 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.083649765 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.075919142 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.068148373 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074735765 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.070816495 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.071772256 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.086260187 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070844752 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.070304455 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.07415208 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.08757929 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075961226 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.073443685 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075961762 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.082794716 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.074112065 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.074255759 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.068588735 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071470607 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.074253099 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075774889 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.083675393 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074068872 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.082900592 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.070175383 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075838189 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.067769867 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.07164475 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.086046525 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071399319 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.075163659 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.074218497 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075658591 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070155178 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070411549 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.06840064 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.074242806 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068296168 seconds)
  done (took 6.872077541 seconds)
done (took 27.079422632 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.507729766 seconds)
  done (took 1.832700508 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.591776545 seconds)
  done (took 1.942104844 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.313003242 seconds)
  done (took 7.657786317 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.389731743 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.602318132 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.728267857 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131812705 seconds)
  done (took 3.227098176 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.692406645 seconds)
  done (took 2.056534795 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.227082464 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.221895333 seconds)
  done (took 1.817180864 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.339110255 seconds)
  done (took 1.691212282 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.042323383 seconds)
  done (took 2.392170671 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.239279159 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.167144347 seconds)
  done (took 1.760542794 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.436635029 seconds)
  done (took 1.787814744 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.135836212 seconds)
  done (took 5.492115829 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.235929394 seconds)
  done (took 1.622924723 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.228733385 seconds)
  done (took 1.583121889 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.667921894 seconds)
  done (took 3.021552872 seconds)
done (took 39.248191726 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081611971 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083861679 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.085051618 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.082137573 seconds)
  done (took 1.675315347 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.073744542 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07090698 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075084448 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.07156207 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075247992 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071440857 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.072735982 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.073582061 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071008581 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.071898092 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071314057 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.07127795 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074157096 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.072944795 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070322228 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.07446243 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.074812972 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071665786 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074085819 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071356063 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.069526403 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.07384803 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.073525556 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070571848 seconds)
  done (took 3.103631705 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.076897159 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07237067 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076468983 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072298231 seconds)
  done (took 1.663879287 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.075200537 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.085500422 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.084234098 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076985702 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.088869226 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.084072294 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.067906817 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068082436 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.069071082 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077474392 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.066976936 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.092677033 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.086415177 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077486909 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079509171 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.064281655 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.066453334 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.085174803 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077977535 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.0782497 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069212995 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077578091 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.066873411 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087244696 seconds)
  done (took 3.21666248 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.083726173 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.067071616 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.086353761 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.092901974 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093853621 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066950056 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.085435596 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.094284456 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.141592487 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067684692 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.073280747 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067426796 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.104970734 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.067013443 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.0862681 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.11022335 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113726309 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.070745207 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099360278 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.067022084 seconds)
  done (took 3.109329431 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.081959308 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.073260883 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.07143916 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067189118 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076671081 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.074402946 seconds)
  done (took 1.815541105 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067524775 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068818122 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068264703 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067777665 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073005145 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.068069187 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067086263 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068498438 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.068947197 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068600883 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068011877 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.067397175 seconds)
  done (took 2.186343443 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.188451926 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068426435 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.071393095 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.067191321 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073011482 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.067888408 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082994773 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070425528 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.094941134 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068154025 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.06786175 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069965033 seconds)
  done (took 2.357234735 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182424893 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07471212 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215055277 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143279392 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101168389 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108379422 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110289413 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106405249 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.130326034 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096073717 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149547617 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155554062 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102493632 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126498084 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088075759 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.119571017 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141549436 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151646837 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098537927 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151057885 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131605279 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121137333 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140056374 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096650697 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100137425 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110428855 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071680545 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.0775191 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152685512 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119624078 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130921218 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103596124 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089133319 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160356018 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159268162 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129658548 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140865939 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082040059 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.117398311 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.128381139 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189571761 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087118717 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148770744 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103165754 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078718459 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123653109 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110027963 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.113512638 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.098249899 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087291414 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267432274 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169408779 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.12626666 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085291761 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115857959 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103033945 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.108560423 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112947847 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206272355 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144505757 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118410822 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070867032 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106216315 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138957107 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122988286 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.102145213 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.114017625 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089304972 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122239722 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146533862 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134641142 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131196193 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.132016815 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084880509 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114178841 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127637252 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119591302 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15800679 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116711155 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072042894 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113869962 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093791114 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077856318 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.141853736 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07418545 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161686716 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095331353 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.119953328 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124804088 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10475953 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10455475 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145524783 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132322728 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100876466 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.085281834 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099371794 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.113489474 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138789009 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085143445 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103595873 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108549112 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.076871441 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125000541 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.073568736 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113358546 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.093671315 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112960844 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260259001 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.079216908 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117889769 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10024713 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100672082 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123483682 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145682376 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085750738 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079198748 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153551355 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113498604 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.098996691 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133006817 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146603838 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.11824618 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093777898 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133447257 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156872187 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.0857195 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146965086 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098962492 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082401115 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.103738548 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115656207 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105790479 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.115576109 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078998756 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.113988693 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154684578 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.073088542 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093790501 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125116781 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079696859 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078645198 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100631238 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100061645 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.09437227 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.097008144 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.099121284 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126738225 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115344826 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101516641 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11701945 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092996326 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153197983 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088254827 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100223941 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10121296 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.07141856 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.124239258 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144474875 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.07795649 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148404882 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.11619407 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111705669 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111622394 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08150306 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129058664 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077467757 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.07138755 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129978442 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.250361506 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105551035 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.142101185 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110012852 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.116473612 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.113763079 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12222398 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120762966 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.12098272 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109149819 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.086700733 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108626739 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154540375 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.071794447 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.088684179 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079781762 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098978909 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089411256 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081103005 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127978393 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11641522 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105289222 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109919137 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09305526 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14001584 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077148927 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116625843 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.115025594 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091977598 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.143928763 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140689511 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122760249 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096800483 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127077491 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.072272781 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073471112 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.086142755 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116089792 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082229577 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080775 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10540935 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136843622 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120906481 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125977697 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115968985 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113438251 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147117658 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.07205907 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116693176 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133729914 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114622819 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.101279497 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088093439 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.095970055 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133190101 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098989937 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193271939 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107811568 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11609865 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.288725802 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099553347 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078782921 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10177375 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122959689 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097915379 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132852019 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094963638 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083781666 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102206086 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.076549747 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093878354 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123022369 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111484233 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129603686 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.106541113 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121460466 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076187006 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105265755 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11570046 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115907087 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.082616786 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112794913 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153701462 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100808976 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110771093 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139069407 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077434587 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.134227815 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158100202 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133637071 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082443701 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099763069 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115615802 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118788689 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115014867 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127893166 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098143683 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126377643 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105997114 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.083023343 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0844361 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091716107 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098099768 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.109044445 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.099288428 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.109487477 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.093413196 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127251402 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099116826 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106373582 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112884017 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097806153 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.093963518 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093505955 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161448783 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112092367 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15469735 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.097066981 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.130588122 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.289838207 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075419254 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078225166 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.079331788 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1289608 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083001641 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122045518 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.107584951 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110901017 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115623536 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128240824 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093474023 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070290151 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10452159 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123457944 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116934337 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093041191 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.099231851 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148706214 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.11401197 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077399702 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10606591 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109632872 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09990685 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159194031 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.081141801 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105783462 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075957867 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077948728 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118933142 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139588033 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.08139624 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.100838817 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113490401 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106028212 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119529314 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094074736 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107194919 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123740766 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134844325 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118397375 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.087561858 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105423815 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11888755 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140371792 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100134065 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097710812 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160706561 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140753132 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.147093807 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.085570189 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111961334 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10955756 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105398175 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12620215 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082714781 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147926221 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079819749 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123935646 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095674337 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086156621 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.26425773 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.108769135 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086472698 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137498539 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11202681 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081399417 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079016733 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105678605 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112038815 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097960743 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.073560914 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133073163 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072490876 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125544346 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156548536 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078502178 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100880997 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092952222 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080607638 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096682703 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096362008 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083459163 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.095721248 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155646906 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.085137855 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138939558 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124176789 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108126153 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127276364 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100300235 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.641387678 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077829321 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140161457 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109925604 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164358952 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095393471 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111554437 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105808812 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113325535 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131199669 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096695242 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.174768153 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121212919 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.112345939 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077610912 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097833998 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099201992 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087047542 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102502494 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108913737 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107209107 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.091696762 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.112235689 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114728864 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.08101239 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09384722 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142354445 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109401464 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137053126 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.271334398 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084671285 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113060779 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1249578 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07889619 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.111824432 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138139736 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100561461 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116912561 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080382092 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.096211036 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15885084 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.071649345 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143507266 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113285243 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106696643 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110261164 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.102660618 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119038985 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097979774 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113528887 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090692271 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.140112153 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109054603 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082225843 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077895697 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102090673 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10589746 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.095236787 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094359161 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.096625745 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14047481 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.07100016 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094533527 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109842492 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137017493 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156123374 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.103165054 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082018229 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113810576 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147017333 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.107477026 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114467272 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079722638 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079378581 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.079815677 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.099174542 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.121086265 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108901573 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114274731 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10743482 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148737497 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082889163 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.224405268 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092486027 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101695326 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.08845001 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078595148 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093293324 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093039991 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098795926 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106668712 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.303655268 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.09448536 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.088971013 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089785865 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074371762 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081615326 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118459487 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105017195 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110910567 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115243499 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081689392 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098086586 seconds)
  done (took 56.324460393 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.115159189 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.093932414 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.095472562 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.140074322 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.11828306 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.196216577 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.146898733 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.186244121 seconds)
  done (took 2.553901205 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.066977571 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.093186792 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.104483969 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083345028 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.06818198 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069250888 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.223869166 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081944713 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068262469 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.091317069 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.077898229 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069847759 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.443603876 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.070014575 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068022179 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.077018526 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066355998 seconds)
  done (took 3.273956025 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.375500165 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.593313454 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.34573561 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.077663456 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.754898047 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088063531 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 3.930701962 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.134344049 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.080830942 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.524257062 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.366078286 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.132271975 seconds)
  done (took 17.86635627 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.080516438 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.0742043 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.08914305 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.089360515 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.079261988 seconds)
  done (took 1.874242544 seconds)
done (took 102.42646119 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080113246 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.238692485 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.06961592 seconds)
  done (took 1.794145219 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.088922989 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.086872778 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.089098285 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087288045 seconds)
  done (took 1.816809712 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.073355206 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.075259896 seconds)
  done (took 1.610087142 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.200553456 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.175455623 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.098267491 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.081346498 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078516782 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079266444 seconds)
  done (took 1.711292302 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.071402471 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.071440677 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072806663 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.074139336 seconds)
  done (took 1.756873474 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.066692618 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.06593782 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.069265875 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.073106444 seconds)
  done (took 1.743844982 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.08234392 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.083102578 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078127014 seconds)
  done (took 1.705702999 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.098522215 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.088633599 seconds)
  done (took 1.649468996 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.08010453 seconds)
  done (took 1.542864885 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.088166153 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.099132761 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.125484377 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.114987453 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.135250558 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.114245213 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.088676985 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.08600831 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.079594978 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.091005586 seconds)
  done (took 2.485501939 seconds)
done (took 19.829020126 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.076990555 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.182630659 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.353042387 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091695045 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.652577009 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.350885665 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.868199056 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094234003 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.142452977 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070315025 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087511138 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.632082845 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.859918165 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.141065107 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.846388804 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.139334912 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.635145129 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070199007 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069449875 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071264912 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.852268521 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069088653 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070479387 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07037452 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.633933352 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.369054056 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072302374 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.139686136 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07102582 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074971678 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.353347063 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072667856 seconds)
  done (took 14.731829891 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.06991723 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.120146032 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072916798 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08538102 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.072743263 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071952677 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.073301009 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070998279 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.123208663 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070799457 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088256028 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070051595 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.074298021 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.07164538 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090236267 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070132225 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072544649 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071618577 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.0714386 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071971566 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090097178 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070881771 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071913614 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071987144 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071003056 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085182463 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070899746 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068248393 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068733508 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072352857 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073618247 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069889363 seconds)
  done (took 3.94744829 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114846073 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126863784 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075493748 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.109013651 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113194338 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072900198 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.148041751 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095307903 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.130254374 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070898242 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088936218 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070059447 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.105693354 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072570093 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091610348 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072220538 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.074043729 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070589566 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069685804 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071417516 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088005024 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069389759 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069000974 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068888341 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070010962 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083120952 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069711721 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06851864 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068758558 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072477868 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074211818 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070363203 seconds)
  done (took 4.193591721 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.069498406 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.073181469 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.080846699 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.081433081 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069296364 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071307958 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072366198 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069587963 seconds)
  done (took 2.06289542 seconds)
done (took 26.405848778 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.077229723 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068815464 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072438721 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.087979468 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.075110809 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080692836 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066726759 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.076576326 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073154115 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.07345452 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074616032 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068590963 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.072208286 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066271856 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07360056 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067627301 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.082276285 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071834238 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080981404 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.082147114 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070687663 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.07431033 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075853302 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.08176313 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.082056685 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.082132164 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.07673777 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.074100781 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069190971 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071813366 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.07138151 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.081080634 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.082507486 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.082491536 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068486884 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068529798 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072856958 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.070161286 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083214331 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.078028355 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070687922 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.07768086 seconds)
  done (took 4.609797193 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.083131052 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090494762 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084114163 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.082095492 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.092404683 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.084663214 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088399387 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079518278 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.079607495 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087481241 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.075204582 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.082991836 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.080097344 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.074025536 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078202291 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075856575 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.080496364 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.0749504 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.078470849 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.079459611 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.088597527 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073915696 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.088069479 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.081027772 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075647645 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.08190343 seconds)
  done (took 3.612165618 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.071913183 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085137266 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.093226239 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.145455923 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.111778805 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.081510334 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.082614472 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092772018 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.097075915 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069361409 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071899483 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.090791347 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093003017 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074505351 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069211337 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084124104 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084737002 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071870845 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.076135185 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097880877 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.090716363 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086444244 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.094457349 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084616312 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068458446 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.071769817 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073257009 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.084507244 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07087994 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079517441 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.074099878 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072857924 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070130714 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079515563 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.07119833 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068710829 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.093681229 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080026285 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081568833 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069416975 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.078399057 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.07004392 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093835844 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.128647846 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068049945 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.072651607 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.072654088 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079600424 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067960698 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096366458 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080666075 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.06850817 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069321587 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067739427 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.06807105 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.071074838 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070297368 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071323012 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079158245 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.076019532 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.091245941 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073960454 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08662733 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068421187 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.079149196 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068212544 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070335742 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.068036935 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097532226 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070229952 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.113321939 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069745856 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067718884 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079941614 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.079136246 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.07514512 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068746805 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086462815 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.081102883 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072942204 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078107525 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072459094 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072896481 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.09947459 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069413029 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068319542 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067804665 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072707547 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.07290322 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069619946 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081067209 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068217136 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.073029128 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086720989 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068547053 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069866122 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072846962 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072104398 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.0687504 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079857695 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072739034 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070480614 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079423942 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069576336 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072622797 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.082005001 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075713127 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.068105407 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071371363 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072984807 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070927934 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070545526 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.07289186 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071190008 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076148357 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.07573057 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.07447841 seconds)
  done (took 10.654094159 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.160037628 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.156175685 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071423446 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.14824186 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.078242252 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.081469775 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.152264108 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095671138 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.069578561 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071168784 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069761109 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110423097 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105408967 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.115385752 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.082437263 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070449495 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.091963258 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114780624 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.153598376 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.147952715 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.092482621 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078154542 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.072587286 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.071878278 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.07095544 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079182522 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086402085 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.078743906 seconds)
  done (took 4.301521666 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.075878863 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.104397944 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073841444 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091944293 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.088215249 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069876603 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.071607826 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.07101122 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.085782068 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.07790207 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.069936106 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074821754 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073334539 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.073005037 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070490604 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.076642297 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076882207 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069034998 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.073467386 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.07515366 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079511812 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.093385794 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.073686011 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.06957463 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072204166 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.069729542 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.077275296 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.080873899 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.070177683 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.105823112 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067212793 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.077615838 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083668815 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070284003 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.069031258 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.070141122 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.069788292 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.069996136 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.07117746 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068320651 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.068338815 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.073019383 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068246843 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.076831164 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.082509401 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.071117052 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071261949 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072205454 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072661898 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.06702345 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.072602295 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072201795 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072516584 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.077006658 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074022605 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072451306 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070623637 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.097169361 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075665404 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.069021205 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.068833101 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.068400691 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071778998 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.078152698 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.084867971 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072533826 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.068231236 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.069616597 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.082104144 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.082518642 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068845402 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.074631444 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.067506775 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071137142 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072105395 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.072082893 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.07057611 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.068528813 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069520898 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.06988071 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.072963773 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069512134 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.068784919 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072895223 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067979996 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.068213118 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069893192 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071055797 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.077280995 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069092432 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073217674 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.071094005 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068600843 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.072344237 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.075137657 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072830742 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.080425924 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.079726572 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070254842 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068072875 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.083288858 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072424388 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068822414 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.075819593 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074164066 seconds)
  done (took 9.312787864 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.089821152 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069395041 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086261574 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.093030976 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.079493735 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.076074208 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.07998378 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069499762 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.086146638 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074945913 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077804769 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.06834438 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080246386 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079321344 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070341582 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080107234 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072906458 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.087276402 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.084179925 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.0682493 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078325367 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081582618 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.081783545 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.084199286 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.083677088 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.085335923 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.082162082 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.079453957 seconds)
  done (took 3.758513534 seconds)
done (took 37.718700279 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.574968682 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.716894608 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.545599595 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.738257057 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.596990174 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 90.53178894 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.722639235 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.545973817 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.717028202 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.58580293 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.873808683 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.776635419 seconds)
done (took 146.552901937 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.623634972 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.697751546 seconds)
    (2/2) benchmarking "String"...
    done (took 1.808877565 seconds)
  done (took 4.996563879 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.84064628 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.215824593 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.778988876 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.545818052 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.55169653 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.796575068 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.322533037 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.019309034 seconds)
  done (took 28.720374972 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.581994448 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.760502764 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.168547757 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.19686816 seconds)
  done (took 14.234905445 seconds)
done (took 58.989750161 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.581514031 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.579644642 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.548513606 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.545688301 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.635301507 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.554927669 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.771793232 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.486468526 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.546705612 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.552886605 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.549060722 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 4.954669977 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.553847758 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.858493901 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.546346788 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.541899665 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.555593352 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.699756414 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.692330142 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.553682675 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.542651809 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.596569688 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.542909615 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.542350169 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.682394946 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.651791416 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.043371563 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.657578769 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.477305915 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.653495872 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.698334593 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.073927962 seconds)
  done (took 197.960080435 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.648307128 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.536455121 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.622508916 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.659033572 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.999926123 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.841547668 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.750928255 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.064786532 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.655050246 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.668854151 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.833052265 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.64813924 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.857907769 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.618551782 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.687424034 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.722835854 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.811246173 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.861973064 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.687539845 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.796212219 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.673749376 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.673603716 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.640976922 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.822299145 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.655382093 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.73863986 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.65988125 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.655202822 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.836349289 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.790171069 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.692677684 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.670522946 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.852245253 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.518886855 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.669336784 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.662173656 seconds)
  done (took 164.774376113 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.828337649 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.643977662 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.644835029 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.644042573 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.648514804 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.643655853 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.76627786 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.769630416 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.296922061 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.043838062 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.700966684 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.644753096 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.409093727 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.646452373 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.710210934 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.654271889 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.643665206 seconds)
    (17/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.644756019 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.66223774 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.645634874 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.670206455 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.648308689 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.766650533 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.661125252 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.655612783 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.645868798 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.649944989 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.030242611 seconds)
    (28/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.645534166 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.645314851 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.797325805 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.650538317 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.651469633 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.88614638 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.647843914 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.645689566 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.466813324 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.154062545 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.72542781 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.646445557 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.654137659 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.641414717 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.856957526 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.639666115 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.640485367 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.641510739 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.643630995 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.755819838 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.639457781 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.762765087 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.64298048 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.110624118 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.637610569 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.639047231 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.835933392 seconds)
    (55/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.639055613 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.204867967 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.632445478 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.63687533 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.63383586 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.637384272 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.638613197 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.782927368 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.704603841 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.635898504 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.634877292 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.638616542 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.633152721 seconds)
    (68/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.632976325 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.633467492 seconds)
    (70/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.756129781 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.646684749 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.750028867 seconds)
    (73/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.982567246 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.755206135 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.63487968 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.695111458 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.723772738 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.632521326 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.630805203 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.63290688 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.633710069 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.714320376 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.631332762 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.713188824 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.643142726 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.63400787 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.683867624 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.703773147 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.633825201 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.463691169 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.636174986 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.632725964 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.882350285 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.701428287 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.631579178 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.631115506 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.633985127 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.711241983 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.755419177 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.354587166 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.63416107 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.784423436 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.707023374 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.632329142 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.745911737 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.632016404 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.709743635 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.637747664 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.636236826 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.664812653 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.635243762 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.645112531 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.632862924 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.003096248 seconds)
  done (took 383.985658116 seconds)
done (took 750.088270228 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.238866344 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.205524964 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.293478127 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.221119968 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.197717106 seconds)
  done (took 12.726324001 seconds)
done (took 14.297737944 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.708273027 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.718160311 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.652019244 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.714425035 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.650578894 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.713599485 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.70314855 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.658554211 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.684151859 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.658346602 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.68230952 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.65481358 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.63706764 seconds)
  done (took 23.405780971 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.861974606 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.8672104 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.697485485 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.85670736 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.668644777 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.859880337 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.78472251 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.775433199 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.775527429 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.642544322 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.638772353 seconds)
  done (took 21.000117105 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.869699826 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.878362543 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.702891009 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.868351749 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.672656345 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.878504976 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.791310535 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.776217993 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.773424198 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.641049342 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.64245959 seconds)
  done (took 21.066593157 seconds)
done (took 67.045956561 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.633943091 seconds)
  done (took 3.203743733 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.654064114 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.806777417 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.635420208 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.633280758 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.635360144 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.634236374 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.635367462 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.636258101 seconds)
  done (took 14.841171492 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.633555996 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.632947144 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.634753558 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.633931327 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.633445363 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.636397087 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.636333577 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.634636809 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.635606469 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.634309075 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.636267028 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.636172638 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.633612799 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.633141184 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.634185114 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.634853503 seconds)
  done (took 27.723613287 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.637739889 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.635424493 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.635169557 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.633186724 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.63546119 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.636861738 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.637719635 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.634695209 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.63482973 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.635204212 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.634211606 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.63499217 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.635894963 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.634479313 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.634121964 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.6347033 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.633305471 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.634662722 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.640317365 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.632687339 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.635509048 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.634437447 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.634454397 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.633898213 seconds)
  done (took 40.817936764 seconds)
done (took 88.158378332 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.367915621 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.518311711 seconds)
  done (took 9.454750079 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.643234961 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.640397637 seconds)
  done (took 4.938421948 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.639058308 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.639495294 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.639832079 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.641020007 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.638580157 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.640554995 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.638968172 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.641027264 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.64104823 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.639764262 seconds)
  done (took 17.974814941 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.639953132 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.642443206 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.640053187 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.641439806 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.64260968 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.640921321 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.641189685 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.641835091 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.64100901 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.642306154 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.641191949 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.640624538 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.641285745 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.64084903 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.641248764 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.641718491 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.643714942 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.641283215 seconds)
  done (took 31.120831997 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.641874821 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.641512856 seconds)
  done (took 4.860538352 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.643021608 seconds)
    (2/7) benchmarking "second"...
    done (took 1.642932855 seconds)
    (3/7) benchmarking "month"...
    done (took 1.643139999 seconds)
    (4/7) benchmarking "year"...
    done (took 1.642902123 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.640369135 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.640395987 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.641439858 seconds)
  done (took 13.070303251 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.641857222 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.796073935 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.861144216 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.254698229 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.64424895 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.643929247 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.577231809 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.643273721 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.645719453 seconds)
  done (took 18.28316131 seconds)
done (took 101.273934976 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.51493663 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.640803096 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.90660461 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.782149751 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.660943817 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.640212334 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.665693157 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.911465551 seconds)
done (took 41.299165753 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.685946427 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.347889053 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.37577889 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.677055417 seconds)
  done (took 14.980460747 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.643619289 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.927537771 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.665240169 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.468803285 seconds)
  done (took 21.289349739 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.011792613 seconds)
    (2/2) benchmarking "read"...
    done (took 1.999114453 seconds)
  done (took 5.594319775 seconds)
done (took 50.131139664 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.647629003 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.646687867 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.646712854 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.649347659 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.647587682 seconds)
    (6/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.64862134 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.648014108 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.648282221 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.64825497 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.649580222 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.647873147 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.647232942 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.648743541 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.648282209 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.648191154 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.648656333 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.646878605 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.647852852 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.647177161 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.648877811 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.649518233 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.648807893 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.649792446 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.648683534 seconds)
  done (took 41.135963212 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.649379964 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.649942215 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.650314353 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.647045606 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.649145314 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.646726739 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.648489208 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.649502362 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.649410776 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.647393874 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.64874655 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.648843099 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.6502091 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.649453948 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.648810182 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.651314602 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.650422476 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.649006222 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.647088552 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.649019713 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.649671315 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.64970469 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.651238513 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.650217281 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.651031203 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.649552428 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.651743742 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.64974006 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.648395521 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.650100541 seconds)
  done (took 51.066409068 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.651834217 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.650990351 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.650369754 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.648292124 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.647819845 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.650142777 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.647808295 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.650474943 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.647405414 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.651205182 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.64973778 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.650215625 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.650342055 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.650556249 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.651400925 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.651206777 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.649606472 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.650908113 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.650625431 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.651732495 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.652532647 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.651696654 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.649324807 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.650757749 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.650081573 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.652018326 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.65257085 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.651951579 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.650524967 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.651775299 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.651637805 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.650541086 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.651758075 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.652114292 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.650324021 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.651116325 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.652528086 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.651341086 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.65385626 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.650452646 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.650575926 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.650791364 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.650894324 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.651712355 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.653399964 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.653039187 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.651197789 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.651875206 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.652620215 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.650324544 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.65299151 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.651163351 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.650978129 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.651525073 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.653876719 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.652663634 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.652915048 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.653804066 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.651621685 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.651588477 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.652664839 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.652046873 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.65380416 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.654089681 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.65410514 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.652515458 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.65263417 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.654864684 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.652379235 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.653256888 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.653679404 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.653708448 seconds)
  done (took 120.498805613 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.653101158 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.655212036 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.655655282 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.653442964 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.653077155 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.654151213 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.653797117 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.65514227 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.653670026 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.65481971 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.655110135 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.654891186 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.653499695 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.65433153 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.654761948 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.65277821 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.655084683 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.655265958 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.654743753 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.655044884 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.656831633 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.653436615 seconds)
  done (took 37.98574517 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.654575773 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.655466933 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.65410834 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.653528217 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.655246687 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.655702673 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.65336028 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.653953718 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.654098146 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.654938244 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.653926432 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.656537895 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.65571255 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.655395757 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.652557846 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.655144102 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.65563789 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.655479796 seconds)
  done (took 31.374134673 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.655153749 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.656384706 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.655860361 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.654544215 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.65575967 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.655269731 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.656299469 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.6549083 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.656783527 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.655643609 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.657473445 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.656684697 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.653475636 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.657228643 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.656200455 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.659134101 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.654360237 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.656345558 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.656253798 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.654763322 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.65853301 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.656779134 seconds)
  done (took 38.025089255 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.655961958 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.655963799 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.656345146 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.655137198 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.654646351 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.657786125 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.657600317 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.656931504 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.657489188 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.659068298 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.654521284 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.658013818 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.656799519 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.659139928 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.657203205 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.656085092 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.656207615 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.658334997 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.657592402 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.658057793 seconds)
  done (took 34.730861216 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.654363168 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.656120349 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.656093076 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.657400837 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.658227029 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.659522384 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.656249614 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.655872575 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.655603493 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.654987384 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.656622879 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.65637913 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.65805936 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.656730083 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.65721932 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.658399315 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.657173025 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.657939222 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.657908214 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.656955041 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.656143208 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.659238687 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.655729428 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.657260496 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.657099098 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.657045328 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.655065701 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.65511411 seconds)
  done (took 47.981627175 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.657605842 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.656882827 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.655906813 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.65822002 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.657251121 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.658282234 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.660701593 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.66143597 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.658783274 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.658561146 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.658837619 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.658461917 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.658452114 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.659752865 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.660799694 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.658553619 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.657282263 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.65764259 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.659938587 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.657712533 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.659551545 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.656651222 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.659559829 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.659066488 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.660548707 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.657996365 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.659174376 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.660393827 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.658887027 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.659062141 seconds)
  done (took 51.354091099 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.681688978 seconds)
    (2/2) benchmarking "in"...
    done (took 1.683216263 seconds)
  done (took 4.95955545 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.65964458 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.663916876 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.662263402 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.661626562 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.661167145 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.659565761 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.658890972 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.65952127 seconds)
  done (took 14.879208238 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.659958398 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.65894141 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.660143518 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.659732347 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.660710047 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.660954855 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.66672172 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.661418642 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.662092824 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.658922787 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.667841836 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.665837015 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.663336023 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.660635607 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.660845111 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.660774721 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.658542866 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.659793326 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.66207761 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.660586049 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.661792626 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.662197661 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.664162263 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.659469344 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.662310053 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.670675238 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.666092122 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.659319991 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.662216545 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.665363962 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.66150333 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.659527883 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.661766299 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.663066223 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.661741909 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.662243423 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.666995053 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.662954123 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.667116278 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.663124812 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.661409493 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.661638502 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.664058654 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.662686875 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.662247746 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.660538842 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.661930382 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.661062163 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.660837018 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.665167875 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.666699405 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.665282022 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.664414904 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.668549421 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.665271883 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.672765835 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.665823608 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.66971308 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.674518403 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.673936515 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.67257136 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.667008253 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.664781846 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.66107864 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.670655833 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.688204155 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.671295779 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.663536224 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.663308376 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.660897712 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.671216678 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.674298792 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.671085714 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.663183515 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.662219707 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.665107366 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.664902145 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.662496584 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.670905425 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.666436723 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.664361438 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.66516477 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.671825988 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.685485637 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.65963405 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.664138272 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.663881113 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.664672073 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.666238884 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.675360823 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.666865154 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.663771876 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.66427485 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.664330597 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.665937218 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.66703331 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.663593208 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.664486374 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.664888339 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.664221909 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.664395226 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.669690154 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.672847156 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.665132732 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.665194187 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.672307822 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.66510727 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.665143116 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.671310531 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.664265731 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.663422928 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.666264361 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.672743311 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.6676943 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.669045224 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.67344216 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.667640792 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.666997271 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.666575624 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.667176459 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.675978419 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.692773629 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.666215677 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.667266708 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.671519703 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.677416767 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.666158344 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.670316964 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.664938029 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.66558989 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.667117638 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.668812471 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.666572023 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.666709718 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.668285455 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.668828631 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.6673088 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.66618044 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.666748592 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.667708814 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.664972062 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.66784373 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.668857965 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.670014255 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.666955809 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.666393294 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.674136433 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.667956939 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.667833985 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.669310731 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.66753716 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.66825467 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.669606007 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.668755213 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.667394788 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.668468035 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.665825076 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.666107145 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.668960597 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.667343233 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.668741457 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.667974277 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.671714547 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.668741095 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.67177496 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.665913882 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.666718161 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.667939212 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.667442153 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.666583264 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.670252193 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.668326181 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.67344853 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.67606941 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.669837664 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.669046864 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.672695392 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.668177922 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.668294407 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.669253032 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.672902622 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.676670931 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.667828195 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.672882938 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.670217562 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.670621358 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.669941794 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.669986246 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.667980851 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.669627005 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.670986859 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.674033729 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.683650352 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.677705741 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.670480267 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.671576498 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.671817816 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.673809781 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.673525968 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.670588944 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.66977961 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.670658139 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.669966577 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.66944598 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.669777016 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.672285765 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.66906948 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.670147049 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.66990167 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.669577707 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.670647746 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.670940327 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.672413443 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.668965542 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.670177412 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.671201534 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.670138637 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.667727336 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.667570453 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.668549195 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.672496114 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.669908567 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.678242787 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.670016034 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.671723677 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.67248297 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.671899653 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.670422889 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.667676777 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.674342484 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.671641468 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.678261106 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.671398796 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.675947151 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.678084497 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.672993535 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.670656722 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.673475593 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.67054247 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.672335437 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.674797749 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.677795071 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.671382708 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.670515623 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.672014688 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.670713693 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.672698723 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.679568644 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.673262662 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.671602559 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.67089882 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.674651755 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.671466938 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.673299573 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.675260919 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.671285268 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.674408728 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.672885859 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.673879146 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.672118098 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.67226116 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.6735637 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.672914217 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.676576176 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.678394776 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.67702888 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.672643137 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.674691344 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.675019464 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.673838134 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.67421855 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.671664547 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.673490341 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.681883672 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.68062809 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.680357396 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.676389663 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.672932235 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.68077918 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.673786071 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.676948765 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.673100759 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.673706178 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.673461998 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.673276037 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.674036919 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.674059578 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.674016671 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.675253581 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.674438517 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.674591335 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.674327802 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.674840111 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.674828441 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.676590019 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.675567347 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.673730178 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.676960822 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.676089317 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.677544979 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.672625245 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.675743564 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.68165571 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.675462992 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.673927625 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.677642124 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.677570001 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.675032814 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.676762427 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.674750606 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.677366679 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.683393479 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.679445751 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.684796107 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.677245018 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.68568633 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.676689484 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.678548846 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.68369615 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.677741176 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.674635857 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.676216284 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.675414801 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.68275212 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.675874703 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.677456937 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.679168236 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.677354748 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.675717825 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.675804924 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.677295773 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.676606812 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.676175465 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.685737966 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.676834057 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.682430947 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.681013772 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.676320009 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.680237887 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.677843518 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.674902279 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.68108497 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.677818372 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.679706629 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.677939383 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.677465439 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.678394125 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.677863413 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.676700285 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.677038307 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.677998355 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.68402542 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.678881622 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.681263079 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.678728496 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.686586883 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.679358878 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.68583622 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.678786191 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.678656505 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.676871237 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.677581249 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.680133015 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.675994317 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.6802624 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.679851403 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.677976548 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.683153979 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.677229202 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.680038086 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.679289888 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.681300966 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.678621519 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.687927224 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.70122085 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.681275949 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.682289013 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.679202165 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.679956856 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.680768669 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.678496554 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.677701758 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.682831 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.688235838 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.686393417 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.678818589 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.679581116 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.679104217 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.679144069 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.678799232 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.678209279 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.678401042 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.678409883 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.679439117 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.679971264 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.684473832 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.677057544 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.682275718 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.68178037 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.680481849 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.689726625 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.681965465 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.679179459 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.682006488 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.680059005 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.682317315 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.681030356 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.68140183 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.680207404 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.68003757 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.680641853 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.685407749 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.685849961 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.684290138 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.678851825 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.678435971 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.680728967 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.67921302 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.67760697 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.678518845 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.680643124 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.68048572 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.681941177 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.681035107 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.681071982 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.679252796 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.680644102 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.680644859 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.684080761 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.686240268 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.681709873 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.681086533 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.681573772 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.679053778 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.680588622 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.681970182 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.690650303 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.685823095 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.689359535 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.686163255 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.684814385 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.683318726 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.683753627 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.688257898 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.68175003 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.681079579 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.680068767 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.684155763 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.680050729 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.684253052 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.680925601 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.68665818 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.682859459 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.683056042 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.689223888 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.686768128 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.681390872 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.683333063 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.685736926 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.683075694 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.684058246 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.683189707 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.681107563 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.690455555 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.686830142 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.684119092 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.68582565 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.679821035 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.683187674 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.685826078 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.682780908 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.681958636 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.684682789 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.682244027 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.68076464 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.681081514 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.681269119 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.683579597 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.683633458 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.688652172 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.689181909 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.683043567 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.686328029 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.68307402 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.683807457 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.683429719 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.682244553 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.681228091 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.682583107 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.682895121 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.682231276 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.684147436 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.683776423 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.682593777 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.684336196 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.688188951 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.682684655 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.687630221 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.690266928 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.689374203 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.68388577 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.681822954 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.682435753 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.688541636 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.683716695 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.685210298 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.685835372 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.687305903 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.684359858 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.684350576 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.683081871 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.686924554 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.701202148 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.686277435 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.684623022 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.684755058 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.689509003 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.684714905 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.685300423 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.685242581 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.687328412 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.688112817 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.691605225 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.683145581 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.692305054 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.687389553 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.685228221 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.68917399 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.687958042 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.691990402 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.690079178 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.685593152 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.684860221 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.689652279 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.702769133 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.68694447 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.694820725 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.716505327 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.687646186 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.684331512 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.686790785 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.685885895 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.685457741 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.686061518 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.683713507 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.682661718 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.685361689 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.68495748 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.683893419 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.690812413 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.688981214 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.68450638 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.684442465 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.688156167 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.690052576 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.68536906 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.688327966 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.687818484 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.687076817 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.688023502 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.686569154 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.682077897 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.69612011 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.693982266 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.686722075 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.686481248 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.68765048 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.691981848 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.689130745 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.697518372 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.694761401 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.687083682 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.688991008 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.68968873 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.683701164 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.686329835 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.686809018 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.684768683 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.688533748 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.686665386 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.698787111 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.694588636 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.693053585 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.688789766 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.688410612 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.687717047 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.689275215 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.688080181 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.688372826 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.688937051 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.6873103 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.694283141 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.68831453 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.68814856 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.690377299 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.694981848 seconds)
  done (took 1000.724928944 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.68828057 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.687888316 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.686333715 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.688873293 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.688494327 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.685760294 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.688485172 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.687163076 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.687728154 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.689176534 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.688526902 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.688371945 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.688291858 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.688538222 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.688930123 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.690547718 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.688305715 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.690003898 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.690647438 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.690976519 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.687966481 seconds)
  done (took 37.079721765 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.688136606 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.688434307 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.689304889 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.689254345 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.690283641 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.686890384 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.688744571 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.688309028 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.686597829 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.688334359 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.690116799 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.68923406 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.68988147 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.689285869 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.689347917 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.690460487 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.691239423 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.689749591 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.688586953 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.690279745 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.688385679 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.691310705 seconds)
  done (took 38.783316743 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.690250719 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.690701607 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.692017491 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.688635322 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.690650803 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.690987041 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.689410402 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.688226944 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.691430725 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.690218755 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.689353017 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.69137457 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.696996956 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.697635459 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.691595726 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.692222398 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.83524348 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.691349088 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.691574705 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.687673683 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.689979919 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.697689192 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.691955794 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.691012857 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.687475569 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.688663443 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.689787561 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.691548054 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.691623111 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.690503132 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.697218027 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.690981732 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.690269399 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.696052607 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.691891424 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.689219054 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.69473376 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.693197166 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.690587944 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.691917713 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.69925239 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.712660152 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.691799885 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.699151763 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.692290971 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.691402554 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.695147411 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.700011513 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.691992061 seconds)
  done (took 84.701951926 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.693087834 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.692370639 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.692708747 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.693554142 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.693161346 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.691689852 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.689326295 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.694279342 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.688184716 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.691576249 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.692209404 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.694519167 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.693937852 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.693243134 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.693207499 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.692827901 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.69297434 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.692580599 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.695412138 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.692384536 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.692132538 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.69333489 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.69194093 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.692391508 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.693180122 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.692280159 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.691368934 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.693029386 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.694224411 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.694039179 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.693661658 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.693657559 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.695085574 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.695411005 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.694241005 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.694970043 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.69208197 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.693935909 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.694021577 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.69374093 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.693370714 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.69448167 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.694708948 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.6915643 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.692284977 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.69309125 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.694596625 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.694600423 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.695307691 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.694663804 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.695989865 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.694766985 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.696528305 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.694160991 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.696477375 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.69363591 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.693917133 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.696996982 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.694178542 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.696716772 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.693713281 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.694087568 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.694459621 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.694694417 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.695408498 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.694361568 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.693778816 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.695609831 seconds)
  done (took 116.798626499 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.695338163 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.695046483 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.697809684 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.695462379 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.695912481 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.696741055 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.695561006 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.695582291 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.697033675 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.696021884 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.693852965 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.694941297 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.69574686 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.694996282 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.695904816 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.698623235 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.695340349 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.698657176 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.697601491 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.695154998 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.697556823 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.694270545 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.696720526 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.694811083 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.697215015 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.696779164 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.701143234 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.695096304 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.693982118 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.695776975 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.696536219 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.697127155 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.6968302 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.6970066 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.695166212 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.697071703 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.69695075 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.695279356 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.697992785 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.6973924 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.69801454 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.69525032 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.696614915 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.698493412 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.696834708 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.699675493 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.70121302 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.696347991 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.697892706 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.697591791 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.697499342 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.695767737 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.69684623 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.701562925 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.69854058 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.701178235 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.697793121 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.694914674 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.698958417 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.698690489 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.698451748 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.697953496 seconds)
  done (took 106.839707317 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.696090865 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.696395514 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.700875909 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.694376362 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.694505803 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.697326163 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.695324947 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.697836579 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.695002634 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.698748355 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.695383346 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.696770844 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.700180574 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.696701668 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.699501852 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.696733174 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.695087681 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.696468095 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.699307475 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.695936164 seconds)
  done (took 35.565955668 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.699859817 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.699456807 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.696970156 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.700296436 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.696130239 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.700950221 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.698721612 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.696830406 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.70091294 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.695814325 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.697933232 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.697310319 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.697615104 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.697152357 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.695999217 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.700022645 seconds)
  done (took 28.80203996 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.698963935 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.699620028 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.698502463 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.699462193 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.699552902 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.698185226 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.700129337 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.699493078 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.699486653 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.700104208 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.700827645 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.69953071 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.701183932 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.697455426 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.696463998 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.699497684 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.699783596 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.702016293 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.698242624 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.698963074 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.69831718 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.697949667 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.699527118 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.702051744 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.701306264 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.6994167 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.701556143 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.698831115 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.703073271 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.698783401 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.700133461 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.700079433 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.701383623 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.699250334 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.699290248 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.701994396 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.700584944 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.69990559 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.701759978 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.698483416 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.700736861 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.699830393 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.701945902 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.699738973 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.699935729 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.702227385 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.702602806 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.701248158 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.697699268 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.701729447 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.700581293 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.699841412 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.700018727 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.703170339 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.69991505 seconds)
  done (took 95.131093567 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.702739273 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.702164869 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.699306372 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.703937846 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.701234566 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.700671512 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.702626453 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.701659056 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.703565074 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.702566709 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.70069674 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.701111832 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.699905269 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.698576144 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.701401887 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.697791767 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.700807157 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.702221958 seconds)
  done (took 32.251280101 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.701050398 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.701929788 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.701052096 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.700111995 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.702333329 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.701191677 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.699598109 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.703515793 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.705025046 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.700180644 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.699989217 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.70331331 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.705300033 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.701850801 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.704086545 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.703355892 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.705765473 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.705540998 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.70653309 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.701977026 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.702356209 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.704508819 seconds)
  done (took 39.09313277 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.701216799 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.700555126 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.71899478 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.722851232 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.722270031 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.739037136 seconds)
  done (took 11.932451142 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.702817645 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.702060586 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.704003532 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.701336208 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.702000634 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.702470496 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.70483218 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.70131338 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.704067383 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.701984258 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.705208845 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.704862659 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.704913512 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.70151613 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.703243964 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.702874412 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.701403211 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.704053562 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.701940607 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.704409529 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.702117093 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.706105893 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.703814275 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.704674668 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.705855171 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.703553482 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.702131339 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.705701945 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.705139273 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.704591202 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.706342206 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.703579221 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.704127435 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.701995313 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.702155594 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.704173921 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.704614415 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.705228263 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.703324244 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.705838794 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.70528829 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.706005639 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.706296238 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.702221047 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.705617288 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.706304113 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.705207344 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.705980196 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.70498783 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.705357778 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.706539943 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.707640701 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.703227614 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.705250771 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.70153663 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.707463991 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.703296985 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.705066579 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.706931167 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.707018659 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.707217748 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.706727262 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.705370015 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.702946074 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.705911205 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.704560571 seconds)
  done (took 114.120688737 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.702546357 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.706080821 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.704618463 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.701970767 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.70401365 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.706860911 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.70454581 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.703980605 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.706963179 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.708353043 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.705881742 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.705799079 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.707363116 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.707979688 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.706929536 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.706521636 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.706177484 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.709331763 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.705817635 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.70568052 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.705498816 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.708220628 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.705419009 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.708094508 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.705404975 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.70701704 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.706060738 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.708312154 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.705910012 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.709344177 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.705627519 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.707101476 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.709425479 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.710091759 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.709769534 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.707798514 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.707601738 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.709515784 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.710290522 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.707250604 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.707604794 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.709010099 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.707452267 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.709364605 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.709633736 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.707965785 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.708259658 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.709248249 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.707645318 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.708672302 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.707357874 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.707473898 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.708391319 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.706259256 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.70870937 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.707979632 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.707010348 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.709957239 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.707110216 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.709536935 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.708274382 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.710516075 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.707202297 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.70843292 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.709956819 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.712162795 seconds)
  done (took 114.331723234 seconds)
done (took 2331.736260633 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.763940736 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.717125441 seconds)
  done (took 15.120268224 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.873335716 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.822596899 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.710070067 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.748278796 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.710751129 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.731213273 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.715162519 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.708205921 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.711656561 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.711895885 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.70792944 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.8942166 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.718972636 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.706086385 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.709908689 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.804570878 seconds)
  done (took 49.628851206 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.715394332 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.717278246 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.722289253 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.715292147 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.717384884 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.723785757 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.745313528 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.716914583 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.744227566 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.726172566 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.781615503 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.721312515 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.711949412 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.759763123 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.726106568 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.726672677 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.806640543 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.782017075 seconds)
  done (took 32.900066719 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.786378561 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.723269571 seconds)
  done (took 10.154390881 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.722024706 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.758955356 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.796338872 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.741867729 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.708669933 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.721178391 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.718256251 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.709459058 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.724089807 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.738043277 seconds)
  done (took 68.981887303 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.722973671 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.722431095 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.716228187 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.71500911 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.715820261 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.712952547 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.714646007 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.716949645 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.364991658 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.746362543 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.723193704 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.722447055 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.718307782 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.720032734 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.715604773 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.739673347 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.828889495 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.716864525 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.716941765 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.721140623 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.715976212 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.77311438 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.730381135 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.720058101 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.744797781 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.370036271 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.723251703 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.724773468 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.853939023 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.72035996 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.717288245 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.903566841 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.720412493 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.182287368 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.974301823 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.722285688 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.727881896 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.725308369 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.719139203 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.837468411 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.720208589 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.723219526 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.611585163 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.951650966 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.809521343 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.762348685 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.021404082 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.729417264 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.7178077 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.74760594 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.721839843 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.720344814 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.732125195 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.221371939 seconds)
  done (took 124.315852272 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.716832544 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.060719504 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.882329274 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.723395034 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.9946846 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.919266054 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.714242798 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.761134645 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.717311709 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.942326353 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.967384098 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.816982105 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.715457187 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.716242323 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.717662425 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.714607931 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.867338948 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.783835061 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.716070894 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.715114145 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.746125544 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.964032534 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.835629157 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.71785746 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.743824504 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.925464012 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.835754984 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.817441665 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.485453084 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.719800027 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.779213985 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.715325625 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.71650249 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.713581735 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.875122608 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.808428106 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.799259602 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.718773083 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.717206531 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.716674304 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.37731111 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.919286045 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.809331542 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.843982475 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.967497603 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.921118086 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.494891783 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.718815547 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.454401137 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.88414247 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.943961878 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.94589707 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.832070632 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.719292664 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.055303917 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.719435188 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.716604844 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.966103907 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.931824469 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.813515952 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.719629892 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.718491634 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.721393573 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.955820314 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.71805884 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.809019238 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.717750898 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.716773609 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.815160253 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.81423206 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.947070442 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.931720462 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.743353856 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.059989248 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.217367291 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.963306581 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.785534784 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.962101646 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.720529073 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.716250777 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.793281101 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.553975877 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.970071556 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.961509024 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.959191371 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.749373059 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.43941841 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.721991217 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.944746183 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.938263324 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.977297443 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.970549098 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.952449123 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.032833654 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.720016173 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.720381222 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.961590846 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.841433058 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.72469107 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.064523865 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.946784348 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.243799054 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.746805366 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.023781204 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.847043927 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.724040019 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.347614307 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.720945135 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.949723846 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.759410579 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.722134331 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.725947214 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.934124994 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.709439518 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.724663282 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.36721084 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.778434854 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.720172454 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.953138964 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.721094075 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.989875468 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.727473173 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.953761446 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.216419651 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.750390036 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.89565099 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.967993677 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.723329124 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.962616977 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.962617524 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.837286512 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.942024793 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.422658109 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.7234659 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.013200003 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.724609831 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.724755155 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.895304904 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.724465212 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.861411899 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.727000144 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.016520481 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.739305024 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.955987421 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.727045321 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.969802675 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.752572312 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.774774055 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.725214616 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.843508822 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.727935633 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.643067929 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.877791241 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.723887521 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.723878695 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.273262376 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.72469356 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.871041152 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.946592075 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.744236365 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.795866495 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.386299203 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.719998431 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.801240969 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.742030678 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.10960789 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.725613832 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.972254394 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.728380448 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.725665178 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.718983259 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.961542876 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.348192927 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.72291349 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.721606439 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.627585897 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.727337309 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.723082299 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.902367475 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.198982435 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.723028215 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.925547375 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.723194543 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.851800661 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.723762425 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.793729938 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.05634015 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.723680436 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.723802843 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.728383321 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.725640831 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.722152615 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.931651977 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.749122709 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.2150125 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.858680633 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.993838884 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.032644018 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.960964 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.765664372 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.727298488 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.974176549 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.7257747 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.782624819 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.723716581 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.7422231 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.947945686 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.726943447 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.928060506 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.990089157 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.571493072 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.767214155 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.724611104 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.721481698 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.721310429 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.867876956 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.809377731 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.726026467 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.721118122 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.837694318 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.843231536 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.931996693 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.725002567 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.793065681 seconds)
  done (took 869.451861228 seconds)
done (took 1172.194559396 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.722464063 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.724441743 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.726055887 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.726418149 seconds)
  done (took 28.557448508 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.724998041 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.723634748 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.724194382 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.72355473 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.727637349 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.723275723 seconds)
  done (took 12.002592192 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.727899104 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.721836072 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.724041855 seconds)
  done (took 20.831570453 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.793145121 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.099566527 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.852525363 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.134167915 seconds)
  done (took 9.536594096 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.72509035 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.720150664 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.72397639 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.725964823 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.722859531 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.725407883 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.728053025 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.727915726 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.727905474 seconds)
  done (took 17.187924805 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.8942755 seconds)
done (took 93.668431997 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.833047178 seconds)
    (2/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.029205157 seconds)
    (3/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.644793438 seconds)
    (4/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.907008191 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.78805664 seconds)
    (6/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.725705061 seconds)
    (7/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.023425766 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.825509342 seconds)
    (9/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.726209281 seconds)
    (10/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.77108299 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.977672674 seconds)
    (12/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 4.791711756 seconds)
    (13/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.577852395 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.849232966 seconds)
    (15/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.799860218 seconds)
    (16/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.724411936 seconds)
    (17/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.73959992 seconds)
    (18/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.757947759 seconds)
    (19/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.043276194 seconds)
    (20/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.890231327 seconds)
    (21/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.745103814 seconds)
    (22/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.856988127 seconds)
    (23/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.047300737 seconds)
    (24/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.724261929 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.208166785 seconds)
    (26/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.737439382 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.384276252 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.729432971 seconds)
    (29/309) benchmarking ("map", abs, Bool, false)...
    done (took 3.289931835 seconds)
    (30/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.810835177 seconds)
    (31/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.966793792 seconds)
    (32/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.033099043 seconds)
    (33/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.801495092 seconds)
    (34/309) benchmarking ("sort", Float64, false)...
    done (took 5.449649876 seconds)
    (35/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.729155724 seconds)
    (36/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 2.042509988 seconds)
    (37/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.612117646 seconds)
    (38/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.964701632 seconds)
    (39/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.065719375 seconds)
    (40/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.922357643 seconds)
    (41/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.90084189 seconds)
    (42/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.750161242 seconds)
    (43/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.898339894 seconds)
    (44/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.78399619 seconds)
    (45/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.726031362 seconds)
    (46/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.834260079 seconds)
    (47/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.944885465 seconds)
    (48/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.73495696 seconds)
    (49/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.946597412 seconds)
    (50/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.802894809 seconds)
    (51/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.085813985 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.668251282 seconds)
    (53/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.73726414 seconds)
    (54/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.403175461 seconds)
    (55/309) benchmarking ("sort", Bool, false)...
    done (took 1.946097193 seconds)
    (56/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.7479104 seconds)
    (57/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.17574629 seconds)
    (58/309) benchmarking ("sort", Int64, false)...
    done (took 5.422939083 seconds)
    (59/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.564793635 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.986720773 seconds)
    (61/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.930135631 seconds)
    (62/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.107485461 seconds)
    (63/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.728038515 seconds)
    (64/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.878584381 seconds)
    (65/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.751758618 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.735889541 seconds)
    (67/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.831830762 seconds)
    (68/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.814531175 seconds)
    (69/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.910085184 seconds)
    (70/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.732521628 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 4.12830691 seconds)
    (72/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.735104667 seconds)
    (73/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.046976107 seconds)
    (74/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.731682855 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.72330682 seconds)
    (76/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.746994716 seconds)
    (77/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.746840286 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.344756029 seconds)
    (79/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.763426974 seconds)
    (80/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.09255335 seconds)
    (81/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.216755552 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.679910594 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.873396349 seconds)
    (84/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.732626503 seconds)
    (85/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.727991195 seconds)
    (86/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 8.013657593 seconds)
    (87/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.80992665 seconds)
    (88/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.887562803 seconds)
    (89/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.806785867 seconds)
    (90/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.729786229 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.753038472 seconds)
    (92/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.731537035 seconds)
    (93/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.322207109 seconds)
    (94/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.735306693 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.872964518 seconds)
    (96/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.235074991 seconds)
    (97/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.047898304 seconds)
    (98/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.757286313 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.732327555 seconds)
    (100/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.883174933 seconds)
    (101/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.918335055 seconds)
    (102/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.744321139 seconds)
    (103/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.870386073 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.861571251 seconds)
    (105/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.739607968 seconds)
    (106/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 3.207702848 seconds)
    (107/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.753015488 seconds)
    (108/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.910486043 seconds)
    (109/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.977310276 seconds)
    (110/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.731799411 seconds)
    (111/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.970504641 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.945622988 seconds)
    (113/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.397119389 seconds)
    (114/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.740016191 seconds)
    (115/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.764073974 seconds)
    (116/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.192167863 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.021369595 seconds)
    (118/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.824499109 seconds)
    (119/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.734804188 seconds)
    (120/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.131851458 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.359547204 seconds)
    (122/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.814622354 seconds)
    (123/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.970343837 seconds)
    (124/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.735421423 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.952166359 seconds)
    (126/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.760220961 seconds)
    (127/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.891103751 seconds)
    (128/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.735842346 seconds)
    (129/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.947655039 seconds)
    (130/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.876377965 seconds)
    (131/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.990088868 seconds)
    (132/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.742191464 seconds)
    (133/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.461060118 seconds)
    (134/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.976103164 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.985355887 seconds)
    (136/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.106845976 seconds)
    (137/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.590171039 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.775584321 seconds)
    (139/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.755522247 seconds)
    (140/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.945893654 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.716761435 seconds)
    (142/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.06076162 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.874752877 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.347079608 seconds)
    (145/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.643630352 seconds)
    (146/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.734191941 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.732538715 seconds)
    (148/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.906749304 seconds)
    (149/309) benchmarking ("sort", Float32, false)...
    done (took 5.429587042 seconds)
    (150/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.109448442 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.869540423 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.067571626 seconds)
    (153/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.838600849 seconds)
    (154/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.752582775 seconds)
    (155/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.059548526 seconds)
    (156/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.957388666 seconds)
    (157/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.841864263 seconds)
    (158/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.877298897 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.062796703 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.73790087 seconds)
    (161/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.966274888 seconds)
    (162/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.102726063 seconds)
    (163/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.737535619 seconds)
    (164/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.231911031 seconds)
    (165/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.796533376 seconds)
    (166/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.940527762 seconds)
    (167/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.733224505 seconds)
    (168/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.850777093 seconds)
    (169/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.870875506 seconds)
    (170/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.751135487 seconds)
    (171/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.922277804 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.068258911 seconds)
    (173/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.82038532 seconds)
    (174/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.789626953 seconds)
    (175/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.737872655 seconds)
    (176/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.04856515 seconds)
    (177/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.74417907 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.168833206 seconds)
    (179/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.761051501 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.06504489 seconds)
    (181/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.890695597 seconds)
    (182/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.967386385 seconds)
    (183/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.110318908 seconds)
    (184/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.186771427 seconds)
    (185/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.89741418 seconds)
    (186/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.919008763 seconds)
    (187/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.90633931 seconds)
    (188/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.741617543 seconds)
    (189/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 8.012351454 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.760817891 seconds)
    (191/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.735975199 seconds)
    (192/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.479812991 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.416735532 seconds)
    (194/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.732990861 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.321449864 seconds)
    (196/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.913417232 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.659107612 seconds)
    (198/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.818986336 seconds)
    (199/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.739846585 seconds)
    (200/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.954579872 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.856446022 seconds)
    (202/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.783829291 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.801141201 seconds)
    (204/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.973706155 seconds)
    (205/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.486676985 seconds)
    (206/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.732947484 seconds)
    (207/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 3.34926623 seconds)
    (208/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.135475989 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.709362108 seconds)
    (210/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.744604623 seconds)
    (211/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.031474994 seconds)
    (212/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.535003906 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.13366254 seconds)
    (214/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.73838455 seconds)
    (215/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.739804856 seconds)
    (216/309) benchmarking ("map", abs, Int64, false)...
    done (took 3.293909635 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.056574016 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.420207885 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.938143201 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.126060047 seconds)
    (221/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.736760714 seconds)
    (222/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.743897867 seconds)
    (223/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 7.058487385 seconds)
    (224/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.761356444 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.73595368 seconds)
    (226/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.04942355 seconds)
    (227/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.846386132 seconds)
    (228/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.766542824 seconds)
    (229/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.762394766 seconds)
    (230/309) benchmarking ("map", identity, Int64, true)...
    done (took 1.990025543 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.126888702 seconds)
    (232/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.742798895 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.528702328 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.738768008 seconds)
    (235/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.900964852 seconds)
    (236/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.83655274 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.736108474 seconds)
    (238/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.112958793 seconds)
    (239/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.755399369 seconds)
    (240/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.968320152 seconds)
    (241/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.738090976 seconds)
    (242/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.977475481 seconds)
    (243/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.848322709 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.86525524 seconds)
    (245/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.736572923 seconds)
    (246/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.581005656 seconds)
    (247/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.867021192 seconds)
    (248/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.739200899 seconds)
    (249/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.144957304 seconds)
    (250/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.044788354 seconds)
    (251/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.007952483 seconds)
    (252/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.873715859 seconds)
    (253/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.183918051 seconds)
    (254/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.119364013 seconds)
    (255/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.738791344 seconds)
    (256/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.839630053 seconds)
    (257/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.737807947 seconds)
    (258/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.044134752 seconds)
    (259/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.765253701 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.973774282 seconds)
    (261/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.742076147 seconds)
    (262/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.046691919 seconds)
    (263/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.058609076 seconds)
    (264/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.779307321 seconds)
    (265/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.930399465 seconds)
    (266/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.761535322 seconds)
    (267/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.758922966 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.166022388 seconds)
    (269/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.926167409 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.990579206 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.060055112 seconds)
    (272/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.760445876 seconds)
    (273/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.742700473 seconds)
    (274/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.099055519 seconds)
    (275/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.834609871 seconds)
    (276/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.739679845 seconds)
    (277/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 2.390536393 seconds)
    (278/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.733913917 seconds)
    (279/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.376674952 seconds)
    (280/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.113687044 seconds)
    (281/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.884732978 seconds)
    (282/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.034500992 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.867295881 seconds)
    (284/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.92307633 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.878575878 seconds)
    (286/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.520734346 seconds)
    (287/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.92176877 seconds)
    (288/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.190509234 seconds)
    (289/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.900783786 seconds)
    (290/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.991649184 seconds)
    (291/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.843790762 seconds)
    (292/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.987672005 seconds)
    (293/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.851490443 seconds)
    (294/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.882307409 seconds)
    (295/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.855659272 seconds)
    (296/309) benchmarking ("sort", Int8, false)...
    done (took 4.639748488 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.773447257 seconds)
    (298/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.048771017 seconds)
    (299/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.860489266 seconds)
    (300/309) benchmarking ("sort", BigInt, false)...
    done (took 6.738968482 seconds)
    (301/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.742288126 seconds)
    (302/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 3.522792865 seconds)
    (303/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.606733834 seconds)
    (304/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.763861145 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.950614706 seconds)
    (306/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.850217584 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.06302813 seconds)
    (308/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.003901425 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.441368111 seconds)
  done (took 963.887302855 seconds)
done (took 965.608352471 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.767790945 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.7595948 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.741592524 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.765655319 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.852681585 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.789335175 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.755617639 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.742938629 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.79082704 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.794657363 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.741512953 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.790170204 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.745274013 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.74419207 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.743695902 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.757433654 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.057162902 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.777153015 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.762705379 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.754727501 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.761582293 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.739752572 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.792669131 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.788303177 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.750111818 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.746968025 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.748419761 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.764285861 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.856853233 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.749949365 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.747351909 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.757134066 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.058347197 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.773218001 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.740016529 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.765169761 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.755387256 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.756663476 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.745982382 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.775434412 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.143709563 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.785249612 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.743416775 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.743298544 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.743271941 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.750535979 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.746499252 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.749230296 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.759535371 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.759190916 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.13631227 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.799422201 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.745746306 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.745283334 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.7531073 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.747097296 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.748279826 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.760954767 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.763537096 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.76183454 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.0426779 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.781075794 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.743918505 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.761759142 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.754150314 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.171518643 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.783350226 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.750622666 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.141919774 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.793988106 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.174417633 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.793756172 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.747487528 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.760710393 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.778928004 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.059629336 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.773437429 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.746000029 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.755977398 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.743063553 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.76049168 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.762723038 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.752704182 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.746005942 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.763557883 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.795518401 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.760289677 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.747708734 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.757759432 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.767722412 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.756648944 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.756452412 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.751987387 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.746609594 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.757591232 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.753139016 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.750009109 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.751077871 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.752201788 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.760408083 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.144514157 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.807558862 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.74707668 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.747319734 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.750907501 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.762035752 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.143011331 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.788215244 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.768631799 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.797147396 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.747767417 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.045324162 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.782834072 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.765085035 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.76186147 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.755331127 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.745958397 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.047250223 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.169237249 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.80344407 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.746796922 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.745074976 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.763002451 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.749847114 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.744887333 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.061536747 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.779270014 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.762674075 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.875875027 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.765123566 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.779511375 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.7449496 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.756142757 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.800607975 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.768451636 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.782352699 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.753987364 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.764424809 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.765670184 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.747464349 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.760760265 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.76270792 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.745940133 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.75550305 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.747489936 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.799826756 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.761736727 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.764688499 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.769793472 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.872201814 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.747243049 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.043426955 seconds)
done (took 275.250354081 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.826207378 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.74685203 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.843297074 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.746069115 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.842632444 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.821042429 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.747435381 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.750712762 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.74910855 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.256947599 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.747946756 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.75496059 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.748465925 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.749927843 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.819180304 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.749057842 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.748736682 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.194366355 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.751969129 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.827116577 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.751989651 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.750538161 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.748748453 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.239604185 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.748087983 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.746318335 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.828855827 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.7504195 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.192974852 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.746540721 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.748024881 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.191332812 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.828802442 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.777310425 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.758885648 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.755815784 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.838876916 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.757993917 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.81832633 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.819383874 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.842174546 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.781254248 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.748029845 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.750458321 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.751117449 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.750311388 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.752066184 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.782511862 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.753592974 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.754436654 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.200336877 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.75917523 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.755327797 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.754404271 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.749782469 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.777784172 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.751493676 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.751753905 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.831368023 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.754272061 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.822375349 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.244190803 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.258003412 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.754127017 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.749758535 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.750054194 seconds)
  done (took 177.2264707 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.816972861 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.82773337 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.818105182 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.753189496 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.800385414 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.818372626 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.75573087 seconds)
  done (took 14.267426516 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.75652602 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.750401034 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.799581179 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.802842165 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.752419445 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.906191842 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.753433672 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.761748103 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.75901146 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.78057321 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.755094139 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.752360877 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.756557418 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.750365633 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.80116126 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.764970148 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.867827507 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.753908097 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.753416957 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.900320627 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.756414092 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.762590495 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.778725807 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.765715861 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.753175734 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.757913119 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.324854674 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.75355919 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.75133362 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.753259069 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.754672763 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.793968564 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.752225777 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.751707553 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.754090618 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.866545567 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.753332898 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.754977047 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.753531601 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.751801874 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.754814 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.756808328 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.754405498 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.753949258 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.754181529 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.777211963 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.752691923 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.753475045 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.754714901 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.754866494 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.779624006 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.756413186 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.755580144 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.760955016 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.796531496 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.761301937 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.756060162 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.753211249 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.755965627 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.755249677 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.904661666 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.803233434 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.755441778 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.804255793 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.754751251 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.753825353 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.751824029 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.752292219 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.842130926 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.754196159 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.800456493 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.756145118 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.913111539 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.776800966 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.754232451 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.756220723 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.757476902 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.75660088 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.754240967 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.761965391 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.7567585 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.755829814 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.762106066 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.758968183 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.752774808 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.869404225 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.892335303 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.754239536 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.756443283 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.760202108 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.75626307 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.799358866 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.754056645 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.755084717 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.811796452 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.870707502 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.782361476 seconds)
  done (took 194.414259606 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.762077913 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.760801458 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.755835685 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.767753152 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.752031611 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.754479875 seconds)
  done (took 12.237128674 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.761044772 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.761298454 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.759271562 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.756589303 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.755074612 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.758634565 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.755912524 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.756393878 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.75958902 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.761763594 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.757532633 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.755268529 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.755362744 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.759478672 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.754573692 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.753434807 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.753789475 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.753602642 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.755576637 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.755099413 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.00508378 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.755228241 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.756475545 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.757130395 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.763259158 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.754303411 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.768804009 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.756357605 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.757272359 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.764473438 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.763806822 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.758099708 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.764322469 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.761825728 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.762732934 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.76025975 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.760086545 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.758929025 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.757207309 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.754953292 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.75584222 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.756696337 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.757862007 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.757520957 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.759116197 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.763499871 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.75993257 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.771488994 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.758874898 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.756644652 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.754827255 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.755164311 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.756010489 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.757645877 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.761171651 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.761591856 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.76377712 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.757540303 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.755437831 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.761304388 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.762560398 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.757800369 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.756394585 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.760108745 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.769940911 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.756924752 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.756770138 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.7638175 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.758301855 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.760407505 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.755782146 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.759002499 seconds)
  done (took 129.564306814 seconds)
done (took 529.407245085 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.95748936 seconds)
  done (took 8.641137873 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.950286115 seconds)
  done (took 8.688915808 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.37872718 seconds)
  done (took 10.06721974 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.776105542 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.778349563 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.772037072 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.765771776 seconds)
  done (took 28.806387573 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.944766287 seconds)
  done (took 8.633220421 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.783085147 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.753956104 seconds)
  done (took 15.288440808 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.771610433 seconds)
  done (took 8.458846932 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.044892963 seconds)
  done (took 8.738692062 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.77935686 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.774529976 seconds)
  done (took 15.261672973 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.75949754 seconds)
  done (took 8.449441709 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.996317559 seconds)
  done (took 9.776229997 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.785174702 seconds)
  done (took 8.541174621 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.837895126 seconds)
  done (took 8.530821132 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.854413071 seconds)
  done (took 8.549457409 seconds)
done (took 158.118535316 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.764763114 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.765828306 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.765671242 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.764066878 seconds)
  done (took 28.754332354 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.79545161 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.795996011 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.799553338 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.804902367 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.799198367 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.797740441 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.78951038 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.787870209 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.805381193 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.797848981 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.79812197 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.801774857 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.796458281 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.787163908 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.801201307 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.798431412 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.808709834 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.799456149 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.788815417 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.800589726 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.76432268 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.806954845 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.799687343 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.763746875 seconds)
  done (took 44.78558954 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.956253214 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.834458864 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.917817686 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.816202898 seconds)
  done (took 9.221725495 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.812514233 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.817621578 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.827732115 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.868474868 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.891865584 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.827936963 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.788829401 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.783576479 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.770433801 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.818135249 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.892779193 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.811889824 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.901128319 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.764819679 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.951019175 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.762313596 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.765010074 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.817135446 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.867120265 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.882848481 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.764956207 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.817418404 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.819323828 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.816200612 seconds)
  done (took 45.535436313 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.767180052 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.776084542 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.77501876 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.765029945 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.767035592 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.767673364 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.772389421 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.767763899 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.787349589 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.769045935 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.766966952 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.768600197 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.771555089 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.765655564 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.765035055 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.778691098 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.779965592 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.765872192 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.77162445 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.771728734 seconds)
  done (took 37.116079697 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.764230381 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.611997007 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.109781599 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.014857046 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.763612359 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.767656914 seconds)
  done (took 30.727815543 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.7790105 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.771702861 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.766452475 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.823586748 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.906537338 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.772358085 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.76519582 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.778948892 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.810991533 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.831919128 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.790027337 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.794187858 seconds)
  done (took 23.289621624 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.765537114 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.76989334 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.765564819 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.772036514 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.769557272 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.769004503 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.769582342 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.758383804 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.771928642 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.781352654 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.770762203 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.772680852 seconds)
  done (took 42.936288041 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.836195892 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.632154543 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.214220431 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.221066232 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.278350495 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.958371502 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.760919059 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.843720274 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.763990073 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.028594111 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.044702286 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965101142 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.015671312 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.568003239 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.771318185 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.233398609 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.05233194 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.980271418 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.793487112 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.399620106 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865600441 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.343467567 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.380865156 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.869288064 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.972410566 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.887978692 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.02993605 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.716691341 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.813986035 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.76848714 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.77375247 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.765490631 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.04196288 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.889278646 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.841761756 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.773892954 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.18252101 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.472152272 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.780055266 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.434487944 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.242866773 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.875673487 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.769813278 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.766829841 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.697132389 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.339766432 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.857052005 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.770816409 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.470734533 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.769300349 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.772790672 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.838619826 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.770075003 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.576517938 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.454384245 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.036825725 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.767415856 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.768834585 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.329032273 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.741268882 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.440659324 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.701771245 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.854932887 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.356700499 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.210412076 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.923618566 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.770979372 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.771718544 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.696492625 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.359513863 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.876607433 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.927728543 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.787838522 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.410313272 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.054436966 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.14303177 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.813588177 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.036732149 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.62026017 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.703605123 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.984822591 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.724072073 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.701591617 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.600449627 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.698338744 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.975348975 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.807861192 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.348486775 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.798557661 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.849489209 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.775768755 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.788855494 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.766806958 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.976630458 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.659025511 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.767688169 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.00476907 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.012647156 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.783734497 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.855501225 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.693969674 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.768197376 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.014531599 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.968556348 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.075303244 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.230320342 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.849575163 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.765646033 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.776075568 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.760083856 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.771184275 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.02815742 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.824388103 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.742666211 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885233089 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.719985615 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018230011 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.814030661 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.870684661 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.105845049 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.002695783 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.110976933 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.019925498 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.836127919 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.779760485 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.775132392 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.434096882 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.376786015 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.991997397 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.786442469 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.330975706 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.777590892 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.774042815 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.706590875 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.395118009 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.27953118 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.844943733 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.985212567 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.77301537 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.046163541 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.697228106 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.909625691 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.761983095 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.98362853 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.408015025 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.846864529 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.014388388 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.085397548 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.071656086 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.775281385 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.782183524 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.862289398 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.786666585 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.261003916 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.013838884 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.771327763 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.769799151 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.417070986 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.825266362 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.780594608 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.778611561 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.300494094 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.048598452 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.794591651 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.777638969 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.648038564 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.787853668 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.835572413 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.774001061 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.778796304 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.294299837 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.279968797 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.774719638 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.414956326 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.987687498 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.775404944 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.40648459 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.956022516 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.78821343 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.047053317 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.841455197 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.70548481 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.476691736 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.480996954 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.781250585 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.703526701 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.77880692 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.775979296 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.781773927 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.960136814 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.052799092 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.823750258 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.361535487 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.877495576 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.785533856 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.782969592 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.780631095 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.295834996 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.76792565 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.433911973 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.802793597 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909257397 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.791587849 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.704072154 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.78068337 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.783060459 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.778185973 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.73275244 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.827013484 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.381958988 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.975386901 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.026133808 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.182560644 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.78959862 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.429483809 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.890933673 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.793206573 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.057376661 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.352223746 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.892678317 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.862173842 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.786097797 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.440206123 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.510069896 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.341893012 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.067956296 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.092063694 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.123785289 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.211522071 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.109744177 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.866518185 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.007808795 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.301813927 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.840516067 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.873465137 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.716516089 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.795375035 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.421595277 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.129717737 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.792278153 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.997061885 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.070365352 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.110210864 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.91061446 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.986958845 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.813237541 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.633972845 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.816902155 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.320537286 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.799449496 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.177508369 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.982570225 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.867461421 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.047738698 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.858576195 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.782800471 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.128152999 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.826359831 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.485121156 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.136904018 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.232936892 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.233301709 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.004087741 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.791235616 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.221459042 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.123125018 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.017296105 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.906064128 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.7066036 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.784860209 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.785074559 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.787008067 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.751230304 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.623292459 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.024017871 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.786474106 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.005736092 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.948364675 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.142466807 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.678759287 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.782356601 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.77668438 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024218604 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.497145126 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935393127 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.1312632 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.352543929 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.781049729 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.697548973 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.692180821 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.466846921 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.772734803 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.734523313 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.980233425 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.8685771 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.443067964 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.200050786 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.079981412 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.004308546 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.777316642 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.035935823 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.035727422 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.254003385 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.788000069 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.86433348 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.050705342 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.477923943 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.996480699 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.008630998 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.31493686 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.992265217 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.239001097 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.74731198 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.778106809 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.988935289 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.99122101 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.133851905 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957899259 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.49067013 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.787611016 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.146620022 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.842072695 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.136602633 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.96671645 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.868438466 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.789494634 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.864853611 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.787736472 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.790793948 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.789957454 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.79560532 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.145453668 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.898964731 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.796880966 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.861979452 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.78906813 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.355271653 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.79108511 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.057380034 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.132363681 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.122300982 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.847501605 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.787332619 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.787606511 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.713345834 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.913288316 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.226630188 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.056159896 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.905979846 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.916177678 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.808312615 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.080235856 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.081190384 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.097719924 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.058536844 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.66773999 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.452000466 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.909084427 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.003902763 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.791725505 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.988688459 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.004688471 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.091447988 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.349128561 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.976241566 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.982419813 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.054130888 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.147717204 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.788231637 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.366593857 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.798133228 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.202041424 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.823123095 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.140032933 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.04091644 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.789712604 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.910362265 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.792356147 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.990041325 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.236397802 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.46675539 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.131281706 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.635346256 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.788169672 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.061991321 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.114378563 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.090571144 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.85872789 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.793333976 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.479148438 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.919427757 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.642250721 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.002405858 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.790780214 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.992490817 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.498767538 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.790000073 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.063594589 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.091022458 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.786629965 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.694883367 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.787025312 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.79039059 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.00113838 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.000005671 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.031902479 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.793541283 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.794800649 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.594556571 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.061483981 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.848539643 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.71419552 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.789779903 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.834277507 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.014232771 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.806866801 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.303825157 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.488884632 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.070198382 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.697431123 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.803909769 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.238753084 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.171974556 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.118722484 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.318275094 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.010256522 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.341317637 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.672472102 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.167748534 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.786371884 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.236404227 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.16710503 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.783099423 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.333205414 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.893949083 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.049614786 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.102492327 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.803792291 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.523438019 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.821254321 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.999536214 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.139590583 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.711129974 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.787581222 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.827136025 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.782802022 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.76480858 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.787003769 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.699252519 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.252705068 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.624471582 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.334655909 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.785482742 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.792333791 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.136753773 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.356432918 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890759435 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.804543852 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.779872461 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.476316721 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.063048571 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.020413585 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.316831665 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.870063537 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.776518824 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.777338868 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.690253539 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.951899399 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.958393216 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058231163 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.158710064 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.877934185 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.766661926 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.974097742 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.968359005 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.146433171 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.900135934 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.94081328 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.884072184 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.702097775 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.465777611 seconds)
  done (took 1616.844789784 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.82702872 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.808439648 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.768510475 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.846514004 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.824603063 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.770434823 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.810795494 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.867329429 seconds)
  done (took 56.215363085 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.761546156 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.914141493 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.761806443 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.757263977 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.766419011 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.757484645 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.915235689 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.76728846 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.756988635 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.757402958 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.753915261 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.749017781 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.030165793 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.773781091 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.754131078 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.753845035 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.246136046 seconds)
  done (took 72.711635484 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.797233181 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.850572327 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.787692534 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.757313192 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.852182067 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.755662581 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.943939269 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.775282723 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.758435019 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.01015996 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.052922602 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.78369727 seconds)
  done (took 88.807693633 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.766573467 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.758896445 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.759609194 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.75932195 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.757791818 seconds)
  done (took 10.494376403 seconds)
done (took 2109.156822331 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.118610591 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.812426733 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.854751929 seconds)
  done (took 5.34830565 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.903035281 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.947569161 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.064335899 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.083052452 seconds)
  done (took 9.688994073 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.06222288 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.150202022 seconds)
  done (took 5.895282066 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.075270633 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.787477025 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.128752109 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.757342234 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.758627735 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.761643542 seconds)
  done (took 21.965831357 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.759146354 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.757665184 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.758361969 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.758033851 seconds)
  done (took 8.718565879 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.754013747 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.442470607 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.755720376 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.770243886 seconds)
  done (took 20.404861291 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.902737966 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.871319027 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.898804751 seconds)
  done (took 7.354655569 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.976921967 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.550458589 seconds)
  done (took 6.208479163 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.896442504 seconds)
  done (took 3.577128257 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.786330484 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.027648595 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.254797758 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.273295264 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.350016774 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.586792181 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.083473463 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 1.979511252 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.194890761 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.219231488 seconds)
  done (took 23.439850885 seconds)
done (took 127.396668411 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.098406773 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.78402369 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.962468379 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.106722081 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.991932211 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.963167967 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.963903337 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.110250884 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.797541687 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.785695458 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.112625699 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.989875075 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.920010582 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.78081536 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.92589413 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.779070956 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.985973135 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.123366605 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.789877262 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.0110255 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.978765209 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.753304978 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.946868636 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.771882895 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.987501567 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.910249456 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.300551841 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.780392692 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.932742992 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.316360416 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.980575074 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.14772777 seconds)
  done (took 164.473982866 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.758469147 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.758716029 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.754636893 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.753652197 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.311652879 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.75692341 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.756737472 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.755800742 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.168311684 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.154170201 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.757189818 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.301374367 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.759027975 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.753146772 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.756827259 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.754214327 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.313901349 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.757192791 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.754645823 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.753060089 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.755575742 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.13752355 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.748672637 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.142854496 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.298082016 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.747210729 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.747398671 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.748956787 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.74870172 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.747630881 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.749989123 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.749275858 seconds)
  done (took 205.599998215 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.750287286 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.748956334 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.748250941 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.750038887 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.749415998 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.752014679 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.746951182 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.746605604 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.371009573 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.358290814 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.750192676 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.743204536 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.747681759 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.739913175 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.73824259 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.739758161 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.74220838 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.737557295 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.741213259 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.740826227 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.743675214 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.487157178 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.740019242 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.487647925 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.739341398 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.739454536 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.737847418 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.738371935 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.732322658 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.733969748 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.734677815 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.734449016 seconds)
  done (took 216.167923273 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.979553536 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.734011227 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.736735485 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.642880902 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.737303064 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.734527084 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.714114794 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.981309388 seconds)
  done (took 17.927979486 seconds)
done (took 605.8634925 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.093027993 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.936595423 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.912170352 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.757228716 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.99811779 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.799475964 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.753694355 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.821539324 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.574153461 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.829806696 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.412775331 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.778794416 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.506021906 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.783507739 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.878309263 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.816290291 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.302925471 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.396715976 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.92962608 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.820941042 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.933015586 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.650804256 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.841990553 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.600950941 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.534490397 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.71704292 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.758229213 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.307047144 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.768213763 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.913035886 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.393155377 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.999405989 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.772196116 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.753230821 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.812822496 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.788205648 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.948800993 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.766186235 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.882083825 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.449586592 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.817115054 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.476583508 seconds)
  done (took 96.651069144 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.747589859 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.742260676 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.741565874 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.742904752 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.751744238 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.744885567 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.741834889 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.742937849 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.740099062 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.74379961 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.742917562 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.750591817 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.744291147 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.750953771 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.742384535 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.744602016 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.741911463 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.750949773 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.745231064 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.743149673 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.742083986 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.745137289 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.738349827 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.742184864 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.744264644 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.743575209 seconds)
  done (took 47.032724112 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.739455699 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.890617215 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.982259397 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.758466428 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.741736649 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.740125545 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.759391829 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.744328952 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.739648086 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.745241691 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.829458556 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.745144112 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.75850299 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.983429677 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.757034359 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.738972331 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.73985801 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.740789511 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.900608183 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.756111233 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.7603347 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.74354675 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.756707515 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.752527753 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.741748361 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.741487966 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.744388111 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.209777983 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.749226409 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.827706802 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.788108832 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.762926202 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.158526995 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.99247225 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.79472303 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.749111189 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.740240409 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.83300996 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.748416693 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.740961905 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.757494495 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.744805817 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.982169798 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.270222521 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.756294414 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.741659349 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.225502509 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.843258229 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.781385202 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.753785591 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.989400795 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.759878871 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.742889919 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.74190861 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.77651532 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.752235067 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.743209992 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.114639016 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.753816729 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.75825552 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.746798478 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.743430867 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.908925579 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.750192276 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.894321002 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.749518709 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.74911321 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.743703122 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.989430861 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.757617426 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.283004156 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.756293373 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.741944493 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.832102386 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.89878287 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.248520805 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.755477652 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.904563334 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.179444569 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.766255949 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.749322639 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.20196441 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.769294069 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.749012509 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.743993546 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.744951585 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.744522031 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.837337534 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.760729514 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.191752188 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.283613396 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.132670835 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.770893224 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.755569538 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.744098151 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.11947998 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.749578284 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.741652802 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.981348272 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.287794406 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.759259494 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.752772862 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.262434711 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.758295035 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.762041353 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.755068427 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.996831521 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.759178856 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.788812407 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.745471498 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.75059579 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.747933419 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.764731605 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.752310724 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.744932991 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.254234413 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.849756306 seconds)
  done (took 217.451526011 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.746172049 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.746659145 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.745341761 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.745777987 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.744097549 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.747175061 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.74538507 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.745936772 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.745502208 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.742433093 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.746995775 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.746900488 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.746103231 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.746412644 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.748385208 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.747836722 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.348675705 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.745794248 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.744489482 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.742346842 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.444680829 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.751342919 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.743328588 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.742014322 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.746925958 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.745075728 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.752905612 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.748840083 seconds)
  done (took 163.870820383 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.74808654 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.860579363 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.764627134 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.774940373 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.752708672 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.748166682 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.844361512 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.764099637 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.752608578 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.747337765 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.747420657 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.8060747 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.760068395 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.840350293 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.777969852 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.852153569 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.850434116 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.752911218 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.747584656 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.747491177 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.776615134 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.753724082 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.80889874 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.872750245 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.767997801 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.861320172 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.7657628 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.746986557 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.750424124 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.861754796 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.765622583 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.809175162 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.774005473 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.765105965 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.866263416 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.863432207 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.851537746 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.8502708 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.754436665 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.749178669 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.749010399 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.746217701 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.862604243 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.768693153 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.750047819 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.864395736 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.76646865 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.750562658 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.750348363 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.750173374 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.760949365 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.764912596 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.811188019 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.87956571 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.783135653 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.775384799 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.84679793 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.872665826 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.752141178 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.846476278 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.754508829 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.861573913 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.768619039 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.749102435 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.751987706 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.755518978 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.779826258 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.855919029 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.85247632 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.758655878 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.848088517 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.785472148 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.759388003 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.74822677 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.751105252 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.862211182 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.866215022 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.784708427 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.788387286 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.782640474 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.759712145 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.750826581 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.75004509 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.767375755 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.758086688 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.864464082 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.867622192 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.755779228 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.751501421 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.749651013 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.75088479 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.776387919 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.873240668 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.78409288 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.855622332 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.814717578 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.823749972 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.763246081 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.764898761 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.753946658 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.813738409 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.762939628 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.761973159 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.037027642 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.812912208 seconds)
  done (took 189.976302397 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.118902667 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.798688861 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.804050233 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.072574141 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.096807884 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.657520242 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.792099703 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.794897619 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.827343259 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 1.983284461 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.874467674 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.817592156 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.785501807 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.771145758 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.794971265 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.823613251 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.80342749 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.140269101 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.998571787 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.923539483 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.786634965 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.063609729 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.103903571 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.365643169 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.847943692 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.190200891 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.355013644 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.927355403 seconds)
  done (took 58.008011447 seconds)
done (took 774.657289633 seconds)
SAVING RESULT...
DONE!
