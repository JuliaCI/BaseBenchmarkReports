cset: moving following pidspec: 365
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.301863177 seconds)
loading group "string"... done (took 0.648322945 seconds)
loading group "linalg"... done (took 8.147813819 seconds)
loading group "parallel"... done (took 0.17131036 seconds)
loading group "find"... done (took 1.233317186 seconds)
loading group "tuple"... done (took 1.913761938 seconds)
loading group "dates"... done (took 1.303306683 seconds)
loading group "micro"... done (took 0.201140842 seconds)
loading group "io"... done (took 1.005492314 seconds)
loading group "scalar"... done (took 40.914076115 seconds)
loading group "sparse"... done (took 12.776117737 seconds)
loading group "broadcast"... done (took 1.014347502 seconds)
loading group "union"... done (took 14.769712622 seconds)
loading group "simd"... done (took 5.185013621 seconds)
loading group "random"... done (took 10.005165026 seconds)
loading group "problem"... done (took 1.640921804 seconds)
loading group "array"... done (took 23.312621216 seconds)
loading group "misc"... done (took 1.683660215 seconds)
loading group "sort"... done (took 3.562393957 seconds)
loading group "collection"... done (took 19.754514716 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.543858509 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.129155485 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.141151787 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.123472493 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.153848213 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 63.397868031 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.12241004 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085335182 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.85079557 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.154478565 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117104164 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.42236139 seconds)
done (took 68.618958615 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.174774013 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088538188 seconds)
    (2/2) benchmarking "String"...
    done (took 0.082862741 seconds)
  done (took 1.207795079 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067994239 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128794944 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.068998535 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.069036693 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.071307395 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.068877521 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068996045 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.068788142 seconds)
  done (took 1.583557702 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073467293 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070712828 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067733034 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069827321 seconds)
  done (took 1.320257188 seconds)
done (took 5.411181624 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.807425791 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.214636007 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189790085 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.41982541 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.139688379 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.183739211 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.648078437 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.316527231 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.208561991 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098495174 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.116877027 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.369482407 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.127759397 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.652938995 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.081279859 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.100580965 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.141748784 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.435469914 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.072482409 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.087083935 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.093501486 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131564276 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.092567729 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.079733902 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.153690267 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071006036 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.14481427 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.085721839 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.06979784 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.225120352 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.178048812 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.660666092 seconds)
  done (took 10.473672676 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.103072489 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.102964587 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.071277367 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.128545333 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098529845 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072783899 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.078206575 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.070152929 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.096109599 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.133513668 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.094690674 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.111936058 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.069125807 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.072071077 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.086450703 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.20098763 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080779326 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.084929772 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.07077719 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.081195273 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.115639403 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.079142494 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.082933813 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.083017102 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.132334734 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.173457507 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.100518436 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.101771612 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069906419 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.084943007 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.11741387 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.130972499 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066725473 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067077996 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.126281307 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095379736 seconds)
  done (took 4.614222936 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.016622362 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.152743349 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093164742 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.139028499 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067052308 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.113846932 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.070788662 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.086693957 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.243272367 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.378758709 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.63288486 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.151952144 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.120130833 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.107615147 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071425778 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.069741387 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069782865 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.268204994 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.102036557 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.112005387 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086335279 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073066669 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.072417669 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.067679945 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074389389 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066082887 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071432421 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.091862295 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078350713 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.339200242 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.129122772 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07050597 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.84519225 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.170991751 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.07024309 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.108811262 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.16532046 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094248925 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.144495981 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069723978 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066283416 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.160353537 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065432549 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.071966937 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067477162 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.085509955 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.109778393 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.118371819 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.0662294 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066444978 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.166848942 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065661125 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.081472007 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.158111189 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.150148685 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.063474908 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.277536233 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.09068671 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071540429 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064744321 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.168172012 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.106354571 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.065681967 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.064681512 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066213691 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.065706263 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.359057105 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.063255601 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.906456084 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.068458649 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076728821 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070037798 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069580499 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075727081 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075068964 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.086406098 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.061619989 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.064051484 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.069983135 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.063123194 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.063296659 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.063976941 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.093486343 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.367134151 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.063768921 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069232326 seconds)
    (86/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.061112377 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.061690863 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.087558128 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095232521 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.064213861 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.063494647 seconds)
    (92/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.088481405 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101008299 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067333982 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.063710489 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.064899103 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.110182416 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.06715639 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.110777372 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.064128309 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.27381509 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.098630824 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.071425313 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102177139 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.07805519 seconds)
    (106/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.067163344 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074338652 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.471630129 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.068384666 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.076904774 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.069471403 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.071777428 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.070240352 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.08239909 seconds)
  done (took 21.475798069 seconds)
done (took 38.620607231 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.254654303 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.091208812 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.088459191 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.089166968 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.088785033 seconds)
  done (took 1.775860017 seconds)
done (took 2.937016142 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.133251232 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104387758 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.067870376 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.102151413 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.071421463 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10500206 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.104682975 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.087324592 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104101248 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.06783511 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101439672 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.067607208 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067624058 seconds)
  done (took 2.344564579 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083760118 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086447241 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072006388 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.085189681 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065369289 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.085070305 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083832912 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.091287728 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083795031 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074965619 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065287945 seconds)
  done (took 2.019288795 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084249573 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08708222 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071644951 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.085869132 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065253032 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08446678 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.084127612 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.091640851 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.084423704 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076458624 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065528268 seconds)
  done (took 2.016534506 seconds)
done (took 7.514839122 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077510105 seconds)
  done (took 1.203738124 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.548438357 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.566646408 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080503802 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.104551243 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.20101877 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.113692882 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.243403361 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.087226193 seconds)
  done (took 8.25062568 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.111167992 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.072358022 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.073494975 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.072991172 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072607994 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.072905536 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.073168499 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073928414 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.073510085 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.07255465 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.072350538 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.072257443 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071782802 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.072149315 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.073441467 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.072643794 seconds)
  done (took 2.416007891 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.101287137 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.099131035 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.076646245 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.078333264 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.07597639 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.075345495 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.078122095 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.077046143 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.074281193 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.076242572 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.079520355 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076897387 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.07710499 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.06700953 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.077712093 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.079888046 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.074658219 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.077446864 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.078440676 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.079183389 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.078877215 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.067123946 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.076867369 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.078063306 seconds)
  done (took 3.121941713 seconds)
done (took 16.130800298 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.117103741 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080703044 seconds)
  done (took 1.329260382 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.079125902 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082894498 seconds)
  done (took 1.305179435 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.07863317 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.06520208 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.088174346 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.076814301 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066471403 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.066325777 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.085934589 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066612825 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.06659368 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.06632501 seconds)
  done (took 1.869557436 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.065764054 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.073978243 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072025974 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.082203317 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073032472 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.066843046 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072263603 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067872294 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077042853 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.065768266 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070761628 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.086090767 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071681821 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.088167694 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071776711 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.07110591 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.073500976 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.070023447 seconds)
  done (took 2.464183874 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.06396368 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066204504 seconds)
  done (took 1.277366552 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067474124 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065642166 seconds)
    (3/7) benchmarking "month"...
    done (took 0.068683464 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068621857 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.066353493 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.0652449 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.066171426 seconds)
  done (took 1.611373094 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.413738191 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.127941446 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.342830531 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.073631219 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.084064937 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.263802739 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.06726725 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072606732 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.072659172 seconds)
  done (took 2.70548292 seconds)
done (took 13.712714409 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.083541093 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088505982 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.101930287 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.42380325 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.096953653 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.070822156 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.119576616 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.18087435 seconds)
done (took 2.325147286 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.218309105 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.090615309 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.503322188 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.214055921 seconds)
  done (took 2.958496606 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.350446769 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.083917341 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.080297199 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069894779 seconds)
  done (took 1.744559727 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.183961346 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071352291 seconds)
  done (took 1.412009948 seconds)
done (took 7.48993571 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066115656 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.092252891 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.06653137 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.067227238 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067443011 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.06765296 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.067182802 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.067295993 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067205062 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066906552 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.066996198 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.06708096 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066968428 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067446228 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067270258 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066757351 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067194306 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.067654164 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067784717 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067183135 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.06745101 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066874963 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.068002725 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.06735767 seconds)
  done (took 2.827569191 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082602006 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067570553 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072441013 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071552608 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071925301 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071114682 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071604073 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069739185 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071727667 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069362341 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071725451 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071940394 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.069346107 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072460258 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069614535 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.072263712 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.072286311 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07008869 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06934388 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.072225067 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071693279 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069672988 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072113594 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071405482 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072139273 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071878728 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069572099 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.069953815 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.0714939 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.072417318 seconds)
  done (took 3.309295736 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.066602436 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062519456 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063710998 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072483487 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063479434 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064074238 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063147668 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063589756 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063955169 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063424309 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064428723 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063262156 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063745843 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064641315 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064494238 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.068286221 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.082162759 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064280092 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063522864 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.065734674 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067732213 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063899993 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064074369 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.06390426 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.066478434 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063479958 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063932013 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063567536 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064426388 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063731879 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067453551 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068342612 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.064178439 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072966982 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.068491562 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064029728 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067621567 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.06343754 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064189702 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063358993 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063160488 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063592443 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063667373 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.073052899 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063932385 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064927824 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.06354453 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064951413 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063905302 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.06603732 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.064203969 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063460632 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065794311 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064499768 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068817578 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.06312744 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064315144 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063170071 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064409858 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063571316 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.06303698 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.063065768 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066858122 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063994109 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.081477605 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.07296519 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063627507 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065781134 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064345214 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.067082368 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065367775 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.080004701 seconds)
  done (took 5.904308477 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.086227234 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090403067 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068896722 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06896679 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064736601 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064083533 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072715354 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064233462 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06929092 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083792855 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064547247 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068722423 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069330867 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068921732 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064769369 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069553587 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.073727187 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064646905 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.06458376 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068498028 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064739571 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072685657 seconds)
  done (took 2.727751763 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.148104819 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070305729 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.109775452 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075374438 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073359397 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075395879 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070561098 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071150835 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070328548 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070940666 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070905928 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070671843 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072899019 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070857682 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071045076 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070916972 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070256431 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070901771 seconds)
  done (took 2.577142047 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078999868 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.071344201 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.089476282 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069705423 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.069853798 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069233624 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074731339 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074893837 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.069374653 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069992458 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.07493159 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069318367 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.069464359 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069920626 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069847407 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06972281 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.06949209 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069863794 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074598049 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074243165 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.083744621 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075114701 seconds)
  done (took 2.783445041 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080074909 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068921481 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.084969922 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.071211131 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064087921 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064530506 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.070279269 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068715817 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070310549 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068844456 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069078863 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06410006 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072233361 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069431191 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071555357 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06959964 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06871644 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069255666 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068663745 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064290051 seconds)
  done (took 2.573731579 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083745869 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066485126 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067450076 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073434199 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067603758 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.06736898 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073711503 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067311688 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067180366 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.089168227 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067376187 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067957771 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07467876 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071571438 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067692005 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073673367 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076555487 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073703354 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067503626 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067240446 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088768031 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067666571 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074155967 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067739896 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067575442 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067605561 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067473195 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071538271 seconds)
  done (took 3.178450421 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06613639 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066751243 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.06800638 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.067084842 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.067571155 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.06688555 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.067499524 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.067416199 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067814872 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067356182 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066843849 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066847664 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067154939 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066759207 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067049027 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067228217 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067164591 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.067356894 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067643318 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067811499 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066659372 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067207969 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.068024004 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067610847 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066887842 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.067152127 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067723829 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067677042 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066653478 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066988291 seconds)
  done (took 3.197740811 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075752355 seconds)
    (2/2) benchmarking "in"...
    done (took 0.076095916 seconds)
  done (took 1.330945297 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064538662 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07989261 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.064130482 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.07510128 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073662215 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067386164 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073672809 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07312794 seconds)
  done (took 1.746938824 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.086268188 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078801918 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.066883875 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078672176 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.077498618 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.087274502 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.130007218 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.06674736 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.077049089 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.067462077 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.085376229 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.068203969 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.076919685 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071257171 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.0769299 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.080344331 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063995622 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072003488 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067932276 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064686799 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067532166 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080097557 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.076433256 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064616014 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.072449845 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094498134 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.083000164 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065978334 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073431795 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.078971493 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.076853676 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.063065523 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066167249 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066626662 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06408388 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.077155165 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.0853797 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073817014 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.079298061 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067009216 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075001629 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.064453952 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.075540785 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.077403573 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08240188 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.06637479 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066796542 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063857147 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066978918 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.072624485 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063679846 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070386409 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.063753403 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078582597 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.074212846 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081764302 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.065259737 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.072213108 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.073406713 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.073173226 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.078205857 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.072385556 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075820293 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065732983 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081983807 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.076105504 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078195394 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.06458658 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.063436418 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064124416 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.080294299 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.096589365 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.075889936 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066368038 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06653936 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.064391935 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073352468 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06655457 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07572017 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.077992785 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065833035 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07083207 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078337971 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070516865 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.073050841 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073062336 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064526406 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069841724 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.067475351 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.087419473 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065193593 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064326067 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.067325634 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.081972648 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.075978422 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066333687 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.067670482 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077851907 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.06345455 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066315965 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066962409 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072023573 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079818127 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070603625 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070766786 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.079937619 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.075272017 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071422025 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.072216161 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062832 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066518557 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.067832846 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.077395122 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.062986105 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072948076 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.069837199 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065719251 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.077707049 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064045597 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.065481904 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07824499 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.077243016 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.064057021 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062872805 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.072511939 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.065503917 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067781024 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.079289489 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064135812 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063335667 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.063599119 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.073272688 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.065101593 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.073213976 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068987381 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072116064 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.193454527 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064230145 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.070356429 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.079930368 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.070889966 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.073305191 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.077412433 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.073117666 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065989451 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.079331057 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.074686525 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068920097 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.076643551 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.070565021 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064579754 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068258773 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.072887086 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065595898 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.073825112 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068795374 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.073373398 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067065435 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065050378 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.072039233 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067647492 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.068391174 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071335314 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065241572 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.082010185 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.072991833 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.064622942 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063700327 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.074033204 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.068286569 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066103961 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.06926981 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.073060198 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067210937 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064387142 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066868244 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.072852133 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075107241 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069646196 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067025039 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.075888521 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.085144477 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065636764 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.073500746 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066024639 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067320201 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067450414 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.081256659 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.077253076 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070599626 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.073759327 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.064392212 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07618354 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079041307 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.069058197 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064163677 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.068688768 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.07040796 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.078206676 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070168676 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067012065 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064559438 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072286149 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068771132 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.073210274 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066105132 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.068892084 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071796405 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064525488 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072452884 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068023889 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.081406978 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074294121 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.064735108 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069414749 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064703357 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.07784642 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.06486255 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.067940326 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.069503261 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067484679 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065216355 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.073237766 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.06347848 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.079207162 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.079613789 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.071975987 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.069047038 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.066028391 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078773821 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.072397977 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074987911 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.073573177 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.076988761 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.082154686 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.068967696 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.073894727 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.082320461 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.066090673 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.06363565 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.076178042 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067654633 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065235136 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065232669 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.065172035 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073886821 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073495724 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.077246853 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.063161995 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.073220951 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064522038 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.06864278 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.064329951 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.074413263 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.073439276 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.070541227 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078321844 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066263672 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.065787965 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073371735 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065468878 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.06616259 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.066462312 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072806318 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.065623438 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.072035748 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068494546 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.071366258 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067988084 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.063955478 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.071438906 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066087035 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.070461557 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074121515 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.064529132 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071007971 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071845104 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.065492921 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.206857743 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.071312502 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.069995161 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074897994 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073529931 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.071628063 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.073374398 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064759808 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079090561 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066281071 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.079686597 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.071492483 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063488007 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.072589714 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.073029324 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.070796014 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066990361 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.06673078 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.072331094 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066224737 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.073359681 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079424711 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.068259073 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.08321748 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078174973 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072128991 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.073514203 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.07191811 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.072319236 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.068843323 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.070759035 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.06707291 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.072020182 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066181889 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.075170349 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.073371117 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.071573815 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072706899 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067159633 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.071773937 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067299386 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063865792 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.069372124 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.069468781 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066467163 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07922389 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066486949 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.069065647 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065117338 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067463567 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065632141 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064172273 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.07372848 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074585892 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.06725259 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.0777945 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.069322135 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.072997682 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082412645 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.063796825 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064655285 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064706123 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.068065576 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.079481698 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066657916 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.080561525 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.071618175 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.069171786 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063893199 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.06705747 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064806834 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.064267626 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.065343013 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075260045 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.068737667 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065871841 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066648792 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.073499373 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066951325 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.079284813 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065636595 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.070711223 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.066574315 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063768536 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.068758909 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.06849114 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.073849686 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067284332 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067864783 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064083901 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.06639332 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.071195946 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.072600656 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066136415 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.072786007 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.079152816 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066048763 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.074235134 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069177143 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.064781163 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.074262875 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.0660514 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.067062458 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.068874313 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.074669485 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074512037 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067119331 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.081092339 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066251096 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07527758 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06672216 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064685917 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065880171 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066176998 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.065889411 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068763544 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067490906 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079859529 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065260972 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.072168098 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.07151061 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069568243 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.076586611 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.06660932 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.072521398 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071148801 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067486902 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.07250873 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.079563727 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.069638938 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073058684 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066090951 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.071708187 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075632732 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.068067948 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.077648717 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.071086807 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.065839906 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.071879896 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066613982 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064877076 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.064901606 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06477738 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074982208 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.203942879 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.068578621 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068081476 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063845582 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.070845684 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069343928 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.080560265 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.073745115 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073798787 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064449068 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064054126 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067155282 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.068360725 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.072186712 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.073260713 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076251957 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.073520095 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.070347754 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065771155 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.082161634 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076684028 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.075032618 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067790525 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.074360516 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067069939 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.073699189 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.071577256 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.071334944 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066965406 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.074684572 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.072717373 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.068644735 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076917042 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.074503602 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067214839 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.072276704 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.072486545 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.071213505 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.064597011 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067176195 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.073263358 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075438724 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.073672742 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066110386 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081324074 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065995095 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.070360118 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06681179 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064946684 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.075284128 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.064819869 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.073332482 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067691996 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067022663 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064770526 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.069670028 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.068469196 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.073244279 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.069059154 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064822667 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082488101 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.081710746 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.07301433 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065518992 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065198973 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.064661435 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064356077 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.069369649 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068908748 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.072991456 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.082004455 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.069299017 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.068527199 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064583119 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067260589 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073626898 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.074596188 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064097063 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064420888 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.069084711 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.07284456 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.078467715 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065051731 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066275044 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073736218 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072898694 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064209333 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069465998 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064004657 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.074514545 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083754139 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.06736691 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072348729 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.076947796 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079993765 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067037982 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.064760853 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.06723164 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.073201923 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.072418912 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067548189 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067276501 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08625341 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073950957 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.068751837 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065575683 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.073682707 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068926558 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.08080675 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067396164 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067445339 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.07531379 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.075881213 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074070076 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.076725959 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077481849 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.072629875 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.072371676 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065330334 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070985351 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065103112 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.068195105 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.066393749 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066104416 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070006743 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.072425275 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.070603175 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081728933 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.080150495 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068060105 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063125872 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.068582658 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.068789485 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063986468 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066398963 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.063641739 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064353525 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064282295 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.06459322 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.071927011 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074440059 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069590606 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.065579954 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.064627951 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.200211986 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.077410879 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.075522255 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073529953 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064340155 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066945269 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067464759 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.075554822 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070169643 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.068383796 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.073313387 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.073016733 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072167153 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.064129805 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.07898821 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065680674 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.073430094 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.069060392 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066303566 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068032838 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074361497 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070802054 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067665262 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.073796733 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.073641659 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068498246 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064756127 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064750996 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.075935787 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065151629 seconds)
  done (took 43.992466561 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.102355827 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066192985 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064831131 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06449709 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074449742 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066125195 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064856308 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066060962 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065367677 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067516362 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064981737 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065523829 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07258872 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080403495 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075377078 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069160605 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066253519 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066466923 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06501965 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066050328 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072633494 seconds)
  done (took 2.727099709 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.072204151 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.080407351 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.077170685 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.08255638 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074057568 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069845597 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.095563798 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069598736 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078100172 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075365296 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077937941 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070078487 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.075426673 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.075150893 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075322453 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070207131 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.078440311 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074148315 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.06997171 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078022778 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07006064 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.078321857 seconds)
  done (took 2.918858982 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066283935 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065328155 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.071672359 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.06329309 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.064705278 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.063522841 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068479579 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.06360951 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.067246821 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067744126 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.067856287 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067975111 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.072439767 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063768487 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.069015478 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064167765 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.111325371 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.067764799 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065550765 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.06603815 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063639025 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.072946706 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063940304 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.064121186 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067495185 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068534844 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066137792 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063981923 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065207094 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.067391211 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065303597 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063575076 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.072024806 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.071626895 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.067528775 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067862844 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065192637 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065560218 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.06411794 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064440396 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.071655677 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.064845483 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.068582597 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.072396811 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063569924 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063576211 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.072107521 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065552377 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063554816 seconds)
  done (took 4.584476672 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.074664557 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.11431653 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.070216336 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.09388456 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.078787945 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.071698221 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070641353 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.095661499 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.066129627 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.06647518 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082705423 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080996286 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06791695 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069530134 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.070548645 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067620587 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068585913 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066907721 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.071286653 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067612478 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071135345 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072164156 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079267005 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.0795703 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068856465 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066814355 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067584803 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069096546 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.079376654 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071646523 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069366749 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070414341 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079610609 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072874583 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06735477 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067193747 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080502396 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.068022882 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067385381 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065591171 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067222915 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069867491 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072355943 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081135988 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068090661 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.073528785 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068005392 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.065549121 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.080009999 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067918899 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.07283678 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.081284467 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069383855 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.068143074 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069511993 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079736844 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068042144 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.066457408 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068458979 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.079183538 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066086845 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068628041 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080334105 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067066003 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071632314 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080667603 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072982651 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068544359 seconds)
  done (took 6.370503216 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073361283 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.096589657 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082243702 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082433915 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075625338 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075809566 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.075896699 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.076101052 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.076170193 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080117046 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076103412 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.118524627 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071721155 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077934435 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075964311 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.076301342 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.076089664 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075920984 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.076331361 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07574804 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075973808 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082396327 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.076153896 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082045074 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079150721 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.071529528 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075538497 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.076020053 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08246906 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.075825285 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078778104 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075553719 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.075995257 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082972898 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079169342 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.07609178 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065229742 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075461493 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.076025119 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075518189 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.071543859 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082082476 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.075860453 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.071267475 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075679397 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075470853 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.082279069 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079501661 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078230425 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079781824 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.076463737 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082560769 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075373502 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.076178714 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082680094 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.085881295 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082461206 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.08245826 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077633232 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.082589247 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082449216 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085385865 seconds)
  done (took 6.171991718 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078664542 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070265033 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.083347465 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063839941 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064038987 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074797559 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064115634 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064453026 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072768455 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.0757478 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074979453 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074904518 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077455755 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074861908 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074794553 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077315788 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075331745 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074667856 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073308251 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.075665987 seconds)
  done (took 2.762128096 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077213771 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082219633 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069859151 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074336106 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069589496 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074482098 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.069082824 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069905574 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070400611 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069893274 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076107115 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076125047 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070495747 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074685821 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.076116908 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074611527 seconds)
  done (took 2.462650845 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.084373751 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.070606787 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079940499 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.06553216 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.070179097 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064851972 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065204904 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.0642503 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.06443509 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.079300083 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065541143 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.07728786 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065889992 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064718349 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.06501341 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.071986434 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065628829 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.065791854 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065491175 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079526334 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.072951735 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066843771 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069418319 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065672362 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.071342112 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.073233365 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.067076747 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.069382037 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065476821 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065991817 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.071430624 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.072799793 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.065081795 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.066302509 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064643879 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.065158305 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065590194 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085210207 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.071443411 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065540536 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063883215 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.071463805 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065563938 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066979873 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.064714877 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.067321586 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064703083 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.071463132 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065728011 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.071311796 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065235002 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068107896 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065664484 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072589903 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.066770819 seconds)
  done (took 5.07549007 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079107089 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067698501 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063409819 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064615363 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068879239 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070455309 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069454769 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069705748 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070350062 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064173828 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070914276 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.06942278 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070864555 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070269859 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070652633 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069987069 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064075171 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.06990199 seconds)
  done (took 2.544380934 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073035139 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067649324 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073608018 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068904798 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.069269409 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068470632 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064915032 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064192886 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064338404 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069498162 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06903514 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069126155 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064393897 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.06892588 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.06922272 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069444715 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069228277 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064547664 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069093442 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064561145 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069143396 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064797879 seconds)
  done (took 2.786979758 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.096118444 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083767913 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.143698077 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.082391151 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.090393262 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.075115435 seconds)
  done (took 1.864563713 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094065233 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101480516 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069273418 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069614934 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075831881 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073025433 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073052976 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072993798 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077534386 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078228806 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072711392 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078798579 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077839359 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079478082 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07531696 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076346744 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075878815 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072793764 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069277246 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08287027 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073166239 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07767741 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073121421 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07278684 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073374636 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079802025 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077535649 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078224523 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07288615 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077420887 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075576565 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072907612 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078117813 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078628961 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069556669 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077936999 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073052275 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083224873 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075692467 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079636846 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069503595 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075328174 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077935408 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077205694 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077861987 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073574292 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077109749 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073583562 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073872279 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084867382 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075602078 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07973304 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075316182 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077652364 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077360152 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084239524 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078063742 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079733198 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075467692 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077793365 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079385598 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075406583 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079295907 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077969309 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075469037 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079257781 seconds)
  done (took 6.37311788 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104626914 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069946803 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073005953 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078006079 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079410293 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073198073 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073523898 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073044266 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073399865 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070728306 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109393854 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073837568 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080212033 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080133108 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073934465 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073265091 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07291089 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079624205 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070706974 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083840501 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072152848 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079295592 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079416988 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079578267 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078063076 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075543336 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073734409 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072858008 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072904531 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073241353 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077297398 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072972296 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080007593 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069944307 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079503933 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073118178 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072848142 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077012176 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07329375 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075545493 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079852641 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083056324 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073503563 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072857884 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078188566 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073071929 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072749923 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070293369 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073309261 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069661854 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077461647 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07706716 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076137675 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077934254 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073176553 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073139907 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073355541 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072846204 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076386841 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075495258 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079257953 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073029951 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084197656 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072793865 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073319181 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079355329 seconds)
  done (took 6.352315398 seconds)
done (took 130.30458414 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.210640265 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.184439397 seconds)
  done (took 1.673498546 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.074070052 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.104768337 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.084373164 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.135119837 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071718965 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.106179708 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104600915 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.083832692 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.072387597 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071998822 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.07256195 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.075269062 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.139065381 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071753848 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.07166126 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.074563328 seconds)
  done (took 2.710641305 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.105371472 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.17109321 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111404237 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.071717088 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.107404309 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079912995 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.071277577 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.084850818 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.078673901 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.073846636 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.080316745 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.078231742 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.073876029 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.080966452 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.078671292 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.079894258 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.073525477 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.079876784 seconds)
  done (took 2.881403423 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103158094 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.097069085 seconds)
  done (took 1.508601239 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.181219486 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.135824807 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.20502521 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.342139856 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.154296246 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.432312827 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.140262049 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.139963465 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117734971 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.135940666 seconds)
  done (took 3.28412552 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.10397745 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.194179444 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.300495121 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.125015115 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.078655417 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.115007426 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.126855413 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.084590206 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.082876415 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.082172217 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.082314811 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.081249383 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.103979074 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.079931978 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.078516934 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.081149799 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.107374721 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.077314706 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.078504462 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.078985319 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.10753268 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.072795669 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.079544242 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.077558208 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.081075156 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.080380862 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.073335253 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.072183397 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.078735817 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.07803781 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.082505496 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.111747723 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.08065833 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.108017677 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.076644013 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.108543131 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.081325455 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.077159186 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.078013829 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.077236972 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.080335283 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.080121064 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.080825283 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080910614 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.073124106 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.080929144 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.073649586 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.071788856 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.083330778 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.073553272 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.083228121 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.083967376 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.108048208 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.073456635 seconds)
  done (took 6.280004315 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10895769 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107399824 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073658606 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.116679609 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107360556 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073415198 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.108780897 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102417196 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.111225128 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073673207 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071514629 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073434236 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082169342 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.085309969 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.116558661 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.109227103 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.075167281 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072948525 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.111551162 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.111283514 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072101361 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104892843 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.101450572 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.11199089 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.071701186 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073613098 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071505467 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073550014 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078938628 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.080683018 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.072457464 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081989802 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.088691665 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077371876 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068658456 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070082749 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072143129 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.081257144 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08181626 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.081328926 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.079767348 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071062686 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071403703 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072237517 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072672673 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070728554 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080089752 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080926092 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078094001 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069705559 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.073534411 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.071323025 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072966315 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081279641 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078837842 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.082436545 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081698036 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071790719 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071142583 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073912241 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082454812 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081655593 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08094666 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072495684 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.081309842 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071532886 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083632784 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.086701899 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.074617812 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072948896 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.071091568 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071718105 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072199485 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078965471 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.079049865 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072741561 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07170966 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071792799 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.08188788 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080024639 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071868903 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078737686 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071001335 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071854427 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073188514 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07332668 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.079226268 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.081444816 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073642662 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072015869 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071954885 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071284012 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.070259927 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.079156804 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081797804 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.080059205 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.079886463 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072874181 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.08080097 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080377397 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072690119 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.080245986 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071283463 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072873488 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071886555 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080162921 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078433659 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081114643 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072293855 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071390784 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078471263 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080682036 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071684741 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.077968261 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080521217 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.078872898 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.070216011 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081418631 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070712098 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079340011 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069357893 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.214680778 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071151663 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080479376 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.073072072 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.072115603 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072531991 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.081100922 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073859785 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072092267 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072719121 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073004602 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080443829 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.08396502 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073761767 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080575822 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.080028625 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.073783781 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080482078 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072665533 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080903504 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072798838 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072953769 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071142828 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083445702 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072456561 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.07168738 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072042054 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.082308428 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072288834 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081589498 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080025106 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071075357 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.086000218 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079534524 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076346164 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079176612 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071411344 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069691582 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069897872 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070390655 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078000394 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078949134 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07125582 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069492073 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078530163 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.082641529 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.071117454 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.080486988 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079392544 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078942641 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070132222 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07204447 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082069552 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079595158 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077655627 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077892625 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078149784 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070823446 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080420019 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080521976 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072513486 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085641657 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072920364 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.084873756 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078291487 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076551199 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078552852 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079377493 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079874171 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079833765 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082389714 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069537719 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069697827 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.07802097 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06972999 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070359603 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078107499 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071911411 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070922037 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082137374 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070494019 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079892174 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.069429745 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078312524 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069368595 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071104444 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082088571 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070601483 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071305422 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077972607 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070275407 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.077324863 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079761448 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.077287014 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072197398 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071069704 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078484675 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078217363 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069446435 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069544033 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071104612 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.07724965 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.076953418 seconds)
  done (took 18.940560797 seconds)
done (took 38.595830353 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.209396536 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.154302669 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.184390023 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.115099552 seconds)
  done (took 2.066770974 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.10765892 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.098693858 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.08748056 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065980834 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.093858609 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.066262783 seconds)
  done (took 1.855836517 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.337387039 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.21103529 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.191649637 seconds)
  done (took 2.071204523 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.226558014 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.211948001 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.465306062 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.288587918 seconds)
  done (took 2.624943444 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.14381234 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.083880253 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.064851202 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.078460173 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.124715837 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.175659544 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.093581581 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.127506245 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.072277203 seconds)
  done (took 2.354196478 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.146942339 seconds)
done (took 12.475679143 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.098097065 seconds)
    (2/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.074761065 seconds)
    (3/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071062516 seconds)
    (4/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.214139709 seconds)
    (5/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.210629714 seconds)
    (6/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.266991964 seconds)
    (7/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.074814881 seconds)
    (8/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.235936491 seconds)
    (9/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.125349962 seconds)
    (10/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.081661714 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.079072166 seconds)
    (12/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.220907776 seconds)
    (13/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.137029927 seconds)
    (14/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.07972099 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.107116326 seconds)
    (16/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.200961383 seconds)
    (17/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.10929007 seconds)
    (18/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.078215891 seconds)
    (19/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.307633537 seconds)
    (20/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.127942531 seconds)
    (21/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.190258801 seconds)
    (22/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.078037838 seconds)
    (23/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.087822342 seconds)
    (24/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.211983666 seconds)
    (25/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.073839582 seconds)
    (26/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.129535158 seconds)
    (27/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.219948672 seconds)
    (28/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.197031116 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.161183854 seconds)
    (30/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.077428454 seconds)
    (31/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.178075694 seconds)
    (32/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.181286825 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.119209669 seconds)
    (34/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.071241852 seconds)
    (35/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.078014518 seconds)
    (36/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.089648672 seconds)
    (37/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.067476606 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.105594579 seconds)
    (39/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.176140749 seconds)
    (40/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.094545761 seconds)
    (41/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.076485647 seconds)
    (42/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.237004914 seconds)
    (43/309) benchmarking ("sort", Bool, false)...
    done (took 0.149513067 seconds)
    (44/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.069908257 seconds)
    (45/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.14358106 seconds)
    (46/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.200062543 seconds)
    (47/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.188402212 seconds)
    (48/309) benchmarking ("sort", Int64, false)...
    done (took 0.069614106 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.090167849 seconds)
    (50/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.07578718 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.086778 seconds)
    (52/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.067760275 seconds)
    (53/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.076886391 seconds)
    (54/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.074795096 seconds)
    (55/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.227233669 seconds)
    (56/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.233516737 seconds)
    (57/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.078603537 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.065278482 seconds)
    (59/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.08492127 seconds)
    (60/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.231811551 seconds)
    (61/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.183454751 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.118948312 seconds)
    (63/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.206248195 seconds)
    (64/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.076211248 seconds)
    (65/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.141425223 seconds)
    (66/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.07863175 seconds)
    (67/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.168433828 seconds)
    (68/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.228970814 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.127071902 seconds)
    (70/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.10468484 seconds)
    (71/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.068667546 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.101121989 seconds)
    (73/309) benchmarking ("sort", BigInt, false)...
    done (took 0.193641812 seconds)
    (74/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.078540777 seconds)
    (75/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.093364912 seconds)
    (76/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.083480944 seconds)
    (77/309) benchmarking ("sort", Float32, false)...
    done (took 0.133926008 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.124818886 seconds)
    (79/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.068501461 seconds)
    (80/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.078102957 seconds)
    (81/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.074680793 seconds)
    (82/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.07144922 seconds)
    (83/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.067350794 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.130222032 seconds)
    (85/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.0689563 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.09146414 seconds)
    (87/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.079539204 seconds)
    (88/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.394671202 seconds)
    (89/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.079676545 seconds)
    (90/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.07036387 seconds)
    (91/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.078206822 seconds)
    (92/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.172127322 seconds)
    (93/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.180434169 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.108089047 seconds)
    (95/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.19982801 seconds)
    (96/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.075729427 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.114170078 seconds)
    (98/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.068326136 seconds)
    (99/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.090807177 seconds)
    (100/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.080798807 seconds)
    (101/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.087233047 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.11714834 seconds)
    (103/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.077780937 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.090840588 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.095197102 seconds)
    (106/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.068671606 seconds)
    (107/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.13891216 seconds)
    (108/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.079218082 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.079707877 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.086576627 seconds)
    (111/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.069927258 seconds)
    (112/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.071924612 seconds)
    (113/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.076981094 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.093350208 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.068106139 seconds)
    (116/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.077133762 seconds)
    (117/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.235147783 seconds)
    (118/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.068742645 seconds)
    (119/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.069105852 seconds)
    (120/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.066480687 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.091683089 seconds)
    (122/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074302196 seconds)
    (123/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.076155214 seconds)
    (124/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.174260207 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.135166261 seconds)
    (126/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.129491832 seconds)
    (127/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.078020151 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.091194756 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.08055259 seconds)
    (130/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.108147042 seconds)
    (131/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.069915037 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.123458659 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.089683869 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.076408416 seconds)
    (135/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.069071261 seconds)
    (136/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.130216233 seconds)
    (137/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.068716498 seconds)
    (138/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.069624393 seconds)
    (139/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.078948828 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.068308446 seconds)
    (141/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.134111024 seconds)
    (142/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.077754396 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.075822871 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.068600822 seconds)
    (145/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.069532524 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.125791808 seconds)
    (147/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.069914614 seconds)
    (148/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.07604535 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.068053956 seconds)
    (150/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.142794586 seconds)
    (151/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.184125864 seconds)
    (152/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.067754846 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.068044764 seconds)
    (154/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.128985756 seconds)
    (155/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.067734652 seconds)
    (156/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.17621472 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.14054396 seconds)
    (158/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.068910617 seconds)
    (159/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.070068479 seconds)
    (160/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.069025379 seconds)
    (161/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.180894065 seconds)
    (162/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.06894965 seconds)
    (163/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.172275343 seconds)
    (164/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.07069861 seconds)
    (165/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.069613827 seconds)
    (166/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.071075122 seconds)
    (167/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.072697491 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.067675918 seconds)
    (169/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.145965577 seconds)
    (170/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.077819113 seconds)
    (171/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.143589243 seconds)
    (172/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.075433752 seconds)
    (173/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.071611511 seconds)
    (174/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.074806381 seconds)
    (175/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.069054911 seconds)
    (176/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.136118427 seconds)
    (177/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.067225719 seconds)
    (178/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.181348105 seconds)
    (179/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.075882708 seconds)
    (180/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.080083 seconds)
    (181/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.074864946 seconds)
    (182/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.147439457 seconds)
    (183/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.069409952 seconds)
    (184/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.071562607 seconds)
    (185/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.199664524 seconds)
    (186/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.06949191 seconds)
    (187/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.074598807 seconds)
    (188/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.068502453 seconds)
    (189/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.169562826 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.067820743 seconds)
    (191/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.069210615 seconds)
    (192/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.068948902 seconds)
    (193/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.067462149 seconds)
    (194/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.067611 seconds)
    (195/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.079976677 seconds)
    (196/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.082452044 seconds)
    (197/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.074803726 seconds)
    (198/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.080617578 seconds)
    (199/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.094525993 seconds)
    (200/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.219698846 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.068062669 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.067363257 seconds)
    (203/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.074408438 seconds)
    (204/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.067943963 seconds)
    (205/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079669135 seconds)
    (206/309) benchmarking ("sort", Float64, false)...
    done (took 0.13335239 seconds)
    (207/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.068516901 seconds)
    (208/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.127669763 seconds)
    (209/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076056173 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.07560733 seconds)
    (211/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.305880951 seconds)
    (212/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.144888688 seconds)
    (213/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.071369335 seconds)
    (214/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.070433596 seconds)
    (215/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.071293087 seconds)
    (216/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.0787441 seconds)
    (217/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.070714797 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.128597175 seconds)
    (219/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.077139069 seconds)
    (220/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.072076904 seconds)
    (221/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.068787379 seconds)
    (222/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.068875158 seconds)
    (223/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.068910568 seconds)
    (224/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.070135009 seconds)
    (225/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.076795384 seconds)
    (226/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.072127551 seconds)
    (227/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.068642089 seconds)
    (228/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.224878748 seconds)
    (229/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.135072069 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.091778454 seconds)
    (231/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.073198767 seconds)
    (232/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.068036323 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.092169014 seconds)
    (234/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.076344166 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.13742386 seconds)
    (236/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.180995388 seconds)
    (237/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.079590885 seconds)
    (238/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.068544572 seconds)
    (239/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.081095522 seconds)
    (240/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.069154915 seconds)
    (241/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.070685678 seconds)
    (242/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.067241042 seconds)
    (243/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.080025039 seconds)
    (244/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.089711432 seconds)
    (245/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.0692989 seconds)
    (246/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.068263992 seconds)
    (247/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.068353518 seconds)
    (248/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.186124177 seconds)
    (249/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.142459984 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.13800502 seconds)
    (251/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.068055532 seconds)
    (252/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.069740641 seconds)
    (253/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.068544865 seconds)
    (254/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.080868833 seconds)
    (255/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.06925547 seconds)
    (256/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.069415975 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.125978431 seconds)
    (258/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.06890412 seconds)
    (259/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.069643685 seconds)
    (260/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.07851007 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.08989001 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.068888796 seconds)
    (263/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.077462297 seconds)
    (264/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.069590069 seconds)
    (265/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.075819226 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090795478 seconds)
    (267/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.068326628 seconds)
    (268/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.06921853 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.068965642 seconds)
    (270/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.069448538 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.068459021 seconds)
    (272/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.093833745 seconds)
    (273/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.081614201 seconds)
    (274/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.067736907 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.091666893 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.122348942 seconds)
    (277/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.069512084 seconds)
    (278/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.068906277 seconds)
    (279/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.070080184 seconds)
    (280/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.069801209 seconds)
    (281/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.096021674 seconds)
    (282/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.075103711 seconds)
    (283/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076917664 seconds)
    (284/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.0678922 seconds)
    (285/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.076488834 seconds)
    (286/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.069734103 seconds)
    (287/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.069406937 seconds)
    (288/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.177989177 seconds)
    (289/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.140346266 seconds)
    (290/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.074569254 seconds)
    (291/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.072569936 seconds)
    (292/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.070450933 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.075592425 seconds)
    (294/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.08131971 seconds)
    (295/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.077801787 seconds)
    (296/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.068815483 seconds)
    (297/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.067903811 seconds)
    (298/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074543056 seconds)
    (299/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.14631043 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.09014759 seconds)
    (301/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.083904278 seconds)
    (302/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.069303104 seconds)
    (303/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.068588007 seconds)
    (304/309) benchmarking ("sort", Int8, false)...
    done (took 0.149087055 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.067516456 seconds)
    (306/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.068617783 seconds)
    (307/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.074685434 seconds)
    (308/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.068164729 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.115205454 seconds)
  done (took 33.757452027 seconds)
done (took 35.104907676 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.088312208 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099679662 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076592443 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.096986952 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.084944301 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.100395973 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.077059456 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.082388569 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.084839313 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083724239 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.082210942 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.075587186 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.07788762 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078044705 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.075769642 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101342257 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.082750719 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076523742 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07701952 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068184165 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076896755 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.069332311 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069716806 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.07518208 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.079918996 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.076162926 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.078082219 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.077527855 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068334428 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06851909 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.073200323 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.076833696 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.06794185 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.08059425 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.07720044 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077276084 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.078526745 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.081072139 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.06822031 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.069608457 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.078700887 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068636093 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.076574594 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075060954 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073430596 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074992402 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.0770219 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.080864731 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101012336 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073922477 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.078989248 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.07978239 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.080408876 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073908659 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.073234599 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.076340185 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074206006 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100366314 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.077167992 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073902373 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.078261629 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.078008921 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074612143 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.076595432 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076703762 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.078920006 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.080954995 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.074879547 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.07897635 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.075421062 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067735356 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076362756 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.07307252 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068199151 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.079850696 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.081332368 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067805165 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072556095 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.075872986 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.077053722 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.071065934 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073478593 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067589989 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073021038 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073274578 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.07444615 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.073330364 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.075855338 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.06801875 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.076614723 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.075623694 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.075990541 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067527733 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.081190238 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068507847 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074474598 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068415302 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.06822913 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067836883 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.073538261 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068019107 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073204963 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.077286596 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.067757159 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.073301936 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.082051556 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.068003623 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.075435262 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.068050874 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067979081 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.080065948 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.078669514 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.068041174 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073401271 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067412359 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073617518 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.067673806 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.068160112 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067789926 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.067799593 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.072431198 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067916286 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072884087 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073392297 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.08019727 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.06745785 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072626941 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.072821264 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.067872902 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.07420262 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.067703544 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.067610748 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.067059035 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.081564249 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073354083 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.067618291 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073044991 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072991209 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.075816354 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066673236 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.07614421 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.073309393 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071671793 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073750896 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066331655 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.078352535 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072557716 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072061442 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066328127 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.0668098 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066191019 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066900526 seconds)
done (took 12.875223223 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070569697 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.117794424 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.092522737 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.093611289 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.083772346 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.069198599 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.077219474 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.095497235 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.070865157 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.099717045 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.091278894 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.090478992 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112797976 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.068186138 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.069258561 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070018031 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.070053464 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081953662 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.097187739 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.091336486 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.108898311 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.069205965 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.08950087 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090055045 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.08650665 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.093677379 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069942272 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070065999 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.071681369 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.090559431 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.095415561 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072228102 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.070206276 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.093776315 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.088355201 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082897565 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.070400952 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.078580899 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.069855001 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068812138 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.070822863 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.090689097 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.07828257 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080308174 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070017655 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.076999569 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070347215 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.085453694 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088112012 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.077923227 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.084927437 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.092810333 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.07070478 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.082758466 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067004167 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.083616707 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.079175228 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.0698603 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069631523 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.074669675 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.069659531 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071674813 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080936359 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.07789133 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.074489689 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.084953312 seconds)
  done (took 6.763290813 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084564214 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.094529405 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083183901 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.085990312 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068164408 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068983592 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.069000653 seconds)
  done (took 1.99260747 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069872309 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088052868 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.093810632 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093247911 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.086706249 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.093872933 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07733472 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069296626 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.098886756 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068872205 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089701309 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100589088 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.072922664 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.081218455 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.093239103 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.068666962 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094376059 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.069945355 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070251353 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.094314816 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075019766 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.096544853 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.080937152 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069929499 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.082314457 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069723976 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102300441 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07763849 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071347725 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070449318 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070619083 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.096760925 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.081841832 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.082987063 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070560412 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.084868286 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083514481 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072660453 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.080366931 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.079375945 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082803248 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.071298839 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.068334812 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.071283538 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072677585 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.08147154 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068585522 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.070791821 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070634264 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089422389 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.068656897 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.083481659 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.073883987 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.075777825 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.075757085 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075113793 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077984135 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.071154121 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089635972 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070936319 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087193771 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086638703 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.083475085 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086484396 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069498886 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.082309949 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.082832946 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070387202 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071297172 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.071122122 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087480893 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.073103079 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071211074 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.081152929 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069551894 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094319368 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.094264779 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069336076 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.083086762 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070629361 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070902014 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.080903827 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.094088567 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075299533 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070745957 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073799496 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072039446 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.073161132 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068669166 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073748456 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.071062737 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.075365894 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.070772567 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.073528666 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072323647 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.087014268 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069366695 seconds)
  done (took 9.069283356 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071149532 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068926534 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069956655 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.06832564 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068296486 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068481218 seconds)
  done (took 1.880910671 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.099210423 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068014637 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080792087 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.069566801 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105527673 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086626294 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086948025 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.089305646 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084498396 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.081253384 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085254688 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.090013718 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091883901 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072858474 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085915587 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071697014 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.084941481 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.073909608 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.080432568 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07191829 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.081433445 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.070694225 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071005958 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.087848998 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.071971977 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.069386477 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.077807383 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079781364 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079276678 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.092925209 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.070254812 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071820064 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.077219163 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.086321034 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.083843216 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.078540843 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070261572 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077600899 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.073917782 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074212 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088708545 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072824883 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.07285982 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076948063 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.090416324 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.078662021 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076893659 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.079602013 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086290565 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076881581 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077028433 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071081704 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074379751 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077225181 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.079094399 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.088105916 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077058465 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086440912 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072470195 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.078758673 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.07035397 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074152194 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.090553079 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074243287 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078407618 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077053601 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.078556356 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072927622 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073230935 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.070929254 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076762816 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.070138028 seconds)
  done (took 7.130079064 seconds)
done (took 28.301782896 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.523418465 seconds)
  done (took 1.943639899 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.623590277 seconds)
  done (took 2.076775454 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.591046142 seconds)
  done (took 8.037475309 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.411943107 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.652366749 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.760338631 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.135117828 seconds)
  done (took 3.449559534 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.708203391 seconds)
  done (took 2.167563018 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.236340875 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.22472648 seconds)
  done (took 1.929395438 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.34855847 seconds)
  done (took 1.798660198 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.06760671 seconds)
  done (took 2.516289554 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.251887064 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.168803852 seconds)
  done (took 1.879225221 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.450318507 seconds)
  done (took 1.903469112 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.309575299 seconds)
  done (took 5.768291653 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.2224546 seconds)
  done (took 1.718856736 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.236424686 seconds)
  done (took 1.694199908 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.752857724 seconds)
  done (took 3.208235501 seconds)
done (took 41.558468976 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083650596 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.085536997 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.087339224 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.084005059 seconds)
  done (took 1.773537654 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076396128 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072352075 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076999966 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072817554 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077359502 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073311876 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074728316 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075755845 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072955172 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073273616 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073389738 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.073211445 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076215687 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074892288 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071984852 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076496799 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076433833 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071920931 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.076762026 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.07347276 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.072150171 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.075978531 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076301732 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072504092 seconds)
  done (took 3.244636319 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081203715 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075296108 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.07855481 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074453969 seconds)
  done (took 1.776185153 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078054546 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.08929477 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.086663457 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.079303778 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091916096 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.087082764 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069501719 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.070365507 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.070790092 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.07974478 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.070680097 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096234526 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.089283188 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079425528 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.08189781 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066313194 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068015376 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087765552 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.080047488 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.08052648 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.071062805 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.079728142 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068736925 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.08973633 seconds)
  done (took 3.37380815 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.087828598 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.066946431 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.088152854 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.094668393 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.096374145 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.068509651 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.088127534 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.097006104 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.145059149 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068785253 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.074245159 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068599401 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.107605115 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068491677 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.088870629 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.112787324 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.11562518 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.072606394 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.101646286 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.071384522 seconds)
  done (took 3.252751082 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.086589281 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.07302278 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.073012494 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068233161 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078483609 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.07640423 seconds)
  done (took 1.929479226 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.071252406 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.070300708 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.069993008 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069647503 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.075014647 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.069836603 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068435935 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070455718 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.070912707 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.070202492 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.069490642 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.069247045 seconds)
  done (took 2.310416527 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.193511951 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.073308727 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.07396743 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.069835489 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.074903452 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.069099965 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.084776403 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.07184519 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.097739011 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069258204 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.0693349 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.072069359 seconds)
  done (took 2.490701663 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192797008 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073991775 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225989331 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147987989 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104471762 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113190063 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114531217 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111219033 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.13634277 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100750783 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155857358 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1617251 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106664531 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130841256 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087834361 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.122168446 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14622173 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15875498 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102862078 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157307513 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137503078 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126229893 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145403835 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100044791 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103804369 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116259685 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.074207968 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080292016 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162643822 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126360647 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139462231 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108347645 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093802897 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169171094 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16513527 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133732765 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141304775 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082592771 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.1210209 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.132822178 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19395606 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089929013 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152578582 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103175848 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079382842 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126862359 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112240688 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.117825555 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.102735979 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088658908 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.278064321 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172689376 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.127538204 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086678372 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119890396 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108446039 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.112600254 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117092664 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221994552 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153981076 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124670842 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.072102184 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110127919 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146539809 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129297414 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.106896438 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.120371783 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091589188 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12565127 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151963294 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137019584 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136223965 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.136707881 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084434166 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114723531 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130393266 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122966962 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161842453 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121597999 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.07381703 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119394394 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098967816 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080959522 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.144674683 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075330654 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167528784 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097753717 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.123043616 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12524692 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104966583 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104902553 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150195647 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135838283 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102319433 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.086971045 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102236117 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.117542586 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143172745 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086908379 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105056934 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108577744 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.07659576 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12476157 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.072007975 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112947504 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.092659373 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111766252 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268786301 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078218848 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118656802 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099281764 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099822171 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128605586 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152541336 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086869124 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079752701 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156665157 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118447903 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103508282 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138501384 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152538078 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.120314154 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097353173 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141002453 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165216302 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090545784 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155138665 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103503095 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084638513 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.106327597 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12027263 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109743809 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.121713774 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081271177 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.117499313 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162416258 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075205764 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096858499 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130454901 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082652726 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081467128 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104690449 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103891185 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.097537226 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.101369248 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104946408 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13419509 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120950204 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105847304 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12214779 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100135175 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15977698 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088335544 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.102288898 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104466909 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.07358226 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.128326223 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150239088 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079436665 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153183176 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.119979831 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113991344 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114602712 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082591743 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132422994 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079123939 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.072649974 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132267575 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.259699488 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105608059 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.143864817 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113360034 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.121804487 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.118498059 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128490087 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125814619 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.125555025 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114238056 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.089127644 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113688989 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163512351 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073503085 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.092147176 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081708408 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101199134 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093864497 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084682942 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133695786 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122063637 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110160284 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112003997 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095806553 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142160504 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.078024649 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120293806 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119178026 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093735089 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.145668786 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147346453 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128076146 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101351324 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133311067 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.074744585 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075759803 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.090181378 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121907059 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08480834 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084617119 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112856739 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145027498 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127420294 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13340301 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121833177 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118735105 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15283695 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.073518742 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.119675648 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139984861 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118993241 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104640642 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091108057 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.097971631 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138064545 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101901999 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197326484 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10735735 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11670731 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145194758 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.097167811 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078302954 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101337109 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124655236 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097937105 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1337266 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.0959137 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085152807 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103669881 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.077723715 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096189283 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128387426 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111755665 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127756274 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.108415958 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122543532 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077135881 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108091608 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117743294 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118069289 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.083158574 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11460252 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1556232 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101371995 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11095806 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140599434 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078256442 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.134413204 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159492721 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134008508 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083536356 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101487112 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116381783 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118501822 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108215219 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122354854 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093982594 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123020286 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10310324 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.079562786 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079663514 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087703273 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094081714 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.103430666 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.092765749 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.103906565 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.090716325 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119133529 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09306963 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100597106 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105521912 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.093451504 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089174758 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090189165 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15221196 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107273377 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14539408 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.093078332 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.125458469 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.409062002 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075257519 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079557942 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.081296032 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135459658 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087507113 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129662946 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.114985512 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118017897 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12363834 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137442615 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099425232 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.074643775 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11145774 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133345936 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124128771 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098594753 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.105434479 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160622089 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.1199627 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078968648 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110573828 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113898095 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101631365 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164651988 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080842496 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106428875 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076391597 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078313719 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12049514 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143370842 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081824025 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.100887492 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115612235 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107579786 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120977854 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095276581 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107547261 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125793973 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1392027 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122581736 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.091290117 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110724737 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126655618 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149420393 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104458091 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.101610666 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1687467 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148232451 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.156697133 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089109026 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113518677 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113417815 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109293276 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132757177 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085118282 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155106032 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082089339 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130860454 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100442195 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.246157091 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128473467 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.112843016 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088915484 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143933263 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115091453 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083628226 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081533574 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110142841 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116572551 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10221392 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075859762 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14069185 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.074758924 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131106754 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163937262 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080670676 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104940525 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096356056 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082887621 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102537233 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101326452 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086962408 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.100173539 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165263111 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088649901 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146567215 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128634116 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111438913 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132561554 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10201315 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.643958511 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.081281629 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147548904 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115502511 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1730564 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095878135 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11329422 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109164301 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118345889 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135872566 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102351758 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.179184903 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126977267 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.117224303 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080394764 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10168138 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10335465 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089795066 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106356476 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1126209 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112333786 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.095100511 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.1164067 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120176361 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.08354753 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09636649 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148402084 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113499147 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143343734 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.285928558 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084326482 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115387474 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131696287 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081093614 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.11773517 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146095646 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105575931 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12241348 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082727293 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.100190836 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16620076 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073708942 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15229118 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117966849 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109345425 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11473716 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.109416938 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127935273 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104179803 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120327792 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094281081 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.146530134 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113512327 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084747248 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.079857699 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105616752 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109573019 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097886226 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097697633 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.099582439 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146038103 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072884509 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09798663 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114007041 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144902798 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165199253 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.106425489 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084781396 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119752515 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15676056 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113643469 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119550806 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.082444393 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08143385 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082638689 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.102511917 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.12303537 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112430237 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117909617 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111887007 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155932562 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.084348232 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.22563484 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096451303 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105347373 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.090168271 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.080992414 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095876822 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096196699 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102898738 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109654476 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.316777145 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.096373742 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090947109 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092781541 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.075546721 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083368464 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122895778 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10858804 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115759019 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120680648 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.082934897 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103009389 seconds)
  done (took 58.042736457 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.106032362 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.079427757 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.100392943 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.143710408 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.120840128 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199292194 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.150904422 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188809742 seconds)
  done (took 2.695156748 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071412995 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.097543838 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.106478545 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.08523957 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.069783256 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070662856 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.231627815 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.084354085 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.069735885 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.093759507 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.080006882 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.071415591 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.46714204 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069378084 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.070441152 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.080373302 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.070861858 seconds)
  done (took 3.477368479 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.385787273 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.61517392 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.354780275 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.078535111 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.050388322 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088817793 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.256239163 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.137266959 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.081068943 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.537466665 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.371586623 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.135337135 seconds)
  done (took 18.697196783 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.085798744 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.079491213 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.094304114 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.093960944 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.08157675 seconds)
  done (took 2.112855634 seconds)
done (took 106.655094438 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.08524611 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.448707993 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.073358143 seconds)
  done (took 2.156686105 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.095466641 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.092476031 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.092228189 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.090076415 seconds)
  done (took 1.989655599 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075944357 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077481324 seconds)
  done (took 1.765337018 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.208548329 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.176760937 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.098170753 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084807173 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080646804 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081916733 seconds)
  done (took 1.861475699 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.07463017 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073159423 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073845072 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.074277692 seconds)
  done (took 1.907889856 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.070768307 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.067419526 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.069247169 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.072499873 seconds)
  done (took 1.890859762 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085671673 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.085395659 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080423583 seconds)
  done (took 1.865139026 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.10240183 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.09141713 seconds)
  done (took 1.806418667 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082982121 seconds)
  done (took 1.696703467 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.091055649 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.100950192 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.130605791 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.115688935 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.137030541 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.116934525 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.093027883 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.089822135 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.082623593 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.096079373 seconds)
  done (took 2.667569618 seconds)
done (took 21.778500986 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079617409 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.372341063 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361018309 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.092276408 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.670044867 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.359080704 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.990050451 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098027246 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.148936557 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072995128 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.091385854 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.653311116 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.982570603 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.330897903 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.972019731 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.328805728 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.656730056 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073244956 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071904291 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073309495 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.979435683 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071851903 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072756976 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073219265 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.65661964 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.380641354 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.075394296 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.330036518 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073198242 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.077374112 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.362840251 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.075712617 seconds)
  done (took 16.304398841 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071836841 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125434273 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076476742 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089492348 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.074795898 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073998524 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.075759684 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.073377258 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127935791 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073086752 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.091692141 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.072128646 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.076733669 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072566871 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093808018 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072652409 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.075923167 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073910402 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073581101 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074567134 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.093425906 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.07287828 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074206004 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.077020116 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.074253925 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.087525411 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.075868955 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.07377414 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074180907 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.078566444 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.079432355 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07646418 seconds)
  done (took 4.206423248 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119191233 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.13008575 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07486089 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.107283521 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11766068 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.0748121 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.152230476 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098681058 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.135215966 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073494081 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.091044501 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.072675358 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.10934152 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.075312291 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.096065181 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.074043858 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.07723179 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07418804 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073365839 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074463564 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.093858274 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.0738072 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074351378 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074327462 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.07508448 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.089483089 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.075581799 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.07388529 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07424512 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.078163707 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.079708991 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.075614756 seconds)
  done (took 4.475855751 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072201477 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074353527 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081793318 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083285403 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070177606 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.073641557 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.074494696 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.071799642 seconds)
  done (took 2.234018412 seconds)
done (took 28.84487753 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080917694 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070582536 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.074785743 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.088733141 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.074558356 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080158737 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066763161 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075413117 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072788495 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072846486 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074767831 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068400983 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071904398 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066193319 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073638996 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.06934893 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.084982369 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.074252815 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.08387409 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.084537042 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073178441 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.07719851 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.078737436 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.084565717 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.084964622 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.084763615 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.080620206 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.076896959 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071641874 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.074254129 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.074914782 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084004215 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.083714881 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.08477707 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.07073388 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.071001723 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.075393868 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.072490503 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.086565345 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.080288339 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072768673 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.080295919 seconds)
  done (took 4.832516386 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.086652304 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.08985863 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083292617 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080368364 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.090912937 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.083683897 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.08707922 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078561531 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.078777499 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087136183 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.07514668 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.081815021 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079663474 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.076619355 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.081504896 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.079504793 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.084845416 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.07874632 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.081861936 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.082606479 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.092430619 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.0764887 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.091194729 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.083804097 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.078983383 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.084613435 seconds)
  done (took 3.798881062 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075580018 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.088833905 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.096325651 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.149218448 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.115870153 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.084006477 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.085184091 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.095484968 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.100878017 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.072370993 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.076670998 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.096336779 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096599401 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.077818205 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.073051665 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.08794495 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.087896865 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.073365324 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.079026353 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101222434 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.092426425 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.089241866 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.097778984 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.088068788 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.070553556 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.073986855 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.076092191 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.09090678 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073866232 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.082859951 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.074376493 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.075691612 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.072649857 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.082163111 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073950401 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.070683793 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.09707306 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082968336 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.084460053 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.072052851 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.08124309 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.07269558 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.097433038 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.13282332 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.070861936 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075959091 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075804983 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.082917163 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070642209 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.099368956 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083668727 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.070971494 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071782621 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.070647247 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.070967066 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.074045152 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.073169898 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.073947028 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.081748777 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.078203265 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.093910304 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.076482649 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.089429927 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070888235 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.081966059 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.070844148 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.072661207 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.070236558 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.100363024 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.073034821 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.117075922 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.07230786 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069782785 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.082938408 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.08180844 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.077815287 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.071573224 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.089708663 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.083329369 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.075623167 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.080411215 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.074933093 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.075223831 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.102476175 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.071585778 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.07073845 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070439027 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.075226816 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.074959787 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.071808902 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083836488 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.070616915 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.074890813 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.090186444 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.071234138 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.07239566 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075677137 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.074833802 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.070867246 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083163727 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.075399069 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.072813545 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.082360896 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.072023981 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.075397452 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.08480962 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.078801519 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.070427885 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.0736767 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.075366056 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.072660949 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.072351921 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.074871108 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.073511911 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.078007631 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.07803225 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.077253686 seconds)
  done (took 11.135289283 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.167187745 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.16155053 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.07500834 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.154823445 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.080801126 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.084214773 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.157719474 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.100238959 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.071659648 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.074014473 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.072345617 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.114503676 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.109925163 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.123756797 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.085382504 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.07273643 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.095185105 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.120042355 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.160769849 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.154274476 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.09567097 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.08055901 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.075813041 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.074170727 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.07353817 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.082162879 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.092979556 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.081776255 seconds)
  done (took 4.566479234 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.079435211 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.103795604 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075060607 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.093371429 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.092540491 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.072338131 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.07436225 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.073601858 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.089032104 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.081895187 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.072339357 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.078237219 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.076417931 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.075485136 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.072704969 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.079156652 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079928482 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.071367624 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.076004857 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.078312418 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.082562289 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.097736114 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.076646491 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.072349678 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.075204994 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.071878125 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.081036788 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084988425 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.075199742 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.109656457 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069814865 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.077842322 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.087148644 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.073360994 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.071875466 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.072459167 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.072171254 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.072193159 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.073817308 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.070772038 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.071012604 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.076194738 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.071289553 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080298571 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.085360445 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.074402734 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073829713 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.0750285 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073662158 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067869544 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.072444645 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.07269876 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.075152351 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.080204093 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.076731673 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.075014794 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.073521335 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.100828991 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.078130934 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071795316 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.071191683 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.070684114 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074403078 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.082286803 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.087766822 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.075196327 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.070998062 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072415583 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.085907348 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.085344738 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071596757 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.077114067 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.070518646 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.07399023 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.07468069 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.07838661 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072839451 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.070650162 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.071792209 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.072590026 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.07288877 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.072155948 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.071019263 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.074986445 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.070422668 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.071168467 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.072273225 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073737035 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.081367508 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071203716 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.075884206 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.073034624 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.071365018 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.075111351 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.077620456 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.075014614 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083157643 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083300186 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.072574156 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.070563021 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.085622409 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074948362 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.071435459 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.077895602 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076744806 seconds)
  done (took 9.738675253 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.094256378 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.071616881 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.088339475 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.095523298 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.08203772 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.077921404 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.082134426 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.071530214 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.088264239 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.076388332 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.078587662 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.070486384 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.083401012 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.082350254 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.072875063 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.082544231 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.07511885 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.090208907 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.08710511 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.070773623 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.080777761 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.084821648 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.084113921 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.086408364 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.085434717 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.086806351 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.083435272 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.082469749 seconds)
  done (took 3.971991497 seconds)
done (took 39.672928476 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.722283264 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.882610437 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.694711856 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.925464724 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.755831044 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 90.392237521 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.786856407 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.692007815 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.873007438 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.741855789 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.018443169 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.955593661 seconds)
done (took 148.219736752 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.740106593 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.842973915 seconds)
    (2/2) benchmarking "String"...
    done (took 1.94140283 seconds)
  done (took 5.41575561 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.932565979 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.493555752 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.936094222 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.694554692 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.703740012 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.990536351 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.486180091 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.169584146 seconds)
  done (took 30.10642721 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.891033453 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.917918292 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.404729839 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.441517582 seconds)
  done (took 15.335041445 seconds)
done (took 62.251866895 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.700580558 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.717913668 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.734923204 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.689420499 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.787516155 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.701949135 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.074407041 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.940972623 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.693827298 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.702441093 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.692792301 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.116583204 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.702018156 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.848192854 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.693368607 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.691760005 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.710321172 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.1648649 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.844893869 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.700640542 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.700098365 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.854825897 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.702122227 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.694803611 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.73902912 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.696159579 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.107410004 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.693481634 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.315006012 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.697144889 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.726702214 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.108255143 seconds)
  done (took 202.572772341 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.697904316 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.864284454 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.944484074 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.735595305 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.287194039 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.883831387 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.801707949 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.342777143 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.694174501 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.695595082 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.9620784 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.694219772 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.993404451 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.634779546 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.734020273 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.704719136 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.809003643 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.986377927 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.731662699 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.860066767 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.714846106 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.83009128 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.785479667 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.945026347 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.705292625 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.696308343 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.706322502 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.719704189 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.882781645 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.794141856 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.701277714 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.712818705 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.89017741 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.566260411 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.719924053 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.707297931 seconds)
  done (took 167.7710582 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.900764441 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.700502511 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.699197359 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.701304288 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.70556072 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.696919302 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.822819363 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.817953044 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.35647683 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.086611944 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.752822563 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.6979538 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.458107776 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.692445947 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.765504419 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.707519215 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.694649478 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.715494859 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.723828185 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.694774133 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.698683605 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.8203326 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.713180857 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.699840828 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.710366034 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.701677376 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.705631156 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.080522673 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.6947349 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.890045954 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.702605662 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.707624725 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.940481339 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.696186884 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.700432309 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.517358308 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.225132003 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.781584946 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.69640572 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.705123892 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.699093023 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.918759751 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.695920187 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.70121648 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.700202065 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.70065856 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.807636133 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.700706525 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.821384543 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.702885465 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.17581182 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.695656382 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.701162964 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.942111854 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.279770368 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.703363466 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.705937916 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.70446977 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.70196473 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.707428922 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.940154028 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.938446315 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.697934124 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.703743401 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.714952878 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.701061678 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.896923777 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.698255806 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.418458585 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.715916009 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.823618455 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.826802603 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.697250229 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.767136068 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.789070967 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.698232207 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.700529069 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.700669558 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.702415155 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.703052064 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.781014827 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.696979449 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.812228898 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.708562268 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.703886125 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.756766421 seconds)
    (86/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.701062667 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.770036617 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.697580506 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.519670017 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.702646766 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.701647281 seconds)
    (92/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.701506159 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.935017188 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.763673976 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.698896725 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.701921486 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.791067221 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.818363325 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.414322923 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.705024248 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.976904434 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.782859909 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.695806701 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.805453503 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.703342629 seconds)
    (106/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.701957652 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.780746743 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.705218285 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.70101287 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.737424602 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.702217314 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.716764022 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.697376682 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.074437237 seconds)
  done (took 391.995283484 seconds)
done (took 765.932376288 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.299999222 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.258442991 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.361121806 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.276616985 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.25501874 seconds)
  done (took 13.087889016 seconds)
done (took 14.724329994 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.782513014 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.780803937 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.718289745 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.781827554 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.71392737 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.780996691 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.762633913 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.717586328 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.747575311 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.723249752 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.748794331 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.721526943 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.707779927 seconds)
  done (took 24.324575583 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.933259451 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.93012348 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.766792093 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.948023746 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.743217536 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.935783921 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.845896072 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.845234827 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.839187409 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.706650243 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.704637581 seconds)
  done (took 21.837346552 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.933812896 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.940975306 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.767418045 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.008814138 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.741216992 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.934596635 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.859023898 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.842445865 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.844005454 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.701146905 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.701791544 seconds)
  done (took 21.915525741 seconds)
done (took 69.715226235 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.697569675 seconds)
  done (took 3.334649104 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.717367793 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.871437482 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.695743147 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.6951571 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.695866753 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.696349212 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.697036158 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.695792336 seconds)
  done (took 15.400121267 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.699690089 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.69652158 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.698106993 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.69872053 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.696735108 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.697606489 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.696311781 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.696374676 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.697747245 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.697766941 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.697513742 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.694607378 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.696040558 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.695251865 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.696448613 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.696938981 seconds)
  done (took 28.790389517 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.701098629 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.695421332 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.696822503 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.694093249 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.697655669 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.696195821 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.697570506 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.696390203 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.696716912 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.697614584 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.695959477 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.697942842 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.695676373 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.696095596 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.69605447 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.697900475 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.694671515 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.699650975 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.699689019 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.697040742 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.698676805 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.698432411 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.697281973 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.697135777 seconds)
  done (took 42.370439678 seconds)
done (took 91.528859076 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.471180056 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.329896548 seconds)
  done (took 9.435236015 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.701723819 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.700709527 seconds)
  done (took 5.110111758 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.699209901 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.701125541 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.698313922 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.701313815 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.699575627 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.700098179 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.700926937 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.69752306 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.694542738 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.69905835 seconds)
  done (took 18.62981276 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.697204264 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.699244241 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.697137777 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.697008058 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.700217024 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.695761995 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.695100575 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.695537094 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.698567894 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.697391847 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.698192159 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.698177675 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.698380376 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.693024609 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.691183227 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.691608482 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.693263979 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.690714896 seconds)
  done (took 32.164619706 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.694393125 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.699536747 seconds)
  done (took 5.024858461 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.698533573 seconds)
    (2/7) benchmarking "second"...
    done (took 1.696882898 seconds)
    (3/7) benchmarking "month"...
    done (took 1.698559781 seconds)
    (4/7) benchmarking "year"...
    done (took 1.696015936 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.696568666 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.697260431 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.694709117 seconds)
  done (took 13.512876161 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.695839186 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.847138742 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.907175359 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.320915065 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.697467149 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.69833436 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.605296726 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.700425077 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.697473024 seconds)
  done (took 18.801623709 seconds)
done (took 104.312949503 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.556479255 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.693173417 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.966071965 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.808294436 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.711235574 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.689087928 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.6976384 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.966936304 seconds)
done (took 41.717742235 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.765945759 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.385378434 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.426148039 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.830094326 seconds)
  done (took 15.268896297 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.688252412 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.987919598 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.713676978 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.543179244 seconds)
  done (took 21.565518229 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.055322997 seconds)
    (2/2) benchmarking "read"...
    done (took 2.040498973 seconds)
  done (took 5.728943493 seconds)
done (took 50.957004978 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.688960447 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.689240159 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.689949838 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.693020961 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.68926533 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.690594876 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.692200669 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.689735005 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.689535346 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.689905984 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.690169949 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.691629461 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.690281792 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.69068807 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.689806914 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.69073366 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.689848849 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.689811957 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.688339673 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.687055505 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.686683275 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.690609308 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.687309167 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.686156748 seconds)
  done (took 42.18187911 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.686611633 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.689361487 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.685167528 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.687381628 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.683878891 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.685305509 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.684312302 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.684103907 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.682930474 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.686023428 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.685507819 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.685409119 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.685943742 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.686071836 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.685250967 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.685966093 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.690380513 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.68259564 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.683627673 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.683453457 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.686281259 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.687480817 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.682145528 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.684711524 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.684896902 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.685280165 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.683826203 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.685602515 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.683869383 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.685363497 seconds)
  done (took 52.183959327 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.686660601 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.685208406 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.687422298 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.684042358 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.683152159 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.68402002 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.682049468 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.682564091 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.686980757 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.683939865 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.682452613 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.683043412 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.679651974 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.682675034 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.680907855 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.681937908 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.680351503 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.681501979 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.681653398 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.68187691 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.682891293 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.680206328 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.68119289 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.684235134 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.684265363 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.679798715 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.683081982 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.682078253 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.682844405 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.683335139 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.685035788 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.679899918 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.682001759 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.682221185 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.68443591 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.686288937 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.682926516 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.684362582 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.685589367 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.683807435 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.685301165 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.682732778 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.685382551 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.686992315 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.685337653 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.686881887 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.686918498 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.685518875 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.684589179 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.685084448 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.684131182 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.685561985 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.685864774 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.682302545 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.685761597 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.685257282 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.685358231 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.687051332 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.683551508 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.684622128 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.68644098 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.68738444 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.686198106 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.682081729 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.683732615 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.683045628 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.683698571 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.686961249 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.680053788 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.681616927 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.680639822 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.684338808 seconds)
  done (took 122.857772616 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.68109262 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.680962221 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.680397805 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.679743009 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.680813868 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.680464283 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.680950977 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.681000951 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.678248008 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.677088269 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.677017271 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.678404539 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.679024309 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.67759865 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.675955519 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.674954788 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.675782454 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.676458077 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.677463774 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.681615113 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.677713687 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.679233839 seconds)
  done (took 38.550439432 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.67967635 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.678536061 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.677573022 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.676431539 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.675491738 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.676697184 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.676867197 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.678740518 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.673676953 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.675878049 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.677126159 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.675616216 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.676147796 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.677907674 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.674998271 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.675097349 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.678067785 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.677158829 seconds)
  done (took 31.797251951 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.673380195 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.667806859 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.67294579 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.672682944 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.672677932 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.673584001 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.674048277 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.669275354 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.669888905 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.672175011 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.671306057 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.66947678 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.671509386 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.668323582 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.671472695 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.670065645 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.671141493 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.673542887 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.674738591 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.669027516 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.669904868 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.673959738 seconds)
  done (took 38.386390468 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.673518013 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.676931199 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.668910541 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.670750032 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.673036416 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.673376683 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.67182268 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.677355096 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.668615552 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.672697279 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.673993031 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.674519157 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.673844461 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.67644073 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.674546178 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.674948993 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.672670668 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.674847848 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.674727377 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.675482632 seconds)
  done (took 35.080483594 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.670906451 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.674614521 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.673111267 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.672104964 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.676179212 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.670470485 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.671166572 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.671943288 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.673452011 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.673405069 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.675229055 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.673681955 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.671772112 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.673357295 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.671705431 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.671495669 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.67474313 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.674068846 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.672554246 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.67488592 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.674073277 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.675181925 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.677514533 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.673541648 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.671589477 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.673660951 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.676882273 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.674692873 seconds)
  done (took 48.46739058 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.671123173 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.671999156 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.671789681 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.673851531 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.674581982 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.675829136 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.671652832 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.674764491 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.673203434 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.673185257 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.673263379 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.67615252 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.67291029 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.672394591 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.673005941 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.672343163 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.672731823 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.675200147 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.673572073 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.673083792 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.672277371 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.671423065 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.672409635 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.677496884 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.674382598 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.672803575 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.672840119 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.672577737 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.671706839 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.675873688 seconds)
  done (took 51.810990861 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.695409707 seconds)
    (2/2) benchmarking "in"...
    done (took 1.693291238 seconds)
  done (took 4.999858913 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.674772067 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.675970978 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.674323946 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.674552953 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.674290845 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.673034117 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.673085492 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.675430137 seconds)
  done (took 15.006699997 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.673816643 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.672116845 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.673960205 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.67342128 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.675999528 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.677470046 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.680322131 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.673283714 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.676482964 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.678127137 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.683322538 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.683688456 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.679371631 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.678216257 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.677838493 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.680219447 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.67515205 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.67359632 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.677803799 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.675848924 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.67616099 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.678214343 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.681785984 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.675513064 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.67751953 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.690073036 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.679929742 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.673637889 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.67859066 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.680907738 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.67548795 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.674704479 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.677996895 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.677062144 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.682285904 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.676864887 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.688814627 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.677338772 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.687174529 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.677396601 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.678415141 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.677209652 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.682177298 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.677319927 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.679643731 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.676772307 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.67879353 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.679920072 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.67858299 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.681112184 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.682161239 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.6767357 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.678531587 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.682590121 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.679740157 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.686848486 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.678679126 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.68219566 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.686893021 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.690548956 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.688187822 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.68202042 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.677902851 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.676199882 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.689507537 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.701661557 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.685373703 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.67576642 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.679017601 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.679763416 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.68409749 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.688569015 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.685042327 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.676226301 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.679830177 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.679578847 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.680480078 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.679600728 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.68821303 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.683610884 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.677469319 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.675812955 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.689070066 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.696848525 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.678625327 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.678267242 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.678103583 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.681652747 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.68089505 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.690630981 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.678268888 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.679037762 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.678196553 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.679458688 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.679143181 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.676166052 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.678857955 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.681634097 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.679479413 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.681096855 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.676669683 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.681027282 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.687642656 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.67686137 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.679114707 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.688003957 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.676266986 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.679750753 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.685483661 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.678946604 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.682684122 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.68383483 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.684492663 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.679787511 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.683632252 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.688445885 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.681206968 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.68667064 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.680472552 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.679667644 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.688404661 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.704519512 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.681401064 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.682656205 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.685790704 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.690157897 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.682606831 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.687476739 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.68114164 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.681764056 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.683589746 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.684812756 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.680570997 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.684668731 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.684286342 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.684936496 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.682290365 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.682544308 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.680196611 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.685647038 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.684341098 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.690348201 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.685316509 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.684353202 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.681668271 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.685308741 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.688082478 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.684053641 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.682886988 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.684639219 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.678173991 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.681049388 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.684363247 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.684039231 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.684738128 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.682341101 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.68387929 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.681063026 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.682646081 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.682336443 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.681509325 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.684858134 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.687757856 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.682498841 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.689112206 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.685503813 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.68092511 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.684164395 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.682986136 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.683733276 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.682183198 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.682252924 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.685015217 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.685866567 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.686026148 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.682561572 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.688442907 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.683261584 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.682840897 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.683843207 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.685969924 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.691435183 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.683799339 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.691490391 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.682356524 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.68554024 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.686014387 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.685603068 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.686664821 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.683733786 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.685885316 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.691343988 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.697747773 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.692344917 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.688275664 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.683058878 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.68452673 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.684901332 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.689199081 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.684682068 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.686598928 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.684774242 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.687160823 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.68476253 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.685384956 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.684912131 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.688380249 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.684435511 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.687347418 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.686039453 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.685071289 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.689975844 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.689950507 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.68764358 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.682274839 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.686415224 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.683446849 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.682937008 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.686654027 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.687491237 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.684895918 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.683694971 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.693518171 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.683096759 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.688717777 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.687262453 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.685038284 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.684587172 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.683832779 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.690913862 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.690192145 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.693318651 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.685996019 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.687920649 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.692102084 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.685150714 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.687280541 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.689995025 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.684487754 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.687395284 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.687673321 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.6916218 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.685247527 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.685619052 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.688205973 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.687325745 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.684806462 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.694081705 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.686586954 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.686862956 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.688293415 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.690941445 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.689964008 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.693525285 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.690585 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.689687694 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.691414995 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.684639121 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.686932966 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.691229571 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.691906583 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.688843396 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.687083938 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.685978714 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.692693988 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.690244172 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.692208777 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.691446866 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.68933103 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.689169181 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.691237353 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.689441642 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.686211067 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.697440866 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.694233883 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.693348253 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.69007177 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.686678897 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.692936903 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.68884901 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.69114464 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.687093155 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.690783978 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.688827169 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.688439449 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.689596155 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.692512212 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.689177795 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.691735764 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.688873438 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.692265459 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.688980575 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.689620627 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.690361856 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.689612091 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.688726889 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.690831064 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.690622261 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.69217662 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.69344939 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.687439552 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.694081617 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.695477624 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.691689171 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.691786804 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.688353229 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.691702418 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.687089886 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.694564925 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.689978273 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.693291543 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.696135158 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.694714515 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.697124041 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.691466162 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.695983982 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.688656962 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.690938067 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.69337183 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.690119412 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.690718318 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.692381968 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.69017153 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.698870596 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.691882918 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.695013207 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.691211137 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.691260457 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.691259949 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.693286433 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.691231439 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.693434959 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.691918886 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.702042406 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.692344224 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.696208816 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.69464464 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.691088804 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.690402105 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.690220122 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.689952361 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.694493576 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.688567662 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.689961269 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.691214299 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.68989541 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.689435669 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.691233177 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.692084235 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.69230744 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.6930949 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.696343394 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.692135946 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.694922563 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.691030264 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.700286516 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.690375803 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.697996766 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.692677963 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.692340964 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.690703888 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.691242242 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.695074242 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.691125796 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.694337572 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.692747079 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.692659101 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.695134066 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.692097606 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.692231184 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.692559474 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.693663127 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.695016989 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.701959467 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.712565606 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.691499888 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.69636596 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.690853807 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.696299755 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.694164419 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.69100641 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.690932971 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.696870205 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.70123133 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.69768993 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.693791029 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.693423897 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.694673343 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.695214205 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.691063422 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.692703892 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.691972421 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.690107184 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.693537201 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.69159686 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.6949191 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.692632173 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.690390649 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.691346314 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.690211141 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.699945356 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.69241027 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.693325832 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.690600157 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.690711038 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.6927999 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.693076447 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.6916768 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.693323828 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.690624205 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.692106534 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.697255185 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.69531592 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.693673785 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.690633589 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.69237261 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.692082774 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.692249006 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.69087082 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.690062813 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.691961099 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.692449917 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.690574594 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.692151602 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.691690864 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.690994299 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.6933905 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.692739035 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.69545848 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.69766982 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.694858342 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.690338745 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.692161887 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.690051006 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.69006965 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.692211484 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.699080084 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.697409441 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.700990684 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.698011071 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.694367134 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.694477111 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.696235221 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.700586705 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.689866067 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.692954825 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.690974524 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.694143219 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.692727797 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.698700354 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.693369913 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.702691891 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.694035815 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.693651992 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.700329928 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.6985648 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.693645836 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.69482628 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.695921977 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.693460882 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.693334572 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.694928903 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.697114247 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.701338313 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.696117493 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.693708486 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.69994376 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.693284088 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.694914684 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.696995322 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.692877881 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.695435206 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.696757405 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.697688412 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.693837531 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.693135336 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.69269971 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.695171521 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.695408862 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.697179563 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.697902395 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.693125325 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.696920302 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.694852744 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.697457946 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.695018425 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.696266534 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.693602564 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.695472855 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.694368283 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.697250343 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.694993446 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.698410849 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.694645636 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.69621086 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.696043762 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.69538457 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.696500356 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.702633971 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.69931438 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.693563375 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.698542412 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.697554529 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.699190157 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.694588474 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.695502835 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.696632407 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.700723478 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.699787502 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.69499336 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.695797279 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.697986598 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.710956256 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.69703776 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.697382759 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.697642674 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.69970932 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.694265985 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.694332593 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.696474322 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.698122593 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.698182401 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.700442672 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.695590647 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.702297868 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.69707536 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.69573761 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.697933047 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.700260469 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.703147199 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.698209787 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.694977396 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.695794663 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.699819019 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.70854199 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.694837914 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.703801281 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.722316098 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.696660218 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.698191033 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.695807073 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.697502463 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.698034652 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.698070638 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.695922322 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.696163502 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.695096451 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.696808975 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.695889831 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.70308598 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.698744057 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.696903986 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.696151718 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.69767855 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.697415769 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.697305623 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.697891054 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.69763108 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.696543865 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.697023947 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.698082923 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.702590801 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.709126932 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.705236241 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.69800699 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.697485091 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.696565895 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.700603894 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.698048513 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.707192661 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.703779283 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.697229366 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.697391357 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.699855123 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.696681577 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.698049723 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.700150064 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.69914279 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.699621436 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.697627473 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.708500357 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.70327362 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.702454324 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.698621869 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.696695763 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.696619039 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.700065311 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.69665592 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.698129805 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.701539409 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.697322939 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.700471013 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.697662684 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.697689138 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.700875216 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.704010039 seconds)
  done (took 1008.847215478 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.696841897 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.698657834 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.697653355 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.69697681 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.698759774 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.699075674 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.697629083 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.698480664 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.698152784 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.697819791 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.698886102 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.700839205 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.698703306 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.699594636 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.699468081 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.698914361 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.697843633 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.699332552 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.698985304 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.69954156 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.698432774 seconds)
  done (took 37.308412207 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.699125758 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.698696832 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.698714891 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.699048309 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.69865075 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.698593389 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.700280486 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.698452191 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.698539016 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.699304181 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.699600663 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.698285845 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.699904003 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.699352946 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.698861305 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.699237485 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.699826206 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.699917901 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.699976748 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.699776533 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.698463835 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.699938493 seconds)
  done (took 39.020173459 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.699532327 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.698754262 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.700553241 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.700597305 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.698210625 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.698273962 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.699240211 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.6989555 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.699900381 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.70064291 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.699802669 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.701213455 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.70481092 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.705136996 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.702546415 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.699911027 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.846908926 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.700252138 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.701206383 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.701173339 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.699971559 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.707008263 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.700778714 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.702072573 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.701381247 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.701332789 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.699603885 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.701232139 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.700802864 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.702249242 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.703394022 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.700234729 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.702329044 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.702667655 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.703317025 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.702057663 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.704475368 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.701854842 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.701312356 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.700767957 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.709907337 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.718927586 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.702756983 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.708278744 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.701564205 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.701576763 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.704036709 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.707594451 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.702155215 seconds)
  done (took 85.193093874 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.701764057 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.700147398 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.702392855 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.701501099 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.702081624 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.701272842 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.700921156 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.702041335 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.701492852 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.701386631 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.702685594 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.702542791 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.702511766 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.702344222 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.702332422 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.701657888 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.703400189 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.702215733 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.702204471 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.702363701 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.702597898 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.702477026 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.703823456 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.704042216 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.702625629 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.703674969 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.703223682 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.703716936 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.702622546 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.703076768 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.703756098 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.703618656 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.703890909 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.70329981 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.703878999 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.702760785 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.703270629 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.703229297 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.703189837 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.705689384 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.703177816 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.702782816 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.703465227 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.703669514 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.703495625 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.706063329 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.704988667 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.704470823 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.704920541 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.705163288 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.705620733 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.706919219 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.704601174 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.705261991 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.705926559 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.705448239 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.706784063 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.707010615 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.705673375 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.705602701 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.706781462 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.704282554 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.705258772 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.704797015 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.704833069 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.70557508 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.705003412 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.704728604 seconds)
  done (took 117.491919771 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.706769235 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.705360594 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.705042184 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.705067155 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.70481473 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.705516342 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.705712174 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.705710235 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.705295789 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.706461295 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.706272868 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.706520017 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.705096432 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.705261398 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.705472163 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.705211016 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.705412014 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.707083458 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.706414233 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.706136021 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.704686182 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.706660087 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.705431151 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.708302502 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.705541554 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.706288107 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.706503049 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.707075154 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.706054484 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.7096837 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.708435128 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.706695615 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.706493563 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.707329065 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.70702663 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.710263824 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.706256686 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.707996415 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.706662387 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.708166646 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.706716883 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.709721055 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.707507484 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.707085807 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.706617593 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.707018951 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.708498096 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.710397697 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.708555396 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.707851335 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.708348166 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.709889935 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.710102409 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.707828595 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.707608728 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.708080839 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.708408644 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.707499751 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.71002389 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.707580667 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.707477113 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.707272185 seconds)
  done (took 107.481188364 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.706954048 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.709578509 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.707576037 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.707166345 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.708207213 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.707346884 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.7074489 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.708860178 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.706988747 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.707435885 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.708119827 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.708231721 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.709356728 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.709715629 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.70921986 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.709593071 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.707654585 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.708135968 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.708504869 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.709865415 seconds)
  done (took 35.81175108 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.707483882 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.709630257 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.708528195 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.709976723 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.7091756 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.709025644 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.709524083 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.708351815 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.709343487 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.710086787 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.709803094 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.708741153 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.708528802 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.709581339 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.71157212 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.710210029 seconds)
  done (took 28.996845108 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.70959783 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.710952899 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.709754587 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.709082201 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.710218995 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.710039992 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.708693439 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.710797378 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.710172068 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.710516505 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.71099396 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.711045812 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.710888748 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.71012161 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.710890158 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.70941078 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.710070636 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.709870938 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.710911179 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.710049177 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.710135211 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.710577255 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.710720994 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.710344927 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.709635764 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.710786869 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.710089666 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.711012867 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.71130138 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.71066476 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.711053744 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.710554388 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.710644883 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.71219843 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.711621794 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.711885768 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.710872887 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.711669963 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.711993895 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.714225385 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.711204504 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.711682833 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.710720245 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.710505846 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.710611216 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.713012123 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.710411775 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.711648855 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.711619816 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.711372031 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.710512268 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.714104099 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.712021983 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.711188677 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.711570855 seconds)
  done (took 95.748104408 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.71206937 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.712998349 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.712964291 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.71190421 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.711812729 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.712378109 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.71114116 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.714469406 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.712046198 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.712619574 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.711946456 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.711570269 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.714160516 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.713461463 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.712774641 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.713306213 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.713108756 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.713475299 seconds)
  done (took 32.479690131 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.714131993 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.712915845 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.711809912 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.712207739 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.712389569 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.715515391 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.712243324 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.711649087 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.712285844 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.711967609 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.712994475 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.717292021 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.713815176 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.712199375 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.714565727 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.71314344 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.713126546 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.714668494 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.71474052 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.715991835 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.715421664 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.715640019 seconds)
  done (took 39.354598656 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.715064003 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.714740261 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.727979783 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.732043932 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.733720545 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.742375215 seconds)
  done (took 12.015825924 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.715894867 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.714381073 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.715346109 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.717070759 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.71646164 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.715936042 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.713813463 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.716765292 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.716501772 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.717837943 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.719202394 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.714499796 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.715348729 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.717847204 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.715996536 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.717314072 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.719581124 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.71636064 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.71617465 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.717915254 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.71819113 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.71788654 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.720388138 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.718456679 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.71684069 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.717047149 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.717071243 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.716831993 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.718764251 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.718325061 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.717484791 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.719510438 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.719183978 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.719501006 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.721202862 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.718951253 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.717385029 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.716054378 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.715875623 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.718856909 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.716536913 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.717504448 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.715863744 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.717470318 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.718055065 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.721382351 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.71887669 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.717746554 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.716680126 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.718946223 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.71780362 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.720162489 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.718328332 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.717496506 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.717393141 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.717582404 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.717776508 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.718383891 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.718831324 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.71981556 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.718784234 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.720368091 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.72020854 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.720984091 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.721091913 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.718954825 seconds)
  done (took 115.032492525 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.718250927 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.721136975 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.71891059 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.717345329 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.720634353 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.721232194 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.722067344 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.719473679 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.716353103 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.718730917 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.718757748 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.720256388 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.718869705 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.72051537 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.717188314 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.719437623 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.716781551 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.717986686 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.719870657 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.718799129 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.7180242 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.720135803 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.719353167 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.719317311 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.718753874 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.718605518 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.71891498 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.720233879 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.719572405 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.718370883 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.719980634 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.722768311 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.720120806 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.720486631 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.720449464 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.720041247 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.72150051 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.719206278 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.718893829 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.718794775 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.720765296 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.721211077 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.723786753 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.721471872 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.720315742 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.722477599 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.722688236 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.72164681 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.722459115 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.721079749 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.720085214 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.723415647 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.721789131 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.722326229 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.723562437 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.720839692 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.721898879 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.720285181 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.720852576 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.721743146 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.722564404 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.720314827 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.722147373 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.720983371 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.721249657 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.724627877 seconds)
  done (took 115.198145656 seconds)
done (took 2352.935021683 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.73475141 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.822568467 seconds)
  done (took 15.213334704 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.886054557 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.837254242 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.725999296 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.760039307 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.722625215 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.722142439 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.748978002 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.723538367 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.724716815 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.724540539 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.723834609 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.906896588 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.781182112 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.725158426 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.723290289 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.817578556 seconds)
  done (took 49.915546369 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.728713614 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.726916855 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.733342509 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.730038037 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.725430163 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.737083169 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.758210722 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.73212535 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.758173166 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.732444783 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.793319399 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.734201762 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.727917286 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.776565172 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.735602117 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.741694973 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.8197959 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.795583275 seconds)
  done (took 33.142571972 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.801624156 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.728722895 seconds)
  done (took 10.194334146 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.731455565 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.778712275 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.74894387 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.744902678 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.72389744 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.737751464 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.746123047 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.746775803 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.747271415 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.7549347 seconds)
  done (took 69.122075929 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.734610078 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.73161844 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.731420386 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.727819412 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.725738256 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.730877297 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.729056185 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.731632588 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.371583274 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.764572776 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.735096249 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.733854587 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.72967904 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.732238672 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.728397294 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.752925891 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.846250002 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.729769644 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.728591948 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.735825841 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.732981537 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.783012275 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.741756381 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.731145279 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.759793429 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.373298095 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.7414283 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.737594822 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.861921859 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.727113294 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.729392168 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.916278315 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.733819604 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.20058009 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.997229359 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.732923087 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.741212392 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.736608839 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.731010566 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.846534626 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.73315264 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.736692193 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.621474721 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.974160946 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.819806406 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.773328407 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.034333383 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.743176875 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.731087675 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.760801678 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.731206505 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.732787086 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.745423211 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.236359998 seconds)
  done (took 125.0263974 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.728682816 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.073700695 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.895873633 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.729409665 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.011223336 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.931620354 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.729931843 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.773174059 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.730738271 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.954843607 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.982276492 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.827793931 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.730376469 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.728603683 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.731524541 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.731346747 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.879862567 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.795597561 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.731368312 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.727990093 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.756526896 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.969056863 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.850402432 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.731445134 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.752829946 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.934051244 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.850178919 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.82847129 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.511195354 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.728980549 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.790304928 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.731377665 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.728716316 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.729247895 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.882676041 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.820035066 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.813123799 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.729942314 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.72742306 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.729353868 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.387713099 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.927196404 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.821385584 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.856519846 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.978041703 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.930922371 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.507986966 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.72983454 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.466444605 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.891441933 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.95624934 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.957560346 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.849404884 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.730264221 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.064892414 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.729702506 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.731368704 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.978196123 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.950063647 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.824325335 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.731482819 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.729426369 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.732232165 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.967172193 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.732359989 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.824651507 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.733559209 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.734321475 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.82547856 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.824909243 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.960782258 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.942608243 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.760947112 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.071273359 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.240710582 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.974665742 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.796509684 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.979231649 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.733670121 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.731173955 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.810417796 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.570473325 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.98252292 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.971269021 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.974405837 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.766061212 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.452200267 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.732228694 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.956318336 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.950808832 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.996849308 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.977904135 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.966197048 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.065020095 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.731445333 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.732896389 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.975340014 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.854374289 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.734180528 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.071588093 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.960311446 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.256248001 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.757730151 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.031358504 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.861206387 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.734217522 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.358964782 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.732037366 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.960519823 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.77141452 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.733559666 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.734334021 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.949789013 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.734593496 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.732476579 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.378505075 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.791566072 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.73491475 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.963784547 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.734356899 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.998770622 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.733405044 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.964550674 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.208523819 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.76370807 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.906445121 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.977071287 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.736427252 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.974007827 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.97441475 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.846228134 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.951856462 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.439296539 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.73524277 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.018363713 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.736436042 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.735195111 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.904436718 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.73706592 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.874595328 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.736829107 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.022530315 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.752621707 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.962849761 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.737739272 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.984464454 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.763543789 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.784877872 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.736420648 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.857683979 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.738096825 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.652222005 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.889987837 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.738586686 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.736147231 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.283871935 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.738525142 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.882227624 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.958893113 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.755103624 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.806219206 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.398751016 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.73610649 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.815362116 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.75805611 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.123732667 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.738318852 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.984853601 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.737855232 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 7.150275184 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.735079069 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.966721102 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.921859256 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.737080827 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.736149661 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.641115968 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.735797239 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.736262167 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.915787888 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.193091277 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.736669211 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.938165789 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.740878463 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.862366984 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.740628032 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.813820268 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.067348185 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.735503597 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.734325245 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.735540459 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.737963198 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.736489746 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.943540327 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.759486082 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.226979252 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.869874282 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.007592087 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.04288601 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.974643933 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.778114935 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.740541775 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.989006869 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.739291074 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.797756074 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.738465255 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.756463693 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.963563256 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.739135246 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.944415919 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.004184221 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.588480712 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.78358029 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.738140262 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.738776867 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.737697082 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.880026192 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.817785123 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.740222874 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.736916566 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.851086333 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.85665798 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.945315302 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.742898313 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.790344071 seconds)
  done (took 872.22046875 seconds)
done (took 1176.492335686 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.737979406 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.738346414 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.742054481 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.743001367 seconds)
  done (took 28.637190851 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.741810752 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.740377429 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.741046546 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.741353853 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.740248674 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.740510426 seconds)
  done (took 12.119637133 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.756473373 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.738481263 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.740163984 seconds)
  done (took 20.90903593 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.810708087 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.117004528 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.872438264 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.145924664 seconds)
  done (took 9.621476537 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.738816712 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.740167199 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.740009225 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.740139582 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.741637415 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.742170509 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.74069304 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.738193328 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.742080136 seconds)
  done (took 17.339865701 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.803599642 seconds)
done (took 94.105249451 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.817963808 seconds)
    (2/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.813265761 seconds)
    (3/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.881803545 seconds)
    (4/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.100613308 seconds)
    (5/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.057194592 seconds)
    (6/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.0974912 seconds)
    (7/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.854191229 seconds)
    (8/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.212372984 seconds)
    (9/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.756051506 seconds)
    (10/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.838128682 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.82972584 seconds)
    (12/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.748726536 seconds)
    (13/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 4.216719904 seconds)
    (14/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.772663215 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.076033242 seconds)
    (16/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.941322933 seconds)
    (17/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.303011461 seconds)
    (18/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.926377086 seconds)
    (19/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.772056918 seconds)
    (20/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.026363572 seconds)
    (21/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.943187406 seconds)
    (22/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.90145977 seconds)
    (23/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.834428984 seconds)
    (24/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.752614635 seconds)
    (25/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.852177246 seconds)
    (26/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.8519789 seconds)
    (27/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.751244473 seconds)
    (28/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.248689315 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.854479322 seconds)
    (30/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.772302059 seconds)
    (31/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.852989564 seconds)
    (32/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.938896919 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.88281342 seconds)
    (34/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.750437695 seconds)
    (35/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.624866027 seconds)
    (36/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.842145992 seconds)
    (37/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.855458461 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.372427545 seconds)
    (39/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.939502969 seconds)
    (40/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.244930271 seconds)
    (41/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.840894552 seconds)
    (42/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.066868034 seconds)
    (43/309) benchmarking ("sort", Bool, false)...
    done (took 1.976285574 seconds)
    (44/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.948727692 seconds)
    (45/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.939919301 seconds)
    (46/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.500060062 seconds)
    (47/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.865573755 seconds)
    (48/309) benchmarking ("sort", Int64, false)...
    done (took 5.480495457 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.996519877 seconds)
    (50/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.834750907 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.001884992 seconds)
    (52/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.908230355 seconds)
    (53/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.774506273 seconds)
    (54/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.125553268 seconds)
    (55/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.755302619 seconds)
    (56/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 7.017210169 seconds)
    (57/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.964844743 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.839429774 seconds)
    (59/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.931810721 seconds)
    (60/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.144461324 seconds)
    (61/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.756706023 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.536422743 seconds)
    (63/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.127455246 seconds)
    (64/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.891497093 seconds)
    (65/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.000861699 seconds)
    (66/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.772768372 seconds)
    (67/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.8558949 seconds)
    (68/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.08693814 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.884849523 seconds)
    (70/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.751600295 seconds)
    (71/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.223314229 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.875892814 seconds)
    (73/309) benchmarking ("sort", BigInt, false)...
    done (took 6.763130109 seconds)
    (74/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.89146208 seconds)
    (75/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.76676414 seconds)
    (76/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.591951565 seconds)
    (77/309) benchmarking ("sort", Float32, false)...
    done (took 5.503395525 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.760716538 seconds)
    (79/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.479851864 seconds)
    (80/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.756544038 seconds)
    (81/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.911480197 seconds)
    (82/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.007479154 seconds)
    (83/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.851631013 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.851802559 seconds)
    (85/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.991954956 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.430731135 seconds)
    (87/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.768791627 seconds)
    (88/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.59169353 seconds)
    (89/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.261283498 seconds)
    (90/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.838428949 seconds)
    (91/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.754071369 seconds)
    (92/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 5.352774479 seconds)
    (93/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.973894607 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.389367689 seconds)
    (95/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.075089204 seconds)
    (96/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.778134722 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.725913602 seconds)
    (98/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.759687426 seconds)
    (99/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.818062483 seconds)
    (100/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.756177177 seconds)
    (101/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.842328064 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.900746941 seconds)
    (103/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.776060322 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.724286833 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.382851788 seconds)
    (106/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.763181476 seconds)
    (107/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.844918669 seconds)
    (108/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.75578838 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.504225836 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.969165106 seconds)
    (111/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.752444696 seconds)
    (112/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.919444444 seconds)
    (113/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.777949158 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.541971985 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.077043453 seconds)
    (116/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.840662161 seconds)
    (117/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.755246227 seconds)
    (118/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.672776061 seconds)
    (119/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.760468829 seconds)
    (120/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.956013551 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.109184673 seconds)
    (122/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.790164248 seconds)
    (123/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.77948662 seconds)
    (124/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.753735436 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.795782261 seconds)
    (126/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.87536973 seconds)
    (127/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.790386401 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.145041987 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.050202615 seconds)
    (130/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.759675558 seconds)
    (131/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.177436222 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.763696408 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.339748323 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.016694555 seconds)
    (135/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.502020744 seconds)
    (136/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.835095595 seconds)
    (137/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.869417836 seconds)
    (138/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.760697619 seconds)
    (139/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.844746845 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.216227029 seconds)
    (141/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.885435169 seconds)
    (142/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.758134944 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.005270808 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.152091481 seconds)
    (145/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.05740342 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.760618892 seconds)
    (147/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.818061202 seconds)
    (148/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.883175258 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.106685261 seconds)
    (150/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.760655351 seconds)
    (151/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 3.311702033 seconds)
    (152/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.854987989 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.068224213 seconds)
    (154/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.839087729 seconds)
    (155/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.774438629 seconds)
    (156/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.859519354 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.895729469 seconds)
    (158/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.857419148 seconds)
    (159/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.761882292 seconds)
    (160/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.903395221 seconds)
    (161/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.961309814 seconds)
    (162/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.128469312 seconds)
    (163/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.872774046 seconds)
    (164/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.760465812 seconds)
    (165/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.15802149 seconds)
    (166/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.764676973 seconds)
    (167/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.196368112 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.120114233 seconds)
    (169/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.761333238 seconds)
    (170/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.767629726 seconds)
    (171/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.759214967 seconds)
    (172/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.972898846 seconds)
    (173/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.069418532 seconds)
    (174/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.784706454 seconds)
    (175/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.10076912 seconds)
    (176/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.764192859 seconds)
    (177/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.888100128 seconds)
    (178/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.75915681 seconds)
    (179/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.771289142 seconds)
    (180/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.892138988 seconds)
    (181/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.085447522 seconds)
    (182/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.774758847 seconds)
    (183/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.978134685 seconds)
    (184/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.919473289 seconds)
    (185/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.089209527 seconds)
    (186/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.161612122 seconds)
    (187/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.782298222 seconds)
    (188/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.006136105 seconds)
    (189/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.912126533 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.079084902 seconds)
    (191/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.765671051 seconds)
    (192/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.718007215 seconds)
    (193/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.995851802 seconds)
    (194/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.21898486 seconds)
    (195/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.903938267 seconds)
    (196/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.652870031 seconds)
    (197/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.835387334 seconds)
    (198/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.99204798 seconds)
    (199/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.804577504 seconds)
    (200/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.843568786 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.159765271 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.443888879 seconds)
    (203/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.996165323 seconds)
    (204/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.865871015 seconds)
    (205/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.461204544 seconds)
    (206/309) benchmarking ("sort", Float64, false)...
    done (took 5.501908759 seconds)
    (207/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.945938233 seconds)
    (208/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.060279669 seconds)
    (209/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.414304397 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.956515952 seconds)
    (211/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.761228504 seconds)
    (212/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.938071861 seconds)
    (213/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.009712127 seconds)
    (214/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.921271953 seconds)
    (215/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.143497966 seconds)
    (216/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.790738853 seconds)
    (217/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.75985262 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 3.22351341 seconds)
    (219/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.813717999 seconds)
    (220/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.916920172 seconds)
    (221/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.938456006 seconds)
    (222/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.087447967 seconds)
    (223/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.771654401 seconds)
    (224/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.926023685 seconds)
    (225/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.766028895 seconds)
    (226/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 3.356866571 seconds)
    (227/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.791340633 seconds)
    (228/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 3.430899497 seconds)
    (229/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.951334471 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.716792071 seconds)
    (231/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.829449889 seconds)
    (232/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.006200125 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.701778192 seconds)
    (234/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.793369457 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.786529307 seconds)
    (236/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.961499359 seconds)
    (237/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.224662214 seconds)
    (238/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.935910116 seconds)
    (239/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.266006223 seconds)
    (240/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.960233289 seconds)
    (241/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.847964296 seconds)
    (242/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.857737025 seconds)
    (243/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.761176865 seconds)
    (244/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 3.691369457 seconds)
    (245/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.162040047 seconds)
    (246/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.209743136 seconds)
    (247/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.883062932 seconds)
    (248/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.764829996 seconds)
    (249/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.963759103 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.773702111 seconds)
    (251/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.918635296 seconds)
    (252/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.762394478 seconds)
    (253/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 3.247333241 seconds)
    (254/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.317646048 seconds)
    (255/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.843574562 seconds)
    (256/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.768350603 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.970428288 seconds)
    (258/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.128082418 seconds)
    (259/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.76959549 seconds)
    (260/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.221323176 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.713392779 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.112022668 seconds)
    (263/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.793920806 seconds)
    (264/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.86196186 seconds)
    (265/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.780049521 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.765436379 seconds)
    (267/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.166336231 seconds)
    (268/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.623221036 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.44412736 seconds)
    (270/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.851569272 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.090929447 seconds)
    (272/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.765309098 seconds)
    (273/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.952765581 seconds)
    (274/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.863100102 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.713141557 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.769958493 seconds)
    (277/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.90688345 seconds)
    (278/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.683614921 seconds)
    (279/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.764981543 seconds)
    (280/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.768253151 seconds)
    (281/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.78887196 seconds)
    (282/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.092458194 seconds)
    (283/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.555379669 seconds)
    (284/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.763837745 seconds)
    (285/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.782761689 seconds)
    (286/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.76074265 seconds)
    (287/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.869878096 seconds)
    (288/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.770734272 seconds)
    (289/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.764746616 seconds)
    (290/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.770103268 seconds)
    (291/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.890141863 seconds)
    (292/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.76530642 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.901815606 seconds)
    (294/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.004504433 seconds)
    (295/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.781031842 seconds)
    (296/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.761745535 seconds)
    (297/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 3.285858605 seconds)
    (298/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.785231971 seconds)
    (299/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.766068809 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.721199079 seconds)
    (301/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.631500521 seconds)
    (302/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.063609117 seconds)
    (303/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.945582894 seconds)
    (304/309) benchmarking ("sort", Int8, false)...
    done (took 4.666788133 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.979540123 seconds)
    (306/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.850670921 seconds)
    (307/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.781808778 seconds)
    (308/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.028807047 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.902190151 seconds)
  done (took 972.651681229 seconds)
done (took 974.606986615 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.790024471 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.786115499 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.768166574 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.788290609 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.880000176 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.815447443 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.783413975 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.77304441 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.816294583 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.817959369 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.765662633 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.812909796 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.770219854 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.769371815 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.767741224 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.784103145 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.078674995 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.801972968 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.785788757 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.779289622 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.785886124 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.767155964 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.81846024 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.813036597 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.774511216 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.774251645 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.771943672 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.78832761 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.882457196 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.771951449 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.774422913 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.782099802 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.079418267 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.80106221 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.768758601 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.790407741 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.78445239 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.781962744 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.773855061 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.80291768 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.1655555 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.813398695 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.768364103 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.771153539 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.770360414 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.777499036 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.770614246 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.780159301 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.785454817 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.787375615 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.159151789 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.829081821 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.774213077 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.771462596 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.78347496 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.772130438 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.776541426 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.786971726 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.791588607 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.785425251 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.067028309 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.811204517 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.774157391 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.788850828 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.781859076 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.196215 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.814032225 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.779016794 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.166669363 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.82481668 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.192900816 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.826445011 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.775839196 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.787543495 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.803929837 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.081493322 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.802266288 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.768593933 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.781083824 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.770608063 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.78332073 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.787671012 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.777294521 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.771731082 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.786475961 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.817454975 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.783714288 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.774062787 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.784172395 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.792189009 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.782533262 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.785679261 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.775397337 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.771153358 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.785242669 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.775995439 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.777506679 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.777053109 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.77663278 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.786678095 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.165650187 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.834892205 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.771337331 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.770233212 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.772767022 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.787674539 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.164068647 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.818928216 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.796855493 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.823107618 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.775455193 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.067782828 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.809247905 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.791305093 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.784733876 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.775405933 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.772706676 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.066762397 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.196303709 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.834172134 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.775732182 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.772924724 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.791862626 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.775670471 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.77187547 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.082874854 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.808790366 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.791996828 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.897427645 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.787786332 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.807965702 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.773306078 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.777509387 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.82258845 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.791444879 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.805527496 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.7772912 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.791060002 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.79360153 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.771370316 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.787663286 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.78879882 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.776314969 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.782983029 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.772493534 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.824501711 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.788993571 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.78951498 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.796941021 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.897567576 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.772423742 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.068124268 seconds)
done (took 279.188698645 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.85431888 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.772865948 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.866285714 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.773541469 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.864540814 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.850369291 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.775517333 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.772369469 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.772528472 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.282243493 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.7715051 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.778975512 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.771862244 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.772862026 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.847119074 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.774474676 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.773573726 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.222360148 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.774457788 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.859139839 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.773347516 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.774671745 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.775724372 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.262385744 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.775156063 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.774335409 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.855912718 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.773575264 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.215205005 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.773357207 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.774619642 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.216978228 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.856218123 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.801765008 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.780898314 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.782909803 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.868571275 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.784598859 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.847092128 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.847338642 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.869937469 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.809908765 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.774388336 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.77375299 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.777429742 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.775565566 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.773915547 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.803547975 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.776366068 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.779495604 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.222942717 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.784743503 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.780629355 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.775893513 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.777458518 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.804496689 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.775339992 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.77639609 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.859621543 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.776376434 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.848620219 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.269293747 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.283605913 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.77631031 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.777572918 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.776882935 seconds)
  done (took 178.935267626 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.842852332 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.852266035 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.841967591 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.780318786 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.825238521 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.844519162 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.782694058 seconds)
  done (took 14.481956546 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.782760216 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.777985257 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.826924286 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.825977926 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.776355826 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.931798792 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.775444434 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.791779113 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.782066442 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.804043651 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.778791048 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.776641371 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.783559999 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.77843099 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.826534628 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.789127843 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.892574394 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.779482798 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.776590264 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.924202276 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.782040354 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.782861342 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.802794066 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.788460307 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.777692698 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.784733028 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.344096544 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.778764795 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.776544147 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.777138239 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.775865947 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.8185997 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.777124814 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.77725627 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.778192247 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.892320667 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.777687481 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.778131797 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.778108051 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.779365143 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.779611559 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.778073156 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.778029018 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.777256478 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.777311788 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.801199674 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.777839745 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.777077453 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.778029005 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.779794305 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.805910545 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.779563244 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.780414719 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.7831927 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.821435386 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.786829766 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.779215626 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.780129714 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.778345988 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.778792114 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.926021278 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.828550109 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.778657874 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.829198714 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.778081229 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.779362979 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.779400709 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.779763982 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.868803714 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.778639549 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.828205717 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.779338798 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.938393918 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.802388458 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.780588054 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.783461513 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.782241091 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.780547089 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.778270876 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.787861134 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.780205749 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.783899294 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.787158263 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.78783918 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.779819244 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.894746716 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.920041849 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.781078739 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.783290193 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.787406313 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.780148005 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.8234647 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.781603517 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.780462655 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.834873057 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.894909277 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.809057384 seconds)
  done (took 196.860361514 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.788116592 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.789197654 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.783000588 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.797078963 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.784013836 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.781553848 seconds)
  done (took 12.438311569 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.783747009 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.785428595 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.781796854 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.780728364 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.781588756 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.781686033 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.78075975 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.78371172 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.784361971 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.781198692 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.781293894 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.782410605 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.783697452 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.781438368 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.781340753 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.780389243 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.78212945 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.780712997 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.782593424 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.78182993 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.033388961 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.782364172 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.782275213 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.785615948 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.786953438 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.782222438 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.797515553 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.781170593 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.783050364 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.791090594 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.786932002 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.782760161 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.787914283 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.789227959 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.786833245 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.786876449 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.786576592 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.78456212 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.78244078 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.782317416 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.783738653 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.782612217 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.784354057 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.786093226 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.786341322 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.791347611 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.788749725 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.796864421 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.783665658 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.787268465 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.785236934 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.782940972 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.784808197 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.786390953 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.788629453 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.791197091 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.788974772 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.782468284 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.783890283 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.787542544 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.788829123 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.785597468 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.785726084 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.787654954 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.789653006 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.786319985 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.78873933 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.786572511 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.783368483 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.78367855 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.785405536 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.783718883 seconds)
  done (took 131.492274987 seconds)
done (took 535.933971956 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.054395013 seconds)
  done (took 8.77180359 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.975506168 seconds)
  done (took 8.752969462 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.320266547 seconds)
  done (took 10.043613522 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.797535944 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.812056351 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.798239194 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.794323188 seconds)
  done (took 28.948973591 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.974364626 seconds)
  done (took 8.697348931 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.808180355 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.783841235 seconds)
  done (took 15.380109537 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.864445283 seconds)
  done (took 8.585651871 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.081029639 seconds)
  done (took 8.805872315 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.786118909 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.798416065 seconds)
  done (took 15.326439995 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.78545682 seconds)
  done (took 8.501819534 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.987766598 seconds)
  done (took 9.80382473 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.807713249 seconds)
  done (took 8.597119769 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.802171143 seconds)
  done (took 8.520545308 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.888462989 seconds)
  done (took 8.606854609 seconds)
done (took 159.059861908 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.786877848 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.784467613 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.784735997 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.783361481 seconds)
  done (took 28.859111103 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.834717188 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.815527356 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.818839704 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.827300304 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.819259335 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.814925531 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.809299537 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.809521764 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.827682012 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.817929714 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.818348362 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.818902062 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.817919286 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.80935646 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.819021113 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.819292343 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.826947251 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.817477129 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.809306065 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.819675452 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.784574045 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.827975169 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.820518495 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.784789495 seconds)
  done (took 45.306925429 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.975125365 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.855963673 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.939202142 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.837481991 seconds)
  done (took 9.327138619 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.834486151 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.836174271 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.84876994 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.88811705 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.911170681 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.847461421 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.809448434 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.80606823 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.792491874 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.838545735 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.914620581 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.834511256 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.924283248 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.787553469 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.962994743 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.785136822 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.787000251 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.838109673 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.8890276 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.902713875 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.785212158 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.836556963 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.840363745 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.83360203 seconds)
  done (took 46.054029673 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.786443683 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.794612771 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.792538366 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.787147856 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.787654659 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.787352499 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.794026756 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.787800828 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.807889656 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.788485987 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.787083747 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.787469321 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.79363638 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.786506175 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.78657586 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.800302342 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.802363386 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.78696535 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.790703342 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.795264497 seconds)
  done (took 37.551492564 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.786064446 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.632460021 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.129701774 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.037768921 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.786251314 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.786317421 seconds)
  done (took 30.879976502 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.800273437 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.793136416 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.788287425 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.845231446 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.928579545 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.796419721 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.788408082 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.798991313 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.83707262 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.854738112 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.814210479 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.816515083 seconds)
  done (took 23.584732742 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.788622021 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.789807531 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.788959962 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.802126915 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.798203627 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.794154398 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.795347935 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.786457051 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.800315385 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.806103004 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.794034912 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.798672197 seconds)
  done (took 43.2672963 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.863859223 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.660919389 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.230533585 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.245697886 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.310020567 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.989633686 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.787551285 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.874814798 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.787828447 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.057180563 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.113185002 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989081516 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.031101861 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.567033903 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.791236107 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.254700677 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.078297582 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.997638996 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.815601654 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.385773537 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890251325 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.354994519 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.441894994 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.893398493 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.990291004 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.90838936 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.045667444 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.7380627 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.834653518 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.790576373 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.792725653 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.787799132 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.059245101 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909913528 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.858023156 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.793490104 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.203188549 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.493244597 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.799064908 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.471752764 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.288961501 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.906258563 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.790973001 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.788590371 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.715556096 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.343761127 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.876257879 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.790812334 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.489702609 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.789072743 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.79360881 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.863262856 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.789688845 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.596028029 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.472871997 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.056835449 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.788482897 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.791244754 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.340451375 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.772486757 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.445830711 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.721873272 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.883268086 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.447792596 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.245928678 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.942517713 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.791015353 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.791276447 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.71675824 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.448753412 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.89931455 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.929533902 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.80752159 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.430115822 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.079265069 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.166934515 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.840094913 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0572556 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.621874801 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.721544952 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.006542448 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.73447107 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.717889795 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.626698628 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.716734843 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.997846353 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.82255305 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.389188704 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.826180758 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.873772461 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.796128005 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.806723845 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.79401766 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.005433058 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.683580735 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.792155854 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.036916677 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.04156282 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.808416645 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.875814788 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.718340027 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.79289037 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.035591854 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.994181037 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.075454124 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.259011087 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.879825777 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.64468725 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.916401252 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.767771893 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.796814885 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.059115932 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.853463012 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.787217467 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907092492 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.742598939 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032597031 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.669957387 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.002181024 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.108687788 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.026115711 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.120464203 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.039077579 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.854138463 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.79678105 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.792680762 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.45330187 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.399413728 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.00899485 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.804513857 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.324038549 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.797604705 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.794044178 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.73001754 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.416266982 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.112718095 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.872619514 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.006211372 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.784900621 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.06582074 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.719469118 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.929692984 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.789675488 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.007270888 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.429837085 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.872196148 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.042495621 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.954558226 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.083870354 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.936672281 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.809053536 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.887701539 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.812447197 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.126935436 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.165555609 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.795110045 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.79535415 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.448487017 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.850674225 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.796012972 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.798166643 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.320182233 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.067458616 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.821142657 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.796687791 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.671788531 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.806473145 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.856754522 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.798285122 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.798700642 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.313685602 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.301451718 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.802188596 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.43982409 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.012940752 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.800215135 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.438394166 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.977608882 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.808234164 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.063244952 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.860667641 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.722460971 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.497176458 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.495650559 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.79491575 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.723226489 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.797047188 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.797642632 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.79902885 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.984725679 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.0671233 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.84654762 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.383195317 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.900284854 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.802649681 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.798377559 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.797837962 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.313248441 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.775342224 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.322009378 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.915268496 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.925040719 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.806434787 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.721793655 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.797049431 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.798001822 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.795150434 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.74384293 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.842045681 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.395527359 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.998197064 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.044913047 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.200753645 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.803884203 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.414213313 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.910874323 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.809151996 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.048730701 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.350422818 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.898664232 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875283593 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.802180507 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.402636597 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.525110233 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.349601795 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.098285673 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.106836039 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.137166498 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.204059777 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.122392573 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.882820528 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.022974245 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.319398439 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.851704642 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.885916101 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.735830836 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.809985244 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.444477851 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.146143389 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.809029708 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.013212461 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.077202889 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.116364986 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.927506863 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.001556874 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.827858325 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.640561389 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.829309941 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.334049498 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.815126542 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.201859991 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.998521008 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.881353815 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.054555245 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.874836247 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.799252402 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.131738322 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.838534729 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.500577234 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.150926541 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.224625125 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.234608675 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.019902668 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.808914623 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.239985563 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.141305009 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.024302922 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.922911397 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.726790355 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.808259838 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.80456319 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.811233081 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.771109682 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.644190188 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.043139211 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.803418448 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.024010962 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.954124527 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.16258391 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.703514046 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.802596969 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.799816694 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040570525 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.50645307 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958844921 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.134630081 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.374284044 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.812858687 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.726968402 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.725816435 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.500319693 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.805826924 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.768554669 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.00247491 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.897875439 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.475669968 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.211280064 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.109998651 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.04062565 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.807124467 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.065539303 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.069200335 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.288238758 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.817806076 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.891879085 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.036475011 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.54486807 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.014561686 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.029251017 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.327688917 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.016953315 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.249714969 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.773075837 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.799266172 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.005660366 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.013320032 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.111190704 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972089323 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.510403683 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.807026071 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.168055218 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861192417 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.133213321 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.986632554 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.887353451 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.808767736 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.878180629 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.802836442 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.805562316 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.806448899 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.808916623 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.128325599 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.917403694 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.813741453 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.877414828 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.802323659 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.371848936 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.811340654 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.074739963 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.15656012 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.1358299 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.863046421 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.802947679 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.807699 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.726079477 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.927321034 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.237512456 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.070152399 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.92014359 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.930526587 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.817981408 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.072444894 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.109039243 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.116072521 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.076046259 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.685095826 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.4717401 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.926247968 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.021454857 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.807409313 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.004170153 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.020180959 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.117804409 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.362713117 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.964446206 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.996529438 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.072631459 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.166069542 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.801252949 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.380973593 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.807153697 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.211595766 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.837897419 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.143053317 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05910355 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.809643801 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.925236647 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.808153602 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.003343775 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.254859516 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.42819457 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.150671928 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.656368763 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.80901092 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.079899978 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.136450638 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.108491187 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.884004764 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.810673886 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.494194754 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937682035 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.664043364 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.022773789 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.807572676 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.010061935 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.516591204 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.810002804 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.081067907 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.11175647 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.806107048 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.721813379 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.810666975 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.809501277 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.024054807 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.018570177 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.05244332 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.810713888 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.816142986 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.616064438 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.084742948 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.86672848 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.733911193 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.808114185 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.853784021 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.032792513 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.824891613 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.321514149 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.508810887 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.082538683 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.713020555 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.825298135 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.252029738 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.190783463 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.138575739 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.327497177 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.027286712 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.360024854 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.688831696 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.18520856 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.80716693 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.240321416 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.18903986 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.807224389 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.335366428 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.920514919 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.07800125 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.130492197 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.817359393 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.512318229 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.838862721 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.025277768 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.166443547 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.739541564 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.811277908 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.853485346 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.808551637 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.81299613 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.815661619 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.731180507 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.271943142 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.650544366 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.363410362 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.81042271 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.816071949 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.133176836 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.381443072 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923298289 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.828022127 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.821040687 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.522010998 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.098572425 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.05361824 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.353951779 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.904923182 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.808835498 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.80699423 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.726534324 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.990465861 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.994995382 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.092000922 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.182658208 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.918211177 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.808246729 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.013228272 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.008109713 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.151320531 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.940508229 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.974514152 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.929082487 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.750182574 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.518669936 seconds)
  done (took 1626.167206343 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.826342993 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.849524857 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.831159442 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.899885996 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.878650036 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.891279065 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.888775398 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.868931488 seconds)
  done (took 56.682409955 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.812303165 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.980436851 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.815852651 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.813691239 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.844495978 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.813368631 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.967511287 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.826038034 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.818643268 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.81694963 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.814226243 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.812355954 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.086050135 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.834180512 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.820040571 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.314080003 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.818383535 seconds)
  done (took 73.814326304 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.840360857 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.817994348 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.845281567 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.809862306 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.882097506 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.822127684 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.938177619 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.812382361 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.814059248 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.066754771 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.10248779 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.833321561 seconds)
  done (took 89.335515609 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.81766506 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.806656154 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.805138934 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.807241991 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.804075556 seconds)
  done (took 10.78772649 seconds)
done (took 2123.353833245 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.046747715 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.996518112 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.046488741 seconds)
  done (took 5.780498011 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.940540658 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.990938779 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.102774906 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.108742859 seconds)
  done (took 9.87934972 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.097841033 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.191372074 seconds)
  done (took 6.020774669 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.114242097 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.81849789 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.210949953 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.797801158 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.800857871 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.799923146 seconds)
  done (took 22.135774595 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.796486757 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.796552546 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.79660168 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.796943859 seconds)
  done (took 8.918311503 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.795651416 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.488825069 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.796786383 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.807080143 seconds)
  done (took 20.61954877 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.947078861 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.913586935 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.997559441 seconds)
  done (took 7.589949114 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.939722497 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.028963541 seconds)
  done (took 6.699379059 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.953036682 seconds)
  done (took 3.684562509 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.825335348 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.067614632 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.295080187 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.312198227 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.389337331 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.690452963 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.127734595 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.028837719 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.23865657 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.2610768 seconds)
  done (took 23.968554026 seconds)
done (took 130.224091104 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.14772363 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.827645854 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.0036985 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.15527444 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.041552655 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.002859409 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.015044601 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.145181439 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.839042804 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.825230887 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.158408172 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.037141691 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.963575228 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.820916331 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.970734154 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.820198871 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.034968357 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.16859659 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.841177778 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.080035397 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.030610175 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.799964118 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.995530535 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.817427617 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.040660936 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.955329516 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.346528416 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.828474177 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.976066982 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.359486566 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.960150758 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.220806214 seconds)
  done (took 165.962097738 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.802369881 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.801544999 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.801947584 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.800394272 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.283565677 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.800661113 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.801376295 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.800404702 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.2597194 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.24140283 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.801690819 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.271449772 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.802203907 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.80092948 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.8030596 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.800950651 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.423958395 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.802487668 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.801596023 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.800276171 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.800244783 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.093574111 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.802155944 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.105400392 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.416311218 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.803202476 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.800340256 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.80424825 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.801223252 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.801416185 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.80254989 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.802401777 seconds)
  done (took 207.072952839 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.731852352 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.80309049 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.804097659 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.80260378 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.803272335 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.802972721 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.803957487 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.801932093 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.56759352 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.558945062 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.803209557 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.80401249 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.801026789 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.801473414 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.80247503 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.801981662 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.803346681 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.780718832 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.803013754 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.80477836 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.803326036 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.437161203 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.802461139 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.449151515 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.80307285 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.805640621 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.802249241 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.803707113 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.803047151 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.803638432 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.805045062 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.805317695 seconds)
  done (took 218.146534068 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.042132514 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.803535973 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.803673 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.72343484 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.803893689 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.80271348 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.779266842 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.049499088 seconds)
  done (took 18.546138939 seconds)
done (took 611.467104137 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.156285903 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.003780973 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.980671397 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.828470382 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.077776268 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.870498477 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.822656354 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.890089838 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.640836317 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.901342268 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.477967778 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.849044324 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.570293149 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.854703863 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.947298422 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.884004097 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.407204214 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.512585428 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.997895709 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.904914001 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.003992234 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.720925858 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.909600054 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.671784164 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.600686846 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.782729647 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.824983368 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.416218384 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.837693159 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.982275207 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.482817418 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.093594993 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.842220055 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.823829145 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.879160198 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.855920406 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.020133894 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.839254664 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.953362979 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.518636101 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.89917848 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.549267959 seconds)
  done (took 99.824890452 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.816846014 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.810256793 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.809496034 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.809804578 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.818521998 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.810795878 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.810043447 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.810758768 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.810431685 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.811211658 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.811834227 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.81930023 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.811095092 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.818637538 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.810869538 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.811278229 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.8102314 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.820052144 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.810646212 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.812237066 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.811151559 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.811170099 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.805975298 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.811443598 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.81107191 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.812046829 seconds)
  done (took 48.869137257 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.807977421 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.958651212 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.049145236 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.828253942 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.808560999 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.809760059 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.825994496 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.812691117 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.810778156 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.80994907 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.911258459 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.813593808 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.826069803 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.049497537 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.825876405 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.807323417 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.807896188 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.809204218 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.965248559 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.824406118 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.827894151 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.811926939 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.827465792 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.82153312 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.810708209 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.808103161 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.812664656 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.258893657 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.818815878 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.913185509 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.854571595 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.834592547 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.19465951 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.060107859 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.864444488 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.819125769 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.808288117 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.916343823 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.814923759 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.810336396 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.826740863 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.815108332 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.048503928 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.325746591 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.824254972 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.808686599 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.2693412 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.926330554 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.851497848 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.820302809 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.053044075 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.827803909 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.810404133 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.810634719 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.847335325 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.818345951 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.811313926 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.125453096 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.823970006 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.828444693 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.815323956 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.810650799 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.972484788 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.820579743 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.961406456 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.820743602 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.816564339 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.811974981 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.054577258 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.828106209 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.335507436 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.824789792 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.811037157 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.913995553 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.967040261 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.295200871 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.825139542 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.973947783 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.212791058 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.835867544 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.818784075 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.249363193 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.838971158 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.81846542 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.812609386 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.81300967 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.810577333 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.854490815 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.827549281 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.249806247 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.338146418 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.144259916 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.839372161 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.826785379 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.813119529 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.125612629 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.819916429 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.811768471 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.042872838 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.346478608 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.827053141 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.818738631 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.317141026 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.828179985 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.831363019 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.820659325 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.058250825 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.82918368 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.85497462 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.812535705 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.819854876 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.815532894 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.831393767 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.819644195 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.812436325 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.311111518 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.936596319 seconds)
  done (took 225.123628262 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.813558832 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.817860896 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.812242007 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.816571336 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.812272105 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.815260583 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.812717408 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.811343913 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.8131604 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.810190396 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.812857303 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.814002272 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.814010215 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.812263394 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.819938932 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.814222101 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.417386608 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.813887102 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.813400289 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.81341124 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.452281598 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.817640924 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.814047576 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.814153961 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.811333664 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.812588908 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.819052009 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.816509119 seconds)
  done (took 165.788321386 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.813407093 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.925615497 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.833946751 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.843028732 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.822477318 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.8147516 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.91159065 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.834564374 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.820052338 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.814398322 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.815131995 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.87533516 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.827398859 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.911562304 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.847899083 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.921352699 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.922352187 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.824482362 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.814983269 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.814746444 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.843972978 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.824040714 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.875815962 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.940056908 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.835262389 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.928452361 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.837047817 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.815495191 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.815965458 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.928720534 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.835843165 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.876395011 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.844732612 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.835312204 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.932977679 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.934613789 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.922506238 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.921155428 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.825597127 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.815744155 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.816250531 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.815951123 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.927924344 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.837183348 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.817757776 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.930457508 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.837759571 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.816086188 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.816830251 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.816765888 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.829738604 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.834939975 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.881358168 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.947884876 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.854766979 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.84051092 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.914402204 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.940566509 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.81703991 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.913612171 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.82776772 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.930747774 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.840024524 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.818570278 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.819132901 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.821168168 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.846795247 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.923735762 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.923698352 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.828095611 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.915241938 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.855688691 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.826484238 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.817564907 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.819093896 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.93158113 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.936913463 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.85512471 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.854067317 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.849593093 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.826336766 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.817884838 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.817900913 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.834606825 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.823785541 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.932469469 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.936657916 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.827171611 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.818496707 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.819549573 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.818180908 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.84376834 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.939986845 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.857406725 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.925290582 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.887270381 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.89418627 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.832959687 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.833185213 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.823625937 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.880819604 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.834650617 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.830093972 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.105485624 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.879200841 seconds)
  done (took 197.240172464 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.208786934 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.870472028 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.877310973 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.144560638 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.162496233 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.820719218 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.864077479 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.86637714 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.891301032 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.044386481 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.940429387 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.882304519 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.850836968 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.838807668 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.861042037 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.889838446 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.880428336 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.215049956 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.065751874 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.019608837 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.855499237 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.134874538 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.173175043 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.443744981 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.915661902 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.26997081 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.426422012 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.994485216 seconds)
  done (took 60.168561166 seconds)
done (took 798.75156058 seconds)
SAVING RESULT...
DONE!
