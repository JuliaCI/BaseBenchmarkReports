cset: moving following pidspec: 13458
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.34713995 seconds)
loading group "string"... done (took 0.558206528 seconds)
loading group "linalg"... done (took 7.660545921 seconds)
loading group "parallel"... done (took 0.168446084 seconds)
loading group "find"... done (took 1.271684199 seconds)
loading group "tuple"... done (took 1.934524543 seconds)
loading group "dates"... done (took 1.400461957 seconds)
loading group "micro"... done (took 0.243399904 seconds)
loading group "io"... done (took 0.97105057 seconds)
loading group "scalar"... done (took 40.826404823 seconds)
loading group "sparse"... done (took 13.314022274 seconds)
loading group "broadcast"... done (took 1.035214756 seconds)
loading group "union"... done (took 14.532866783 seconds)
loading group "simd"... done (took 4.760203514 seconds)
loading group "random"... done (took 9.638032036 seconds)
loading group "problem"... done (took 1.993966664 seconds)
loading group "array"... done (took 22.610248942 seconds)
loading group "misc"... done (took 2.040568349 seconds)
loading group "sort"... done (took 3.451939525 seconds)
loading group "collection"... done (took 19.707633657 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.581480302 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.145129638 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.153604198 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.132192362 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.209909286 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.158903925 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.161059002 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.100322098 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.987444456 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.182574976 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.155820296 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.535528277 seconds)
done (took 5.244946033 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.219154952 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094460774 seconds)
    (2/2) benchmarking "String"...
    done (took 0.105636488 seconds)
  done (took 0.887970612 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.079088874 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.144823945 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.095962735 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.079827057 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.09668894 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.07823103 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.097073615 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.078800265 seconds)
  done (took 1.364648502 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.086741475 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.098203121 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.081816211 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.097437743 seconds)
  done (took 1.058958255 seconds)
done (took 4.309682042 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.746895888 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.284125867 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.208377113 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.47407294 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.202477162 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.220775597 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.684408661 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.362419356 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.258519348 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099609462 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.135153674 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.38752474 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137067695 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.689790993 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.09246485 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.126536629 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.181144829 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.458724511 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.085100691 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.110973535 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116429812 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.143230738 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.130349115 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093475581 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.18461264 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081861064 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.193345181 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.107363589 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080100616 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.274838518 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200698292 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.69568017 seconds)
  done (took 10.979028645 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.111033384 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133261916 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.096827257 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138872277 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.137163454 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.10101639 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085646063 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.097720168 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.123984351 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.176724091 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.133666311 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.121376093 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095820507 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082615671 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.116597503 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.2457135 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.122565532 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.10026181 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.101920823 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.089081896 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.140491909 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.115181179 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.110728104 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.095020014 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168833292 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.224175576 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113250158 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.128701565 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.099879342 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.114768254 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144782728 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145765317 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.096568518 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081950439 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.176366891 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.126088652 seconds)
  done (took 5.201338563 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.10685694 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.189525134 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.120763688 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.169526694 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.079953371 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.142495421 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.095177813 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113374931 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.258418979 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.120837179 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.495639497 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.142729319 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.10171726 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101617719 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.084390376 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.100212534 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.626584734 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.121103069 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.150071549 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.114701035 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101759888 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.084352241 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.363487866 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098864476 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.080023179 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097349143 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.065761527 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.160449375 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098919125 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.159203583 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.100314682 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102218606 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133024141 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.198238151 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.127805511 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.136974864 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079862186 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.098912306 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.178871387 seconds)
    (39/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.155331304 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.103905201 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.08007376 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.1216224 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133641045 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.119581999 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.100907609 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.098807071 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.201861299 seconds)
    (48/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.09636103 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.081640363 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.1167842 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.951137775 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.18276979 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.091624207 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.097873786 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.291051236 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.124651755 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099337576 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.079640429 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.291271884 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.193069889 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.097624091 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.081761506 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.100427507 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079250186 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.101247538 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.396823527 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.099553267 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.706202636 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084423424 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.108195414 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084714546 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098327877 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105512566 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089090028 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.11809092 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.081241342 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.101636728 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.079284206 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.098335625 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.08188657 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.110922175 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.216502937 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.099644794 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.080823963 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.097335946 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.117102208 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113172067 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.101564227 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.095857482 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11650013 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.096385406 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098850056 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.083770194 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.137289121 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082824059 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.111818124 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101845333 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.144917185 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082621437 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.159188967 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.08153913 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126844909 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.102312978 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116197647 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.115110395 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101333483 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.171215897 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.078958692 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.096864016 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.08152822 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.098676117 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081693129 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.10223227 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110828046 seconds)
  done (took 22.968074595 seconds)
done (took 40.94847587 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.327551191 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.104459767 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.102870191 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.101767927 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.10064594 seconds)
  done (took 1.503942389 seconds)
done (took 2.245098768 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.285612222 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.173169795 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096895995 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.16570815 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092093402 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.163925147 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.158486213 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.093370315 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.217550075 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.094621642 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.160439084 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07598056 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094489973 seconds)
  done (took 2.636563848 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094308528 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114276645 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083271617 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109841031 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075660097 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109837526 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092145417 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116262832 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108755698 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084915511 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092445331 seconds)
  done (took 1.819474806 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094344185 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112534971 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082570546 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112233695 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078289964 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113040169 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094240854 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119413707 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.11186513 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087993368 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095667225 seconds)
  done (took 1.83705427 seconds)
done (took 7.021787902 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.092256882 seconds)
  done (took 0.823614301 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.943910737 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.722965247 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.112749199 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.148228407 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.312522662 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.170614498 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.464138896 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.127358642 seconds)
  done (took 10.944349831 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.145843485 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.084251234 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.100095335 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.083687024 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.103537289 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.086399094 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.102245755 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.099167262 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.087312767 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.102136824 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.085487198 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.104932806 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.102712075 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.088217999 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.101153224 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.088642653 seconds)
  done (took 2.367381066 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.118792198 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117739788 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.107415243 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.107802858 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087073812 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.105342322 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.107378896 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.091707614 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.10576453 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.105822862 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.092452322 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.108608614 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.105019237 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.081698035 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.109476708 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.109838267 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087965906 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.109289823 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.109207873 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.092032304 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.109848193 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.09754644 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.089118754 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.109367541 seconds)
  done (took 3.314641195 seconds)
done (took 18.187707488 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.160206835 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.109770182 seconds)
  done (took 1.010758298 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.095835885 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112297805 seconds)
  done (took 0.953496503 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.098219022 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095537732 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.122901801 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.108993311 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.08146499 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.096376307 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.121631832 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.081561494 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.099830681 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.081293236 seconds)
  done (took 1.735489159 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082627636 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.110102531 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.101025874 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095797668 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.107546824 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.09705711 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.090281062 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.1015637 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.113422061 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078876138 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.103954436 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.116261646 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.088440348 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.11928409 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.107156814 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085771166 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.105622518 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.101043847 seconds)
  done (took 2.556232282 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079724371 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096577323 seconds)
  done (took 0.928038866 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082322188 seconds)
    (2/7) benchmarking "second"...
    done (took 0.0936236 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081869884 seconds)
    (4/7) benchmarking "year"...
    done (took 0.097818683 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.094794821 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077684814 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.095779976 seconds)
  done (took 1.373467551 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.49109196 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.139786532 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.266940646 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.104074569 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.105564973 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.3081821 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.101155496 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.086661144 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.106689633 seconds)
  done (took 2.52227369 seconds)
done (took 11.826717492 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.0938669 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.114654307 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.114587953 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.474524873 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107739502 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.09852815 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.146540809 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.253792354 seconds)
done (took 2.157358381 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.144922847 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.599961344 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.424834553 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.238276791 seconds)
  done (took 2.021258944 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.404028636 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.09995943 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.085202739 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.082799441 seconds)
  done (took 1.4336794 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080146656 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099877312 seconds)
  done (took 0.940941812 seconds)
done (took 5.299907268 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081158902 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.096474287 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.078483638 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.097244291 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.079195243 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.096051282 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.111368784 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.098450373 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.079739606 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.09836791 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.098026733 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080927017 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093702058 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077944519 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097732923 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.080583756 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095881186 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.080157145 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096053668 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.082344328 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098753024 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.080926811 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.096765544 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.08304289 seconds)
  done (took 2.955490858 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.10005167 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098691013 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.102405689 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086380862 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.102133766 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086412999 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.10557622 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.099711839 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088226202 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.1039938 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103458512 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.0875946 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.101667768 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.086841209 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102195045 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.103309502 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088844273 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100765836 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084199222 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.105431243 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.104241143 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083378143 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.105135293 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105554645 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.087483803 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103748769 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.085444621 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.100546095 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104492295 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.087043275 seconds)
  done (took 3.669260169 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085298959 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093766337 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079029578 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101614859 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.07835482 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.09920058 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.080428641 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.098406978 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.08180469 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.097469961 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081764413 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.098718124 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.079965351 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.100375057 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.080965697 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.103104652 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.114862747 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.081345638 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.096973482 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.081028 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.1014496 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.080842309 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.098371106 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.08026392 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.097536042 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.080530357 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.09794534 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.080403261 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.099032523 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079964962 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.10184322 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.082584201 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.098383409 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.086735586 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.101996444 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.07959645 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.101704119 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.079130677 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.099179793 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.096004275 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.08105532 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.096696434 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079882517 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.104130547 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.081389914 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.099409633 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.080809276 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.099096094 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.081246638 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.101700702 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.079296546 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.098119374 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.082388476 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.098803205 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.084294345 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.098182031 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.097888541 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.080328856 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.098784083 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.079985321 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.096793109 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.080985415 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.098936803 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.081914806 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.1137569 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086793369 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.097466313 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.083048365 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.099546852 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.082806667 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.100221957 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.112553811 seconds)
  done (took 7.345116941 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.103572696 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.127151018 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.098523966 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098531131 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079809983 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.09777438 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.086041846 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098725726 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082587605 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.10521398 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098337391 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082794918 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099681423 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095806148 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098540824 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.082717508 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.104899964 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095402105 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.081476271 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101759285 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081954519 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.101784023 seconds)
  done (took 2.869707641 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.209297381 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.10530755 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142975984 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.10780878 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.08632449 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.109541674 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.10401868 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.089752224 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105482937 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085464338 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104849271 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.215588909 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.08657177 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103616678 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102726752 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087305998 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104440891 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087674737 seconds)
  done (took 2.807370353 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.09344367 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099554877 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.0976899 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.10074882 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.099620764 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085641674 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105185967 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.10997947 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086482992 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.100560898 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.0933456 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103857708 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.10366684 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084451368 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102950152 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083760529 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.10426539 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083435204 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111246677 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106737289 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089179724 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111886598 seconds)
  done (took 2.932094434 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097784571 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101229289 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.119576877 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08684357 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.097978476 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.082185532 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.108316227 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.082865585 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.110334727 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.102162067 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084264845 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.099134775 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.090590007 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.102707258 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.105748623 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084578405 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103209282 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083930392 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103680609 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.07916952 seconds)
  done (took 2.701214051 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102840801 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101817048 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100236293 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093420155 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102176863 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.083948521 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112567443 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.102975677 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.084434742 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.128179657 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102815533 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.084546252 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113106137 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.10864204 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101492938 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094660176 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112427991 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.1111336 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.084792476 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103641475 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127837405 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084819917 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.112219698 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102926354 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085132144 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103338737 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102022808 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091198828 seconds)
  done (took 3.616547534 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082479294 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098545141 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081902348 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.095858406 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.079402698 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.097550272 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.082171029 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.098804443 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08384822 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098759819 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.084588207 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.100644964 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.084231172 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.101133777 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.0834481 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.10128997 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083931739 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.098864467 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081140276 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099429621 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.083308338 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101607992 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.0830081 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.099723928 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080711028 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.102212429 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08056674 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.099844494 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082657057 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.100036295 seconds)
  done (took 3.511890438 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.092220918 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106045621 seconds)
  done (took 0.97673539 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079532573 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113657393 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079545337 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.103778337 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086963452 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.103492176 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110928372 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088239677 seconds)
  done (took 1.543513255 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.097005562 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.111303912 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086431611 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.117045281 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.112638928 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.100609155 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.174244268 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.104915244 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.089659168 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.102300151 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.115843791 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084453014 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.108734556 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084428112 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.108129164 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089780258 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.101219777 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.10800026 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.087958056 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.100884419 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.089533095 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112106559 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085673524 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.100896187 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.104709338 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094120713 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.115434313 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.084554147 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107331246 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.109531819 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090931677 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.096710305 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.084674187 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.10392014 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.082070022 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.113297364 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119359565 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087589894 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.114497554 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084461763 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.115569421 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.097851367 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.088783308 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.109706777 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112385938 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.085502779 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.103657774 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.080549518 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.09870355 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.087101646 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.098627687 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084097507 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.098456606 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091700569 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.106595623 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11012631 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.081684845 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.100547131 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.084933032 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.104266412 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.087800528 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.103256956 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101938358 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.083104109 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106989661 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.086817793 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110355569 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.094191204 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.076323819 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.097370403 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.092927955 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.124500971 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.105586584 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.083415647 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100451705 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.079961796 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103419918 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083784198 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106655426 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.106003057 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.082683065 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106272393 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089148124 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101431848 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.103423581 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.092708524 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.098256267 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084281672 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.099260234 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118706824 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.081422583 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.097574494 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.080296724 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.111806935 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.084956708 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.100862332 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.078737393 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.1081952 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.093651274 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.085645263 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103803073 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085247623 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.115114285 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107919431 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090964855 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.113512456 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.109304707 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084897834 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.104574253 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.079381711 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101526594 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084341745 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.110118225 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.07868035 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106058501 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.084277993 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.104008839 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.112696198 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.083256187 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.104148812 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092225638 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.109552286 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.099640649 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.080987733 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.104541222 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.0848477 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105672898 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.091753499 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.102281194 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077249671 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.098070514 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.104539083 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.085433207 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.106228177 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.091247882 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107629433 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.079275161 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.102387105 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.107022413 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.094418217 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.103475697 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.085059242 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.110602857 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.103807875 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.084666755 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.109896812 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087728189 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.102176362 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.090359786 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.10519144 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.078914441 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10771004 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.105008626 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.084271482 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.107919045 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089160699 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.106972922 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.103482428 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083960484 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.108842605 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086799632 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.102916726 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084793731 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.103622562 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.113930849 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.087546455 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.097674124 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.082821612 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.111785508 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.082964402 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.104156828 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.083574151 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.106525308 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.104327631 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.083806463 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.102993933 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.087417534 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.116080973 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.108335357 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086783929 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.108990467 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.097229699 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.105192987 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.087246508 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.104134922 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104538783 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.086256797 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.11339179 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.090092671 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.110986823 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.105282173 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.082124594 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109606087 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09311061 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.103498918 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.082985257 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.102977376 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.10727394 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.092237328 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.107920672 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.086144618 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102219398 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085417502 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108695812 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.106531486 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.085813078 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.101882352 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.090768709 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.103073969 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.110700942 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086994337 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.114971536 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089293 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.099945381 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087864533 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103097063 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.109891826 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.081466335 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.100347119 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.084596603 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.104131025 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.083868486 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.108037678 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.07933221 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112253298 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.111351482 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.086398536 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.102833979 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.086574298 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110527405 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.087230779 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.108794472 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.089001836 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.111895647 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112172756 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.082552286 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.103599657 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.093415816 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.102223775 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.093983056 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.089380688 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.098679811 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.082750292 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.100238541 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.083358222 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107578835 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.114024018 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.094629996 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.098671425 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.089118548 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.102904362 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.083874036 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.101174152 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.089624996 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.108469831 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.105087068 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093177715 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.1055405 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.090083572 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108893558 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.084197033 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.106168665 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.10510373 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089782338 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.10496962 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.088382089 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.10248981 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.086970517 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.104781096 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.08307011 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.107110261 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.101932186 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.086727496 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110264158 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.085181409 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104990714 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.087936752 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.10561759 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10452965 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.086926436 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.10346996 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089614181 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105123617 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.086135653 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.107349692 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.080217827 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112532676 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.085026241 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114311489 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.103645306 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.082899306 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.110522517 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.088022174 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.111086951 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.104674102 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.087765192 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.106374157 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.085316163 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.108658773 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091754131 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.104266691 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.115316705 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095291652 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105224642 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.089203341 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.10646524 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.086803171 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.104521101 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.104403411 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.088272697 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.104448447 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.087248244 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.109866846 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.088971412 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.105526672 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087673726 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.106836372 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.104200635 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.088142482 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.099116102 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.085889169 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.103783845 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.086655276 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.116790113 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.105286331 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.089779098 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.102379899 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087565566 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.10393037 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.0827187 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.11391292 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.113935466 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.0877963 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11317166 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.085058749 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.107745879 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115524946 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.081060957 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.102961238 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.084086093 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.101768036 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093121129 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.104445639 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.101798282 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.104654903 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.103128949 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.084116487 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.104085801 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.081983634 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.096091192 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.081158922 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.108042473 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.0879991 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104969331 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.086229903 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.109111164 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105723017 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096968505 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.104648492 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.086521992 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.106184559 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.08196426 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.10599267 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.101882035 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.09016422 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.106229684 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.084785998 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.102050791 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.086050607 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.106199314 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.087410647 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.106671054 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.088053216 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113287418 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104828166 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.089564957 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110581555 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.08090203 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.108558054 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.08538886 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.105397114 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.103059702 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.090650282 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108364269 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087411391 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.115472309 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.084453501 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106844267 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102833568 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.083400848 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.101870602 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.083981542 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.102470824 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.082866607 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.103566004 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090548393 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.100805281 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.103639245 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083864047 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.101955759 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.090824487 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.103665888 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.085184717 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110302465 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.103932113 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.084765832 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.110288084 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.086002636 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10713709 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101520181 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.085216014 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107480965 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.082191355 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.109322601 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.082652809 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.107189561 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.106705056 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.084414115 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104687553 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.084702437 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100695181 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.089234039 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.104079466 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.081115397 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.101281587 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.099092986 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.084906875 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105128499 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091062488 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.104577494 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085961349 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.098505774 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.079438799 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105472211 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.099114952 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.085794438 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.104362645 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089760318 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.104008752 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.082742743 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.100983868 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.111242511 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090423437 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.105829628 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.080793232 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.106012001 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.083685971 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.105401537 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.101989677 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.084207584 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102635777 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.088310142 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.104088787 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.082459747 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110094641 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.085598666 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105283481 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.102444662 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.084978479 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.10284844 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.079323698 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.103501179 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085861395 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108524321 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.103967541 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08507375 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112623579 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083905505 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.102173335 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086930593 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102659298 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.105412614 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.079318231 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.102693181 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086216511 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103182053 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.078364925 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.102952898 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.080445143 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.106295987 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.081833425 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.099465279 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112757251 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.093819075 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.106492948 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082174034 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102585523 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.077712123 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.098520324 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.101052256 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086293592 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.104091182 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.095176106 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.101376838 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.082197632 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.097799433 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082822849 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106465225 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.104592892 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.08136659 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097131979 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.08326954 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.105899575 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.089837937 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101685256 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.082829766 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106474714 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.104068058 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.082385212 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106139158 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.079635377 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.106744459 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11590083 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.08608094 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102129151 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.090471184 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111600622 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.083794138 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.099314977 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.101904846 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.086835705 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.102148622 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.084764139 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.104460772 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118152935 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087120524 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.101550825 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082863741 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.105145529 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.08331342 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.111659057 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103584427 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.084991284 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.106409418 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.086192539 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112254856 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086280913 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112779123 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.105433013 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.086922908 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101810642 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082843311 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.101762135 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.082733666 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.105527853 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.102906758 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08916988 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.112123055 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.082413126 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115304383 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.112279531 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088867308 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.100476573 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.083023123 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.103118167 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.078932146 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.107492485 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.08146237 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.102181332 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100226903 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.084459153 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.103270663 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090365779 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.103653969 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084065647 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.104672759 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.078335502 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.109912784 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.088705705 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.108368171 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.100344316 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.085610913 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103306528 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.088444552 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108200544 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.083328929 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.109050794 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.088524507 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.107719659 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.099414676 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.095061328 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104558945 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.090519627 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.10603295 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087358463 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.108746427 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090024574 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.113716134 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105375057 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.087494453 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.118117726 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08874857 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.10400177 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099212118 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.090065335 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.10029837 seconds)
  done (took 58.891688344 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147206549 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081533358 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098655323 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07911653 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11349851 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100341323 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082579668 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101382828 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.082795759 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.103215612 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.080226526 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099876165 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108766623 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12505295 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093849122 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104703122 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077748545 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.1006572 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097995415 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080943994 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108466058 seconds)
  done (took 2.896536601 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.10480464 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.120809156 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114856893 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.118141633 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090617769 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.115713794 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114973377 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113461748 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099235289 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112059853 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.118728096 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113860063 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.091655162 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.11225788 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111586343 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092709481 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.118270128 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110634141 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.116004956 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096093121 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.115426018 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.116385881 seconds)
  done (took 3.247521401 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084783734 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102619696 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085408665 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.097725265 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083221695 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.097294342 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.08774919 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.10088368 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.08602932 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.103942075 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081794356 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.104454465 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.104375057 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.082089917 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.103441584 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.084438264 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.153873241 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.112854858 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.085952923 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.109297168 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.080676281 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.111106768 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.10192105 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.083840474 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.105453419 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.091614969 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.108309556 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.084973949 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.108468358 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.085103772 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.108832403 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.083659032 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.109108255 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.107212009 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.087430348 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.10592767 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.088557226 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.107270494 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.083003367 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.105317355 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.088071357 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.103995269 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.087368393 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.10957636 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.084982504 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.10699059 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.087461289 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.10952818 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.102118609 seconds)
  done (took 5.611986462 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.103756408 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.162470511 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.08846642 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.143498469 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.122227591 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.114860953 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.090947469 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142907711 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.103878203 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082954716 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.123139721 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.120794506 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103917889 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.088867616 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.113887155 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.107718316 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.09062479 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.108020374 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.112414873 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.088886231 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.113830285 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.094042785 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.12496902 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.12380926 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.112874378 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.087262129 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.109123285 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.112975804 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.102261078 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.114698706 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.114121691 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.094237484 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.126452813 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.115517086 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.10707537 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.091337649 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.126631863 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.10825644 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091001891 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.104053519 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.089248391 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.112880276 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.113285727 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.105094585 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.109641122 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.11150809 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.087065433 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.106725766 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.122504081 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.090042589 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.118633679 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.124969247 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.112329135 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.089441063 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.112464178 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.125621212 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.088937044 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.107544965 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.090530097 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.123298318 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.106478616 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.092360293 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.123895473 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.11120903 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.117039594 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.103656145 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.115088638 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.113812087 seconds)
  done (took 8.395298522 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.093797396 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.113993837 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124887777 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.125400394 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.094653914 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.116645192 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.115870878 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.095312906 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.116194856 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.122446228 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114586576 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.139073155 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.089555855 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119228864 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.11488761 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.095829731 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116058489 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.115358716 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.095341605 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115570324 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.115310392 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.12431542 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.094841955 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.125921012 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.147753305 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.111320125 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.09412599 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.116735813 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125624632 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.115950972 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.128859293 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.095940822 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.116758517 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.124888 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.128203493 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.095377517 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108737911 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115066577 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.095563447 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.117270286 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.110056293 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.105164368 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.115646546 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.110452445 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.094915324 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.116842102 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.12630937 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.129679971 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119032716 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.101418313 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.117259773 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.126708523 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115457274 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09561462 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.126186891 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.152726595 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125567281 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125189629 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115359031 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.10504253 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.125905869 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.133893832 seconds)
  done (took 7.970956344 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107308753 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.116547083 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.122380409 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.104322153 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.087077335 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.11433491 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.085649503 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.108112135 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.117760153 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.099939868 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.122676322 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.114649221 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095839156 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.122489221 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.114933032 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.117383923 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093340738 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.114918869 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.118855904 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092609639 seconds)
  done (took 3.01764687 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.094081486 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.125075935 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.08443007 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.11326499 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.108646339 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.0919742 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.108874277 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107337456 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086197124 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107460208 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096529306 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.121119516 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109333277 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.095414934 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.122544899 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.117754735 seconds)
  done (took 2.540268366 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.100459961 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119274646 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.125722044 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.088270624 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.109995098 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.083851944 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.11171539 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.102158556 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.086080451 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.125312985 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.088523075 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.114904094 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.109560527 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.088059842 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.105619489 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.091498667 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.107583065 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.086468838 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.11104548 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.125090595 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.100416758 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.109458632 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.110240373 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.092108042 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.10803961 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.093462547 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.111932471 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.107293391 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.087359443 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.111207023 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.090247606 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.11890145 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.106079735 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.08928091 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.107924165 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.08626073 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.10987106 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.089157862 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.114533484 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.109647346 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.087813103 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.109752387 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.088892065 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.11215034 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.0843908 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.111431743 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.105380675 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.095708134 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.107643362 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.089633757 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.110899267 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.090298752 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.113504686 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.120287187 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.093379425 seconds)
  done (took 6.506549806 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099767443 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108872857 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.08035076 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.106230547 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.091068962 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.114222256 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.113311694 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.093420128 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.111915154 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087172394 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.112991197 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.093100373 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.112705584 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.113899151 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092023983 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114280262 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.085299304 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112911291 seconds)
  done (took 2.699684666 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.092232736 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104721254 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093543542 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.107300327 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085324512 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.114462956 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084031098 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.110408963 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108876025 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.090574863 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107206938 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088421388 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104693456 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087943232 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108304689 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084237653 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.1094425 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104014747 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086337399 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100354251 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087744075 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104736398 seconds)
  done (took 3.019390248 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.11869551 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.127643804 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.096363927 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.241034579 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.106726943 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.133243276 seconds)
  done (took 1.679412251 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110424065 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12078868 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105501392 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10729305 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117260176 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086230998 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112742788 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110844431 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122835955 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105263456 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114148881 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12381502 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122153352 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101127402 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120520986 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12000643 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112039954 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092298073 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11186977 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133449155 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091554358 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122695482 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113625684 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091227955 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114354633 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123108746 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122985031 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127168933 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091963859 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122996495 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119827228 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09208414 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125265323 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127989554 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11387415 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101914197 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113593611 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13346965 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119408825 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101315456 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.116027896 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120263756 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102341518 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120207253 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123580542 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113021128 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099152618 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114494931 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113245831 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141007656 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097933602 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122662689 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121117143 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123635382 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102206287 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.161920095 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107045717 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123606499 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120990871 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128532566 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123759366 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099749432 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123207375 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127999432 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119743912 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10084515 seconds)
  done (took 8.449082385 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102230633 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127270453 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107683842 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123134561 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097562005 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112304447 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112076386 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092263804 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115020791 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111389216 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.158368359 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093127639 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124371718 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122901615 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090910072 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115505921 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113553582 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122353646 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092084472 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140392346 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114079413 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122314227 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122260607 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101993201 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128572154 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121049097 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113046767 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092862992 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114150576 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113357514 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098578449 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115179936 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122656297 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.091079147 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123882663 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113686407 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091300546 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120204871 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114741425 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119485046 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102458925 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13401739 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115271241 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113578839 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105807799 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114938789 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114113398 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091391445 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115481041 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112628413 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106765911 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127690656 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12831371 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124036969 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113364469 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092175801 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112293431 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109606049 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092610906 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122375125 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123251197 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091769924 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141668394 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114916494 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112207361 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122901954 seconds)
  done (took 8.353182288 seconds)
done (took 158.965365464 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.219234016 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.207671197 seconds)
  done (took 1.287162049 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.087606557 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.137541739 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096203839 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.175140897 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.084408527 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.141017867 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138525074 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.098524466 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.107205251 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085974698 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.10748819 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086463911 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.172200933 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.084847166 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.108974602 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107584107 seconds)
  done (took 2.687701217 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.118642784 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.256642008 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.131440235 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.107135881 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.092852937 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.114792945 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.088233157 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.118427332 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.094139126 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.111547424 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.092515225 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.113392381 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.088678009 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.113458963 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.11026439 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.089665267 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.105143827 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.089207094 seconds)
  done (took 2.904514296 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113790567 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.148190244 seconds)
  done (took 1.134665942 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.243007631 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.163142892 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.231249 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.481507713 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.276513457 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.366072221 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.203566792 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.213429338 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.165059157 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.210164717 seconds)
  done (took 3.419150848 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119243906 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.181251076 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.323987851 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.163424111 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.112486502 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.136000388 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.164031552 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.137349 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.123642899 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.100965477 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.122897481 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.117974291 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.137281549 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.095569391 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.115882635 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.116737651 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.120732335 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.115155843 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114884097 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.095478233 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.138247467 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.083868853 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.115688699 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.113803274 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.097928282 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.119220847 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.105235686 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.085870888 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116658047 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094271331 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.117122947 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.124978876 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.118708254 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.157895166 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.124292639 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.160334669 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.123082603 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.0957333 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.116667265 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.093050863 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119481231 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.123707605 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.130261037 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.103206465 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.112769411 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.102280653 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.113235222 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.088245353 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.120933686 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.120668853 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.098439551 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.115744041 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.156443153 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.12382644 seconds)
  done (took 7.520575272 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.791678149 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.159333214 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092588344 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.894549508 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.143179162 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108385775 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.79110727 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117101504 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.263098718 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.77015483 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.141407705 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.125699764 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.214321163 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.267470561 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.011523706 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.292428494 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.650259389 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.132993255 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.156260687 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.161539306 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121657477 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119942989 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.138174588 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.458496973 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.122539211 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.094091609 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.125209737 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.125236481 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.167579364 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.130258402 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.091145777 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.206782337 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.257365264 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.207922054 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099076915 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.119664612 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.094118736 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.202141436 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.273068762 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.19956594 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.186905313 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115359546 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.094021211 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.129813591 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.139366299 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090840003 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.193362662 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.18150379 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.177591474 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.122014974 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.125252209 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.103483929 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.127904498 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.171480407 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.129077085 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.32785516 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.320711821 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.094568671 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128307374 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.132551573 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.246627345 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.13009669 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.231537021 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.14599643 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.195722789 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.118777097 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.792434256 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.174427835 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.117873033 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.100802208 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.127128825 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12187971 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.104130989 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.175749612 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.397848305 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.132617266 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.12041675 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095129615 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.233834452 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.1072358 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119736104 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.169710656 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.123220165 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.125182743 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.108255246 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.129038886 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.177118064 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.263209263 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.107514643 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.127055119 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.121208516 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.107841139 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.123807528 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.218195137 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.22758441 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.169105508 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.239501624 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.09949789 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.186078823 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.174824004 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123287299 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.180091493 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.12526563 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.106667744 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129344208 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.22556786 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.151827354 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.129212647 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.099648058 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.125782947 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.155988627 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.132393606 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.100273826 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.199316805 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.486966472 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.175858583 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.115894507 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.133602705 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099638874 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.185247482 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098694023 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26498641 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121089662 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.171641341 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120208284 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088926914 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.125650328 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.170273282 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.128849919 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125426406 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.106735782 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.1257645 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.242815047 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.225681399 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.127101811 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.228802096 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.190476946 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.124233881 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.174854238 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122516155 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168954115 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119978657 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.097776515 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117848554 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.776197788 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.12300054 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.099035576 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117054256 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.195316863 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089489688 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.125373153 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.125203166 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086319045 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.788442753 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127513044 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.120790851 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.10268838 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118092636 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119623864 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096895389 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116639128 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.164238995 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.237424981 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.125697911 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102879816 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.132842922 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.1670867 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.124484947 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.132518671 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.131887411 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.109296281 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.130325813 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.121001467 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.108294451 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.199262449 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.171161135 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.229322139 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.579846934 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.120348811 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.130917205 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.207056971 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115530315 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.289882924 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118075604 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.203356121 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.185547831 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.099355476 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.311469147 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.163802718 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.195577194 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.132718618 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.172379551 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.110928612 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118674034 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.165443846 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111386443 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096353786 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.161587498 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.12670327 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123835351 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.960950878 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089199248 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.248502789 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.088243177 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.172201879 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117891537 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121560172 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.30385351 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.092453182 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129428144 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.165854191 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117133365 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.123611652 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.697406153 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.124777921 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.099189584 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119021956 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.225217637 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.172003106 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.127892339 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125483507 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.103135224 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.192459413 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.216415656 seconds)
  done (took 45.065299965 seconds)
done (took 64.886498142 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.279634096 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.216387022 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.269834465 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.172500861 seconds)
  done (took 1.911918414 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.173116796 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.150812972 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.122594073 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.108007835 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.152817057 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084933585 seconds)
  done (took 1.689356399 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.364095397 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.278877948 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.243443376 seconds)
  done (took 1.786628709 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.32009272 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.254003459 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.485640795 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.338574645 seconds)
  done (took 2.398073067 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.211026425 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.133481715 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.111027149 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104022896 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.201170828 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.257324687 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.149785756 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.211257918 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.103737886 seconds)
  done (took 2.430265439 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.207228792 seconds)
done (took 11.327767112 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.166033699 seconds)
    (2/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.258459297 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.146898626 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.224359831 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.151811177 seconds)
    (6/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.13413841 seconds)
    (7/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.096310101 seconds)
    (8/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.267552671 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.122436088 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.126305828 seconds)
    (11/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.187866701 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.122332757 seconds)
    (13/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.172544375 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.141805473 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.206641008 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.135982771 seconds)
    (17/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.218409042 seconds)
    (18/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.258347147 seconds)
    (19/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.134164078 seconds)
    (20/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.174647742 seconds)
    (21/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.130017978 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.141430862 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.125256239 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.142127246 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.134481656 seconds)
    (26/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.09310585 seconds)
    (27/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.249637957 seconds)
    (28/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.145502946 seconds)
    (29/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.090789727 seconds)
    (30/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.129832922 seconds)
    (31/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.140538692 seconds)
    (32/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.206323441 seconds)
    (33/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.077729552 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.117359844 seconds)
    (35/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.211669464 seconds)
    (36/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.168744885 seconds)
    (37/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.131373873 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.090075436 seconds)
    (39/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.193996781 seconds)
    (40/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.145035303 seconds)
    (41/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.129135937 seconds)
    (42/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.208193403 seconds)
    (43/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.155326322 seconds)
    (44/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.147744185 seconds)
    (45/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.093228496 seconds)
    (46/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.112939317 seconds)
    (47/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.176649694 seconds)
    (48/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.099109503 seconds)
    (49/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.215429929 seconds)
    (50/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.141184968 seconds)
    (51/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.10050212 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.122928939 seconds)
    (53/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.156695447 seconds)
    (54/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.126361344 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.121839407 seconds)
    (56/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.192362546 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.145450153 seconds)
    (58/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.128740833 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.092964888 seconds)
    (60/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.128348855 seconds)
    (61/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.225328494 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.090642214 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.145190526 seconds)
    (64/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.195681264 seconds)
    (65/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.236890292 seconds)
    (66/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.077808517 seconds)
    (67/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.125267236 seconds)
    (68/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.132229661 seconds)
    (69/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.194560111 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.14620824 seconds)
    (71/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.137394092 seconds)
    (72/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.19624666 seconds)
    (73/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.096624274 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.171292956 seconds)
    (75/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.118892879 seconds)
    (76/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.077476215 seconds)
    (77/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.17996238 seconds)
    (78/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.087112094 seconds)
    (79/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.135107367 seconds)
    (80/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.221291957 seconds)
    (81/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.100886227 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.181438625 seconds)
    (83/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.127676418 seconds)
    (84/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.08194816 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.147767943 seconds)
    (86/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.164511847 seconds)
    (87/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.117992179 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.147890284 seconds)
    (89/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.096950193 seconds)
    (90/309) benchmarking ("sort", Int64, false)...
    done (took 0.119205347 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.137404478 seconds)
    (92/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.166570483 seconds)
    (93/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.122572761 seconds)
    (94/309) benchmarking ("sort", Int8, false)...
    done (took 0.196492086 seconds)
    (95/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.123504337 seconds)
    (96/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.176837083 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.148830143 seconds)
    (98/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.147408823 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.122021777 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.161207973 seconds)
    (101/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.124073146 seconds)
    (102/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.156860569 seconds)
    (103/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.18940934 seconds)
    (104/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.072717067 seconds)
    (105/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.129755994 seconds)
    (106/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.169844587 seconds)
    (107/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.10284579 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.178564182 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.143603164 seconds)
    (110/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.128529648 seconds)
    (111/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.137871227 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.138799508 seconds)
    (113/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.156670614 seconds)
    (114/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.200563496 seconds)
    (115/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.121511259 seconds)
    (116/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.073125038 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.124194939 seconds)
    (118/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.07365951 seconds)
    (119/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.09495615 seconds)
    (120/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.413056762 seconds)
    (121/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.109823016 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.198239688 seconds)
    (123/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.073237735 seconds)
    (124/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.188605788 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.194387333 seconds)
    (126/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.111995016 seconds)
    (127/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.189862659 seconds)
    (128/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.156724621 seconds)
    (129/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.158088323 seconds)
    (130/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.098643016 seconds)
    (131/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.098984112 seconds)
    (132/309) benchmarking ("sort", Bool, false)...
    done (took 0.189438576 seconds)
    (133/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.125255589 seconds)
    (134/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.19093242 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.100221238 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.174405456 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.141360831 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.098516245 seconds)
    (139/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.114809628 seconds)
    (140/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.095608385 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.122903574 seconds)
    (142/309) benchmarking ("sort", Float32, false)...
    done (took 0.155497003 seconds)
    (143/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.096872462 seconds)
    (144/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.099959311 seconds)
    (145/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.097166632 seconds)
    (146/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.093204246 seconds)
    (147/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.125988421 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.091037168 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.123885433 seconds)
    (150/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.196109699 seconds)
    (151/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.103566114 seconds)
    (152/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.127766234 seconds)
    (153/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.082866202 seconds)
    (154/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.125449443 seconds)
    (155/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.100496664 seconds)
    (156/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.099313218 seconds)
    (157/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.159625064 seconds)
    (158/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.201050311 seconds)
    (159/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.145686473 seconds)
    (160/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.091911568 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.14886594 seconds)
    (162/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.070809301 seconds)
    (163/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.11769743 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.086772444 seconds)
    (165/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.125278911 seconds)
    (166/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.122050674 seconds)
    (167/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.07066411 seconds)
    (168/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.135022423 seconds)
    (169/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.167513904 seconds)
    (170/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.213851066 seconds)
    (171/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.091654516 seconds)
    (172/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.093753426 seconds)
    (173/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.090106946 seconds)
    (174/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.076109667 seconds)
    (175/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.091718229 seconds)
    (176/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.124046919 seconds)
    (177/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.109741041 seconds)
    (178/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.08592154 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.155289752 seconds)
    (180/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.09666524 seconds)
    (181/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.126385702 seconds)
    (182/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.118426848 seconds)
    (183/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.089687625 seconds)
    (184/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.065450499 seconds)
    (185/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.090265497 seconds)
    (186/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.227547762 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.135763661 seconds)
    (188/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.12430049 seconds)
    (189/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.192752432 seconds)
    (190/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.090754482 seconds)
    (191/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.069913118 seconds)
    (192/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.117839657 seconds)
    (193/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.112851153 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.092326758 seconds)
    (195/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.067604796 seconds)
    (196/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.12039269 seconds)
    (197/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.087725358 seconds)
    (198/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.103730226 seconds)
    (199/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.117065841 seconds)
    (200/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.126543343 seconds)
    (201/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.098595186 seconds)
    (202/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.200767888 seconds)
    (203/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.141608929 seconds)
    (204/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.098283938 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.139479547 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.116497107 seconds)
    (207/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.125653972 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.149496927 seconds)
    (209/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.146718704 seconds)
    (210/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.072376378 seconds)
    (211/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.07002162 seconds)
    (212/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.184932659 seconds)
    (213/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.122005829 seconds)
    (214/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.073703516 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.091583802 seconds)
    (216/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.182824102 seconds)
    (217/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.131159674 seconds)
    (218/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.092041358 seconds)
    (219/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.124628311 seconds)
    (220/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.072740794 seconds)
    (221/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.117162228 seconds)
    (222/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.092626866 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.116484204 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.202721813 seconds)
    (225/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.094366372 seconds)
    (226/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.198280261 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.180148214 seconds)
    (228/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.225590335 seconds)
    (229/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.074370172 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.115821797 seconds)
    (231/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.092147029 seconds)
    (232/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.070861327 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.111299542 seconds)
    (234/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.073579034 seconds)
    (235/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.111409966 seconds)
    (236/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.109204346 seconds)
    (237/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.131579914 seconds)
    (238/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.092426668 seconds)
    (239/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.108146965 seconds)
    (240/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.082962345 seconds)
    (241/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.117744858 seconds)
    (242/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.073089457 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.182634612 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.119178022 seconds)
    (245/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.100422752 seconds)
    (246/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.092456592 seconds)
    (247/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.11794667 seconds)
    (248/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.070610168 seconds)
    (249/309) benchmarking ("sort", Float64, false)...
    done (took 0.179501504 seconds)
    (250/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.122014009 seconds)
    (251/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.073418299 seconds)
    (252/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.087383954 seconds)
    (253/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.119844495 seconds)
    (254/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.092019425 seconds)
    (255/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.092805594 seconds)
    (256/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.201378507 seconds)
    (257/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.071018312 seconds)
    (258/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.06628527 seconds)
    (259/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.120371148 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.130446672 seconds)
    (261/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.068978625 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.171837581 seconds)
    (263/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.151713418 seconds)
    (264/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.092266975 seconds)
    (265/309) benchmarking ("sort", BigInt, false)...
    done (took 0.220878216 seconds)
    (266/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.082093804 seconds)
    (267/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.09110438 seconds)
    (268/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.070167445 seconds)
    (269/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.091470451 seconds)
    (270/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.111742663 seconds)
    (271/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.069590511 seconds)
    (272/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.111920214 seconds)
    (273/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.073202593 seconds)
    (274/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.124839274 seconds)
    (275/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.100112627 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.192964649 seconds)
    (277/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.092069211 seconds)
    (278/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.101478459 seconds)
    (279/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.09891597 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.118283433 seconds)
    (281/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.073111208 seconds)
    (282/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.097237756 seconds)
    (283/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.094386506 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.125649562 seconds)
    (285/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.073958798 seconds)
    (286/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.073927958 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.117929386 seconds)
    (288/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.074392154 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.11564194 seconds)
    (290/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.098351473 seconds)
    (291/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.119491415 seconds)
    (292/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.07429059 seconds)
    (293/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.09762515 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.10209902 seconds)
    (295/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.141368904 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.09280145 seconds)
    (297/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.12019756 seconds)
    (298/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.074939684 seconds)
    (299/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.073671542 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.123826566 seconds)
    (301/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.07319569 seconds)
    (302/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.116955915 seconds)
    (303/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.074122255 seconds)
    (304/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.125189696 seconds)
    (305/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.073444796 seconds)
    (306/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.120455611 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.093328611 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.122254153 seconds)
    (309/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.096906831 seconds)
  done (took 41.257109293 seconds)
done (took 42.165195221 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.102095608 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.152740497 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.100667031 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.144312688 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.132230685 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.098406176 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.126143861 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.103302087 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.132408391 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.133867609 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.10516983 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.1006143 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.103112226 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.128553262 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.102660755 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.149890061 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.131870875 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.100203912 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.127540434 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.091631508 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.127444395 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.091293138 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.120637205 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.074830896 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.130871151 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.099312356 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.125805306 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.127297682 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.092745465 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.113511771 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.096641866 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.124404909 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.092452189 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.132078463 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.099318853 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.127196144 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.102631251 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.12934626 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.091468296 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.119027216 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.120014816 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.093064642 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.121714563 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.101862981 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.1233798 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.099185676 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.126413436 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.105525168 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.150034883 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.12343207 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.102290391 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.128976362 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.102990141 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.125634911 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.095228324 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.124693138 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092546692 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.149131397 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.123068533 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094509783 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.121074777 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.096963055 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.118965894 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094768353 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.121811091 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.122686374 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098584455 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.117250755 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097296661 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.119583953 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.087208696 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.121049923 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089718616 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.113329629 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095684619 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.124297397 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.110016997 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.094341913 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.118269806 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.094503488 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.111081778 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094704253 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.114071855 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.098457534 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114854752 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.071968406 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.114948794 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093731735 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110864164 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.097835424 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.117925559 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094707776 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.114535595 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098558328 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.112384902 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.091894099 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.11390136 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.088073814 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.114697224 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090009808 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.11324978 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089786515 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.122100556 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088470212 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.121051066 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.124645954 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.09004204 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117787946 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.089541125 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.111507742 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.104319284 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.123587417 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.086498111 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.118463549 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086110263 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.12171271 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.08580644 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.113831349 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.085973862 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.11429718 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.092343469 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.115084089 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.11365332 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.099558188 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.126543756 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.089813031 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.115650514 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091260805 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.112950833 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.097350247 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.113044992 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.090943314 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.114955414 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.083552814 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115061732 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.094588267 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.125531174 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096337888 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.126346076 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.094502201 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.128861123 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.0974117 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.125604964 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.097700308 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.119309246 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.079900009 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.121020656 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096220474 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.120005676 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.092167637 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.11988085 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.09173096 seconds)
done (took 17.585058344 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.088766483 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.189324022 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.157896051 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.151993024 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.113302372 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.119626262 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.130914794 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.12716405 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.121896055 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.151551325 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.117622303 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.141718826 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.1570024 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.092683004 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.120063592 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.097376212 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.121017413 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.109320929 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.155049206 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.142225841 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.174542096 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.092417573 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.155376264 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.145153312 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.127737062 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.12184998 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.11694627 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.096003501 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.117157296 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103145487 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.135337934 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.089644675 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.115343026 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.136313791 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105458828 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.122225695 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.086898382 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.122127363 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087009982 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.117612054 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.143801991 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.14075405 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.099593764 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.121775193 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.097528566 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.117741374 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.094261776 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.123021109 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.100111291 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.119343119 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127927283 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.162291588 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.0964304 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123995981 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.088434603 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.12685229 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.123493265 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.095807431 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.115506599 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.096914071 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.119257514 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.098380784 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.136211854 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.150828469 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.099168527 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.131666662 seconds)
  done (took 8.988755531 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.105964691 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.14183357 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.108349866 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.155269244 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.113461509 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.089055558 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.11321976 seconds)
  done (took 1.802758425 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.089115449 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.135114176 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.113996806 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.137772273 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.133278775 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.111969673 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125569804 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.091425417 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.133957721 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.088066797 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.139925733 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.153410263 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090584733 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.123243992 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.142066625 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.095809225 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.145859014 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.094227312 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.119634301 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.115768979 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.122735799 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.137147185 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091298278 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.115897984 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.107474674 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.11654797 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.167039695 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.098728412 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116096924 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092233179 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113426177 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.169370192 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.110480066 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.129162839 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.091192336 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.135410896 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.128481256 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087198368 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.132021985 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.096717644 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.13087694 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.088983973 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.118949469 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.08588465 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.122846248 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.125120384 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.093066802 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.115380026 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.094398187 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.134548114 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090859289 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128902045 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089657834 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.122282754 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.090703036 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.125215084 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124518289 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.092942414 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.135151091 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090762211 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.134185155 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.10754196 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.132616892 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.132851037 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092747793 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128901224 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.104016639 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.120261554 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093129886 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.12057809 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.133730869 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.092784948 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116359129 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.102681357 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116048642 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112143438 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.139775236 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117068873 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.103138966 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.115332267 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.092443434 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.115867772 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.116885412 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120728968 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.092994458 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.121033902 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096009721 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.116382497 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.090061318 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.119328171 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.086667756 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.119339563 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.11776318 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.095957769 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.117194096 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.110101728 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.116683751 seconds)
  done (took 12.083098461 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.091280372 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115756975 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.095247773 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.116189798 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.092117677 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.11647886 seconds)
  done (took 1.610501286 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.114784423 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.11953365 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.104074494 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.125269726 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.15781627 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104831408 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.133930594 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124937561 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.110140756 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.130549672 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.130021848 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.10593259 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.139711395 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122277505 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104775327 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121332258 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.130703473 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101696211 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.129216902 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097637836 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.140185623 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122812497 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097573742 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132985915 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119290932 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096786244 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126607081 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102786139 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.130890759 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.12432875 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096107147 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119637074 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095967543 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.127475159 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130828762 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096352228 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123041722 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120673303 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102047811 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.11965377 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105662414 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124283049 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127159738 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094313305 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.125817077 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.122155424 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.09982643 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126717882 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.132920013 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.099888364 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120083403 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.09597865 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119503677 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.093745096 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.123263868 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.125583335 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.096894485 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130402274 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.12191484 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.101041827 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118817562 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093517103 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.126420361 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.119113914 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.109349005 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.122057767 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.100709681 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.128398368 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123551097 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.098732152 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.121541471 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093229619 seconds)
  done (took 9.371769709 seconds)
done (took 34.829658789 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.689247454 seconds)
  done (took 1.678041114 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.718917213 seconds)
  done (took 1.707609473 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.014752221 seconds)
  done (took 18.002600757 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.50551115 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.599011701 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.902603095 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.182054816 seconds)
  done (took 3.177355351 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.957639009 seconds)
  done (took 1.959177302 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.298000127 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.259742538 seconds)
  done (took 1.546498304 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.774125002 seconds)
  done (took 1.769538134 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.355652183 seconds)
  done (took 2.345734495 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.334692606 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.186434237 seconds)
  done (took 1.517056226 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.545647311 seconds)
  done (took 1.546033689 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.854746578 seconds)
  done (took 7.857788857 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.269220666 seconds)
  done (took 1.284029383 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.302459502 seconds)
  done (took 1.310082285 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.525044959 seconds)
  done (took 4.532424411 seconds)
done (took 51.232547943 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.099103422 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127160757 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.103171103 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125058292 seconds)
  done (took 1.460103441 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101458782 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120935573 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100228526 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120412008 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125872595 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096851566 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.122157947 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100164234 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.12193222 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096990233 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.122925702 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119473243 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099270633 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.122420513 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093459133 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124826413 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099893972 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121588932 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124118488 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096473722 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119489139 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097913156 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.12457984 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094286156 seconds)
  done (took 3.679068529 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100560838 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119055706 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096651651 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118077629 seconds)
  done (took 1.450631105 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.101649098 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.143026549 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.138557 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.100196431 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.142593085 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.135537537 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.092451772 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.116763817 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094973157 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125695905 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.091514952 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.150075836 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.13734349 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.099320063 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.126853204 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.088509316 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.117569499 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.137313253 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.10010405 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.126713493 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.095727795 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124863393 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.090105964 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.139887245 seconds)
  done (took 3.829720031 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.170909483 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.148395471 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139160862 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095499241 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.161972593 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141009389 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.087855129 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141725697 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087497596 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.132806814 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118652613 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.13302212 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.129773706 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088012666 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114363877 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.08720955 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.129458346 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129939977 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091386294 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.141361523 seconds)
  done (took 3.487342909 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.098169147 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117575345 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.08861887 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.1167126 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099553526 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.120401427 seconds)
  done (took 1.658379165 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.090547609 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114767177 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090929783 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114683732 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.095180209 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.114874052 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088852589 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.11532116 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090567949 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115444117 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.090422248 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113453928 seconds)
  done (took 2.25351827 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.465526493 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.093623292 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121437004 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.114318219 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.097386917 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.114832996 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.103591561 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.118932215 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.141046359 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.090267733 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115207914 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.092301553 seconds)
  done (took 2.687103831 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237315597 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126429836 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.28735436 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.272971891 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159736281 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172039467 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.283138398 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165076936 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.225044879 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160064911 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204153816 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225348437 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15242347 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191239026 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138276282 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.119131542 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226633907 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240420811 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152836346 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203391717 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226605831 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166955283 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180921658 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150185197 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113379516 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171719956 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.121838298 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129455839 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207086322 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203383948 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189328614 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161994653 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148313824 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237437121 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255153919 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194831662 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.283694468 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137401469 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.171464617 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.168036801 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263789875 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112218407 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231459774 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155546269 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131510056 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192154755 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166834436 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.175275286 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.151026065 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140014389 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22249619 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213501315 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.221219644 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111111062 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231931618 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156378807 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.169177876 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192998539 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251559774 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225487669 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179195412 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.120502563 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189734581 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191944366 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186107152 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.195472338 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.18110415 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149525729 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192130563 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188549763 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192200265 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186894821 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.187104856 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141622106 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169084084 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17272663 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198651371 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229598853 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204852224 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.095621833 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169366942 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150348014 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134047668 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.194621518 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09937809 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24036384 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148790956 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.163766296 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213041791 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16072172 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161565194 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2025479 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22143688 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147724495 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084238292 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156559095 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.157198455 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19106264 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140875012 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16037977 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161922507 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.130413134 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180232324 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.097132954 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202950679 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.092031256 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174908414 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210316626 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.10077397 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162404691 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152737818 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.151125421 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173871704 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225218206 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116878471 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134699779 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209582105 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204763375 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.150547848 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178326084 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.203465418 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.146042091 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15015112 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198710797 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246095743 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139977547 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205146918 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157969299 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135852882 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.10596152 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207555309 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15518447 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161949337 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108546866 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.211381543 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208607787 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.127469777 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111597594 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211156658 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106643914 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133548738 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162482442 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149307524 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.13966293 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.147098741 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.125793616 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210069606 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17877934 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156074564 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16449944 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152841789 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255353663 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142088164 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.149733579 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122483679 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.121894239 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.19240508 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226520704 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104050201 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233929686 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.17278449 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202756428 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199277187 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108988384 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177002116 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132278081 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.092696909 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222752038 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169225178 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161433195 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.196452952 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227224824 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.182014383 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.210395363 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173070754 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175967436 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.165554322 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156608006 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.110971477 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160758273 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166677135 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.124150891 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.143559125 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.13375265 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121363656 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143791375 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134318534 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195045429 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200268949 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190315463 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159159134 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150302193 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182336535 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.129424433 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174685682 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.179359186 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149228363 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.199278032 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220830713 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187751008 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144155665 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201786321 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.122126092 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097488901 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.142583825 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169276725 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135754466 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136411426 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16679867 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182157633 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180378538 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203623462 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210887035 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168666262 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.217823606 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.095845225 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.168678926 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186096845 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177680787 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.187427153 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14281464 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.149871659 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177093756 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159761569 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256023469 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168248532 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176992333 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234333605 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.123032439 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133512908 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152486815 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186008693 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154867487 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17751712 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149519921 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142743457 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162736471 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.133768798 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160403531 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184766976 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163806096 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216615196 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.124393051 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214852199 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100770487 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19294006 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132718813 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16524443 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.110421849 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175511582 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231745105 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147996881 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169263953 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192535713 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13161687 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.308634405 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2113094 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220001453 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1093547 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18678627 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133320801 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165493861 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198132879 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178502136 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160024913 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190708087 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159117274 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.108988435 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141644181 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149833139 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151368216 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.103949651 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.148336031 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.205629265 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.112014326 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213183207 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161427918 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159588156 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174495505 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.150772975 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.117315288 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151613483 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2442715 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176308959 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238609314 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.123644902 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.208433116 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206422494 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126790773 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104613768 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.134791458 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179148076 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136862032 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191960496 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.189577703 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230332403 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180700229 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214406301 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112676437 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.121311819 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158103843 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17525353 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205825275 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154877396 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.159584996 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233050218 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.14334694 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104676996 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17371605 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22649838 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123584934 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227784928 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080115446 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.282920405 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125495265 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132660227 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164398924 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207170493 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.137066283 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.185082647 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173502857 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16939056 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166212495 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150634864 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191764247 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242717014 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203045644 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180871474 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.133277293 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157457945 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177110194 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221121167 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159398945 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.112384003 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233268094 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195291351 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.196644162 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.14319547 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169557115 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170983942 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158375656 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217650325 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107899681 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236282631 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135005772 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193754231 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15509 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143208162 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176382427 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.188802762 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141961071 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216057687 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175789712 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107422221 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134608792 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170612927 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20498933 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129557646 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.128316172 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179779966 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.127342417 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192078496 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259184052 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136821372 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15538571 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12067435 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136494318 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157435817 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159610054 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142732866 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.164271465 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206769228 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.136554909 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192390301 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234002599 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170588144 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174810948 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145705895 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.694250237 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.131322756 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195107575 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15635196 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20573733 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149949525 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174117337 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15867612 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169403477 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228658547 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163124959 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.231756417 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191417371 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.206246964 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10644623 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157995813 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16263022 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.145239693 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152796272 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170009351 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161802661 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.154006382 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.17789278 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170095805 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.135625744 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140157675 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200361795 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156348596 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182707277 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181244229 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140322625 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174416603 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215247659 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107166462 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.206756373 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208603682 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143912433 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154778816 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.13398473 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.128897669 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262503775 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.126412186 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199988835 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204983438 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131069882 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198714107 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.119398154 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221743114 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158768063 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178572545 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147539541 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.160367857 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157543521 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138597437 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.10310633 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156553648 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167559523 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.151086583 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159452598 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.165605719 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195605567 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.123539936 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117318165 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224737692 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193889691 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245148359 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.107608845 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137060493 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162766862 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152813425 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.176925515 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180546226 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.136327024 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137692863 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.136069552 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.132208827 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.112975506 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155264153 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22556344 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167249675 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207961385 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.138657617 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.278410933 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112505363 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156433515 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.117961097 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.103502126 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150849308 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147842691 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160964681 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.219825175 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238819297 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.149927172 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.135559408 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150143004 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.098030202 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137700905 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165866658 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164169168 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17887434 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146197217 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080397844 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159983942 seconds)
  done (took 82.940791422 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.162761264 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.132219489 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.146944164 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.202306631 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.177267216 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.270142939 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.209674763 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.254954443 seconds)
  done (took 2.657818238 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.093900705 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.145105797 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.159196636 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133990116 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092162457 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119684989 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.344467135 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.134248335 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.11604806 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.114484503 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.174087721 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093740183 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.554973189 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.090645875 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.120318304 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.1082585 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.092135564 seconds)
  done (took 3.78412747 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.476585369 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.720571129 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.511648995 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.097546687 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.212386501 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.112776317 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.695234683 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.196633427 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.115324309 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.485603389 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.774787769 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.158892806 seconds)
  done (took 18.669831939 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.099645198 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.12187308 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.108004689 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.136682601 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.095914104 seconds)
  done (took 1.682082178 seconds)
done (took 131.248361901 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.105160638 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.406350306 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071922497 seconds)
  done (took 1.625801547 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.110298866 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.138137865 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109187631 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136052297 seconds)
  done (took 1.613958511 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.100333731 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127865705 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109104675 seconds)
  done (took 1.45032724 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.324729254 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.190493475 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.164586308 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.108433322 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.130022767 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.10252213 seconds)
  done (took 1.454396176 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.099592111 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.12846359 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097241667 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130928013 seconds)
  done (took 1.570519803 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.09740561 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071009347 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101584977 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075176025 seconds)
  done (took 1.455067093 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.117422959 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.133203787 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104258492 seconds)
  done (took 1.476736484 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.133423531 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.139646802 seconds)
  done (took 1.394822692 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.10828165 seconds)
  done (took 1.216618289 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.122720366 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.171035741 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.191194933 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.164908689 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.23042877 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.1661053 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.141737656 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.11483855 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.131262004 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.14491231 seconds)
  done (took 2.692966502 seconds)
done (took 17.855498391 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.10556669 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.514859964 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.413162676 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118318227 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.723474876 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.38043171 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.037174479 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147743332 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.165993743 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093288064 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140495362 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.672310311 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.064780296 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.469130865 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.023992282 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.373143836 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.704868751 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.096295888 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119522658 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093956423 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.021516423 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091750489 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123411113 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092152777 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.702886104 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.425911095 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094529742 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.371734147 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092161662 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.12775481 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.382392782 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124188689 seconds)
  done (took 17.202640638 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095665338 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.175760227 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098167135 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.138697053 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.124116634 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094837409 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.125583684 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093172695 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179734658 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124335063 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111092432 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.124238858 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126935129 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.09595965 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.143594903 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092366048 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.12618363 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092320075 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.12221555 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122187319 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112105037 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121670939 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094324255 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122612941 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094300687 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136417941 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123408823 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.09330048 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121404241 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099613142 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.128596705 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095198933 seconds)
  done (took 4.868643076 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.143374967 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.184668016 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.129587764 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.12671933 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.169179831 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124232699 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.201144175 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.117790677 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.183225489 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12420459 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141015633 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092997213 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.158322219 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.124674634 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.115133332 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.122065245 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097225561 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122207185 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092296781 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124926842 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.141023604 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093584212 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123303052 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093676293 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.124428845 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107651458 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124889128 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121770733 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093953666 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.128090764 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099913054 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124857598 seconds)
  done (took 5.20017607 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.099819122 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127100002 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109544985 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.139966401 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095041156 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125819238 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097169092 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.125722184 seconds)
  done (took 2.043017571 seconds)
done (took 30.425953073 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.114256703 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.128427734 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107113053 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.136484843 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.10191937 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.132448462 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091651886 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.135408129 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.135443392 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102457648 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.138357172 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092002655 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.124309655 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091982553 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.136063301 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.09776688 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.134183704 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102540138 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.135007653 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.133070095 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095134229 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.135779266 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.104155185 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.13490424 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.10446423 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.13478637 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.138225756 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.103143347 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.12434234 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095025655 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.126437392 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.10485237 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.125640205 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105959657 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.128618047 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097084879 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.124890504 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093615785 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.134930347 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.133154817 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.099969614 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.135324589 seconds)
  done (took 6.061538536 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.108428054 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.141133432 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105314697 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081223815 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.118858309 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081014075 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.139217059 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079317965 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.11107999 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.10811719 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074903316 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.108724424 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078835015 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.102499227 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078312847 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075474349 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.109644858 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076000471 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076571491 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.107826041 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080252224 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073583456 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.109647565 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.07873824 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075678551 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.111145262 seconds)
  done (took 3.622442765 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100393247 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.136850986 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113062375 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.18520851 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.162398124 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099802513 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.134769809 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.140831658 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.109336815 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.122008327 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.097359959 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.151424406 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112229044 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.131184446 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092999213 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.139040783 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136614442 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.095317322 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.129818716 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113863332 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.140050785 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.103071492 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.144574347 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.134058925 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.091648534 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123930631 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096395042 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.136186241 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097326131 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.131756091 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096012777 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.125270059 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.123156356 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104680366 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.12701339 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094314994 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142724533 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.103199517 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.131523557 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.092622245 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.125394916 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.122740571 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114402077 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.169449736 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.092917761 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.131372671 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.129361036 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.103218543 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.123118786 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111493216 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.1334731 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092646847 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.126821608 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.09197099 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.122631287 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106244138 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.124640829 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.097560131 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.132930866 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.125263274 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.10620883 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.126230879 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108361928 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.122641023 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099489938 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.122493685 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.09389281 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.122287807 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.143564362 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094122071 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.164434792 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.094000046 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124006271 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.101635979 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.131140384 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128825972 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.09303797 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137495074 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102522756 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.126265834 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.102010498 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.126637169 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095577238 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.141282892 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.124451603 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095250731 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.123264862 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100225196 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.125469357 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094507239 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.138003043 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.093447807 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.127327963 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110894789 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.122349897 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.123329278 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.099777153 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.127468388 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092590129 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136689794 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098853555 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.124089382 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.103970613 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.123524695 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.12579233 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103587716 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.128144297 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.0921265 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.128363844 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099142979 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.124104672 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.094466062 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.126777658 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094541561 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.133131614 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.099584574 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.127815861 seconds)
  done (took 14.929862245 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.231498632 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.214549574 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.238706745 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.262394659 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.136344476 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.1149367 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.213847421 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.155427614 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.124452492 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.160385778 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.162007267 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.183899159 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.141073656 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.18068524 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.142849464 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.122491405 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.112628057 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.165010449 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.216626898 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.292223511 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.112203856 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.132943273 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.163003317 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.161149401 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.106476401 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.135106878 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.140675498 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.105406536 seconds)
  done (took 5.780579651 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.111580672 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.158406865 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098785602 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145500708 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.149995563 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092617276 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.128908692 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.095057384 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.136695662 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136822189 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.09348141 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.130458643 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.099860169 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.133581193 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.12417926 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103025718 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.132791843 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094596481 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127488083 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.09652377 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.130568325 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101206747 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.127778459 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.121218876 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.102802361 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.12217359 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086195245 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.143011221 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.12219916 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.115865901 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.121893821 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.099651353 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.133623373 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.092747144 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.124374212 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095196611 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.126306145 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.094287116 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.126215113 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091760811 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.122945633 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077323277 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.123478138 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.136153915 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.100242841 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079690934 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.130240428 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.128467529 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.094779903 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.120707565 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096858079 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125531325 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097344507 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.131467234 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.099196114 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.124839939 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096280011 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.117449952 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100207104 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.125683912 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085095766 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.121681361 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.099549315 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.1182219 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101583953 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.129227889 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.09156555 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.12637567 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097585134 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.131187811 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.094991659 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.127869804 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.09152849 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.127124317 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095278755 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.128757265 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.096813093 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.122901928 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.122919468 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.094716299 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075850886 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.124129936 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.07473422 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.127780311 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092288666 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122679443 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.09578663 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.130508253 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.138251672 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095203832 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.133692819 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094144246 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.123530148 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.097111184 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.114496949 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096277244 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.139887317 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.14082577 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094683809 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.122309812 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107345244 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.127753734 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092878259 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.106742963 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.101706694 seconds)
  done (took 13.030779523 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.131103318 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.154519537 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.094968723 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.144346505 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.158098632 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.158298962 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.10166335 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.131779517 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.09584412 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.143394739 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.094197836 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.132522122 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.097150779 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.138213039 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.156709523 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103288968 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126542522 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.106872351 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.132348259 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.170962026 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112120013 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.143393219 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.107494168 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.125739687 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.129202927 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.111001929 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.162327899 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107715021 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.137494054 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.142447247 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.10929932 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.162544639 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.143793123 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.098474379 seconds)
  done (took 5.530594325 seconds)
done (took 50.081577664 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.255293312 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.452454346 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.227108208 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.219988901 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.244319418 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.234602916 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.259572641 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.222688106 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.868880657 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.231826335 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.498116304 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.90506845 seconds)
done (took 60.773590077 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.290069933 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.356827968 seconds)
    (2/2) benchmarking "String"...
    done (took 1.488734619 seconds)
  done (took 3.996993188 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.572264705 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.162498308 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.482811431 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.224757797 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.221525513 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.516257308 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.90716791 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.590186792 seconds)
  done (took 28.252146703 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.23634875 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.619374692 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.968502312 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.967679143 seconds)
  done (took 18.9446543 seconds)
done (took 61.207699963 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.209761135 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.229933838 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.23007313 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.201671885 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.356328822 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.250792327 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.538606678 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.245133851 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.242261289 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.205303151 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.243919036 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.24023219 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.236758553 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.525269157 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.228240327 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.224769824 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.305188388 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.730254001 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.635489969 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.236215114 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.241038264 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.287719645 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.249017505 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.228458053 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.241924356 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.223235401 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.229087418 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.221581326 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.856698194 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.230098739 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.243471941 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.732547781 seconds)
  done (took 191.446270388 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.223383384 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.256636436 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.361976522 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.266247857 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.741945836 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.427211125 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.358029792 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.834588574 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.248278795 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.249394968 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.584783532 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.225787169 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.642801064 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.196182257 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.23278497 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.224170812 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.526379419 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.676087262 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.243584082 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.450925161 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.25204165 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.450084906 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.372824722 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.581813669 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.252688235 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.266679776 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.228097671 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.250474031 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.42092705 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.469418682 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.286997215 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.26183776 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.855906374 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.088313361 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.239941424 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.270801235 seconds)
  done (took 151.669339113 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.527144016 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.225247678 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.224762517 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.224265784 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.262201075 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.226491939 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.81471485 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.817813499 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.721656622 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.851631418 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.290128572 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.553387378 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.230907663 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.326636776 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.240369763 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.226834408 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.243618981 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.272022188 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.227669194 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.227673605 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.8167601 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.239470018 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.261783328 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.233607188 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.228693296 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.264202144 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.620853347 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.225778594 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.263127312 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.561582675 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.278640892 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.229879241 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.636080046 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.751367032 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.346885787 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.231905045 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.265378279 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.230049401 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.509798256 seconds)
    (39/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.227447792 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.231008065 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.230828857 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.23200938 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.925568233 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.233123982 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.81802223 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.233440191 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.208016113 seconds)
    (48/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.232705558 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.226026597 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.232879084 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.646684037 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.947703813 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.246362125 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.232251895 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.233382207 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.230202895 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.23061967 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.263353324 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.774187644 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.330186138 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.249749992 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.230439051 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.23575089 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.264633393 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.231975702 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.353859232 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.247843371 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.408320312 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.307242959 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.336850419 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.822096135 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.236590334 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.328424848 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.351413506 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.230824428 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.230980546 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.232206308 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.231880249 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.34853582 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.233140552 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.664737349 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.234933989 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.2360519 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.29327451 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.335120342 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.234344385 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.659531495 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.237937029 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.236381983 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.059078975 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.235546194 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.329183957 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.230154028 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.237308989 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.234839399 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.664628178 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.824616232 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.503215753 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.23520524 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.628098524 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.23569744 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.683770458 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.794502414 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.952823697 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.236096291 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.346480606 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.236264043 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.234063765 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.233343158 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.263641973 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.249682302 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.292058436 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.232751075 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.633176302 seconds)
  done (took 350.783238306 seconds)
done (took 696.575982434 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.894614878 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.884207726 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.004332153 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.881299107 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.864184581 seconds)
  done (took 10.685989764 seconds)
done (took 11.846190851 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.428198015 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.431306798 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.298196456 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.426880077 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.261898511 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.445837492 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.401910248 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.259069858 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.338889552 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.318452395 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.337917686 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.289900123 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.264713534 seconds)
  done (took 18.660321427 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.560339141 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.573644122 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.299518639 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.560466802 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.277229835 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.560956572 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.446685692 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.454238285 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.463137819 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.270828416 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.251124311 seconds)
  done (took 16.878987653 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.590177221 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.562642809 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.303209927 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.561213959 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.282038974 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.564148946 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.449639671 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.469306166 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.456368017 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.275555275 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.247319764 seconds)
  done (took 16.923926313 seconds)
done (took 53.622216265 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.246613184 seconds)
  done (took 2.404589502 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.277973422 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.442524846 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.264442572 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.252727443 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.247095767 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.244780099 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.250384555 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.245764703 seconds)
  done (took 11.388374929 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.245886419 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.238710011 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.241623556 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.238538782 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.245564396 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.241826194 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.243701074 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.244012373 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.243628798 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.239060799 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.243711397 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.243449523 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.240409562 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.244856709 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.241791978 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.245897707 seconds)
  done (took 21.042268125 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.245604021 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.24306042 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.243607873 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.241653605 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.242877134 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.245029885 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.248751014 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.243016523 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.246433702 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.24377467 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.244434227 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.24349254 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.245346789 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.244872892 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.244549508 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.245022047 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.243955476 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.243865645 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.25147902 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.244507543 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.246609999 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.241381431 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.245560873 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.245314982 seconds)
  done (took 31.038432338 seconds)
done (took 67.039225814 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.485684228 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.066249002 seconds)
  done (took 9.712852432 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.249379011 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.244455634 seconds)
  done (took 3.662711308 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.248960795 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.244668674 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.247879009 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.244319587 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.245429895 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.245959463 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.244440978 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.248226567 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.243673805 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.247599107 seconds)
  done (took 13.62310124 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.247411549 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.247512554 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.245305918 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.247481021 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.243835693 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.248271687 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.249750636 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.24602638 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.247597676 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.244204062 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.246258707 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.244207874 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.247296462 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.247290695 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.254554978 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.247935828 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.246157985 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.24541711 seconds)
  done (took 23.610288304 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.247233426 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.245655086 seconds)
  done (took 3.657923341 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.247569031 seconds)
    (2/7) benchmarking "second"...
    done (took 1.24726671 seconds)
    (3/7) benchmarking "month"...
    done (took 1.24523368 seconds)
    (4/7) benchmarking "year"...
    done (took 1.246238116 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.243247724 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.244703168 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.248645811 seconds)
  done (took 9.887633072 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.250414683 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.42580296 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.504970871 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.858746123 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.253640237 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.254004599 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.118080058 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.252127225 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.252957344 seconds)
  done (took 14.338002111 seconds)
done (took 79.654431924 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.263767382 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.260192727 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.458825601 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.260269254 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.260578647 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.543956885 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.269383899 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.371972963 seconds)
done (took 37.854873503 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.249639986 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.994673036 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.004720753 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.25993647 seconds)
  done (took 11.424498142 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.22563026 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.231158308 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.246712349 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.279006581 seconds)
  done (took 18.150898252 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.322772761 seconds)
    (2/2) benchmarking "read"...
    done (took 1.585624372 seconds)
  done (took 5.074305173 seconds)
done (took 42.067577416 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.253886381 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.25148784 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.246959074 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.251738408 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.248356055 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.247217522 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.249458811 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.256447236 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.251563089 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.250050949 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.248821408 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.252563361 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.249593911 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.24979446 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.252463477 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.250591298 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.252651814 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.250831661 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.248454058 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.251765099 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.248741467 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.252579815 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.251828103 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.252183319 seconds)
  done (took 31.18424716 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.255324515 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.256939347 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.254501674 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.251993471 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.255231069 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.255586145 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.256152267 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.250410036 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.255983775 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.256513455 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.25267017 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.253485213 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.258069895 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.250702398 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.25330081 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.252196718 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.257478923 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.2505002 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.25273268 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.253446874 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.254400946 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.254254067 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.249916077 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.252782429 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.253046965 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.252685217 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.2585415 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.25752127 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.254928348 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.25308135 seconds)
  done (took 38.796690085 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.25822292 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.263454244 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.255644126 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.252689248 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.257308486 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.259261228 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.255480193 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.257855862 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.257224741 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.256235148 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.259368916 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.255100825 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.255023049 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.259192024 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.25747566 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.257189626 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.257043211 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.256643 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.254631433 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.254605864 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.258711721 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.257681383 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.256248047 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.259884946 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.254238946 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.258150729 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.255085612 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.256251544 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.257228372 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.256172312 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.257089223 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.252625008 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.256197184 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.255704244 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.255546993 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.257142341 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.263024801 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.268353673 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.262516273 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.258620518 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.257182069 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.254421144 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.257055556 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.256294553 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.258437763 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.257593922 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.257210662 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.258482631 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.256686708 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.256749881 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.258550007 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.259640566 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.257333847 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.257446003 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.262256496 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.259356038 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.260063803 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.258127875 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.262137833 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.255755704 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.262793706 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.258225961 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.25964431 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.260320752 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.257863602 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.259945258 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.259268948 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.262591163 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.261445057 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.257337197 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.261264869 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.259149891 seconds)
  done (took 91.752485111 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.261390217 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.258324304 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.254620517 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.256090614 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.259125084 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.258940584 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.257944773 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.25880322 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.260659931 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.260188591 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.259629923 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.263467697 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.258659157 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.261661947 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.262740127 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.255845179 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.263735389 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.259567565 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.262808279 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.2633788 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.260994213 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.256906507 seconds)
  done (took 28.890290923 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.261991248 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.264075633 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.256430296 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.261790837 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.25973353 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.262211029 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.261768325 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.267944704 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.260870551 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.263448258 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.260559243 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.265134538 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.267330449 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.257758812 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.261239147 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.259997254 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.259386023 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.259983262 seconds)
  done (took 23.891847175 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.261614162 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.259502918 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.261799364 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.260435591 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.261437728 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.260559604 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.259288891 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.260953705 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.264969077 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.261710012 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.262694109 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.26277087 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.262263881 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.260701337 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.263449554 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.262621614 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.266695641 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.261371141 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.26128811 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.260968066 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.260556583 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.265402089 seconds)
  done (took 28.940739608 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.265478123 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.260678314 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.260255302 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.260979307 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.26258206 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.265642271 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.263051957 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.261272453 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.262543479 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.264952692 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.261662991 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.263767504 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.262407415 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.263421589 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.26124815 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.259964807 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.266783209 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.262633182 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.265178738 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.263695479 seconds)
  done (took 26.437924154 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.264676477 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.264995361 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.266572676 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.265098544 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.268117272 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.263583658 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.26810634 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.267139168 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.269950758 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.266811849 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.268296561 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.26553322 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.262845833 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.264167053 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.267402848 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.265427307 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.266083961 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.265225002 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.263227095 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.264093116 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.265738326 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.269272143 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.265529881 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.265876131 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.268770387 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.266637918 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.264950144 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.269409667 seconds)
  done (took 36.632505063 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.268525663 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.263956431 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.2620857 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.263678492 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.264649241 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.264560726 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.264823002 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.262814985 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.267846285 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.262667301 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.26785322 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.268077204 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.266293722 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.265587505 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.26876793 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.265751743 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.265416571 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.265376946 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.270715849 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.26312872 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.267762012 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.269639527 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.269137319 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.267118717 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.269769003 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.266387976 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.265598675 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.26591854 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.270745632 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.264152987 seconds)
  done (took 39.174930565 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.286765542 seconds)
    (2/2) benchmarking "in"...
    done (took 1.285354497 seconds)
  done (took 3.75455711 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.266380092 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.266478293 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.273396316 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.266002421 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.264233055 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.268200844 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.26886603 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.269487208 seconds)
  done (took 11.327929695 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.270311025 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.271470511 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.272729596 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.272653414 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.272423594 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.270693081 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.27807123 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.291451151 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.272570675 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.270810127 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.281992741 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.280567234 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.275700632 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.271946064 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.270636556 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.278887598 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.270471925 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.270327365 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.273754721 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.270190397 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.273962112 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.277698759 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.272219124 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.267851768 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.274879944 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.286831728 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.293346228 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.271639959 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.275055024 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.27490515 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.271193954 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.271926201 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.273948006 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.27337443 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.275927847 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.274498785 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.28293529 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.294459161 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.279860931 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.291730243 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.274729997 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.273032977 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.271840585 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.277853331 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.271586057 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.273591164 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.272537523 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.269981499 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.274070627 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.274672508 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.281985052 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.271068373 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.272198576 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.279906616 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.273824444 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.277861521 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.293585861 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.277006592 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.285001779 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.286981635 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.304431923 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.295499934 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.276841642 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.272874268 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.288154977 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.302651704 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.280382106 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.291534807 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.274053548 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.275884851 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.280946404 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.304384494 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.302361056 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.275966918 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.274637 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.275635848 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.274313154 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.27784621 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.285155127 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.297158578 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.275382174 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.275979934 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.285561224 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.298706347 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.274758494 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.272540287 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.274031975 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.27640055 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.274581545 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.285799373 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.291459332 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.275048645 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.275719149 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.280169233 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.274234313 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.278850464 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.275250586 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.275997351 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.274595621 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.273533188 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.275929803 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.280747123 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.290248507 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.274480077 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.275802345 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.282709674 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.295690357 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.27738514 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.281038658 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.275775094 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.278429781 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.276469352 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.284352982 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.275378585 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.279752047 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.286742323 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.27995069 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.278322607 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.275189775 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.276252968 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.2860277 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.306193837 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.277639088 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.27583784 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.279959616 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.293894052 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.276609966 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.280462191 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.279034836 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.27439369 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.276717097 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.278970225 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.282428247 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.28267759 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.275015305 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.277480073 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.275953502 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.282151327 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.279812352 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.278102371 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.281337683 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.276237635 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.27997223 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.278452972 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.279479539 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.280824545 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.28391445 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.295190066 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.279930528 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.278813565 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.275827508 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.282109568 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.27841007 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.279763622 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.281431818 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.281041669 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.279696975 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.280219839 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.28158034 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.281926235 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.282709131 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.28316068 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.287594379 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.286941428 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.283489332 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.276621244 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.281000408 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.282516291 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.279237536 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.279888107 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.281840858 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.280136316 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.284080397 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.291746809 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.281898408 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.281695136 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.283678873 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.278320314 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.28184391 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.280686848 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.28666489 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.291503577 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.281959009 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.287845773 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.297183164 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.281458096 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.280619185 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.283091034 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.281088882 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.281807222 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.283777006 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.290144873 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.296251 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.304127093 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.281041122 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.287342508 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.281947835 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.289052925 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.284508367 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.280036011 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.284793083 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.283234869 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.283207626 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.284194739 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.285654046 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.281600634 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.281060753 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.287413765 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.285440123 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.283137086 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.285494436 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.286014859 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.285752131 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.280204034 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.286606753 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.289080476 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.284576235 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.284102433 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.286496044 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.284772162 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.281641525 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.283452434 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.291016377 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.280049188 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.28624696 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.288322949 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.284063014 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.283948564 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.283813028 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.284835655 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.281960091 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.29454666 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.305934523 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.288017714 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.291682527 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.308279133 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.284891789 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.287304307 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.287256064 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.282796267 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.289354881 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.301039221 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.291510769 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.289553464 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.285055055 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.285915949 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.288324933 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.29734323 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.298696725 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.287623751 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.284711438 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.289787849 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.286327123 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.287470665 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.290030452 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.287349973 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.291168427 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.288700635 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.288233652 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.295156404 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.286874312 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.287175039 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.287814328 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.292033365 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.303470145 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.296334223 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.287396333 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.292379542 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.293111931 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.294572586 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.293799925 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.29137566 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.293638922 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.302471336 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.31129609 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.299664702 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.312094024 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.297787643 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.300706332 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.312079765 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.294393621 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.296856902 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.295616132 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.293355968 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.295291402 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.292809399 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.293167026 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.294614088 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.296894246 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.295115621 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.299044069 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.297018697 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.291696438 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.292884829 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.292605982 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.293066803 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.291345132 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.294589373 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.29909844 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.290725586 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.294221041 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.296668977 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.30064005 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.311120235 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.298672794 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.296416407 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.298511657 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.297411735 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.296857663 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.298278602 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.301819902 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.305641566 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.303076642 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.309100826 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.300419417 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.30867109 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.299501894 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.301186972 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.309020628 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.298068071 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.297954597 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.296978253 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.298363515 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.304299094 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.315438165 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.301838169 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.303276176 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.29781453 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.297973944 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.295695483 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.296633364 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.300006216 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.296748475 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.307169664 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.315737851 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.304665982 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.301235103 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.294904869 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.293944119 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.298193241 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.299255356 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.301959394 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.29573839 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.295684783 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.29540521 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.296815459 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.296477918 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.297581683 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.299459382 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.294767784 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.298715662 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.307736 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.314749132 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.309031165 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.297071672 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.309430126 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.312051534 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.306435856 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.314646064 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.300069153 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.29776424 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.297286111 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.296695929 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.301208504 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.301242988 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.298275411 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.299148331 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.299504003 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.301263755 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.302725812 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.296927974 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.294088847 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.296501584 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.311897799 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.324149184 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.303945262 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.306914371 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.299344144 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.297317793 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.301437018 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.29716055 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.293179875 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.29859556 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.310751699 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.30707055 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.295988968 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.300161707 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.29940339 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.297493293 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.298968108 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.297817823 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.297523895 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.298819802 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.295963836 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.29749484 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.302441885 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.295172164 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.302480602 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.30336982 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.302363689 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.310964589 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.312490492 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.298396312 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.300982465 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.299803564 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.299940207 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.299545568 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.297747876 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.302058177 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.302040366 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.30707716 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.310282364 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.314675944 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.304369218 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.294316437 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.301468983 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.304853956 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.306757546 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.301948993 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.301257448 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.304352738 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.305555822 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.300792235 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.30434043 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.304904661 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.306487997 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.300277985 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.304653101 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.305473082 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.311305168 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.306233739 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.298211027 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.300125286 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.304200579 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.305657697 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.304427624 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.314402667 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.324625115 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.317558875 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.317762876 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.308364819 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.305906356 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.310332824 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.31220971 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.3056085 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.307058735 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.305908603 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.302599436 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.308929381 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.308171699 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.3080143 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.313820825 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.319880466 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.30693572 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.314743319 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.323710571 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.301453855 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.305859933 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.310604155 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.308864682 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.304501255 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.305038938 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.308224465 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.316581828 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.325998822 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.303634539 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.30713121 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.309276939 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.306716351 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.315135621 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.309159288 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.308998153 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.306001215 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.306804166 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.303370484 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.304947904 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.303914096 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.304692916 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.305505977 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.311753686 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.318204029 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.30279024 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.309713762 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.309716172 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.310141809 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.308761241 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.307709291 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.307910239 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.308534096 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.306332647 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.309848764 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.309760121 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.312265565 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.303236059 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.310644811 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.310670593 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.309415898 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.307507385 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.319820616 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.317297896 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.309399136 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.307064508 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.306358315 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.310989264 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.304845483 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.308714048 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.309759681 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.310873769 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.311908723 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.30892394 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.308757116 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.314357185 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.329597043 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.328657473 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.312120778 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.310414395 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.315358006 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.310799872 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.307833898 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.308025078 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.310666855 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.316802884 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.318792488 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.311872677 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.312757849 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.329750401 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.313806282 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.313688366 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.312998223 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.322493886 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.317244822 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.309259181 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.309968842 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.315816278 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.332405173 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.30801151 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.322786419 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.343799582 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.328537592 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.315313021 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.314216036 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.311765554 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.307911682 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.310322808 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.312662355 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.313091401 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.314886997 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.314801594 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.312268049 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.320623072 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.315045319 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.314089458 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.312911327 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.310677035 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.31466858 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.31053176 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.314557483 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.307951044 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.312188689 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.310488784 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.312068142 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.312444011 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.3263154 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.335845263 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.311698367 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.308679131 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.303473738 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.31735557 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.310339795 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.320985033 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.317647475 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.314241248 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.309602998 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.31051265 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.309053345 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.308477566 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.31587302 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.314960016 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.31350886 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.313246308 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.328774706 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.334409222 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.316799377 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.311176623 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.316970599 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.315484567 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.313930617 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.31468645 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.315498741 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.317733315 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.316130743 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.322139716 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.316306934 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.31280825 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.318384369 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.323962705 seconds)
  done (took 773.488777538 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.315124846 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.31159239 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.312264178 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.311759008 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.31556649 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.315955144 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.312227133 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.311935577 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.313351479 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.316372703 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.31504244 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.312922506 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.315904159 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.316674066 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.311894099 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.31450054 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.31460969 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.315982185 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.311792668 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.315060707 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.316115991 seconds)
  done (took 28.82581992 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.315670643 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.315482005 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.315941335 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.320468168 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.315490952 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.317975266 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.317079758 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.315378063 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.32078578 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.315292233 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.317211829 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.318745749 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.316147784 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.316361281 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.314471111 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.315491482 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.319338669 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.317275407 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.319155396 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.317535454 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.318618147 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.317172252 seconds)
  done (took 30.206937682 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.319044262 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.318565207 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.319672085 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.316893722 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.321662453 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.315177854 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.317961275 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.320142309 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.318461833 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.318965704 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.32048371 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.315863708 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.327546655 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.318575115 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.323309615 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.317385461 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.465157148 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.317571022 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.318800225 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.319053058 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.316459306 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.323368417 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.334950414 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.318252529 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.31658853 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.316281676 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.313130599 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.314758323 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.320322623 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.313731155 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.318156733 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.320852413 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.313636329 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.31772734 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.315483327 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.318851175 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.317827614 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.317072381 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.3097755 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.313068463 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.329092519 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.337240773 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.31886923 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.326078899 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.338199857 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.318378939 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.31929048 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.326499597 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.313608322 seconds)
  done (took 66.038509959 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.316843946 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.318263785 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.312984735 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.317900662 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.321821979 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.316806397 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.314418622 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.313335531 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.316549709 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.316382832 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.31718578 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.316321636 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.315985569 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.314753044 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.317028817 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.312917332 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.321916088 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.31413978 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.315136842 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.315424949 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.316547249 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.318490655 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.318768633 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.316456028 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.316971774 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.315986652 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.317154292 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.323635394 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.317042143 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.316519512 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.318235531 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.317560472 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.317152221 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.315277306 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.314301932 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.316460143 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.318368873 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.317509836 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.31818487 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.315175642 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.31677447 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.318467753 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.31789367 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.318247436 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.318084553 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.317239159 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.314639202 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.320490556 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.314834874 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.318593225 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.322041568 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.319264236 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.317850658 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.31447255 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.317874595 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.323218777 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.312961105 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.32014108 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.320383047 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.316627466 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.318572606 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.321806075 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.316356672 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.318923285 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.320397258 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.319958402 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.319442929 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.324722183 seconds)
  done (took 90.826842991 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.319632763 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.318118937 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.318980003 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.321630829 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.318772174 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.317525799 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.317905218 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.315077482 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.319401371 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.318441304 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.31742477 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.320458097 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.323865906 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.316279988 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.320685165 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.317064024 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.318438784 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.319155992 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.317771879 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.31981394 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.320563966 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.324396824 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.318155708 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.322159724 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.31851665 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.319236558 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.319310279 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.319614164 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.319522954 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.321222921 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.320113139 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.324027208 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.322318514 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.321379368 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.317633788 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.319076543 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.317993031 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.316441579 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.317967573 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.320138457 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.317031413 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.320022862 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.31998482 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.321459396 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.318179566 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.320253346 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.320415299 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.318913923 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.323726189 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.319318894 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.32082905 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.317870708 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.318572119 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.315716013 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.316727663 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.324822138 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.320574567 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.319767355 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.318305662 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.318675716 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.318842566 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.325410791 seconds)
  done (took 83.045608642 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.320411348 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.320554854 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.321282654 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.320170803 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.322600427 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.323343013 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.331019366 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.322884812 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.326083773 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.324215785 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.326403586 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.325094133 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.319242285 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.322730978 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.317930538 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.31809318 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.325736618 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.317768955 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.319459169 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.319435162 seconds)
  done (took 27.67730688 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.322855746 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.324336426 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.327140714 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.324563121 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.327020012 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.322380256 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.328535666 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.328035012 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.32457429 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.322071231 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.322584199 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.319606902 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.317819619 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.318927142 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.31995117 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.319821976 seconds)
  done (took 22.411584408 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.317500963 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.321615213 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.319211254 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.320030115 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.319260633 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.318948664 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.319638401 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.318738403 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.316268081 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.32143198 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.319703475 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.320535363 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.31993733 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.32190865 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.3170119 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.320019575 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.316707709 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.318732212 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.322076567 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.321251757 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.320677724 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.31882553 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.319621855 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.320079628 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.313516842 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.316724549 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.317212491 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.31892509 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.316475316 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.320190262 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.317916268 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.318445826 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.317850344 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.317943101 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.318039709 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.319274701 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.320723865 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.321429872 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.321524401 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.319540685 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.319622817 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.318275504 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.318822549 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.323159308 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.319020522 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.320525584 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.318432242 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.318809696 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.319021532 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.317810237 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.321049287 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.322398876 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.321143974 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.322663281 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.320718695 seconds)
  done (took 73.810606067 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.321895818 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.321826317 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.318347216 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.321072572 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.322393211 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.32001147 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.321527515 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.322196921 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.318021836 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.323771451 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.321819416 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.324781499 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.322293491 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.321976452 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.321020541 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.32218026 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.319214146 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.320654292 seconds)
  done (took 25.028390059 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.320930668 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.321634988 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.323390385 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.321008946 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.320310761 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.326117466 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.3192924 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.323220582 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.321971436 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.322935582 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.320300056 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.324197987 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.323351691 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.325065789 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.321570011 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.322266652 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.326142395 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.324524336 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.321050953 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.322333006 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.323299055 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.324614672 seconds)
  done (took 30.34358793 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.324013447 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.323551236 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.323473648 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.33866304 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.343973427 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.348335859 seconds)
  done (took 9.245576196 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.330656525 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.323841818 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.320816711 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.326820262 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.32511663 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.321511428 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.324010464 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.321891404 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323657992 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.323476337 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.322496545 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.324564493 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.324037995 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.323145663 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.324665582 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.325032377 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.322790031 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.322560852 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.32372089 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.326272953 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.324870217 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.325892046 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.322312718 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.323800915 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.323113112 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.322793578 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.327758824 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32290367 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.323028933 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.326249537 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.326145647 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.322790962 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.325835132 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325786041 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.326073033 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.325289949 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.323567412 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.325596071 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.326090945 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32519597 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.325664781 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.327010422 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.326511769 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.324880358 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.32512827 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.323302475 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.323223966 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.323666551 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.324942501 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.328295899 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.326446499 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.324266867 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.326787304 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328762389 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.327447899 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.327433316 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.325476432 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.323821181 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.325809037 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326847265 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325896464 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.329345234 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326206087 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.327671862 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32888345 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.325706319 seconds)
  done (took 88.722111999 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.325034701 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.325777575 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323149481 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.328664745 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326146228 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32618773 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32620963 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.327937544 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.325724067 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.326132955 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.330217009 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32588649 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.326326908 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.326878884 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.326292567 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.326151014 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.328116445 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.324952261 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.328151097 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328997465 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.326406747 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.326097561 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.329165587 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.327455744 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.327329995 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.332770575 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.328568543 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.327737751 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.325961715 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.327858744 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.328861881 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328656296 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.327084748 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.329165992 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328262725 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.328368734 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.328543693 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.328405211 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32880922 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.330419336 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.328872625 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.332043149 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.328673205 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.329668757 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.328669304 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.330808435 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.328192826 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.328918208 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.329821578 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.329140361 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328566025 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.327927263 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.330141141 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.328746615 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.327764217 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.329336683 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.330257355 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.330168899 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.329365857 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.333038798 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.329648766 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328834839 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.335167601 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.329944009 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.330376539 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.328253423 seconds)
  done (took 88.919370767 seconds)
done (took 1800.541744693 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.365596575 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.344508771 seconds)
  done (took 13.960830342 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.4924828 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.444406535 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.325607282 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.32133758 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.325913518 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.31955482 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.328234256 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.326044761 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.326889153 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.327093916 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.327368404 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.510941592 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.330230352 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.326506661 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.327971171 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.422279767 seconds)
  done (took 43.026992319 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.35572759 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.332539897 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.449514755 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.350637201 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.355341896 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.526227694 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.388479733 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.333712593 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.510455977 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.37597677 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.967487577 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.356267481 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.331403108 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.493560912 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.349109096 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.524607669 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.587007817 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.970450077 seconds)
  done (took 30.800899193 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.804180088 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.337561654 seconds)
  done (took 9.385007761 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.371091482 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.35358534 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.332394956 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.367365793 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.372906705 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.361028486 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.387409844 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.386483273 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.327284671 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.343289228 seconds)
  done (took 64.848513988 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.349254548 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.331930149 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.330987449 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.32926165 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.321647621 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.339638149 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.328805801 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.323281302 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.173769478 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.463112554 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.332084274 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.338167069 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.349256052 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.330109889 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.328936239 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.365257808 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.486106251 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.328005799 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.328328526 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.335582955 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.330746453 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.437397238 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.374534073 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.332309283 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.45964388 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.163656131 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.3363392 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.338785365 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.512108845 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.330303048 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.330137337 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.331068346 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.33218995 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.941013508 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.815803711 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.343455014 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.354654275 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.34176647 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.327633825 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.489090235 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.331097087 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.336970994 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.326504445 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.812331615 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.466734468 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.449858788 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.560999108 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.348495438 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.332401737 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.395973547 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.334140227 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.332666481 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.361152008 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.086893179 seconds)
  done (took 111.756788689 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.355601951 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.71046295 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.491680035 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.340680276 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.102097771 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.003395573 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.338844471 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.618454172 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.357067861 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.322642295 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.624437544 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.842125424 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.342594019 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.365519207 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.803436928 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.410456897 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.320609742 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.047064208 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.33819445 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.327401998 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.828316894 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.32315566 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.319675746 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.571113754 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.358474562 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.775982945 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.758469054 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.824394747 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.341076991 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.321975986 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.791137471 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.344523657 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.366767476 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.320602178 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.582143571 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.675230374 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.667400924 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.339336657 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.336955387 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.326260968 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.350052054 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.772907592 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.678753024 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.34242195 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.324375716 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.786545617 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.340015576 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.328177416 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.326293104 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.530855124 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.166070707 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.3241131 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.6656596 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.326443805 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.707405709 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.402457113 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.372833044 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.800807764 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.341914587 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.491470419 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.358021316 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.324888585 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.330793106 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.327736 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.33019308 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.659199188 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.612227825 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.323535817 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.660522777 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.787614483 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.338205602 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.831342564 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.218193981 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.327219417 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.387315177 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.32373012 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.849391522 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.792537455 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.344767395 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.321101932 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.639994715 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.340043137 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.597367458 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.335814325 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.323425261 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.832869481 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.327272816 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.356937962 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.322762623 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.322695358 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.072168742 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.327783776 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.597589723 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.379142255 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.324388199 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.32600055 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.331622354 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.333881332 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.324642453 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.325260586 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.82803852 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.343708097 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.283335108 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.339068647 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.322007631 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.322450318 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.326383505 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.324634204 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.545981923 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.870709073 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.346436453 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.324951873 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.32129763 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.343433777 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.570061865 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.325809799 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.611127741 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.338683652 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.322982381 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.327097935 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.003615486 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.369018013 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.323291137 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.343953577 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.198116796 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.536424529 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.342603631 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.323935418 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.327599934 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.351756659 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.471105352 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.341179008 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.402406839 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.329490143 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.011063168 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.35786138 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.328891107 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.826999483 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.340284469 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.214375878 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.344680631 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.324389981 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.605156297 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.583954981 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.56584455 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.327578691 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.339344236 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.004282682 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.361054307 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.470400219 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.348628368 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.322680749 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.52667446 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.518419756 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.326811988 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.973018496 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.330297999 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.54377084 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.33050584 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.618103167 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.798078033 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.339378002 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.32937733 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.015093838 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.012947643 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.007477313 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.331987199 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.598779589 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.294951033 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.812847476 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.331669183 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.331713348 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.887313462 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.332263761 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.329178722 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.329720053 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.332299665 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.481097556 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.499722728 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.530002961 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.332425125 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.755946085 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.377793956 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.328079257 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.347909616 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.326031002 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.673950776 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.406884338 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.333064238 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.336103227 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.331125214 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.332351035 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.780895304 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.251816644 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.327143239 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.479369526 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.932144015 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.341422386 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.328135587 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.988053981 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.544690839 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.847371128 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.398715285 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.613356558 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.348906379 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.362395787 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.064392037 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.344250277 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.775011946 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.344807257 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.327273333 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.902732796 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.340028429 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.415941336 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.327275704 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.33096677 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.839551096 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.342359172 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.332370329 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.463324943 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.348696685 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.578691884 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.329856648 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.356068041 seconds)
  done (took 1109.022148205 seconds)
done (took 1384.054408235 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.329897211 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.332913687 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.313730602 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.332693205 seconds)
  done (took 26.558760741 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.338932815 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.336246052 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.339040638 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.335436898 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.33881202 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.338580308 seconds)
  done (took 9.27739915 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.373433999 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.332280455 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.330261587 seconds)
  done (took 19.28633876 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.525588662 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.583772768 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.664512863 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.443883096 seconds)
  done (took 10.468024723 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.337856093 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.338400045 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.339332276 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.341620893 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.342329667 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.344635476 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.341206599 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.34429297 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.344147195 seconds)
  done (took 13.323585389 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.042934684 seconds)
done (took 85.204957695 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.434763909 seconds)
    (2/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.313590933 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.367525153 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.685645291 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.735606883 seconds)
    (6/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.055498325 seconds)
    (7/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.393065971 seconds)
    (8/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.837415115 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.563760563 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.385172546 seconds)
    (11/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.70243961 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.376138805 seconds)
    (13/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.083327677 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.202309647 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.323816068 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.371943396 seconds)
    (17/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.314479395 seconds)
    (18/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.331417262 seconds)
    (19/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.136997264 seconds)
    (20/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.314031643 seconds)
    (21/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.333304076 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.376410124 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.734682577 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.390564169 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.700582237 seconds)
    (26/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.4098021 seconds)
    (27/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.314577238 seconds)
    (28/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.03429891 seconds)
    (29/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.6990672 seconds)
    (30/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.419829161 seconds)
    (31/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.334782928 seconds)
    (32/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.335861882 seconds)
    (33/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.210903806 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.43844826 seconds)
    (35/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.054527968 seconds)
    (36/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.509277237 seconds)
    (37/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.469886151 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.676716579 seconds)
    (39/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.693101445 seconds)
    (40/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.584316468 seconds)
    (41/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.03298196 seconds)
    (42/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.534708944 seconds)
    (43/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.542566285 seconds)
    (44/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.350440527 seconds)
    (45/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.361572363 seconds)
    (46/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.399817065 seconds)
    (47/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.316151483 seconds)
    (48/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.356001531 seconds)
    (49/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.333962738 seconds)
    (50/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.352257234 seconds)
    (51/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.436209822 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.447332684 seconds)
    (53/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.696962595 seconds)
    (54/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.418167831 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.591889693 seconds)
    (56/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.331769556 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.218055307 seconds)
    (58/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.45043128 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.390810155 seconds)
    (60/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.454948463 seconds)
    (61/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.334604734 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.158253237 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.320036242 seconds)
    (64/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.314125779 seconds)
    (65/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.440316463 seconds)
    (66/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.536870436 seconds)
    (67/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.43993994 seconds)
    (68/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.695831303 seconds)
    (69/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.33134177 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.968827109 seconds)
    (71/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.324802688 seconds)
    (72/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.31665026 seconds)
    (73/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.852703185 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.43111879 seconds)
    (75/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.421528673 seconds)
    (76/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.314655192 seconds)
    (77/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.100900793 seconds)
    (78/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.665607614 seconds)
    (79/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.024480278 seconds)
    (80/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.350408944 seconds)
    (81/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.353063535 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.436780317 seconds)
    (83/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.336406011 seconds)
    (84/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.084986968 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.167823158 seconds)
    (86/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.535855488 seconds)
    (87/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.416826862 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.583091711 seconds)
    (89/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.052135891 seconds)
    (90/309) benchmarking ("sort", Int64, false)...
    done (took 5.492138284 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.682874037 seconds)
    (92/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.684584195 seconds)
    (93/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.367749404 seconds)
    (94/309) benchmarking ("sort", Int8, false)...
    done (took 4.386479384 seconds)
    (95/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.365461058 seconds)
    (96/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.317058825 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.157011932 seconds)
    (98/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.909072055 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.934624355 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.405507696 seconds)
    (101/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.420587282 seconds)
    (102/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.31838574 seconds)
    (103/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.35662338 seconds)
    (104/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.317964186 seconds)
    (105/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.447909359 seconds)
    (106/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.340958268 seconds)
    (107/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.460675395 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.376045772 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.697301908 seconds)
    (110/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.678148117 seconds)
    (111/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.612677093 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.176546183 seconds)
    (113/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.49995638 seconds)
    (114/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.841140218 seconds)
    (115/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.538405704 seconds)
    (116/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.329579151 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.534689344 seconds)
    (118/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.317998034 seconds)
    (119/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.457615044 seconds)
    (120/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.31912273 seconds)
    (121/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.589385878 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.350956997 seconds)
    (123/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.316752402 seconds)
    (124/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.318895098 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.352022826 seconds)
    (126/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.364569106 seconds)
    (127/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.329135471 seconds)
    (128/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.325221637 seconds)
    (129/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.331133127 seconds)
    (130/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.686716113 seconds)
    (131/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.688291127 seconds)
    (132/309) benchmarking ("sort", Bool, false)...
    done (took 1.845564898 seconds)
    (133/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.37929586 seconds)
    (134/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.925347712 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.610485915 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.359289953 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.163454977 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.072627242 seconds)
    (139/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.442347863 seconds)
    (140/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.403421069 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.620325189 seconds)
    (142/309) benchmarking ("sort", Float32, false)...
    done (took 5.326316533 seconds)
    (143/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.57135997 seconds)
    (144/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.440450833 seconds)
    (145/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.637040206 seconds)
    (146/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.411422251 seconds)
    (147/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.389848584 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.08206552 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.365436528 seconds)
    (150/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.340359273 seconds)
    (151/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.347258377 seconds)
    (152/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.365003911 seconds)
    (153/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.419686233 seconds)
    (154/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.382319733 seconds)
    (155/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.362756823 seconds)
    (156/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.321405828 seconds)
    (157/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.651018498 seconds)
    (158/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.323547986 seconds)
    (159/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.518031189 seconds)
    (160/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.355826714 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.360158867 seconds)
    (162/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.320735326 seconds)
    (163/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.080134112 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.230594185 seconds)
    (165/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.366803332 seconds)
    (166/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.342250361 seconds)
    (167/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.122951208 seconds)
    (168/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.339306917 seconds)
    (169/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.774330561 seconds)
    (170/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.437930027 seconds)
    (171/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.921665069 seconds)
    (172/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.363247476 seconds)
    (173/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.159452255 seconds)
    (174/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.696594452 seconds)
    (175/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.346081122 seconds)
    (176/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.332141142 seconds)
    (177/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.330309445 seconds)
    (178/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.026706772 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.382290816 seconds)
    (180/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.315598475 seconds)
    (181/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.448447141 seconds)
    (182/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.341317384 seconds)
    (183/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.461385511 seconds)
    (184/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.300154012 seconds)
    (185/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.337549423 seconds)
    (186/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.331242246 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.385051923 seconds)
    (188/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.40033951 seconds)
    (189/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.133797421 seconds)
    (190/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.392067749 seconds)
    (191/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.089038357 seconds)
    (192/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.338976539 seconds)
    (193/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.652688159 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.916672236 seconds)
    (195/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.985250536 seconds)
    (196/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.765128447 seconds)
    (197/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.32191942 seconds)
    (198/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.652029576 seconds)
    (199/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.315984275 seconds)
    (200/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.959209317 seconds)
    (201/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.518490494 seconds)
    (202/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.693945483 seconds)
    (203/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.347278734 seconds)
    (204/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.32234251 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.682614325 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.839673827 seconds)
    (207/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.312814594 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.742454838 seconds)
    (209/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.908519854 seconds)
    (210/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.294407978 seconds)
    (211/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.305361264 seconds)
    (212/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.508632766 seconds)
    (213/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.336880033 seconds)
    (214/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.290359225 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.927665989 seconds)
    (216/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.288806911 seconds)
    (217/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.469162755 seconds)
    (218/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.316572537 seconds)
    (219/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.339793888 seconds)
    (220/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.294144461 seconds)
    (221/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.370562841 seconds)
    (222/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.316636625 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.716186676 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.327191867 seconds)
    (225/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.316717533 seconds)
    (226/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.359761133 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.421564829 seconds)
    (228/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.310563508 seconds)
    (229/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.291057569 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.873481622 seconds)
    (231/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.018681186 seconds)
    (232/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.120048207 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.188944135 seconds)
    (234/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.299481664 seconds)
    (235/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.40981301 seconds)
    (236/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.617735957 seconds)
    (237/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.62174189 seconds)
    (238/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.304811481 seconds)
    (239/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.558442919 seconds)
    (240/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.538418457 seconds)
    (241/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.387051566 seconds)
    (242/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.733267875 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.302075213 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.147616154 seconds)
    (245/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.298403705 seconds)
    (246/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.313211437 seconds)
    (247/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.498597812 seconds)
    (248/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.09372446 seconds)
    (249/309) benchmarking ("sort", Float64, false)...
    done (took 5.573436424 seconds)
    (250/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.321677139 seconds)
    (251/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.276878516 seconds)
    (252/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.299912923 seconds)
    (253/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.326173543 seconds)
    (254/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.322016261 seconds)
    (255/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.244246385 seconds)
    (256/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.873526804 seconds)
    (257/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.289523393 seconds)
    (258/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.49580647 seconds)
    (259/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.701056782 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.69479178 seconds)
    (261/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.276542057 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.421605887 seconds)
    (263/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.484450441 seconds)
    (264/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.476791961 seconds)
    (265/309) benchmarking ("sort", BigInt, false)...
    done (took 6.31402521 seconds)
    (266/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.818295931 seconds)
    (267/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.157607593 seconds)
    (268/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.281054855 seconds)
    (269/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.416473831 seconds)
    (270/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.379049497 seconds)
    (271/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.831333012 seconds)
    (272/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.749758007 seconds)
    (273/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.881074449 seconds)
    (274/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.327169417 seconds)
    (275/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.324094805 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.314801332 seconds)
    (277/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.295192456 seconds)
    (278/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.312214019 seconds)
    (279/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.322904479 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.6857255 seconds)
    (281/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.28990644 seconds)
    (282/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.297940069 seconds)
    (283/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.325966986 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.382596262 seconds)
    (285/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.280626654 seconds)
    (286/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.283296439 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.396518034 seconds)
    (288/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.276117604 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.432428191 seconds)
    (290/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.418780327 seconds)
    (291/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.377353362 seconds)
    (292/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.827519749 seconds)
    (293/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.288827364 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.121306307 seconds)
    (295/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.696788273 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.696200008 seconds)
    (297/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.418946326 seconds)
    (298/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.0176241 seconds)
    (299/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.864542961 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.335615086 seconds)
    (301/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.274686749 seconds)
    (302/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.082163337 seconds)
    (303/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.306790451 seconds)
    (304/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.302910228 seconds)
    (305/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.244565183 seconds)
    (306/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.334075724 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.186286121 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.320969008 seconds)
    (309/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.359716351 seconds)
  done (took 1026.286294859 seconds)
done (took 1027.539191916 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.328174017 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.32492833 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.305649999 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.327569557 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.416716333 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.330545478 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.316261144 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.309439223 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.353601639 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.354993685 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.30375496 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.3288009 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.307334406 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.307598824 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.306079839 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.320603549 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.296620916 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.309501611 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.324502989 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.316394905 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.323835808 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.305435853 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.355642884 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.328937308 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.310620873 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.308868509 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.310994905 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.325963691 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.41956617 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.311283073 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.310664475 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.318577539 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.297551029 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.310062525 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.30267902 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.326021157 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.318652322 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.317062191 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.310655692 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.338950681 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.665908372 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.326683728 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.314908669 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.313481008 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.314104399 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.315712009 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.312537866 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.316912364 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.322422756 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.323610719 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.681275565 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.343987994 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.31171216 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.309889066 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.32034524 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.30877689 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.313133444 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.32606497 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.328554705 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.327714432 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.287458166 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.320339544 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.311895319 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.325872693 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.317240321 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.726766598 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.32682416 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.313864655 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.682605269 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.335776764 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.72703535 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.339807795 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.311601162 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.324304865 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.341776959 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.2988811 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.311081153 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.308416806 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.317816922 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.308672815 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.320227341 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.323596498 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.315811101 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.31104568 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.324677457 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.33432099 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.319963955 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.311758301 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.320069573 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.329947927 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.317494648 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.321450768 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.313753332 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.30677903 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.320689614 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.315006962 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.313678728 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.314075882 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.315650411 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.322487757 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.680983452 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.351391395 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.3081349 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.306866673 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.310654645 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.325753233 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.682151735 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.33473667 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.334265164 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.359133995 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.312817273 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.288378763 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.320147372 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.330304261 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.322626365 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.315426331 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.308674868 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.29148892 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.69498383 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.349797041 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.314348614 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.309983905 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.330757388 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.315587245 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.308815804 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.305275916 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.320080452 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.32792794 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.43433511 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.324179775 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.344502062 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.312620135 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.31666028 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.336276145 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.330056048 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.345240472 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.316659849 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.330541198 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.329945125 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.310120976 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.324239071 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.325665834 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.315011371 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.318672467 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.308665923 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.337885287 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.328202351 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.328592307 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.336089943 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.435280547 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.311994439 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.29415342 seconds)
done (took 221.23498668 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.371083892 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.307956211 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.401503715 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.310562248 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.408239316 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.408057056 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.308516376 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.307787158 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.308446426 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.68444119 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.309263168 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.309744627 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.311711263 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.308210692 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.393049447 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.31079372 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.308183234 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.64728001 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.311911917 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.381531107 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.309792453 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.309737834 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.311042167 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.717109302 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.307247448 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.312190353 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.382386212 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.312391929 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.660510945 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.306754707 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.306874551 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.660236513 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.400168084 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.329699369 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.321716976 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.319223024 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.409968727 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.327778847 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.392462101 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.391989473 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.403666015 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.351506111 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.304176426 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.306365746 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.312979076 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.312722413 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.309642759 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.338870842 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.30470314 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.310065504 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.650324871 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.323353819 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.32096615 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.311945345 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.31090538 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.331992249 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.311695669 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.313709981 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.403017839 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.313950618 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.374930458 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.719451656 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.689036212 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.31397494 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.311368905 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.312379345 seconds)
  done (took 146.990787263 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.378219213 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.386482926 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.421251695 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.33014397 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.362890879 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.427576443 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.329969992 seconds)
  done (took 10.863893288 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.318542547 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.315242473 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.364338621 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.363213486 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.315623438 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.460662512 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.316248815 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.325625573 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.313189762 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.366956418 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.315899263 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.316224456 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.322656878 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.313731899 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.363898207 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.325636633 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.430159768 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.316133128 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.316457371 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.472149836 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.314158675 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.322978617 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.368157979 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.327223468 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.317678731 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.321130129 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.885430916 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.315920732 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.313717971 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.316909487 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.31275034 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.354138038 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.317414281 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.31349629 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.314307943 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.432192842 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.317800669 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.314423349 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.317297108 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.312698279 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.316598882 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.316747061 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.317657238 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.314654469 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.316928882 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.340055955 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.318022384 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.316595836 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.316958435 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.317174821 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.368141038 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.318457044 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.315065396 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.315123394 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.372710459 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.324813236 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.318226669 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.315757041 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.317965765 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.316000454 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.47611291 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.366035258 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.317673444 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.365574699 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.319357319 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.319039061 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.319100459 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.318987093 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.371930539 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.319348708 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.366858319 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.31776647 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.471999533 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.341565235 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.320890786 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.321358751 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.322341717 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.320444178 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.317411936 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.32426657 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.318030061 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.319212144 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.323713628 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.316658877 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.316799668 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.421557811 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.428537434 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.318044939 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.331929183 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.325364305 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.317649168 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.37220289 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.321497954 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.319189629 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.371219499 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.434938334 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.372554986 seconds)
  done (took 151.614383975 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.324406346 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.328451157 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.321286136 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.336075377 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.320177042 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.320315424 seconds)
  done (took 9.18324967 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.322343073 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.320958488 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.320153401 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.321412439 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.321143679 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.321378081 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.321417719 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.322110654 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.324548744 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.321964694 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.321959281 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.321959506 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.322907347 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.321291851 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.321709289 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.321548462 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.321450835 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.320043187 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.321848943 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.321736718 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.417160639 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.320929132 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.322024357 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.324075587 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.325814699 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.323817444 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.329669286 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.323026148 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.322380248 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.330378327 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.340243736 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.323326782 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.325265778 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.327232169 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.325309648 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.325133222 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.32663534 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.325076342 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.321664497 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.323326542 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.324250573 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.324077844 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.325299033 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.324830676 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.325722497 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.329076754 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.327662853 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.330643104 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.323868171 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.324131887 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.324524409 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.324934067 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.323161856 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.324663817 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.327488699 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.34340898 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.329168155 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.325237698 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.325097805 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.327995008 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.326559679 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.325065933 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.326276567 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.328894575 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.331910437 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.325328915 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.326685263 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.327906837 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.325424063 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.326104782 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.324837044 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.323591841 seconds)
  done (took 97.72633244 seconds)
done (took 417.603031619 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.619289132 seconds)
  done (took 7.857211814 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.458585926 seconds)
  done (took 7.698526734 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.968476527 seconds)
  done (took 21.216899161 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.397805907 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.43476728 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.319949036 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.336555646 seconds)
  done (took 26.7316726 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.446977247 seconds)
  done (took 7.685359495 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.317654711 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.332828554 seconds)
  done (took 13.891087455 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.874824985 seconds)
  done (took 8.113730055 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.01552402 seconds)
  done (took 8.266311357 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.343997598 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.339161375 seconds)
  done (took 14.184231089 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.307179764 seconds)
  done (took 7.546309161 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.062874843 seconds)
  done (took 8.303510679 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.336099316 seconds)
  done (took 7.578050654 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.35523438 seconds)
  done (took 7.595574303 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.041740953 seconds)
  done (took 9.283125204 seconds)
done (took 157.189262905 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.321065049 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.320926485 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.317243688 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.313219315 seconds)
  done (took 26.513147755 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.355123651 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.354700328 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.356562522 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.36704895 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.358307441 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.355598877 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.347836793 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.34700884 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.365610636 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.35875212 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.357449587 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.35826141 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.355281668 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.347859394 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.357353042 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.358408475 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.367371505 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.357379943 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.348001285 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.360414016 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.323508708 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.366849282 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.359206411 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.324888268 seconds)
  done (took 33.742745432 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.844005592 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.39312077 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.476368489 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.375436299 seconds)
  done (took 7.323834194 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.374961203 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.376400618 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.389299354 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.426167319 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.454954346 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.392456571 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.351129998 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.34456382 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.33164155 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.377126487 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.452723716 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.392615345 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.464010137 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.324931825 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.516125369 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.32419915 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.324116969 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.376007559 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.428085016 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.442234701 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.325072218 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.376456602 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.380087131 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.394250467 seconds)
  done (took 34.576169718 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.324733649 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.332620308 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.32455651 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.322399329 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.332240208 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.322946323 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.324601272 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.325334263 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.324645014 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.330214322 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.323918328 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.336828335 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.323951076 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.324462972 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.331438078 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.325383187 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.330753492 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.323985988 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.324635634 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.329028172 seconds)
  done (took 27.775604419 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.318721675 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.173700021 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.671419442 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.575363307 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.319759495 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.325625517 seconds)
  done (took 27.622714701 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.391229337 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.540665561 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.331993156 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.670582441 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.768775955 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.348122498 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.327094161 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.55702295 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.865589965 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.860074505 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.386013156 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.392955405 seconds)
  done (took 19.684330284 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.332006842 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.326039929 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.331542218 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.343191206 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.379390153 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.345188177 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.333570987 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.321164041 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.385343733 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.397293293 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.345512464 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.380184143 seconds)
  done (took 37.465090751 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.406802575 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.36852416 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.197115298 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.325973328 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.057230755 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.532415055 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.324643518 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.771435517 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.325858786 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.596233665 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.325445027 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.412275641 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.577907451 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.335093722 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.329485336 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.295298259 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.564627691 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.775113275 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.32396871 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.17963886 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35550073 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.326612448 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.273389237 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.35911735 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.533509761 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.464070719 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.584699728 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.101046559 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.611067932 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.341672087 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.33353248 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.32263938 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.599561102 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980520987 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.437988048 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.334449332 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.342348283 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.869050944 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.307922377 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.201693032 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.124731966 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.333331348 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.335632596 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.32495981 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.259163283 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.333339794 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.762612597 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.330972777 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.035829496 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.324441097 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.336938104 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.419252428 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.328880588 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.894861547 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.325913148 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.332040989 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.32376582 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349707499 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.912204077 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.664900052 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.339652775 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.266627449 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.327931162 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.207966025 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951539563 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.446217404 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.330204247 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.329724194 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.25948665 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.191541392 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.349131713 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.473736948 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.348149531 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.97550026 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.012077975 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.350076142 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.263526012 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.841681252 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.327947241 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.269146774 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.554222503 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.103142919 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.26278755 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.272988108 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.260697648 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.000103895 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.342990732 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.667898795 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.347988865 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.778298572 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.337933585 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348198606 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351986333 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.549840389 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.208003071 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.326047258 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.122643254 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.481109541 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349226866 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.757172739 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.269572396 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.331556618 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.583835902 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.539959067 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.339482923 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.30560884 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.54979089 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.346453409 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.350168346 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.340649644 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.345304389 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.886139495 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.36372985 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.664964238 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.353097671 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.106669814 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019507058 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.330966171 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.436673755 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.33665951 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.576126925 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.052896275 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.495810026 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.398419757 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.333870862 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.330034667 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.29071879 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.92890033 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.487690946 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.325663805 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.337068014 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.346560685 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.330704622 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.279025638 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.333786075 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.336316947 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.131493187 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.554298188 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.332456982 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.613840389 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.263852242 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478486689 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.339225271 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.553866278 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.517537326 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.354948049 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.591200124 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.33999353 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.348132917 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.34903902 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.350138333 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432494563 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.353589798 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.33182357 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.59481099 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.334787009 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.335996455 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.308831703 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.119114195 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.332829469 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.337720196 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.339818502 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.90387775 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332242379 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.334459421 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.220288621 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.34743955 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.400589418 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.338473957 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.342598241 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.104196067 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367603978 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.346663813 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.336838075 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.563051924 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.343074029 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.229932632 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.418683551 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.526021929 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.903149318 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.369787002 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.267367077 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.045067499 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.026952099 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.333893838 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.531459395 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.333223292 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344155683 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.344333047 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.334811019 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.896484601 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.357776866 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.237848176 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.347578429 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.344780179 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.339939894 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.332861225 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.085462165 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.721095227 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.344350485 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.352569027 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476624688 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.34878643 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.268969046 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.851253792 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.340131569 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.33530003 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.112188437 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369473423 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.221569842 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.813702453 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.594748469 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.34878438 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.346833193 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.401916448 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.374597562 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.340013732 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.193379127 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355316849 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.37369593 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.350779894 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.347036058 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.29710451 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.705127726 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.902050487 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.034344365 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88400404 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.268806586 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.344452219 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.242709311 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.76838158 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.272438769 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.992797929 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.526835781 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.794972207 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.281239813 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.533524771 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.529607873 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.11035817 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.348118503 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.565628236 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.24524328 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.193908189 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.373382794 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.548345914 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371537672 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.346035165 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.272629501 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.855204119 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.573117498 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.216857358 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.423917612 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.775486845 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.190894987 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.143515397 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.41464697 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.608782359 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.519745069 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.888699227 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.724997415 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.346638493 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.352164975 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.815468087 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.342511089 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.863211722 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949716005 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.360212528 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.557697901 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.277142778 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.348947728 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.349537765 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.335557444 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.601523645 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.339329642 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.601872919 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.349642928 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.273516877 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.344569562 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.858311356 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.23279927 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.344698847 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.34052583 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.044495123 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.348018053 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.649681128 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.34844762 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.096457892 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366327741 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.274160945 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.273959882 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.033780302 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.349652734 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315759214 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.814070852 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.358121943 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.348305967 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.352665255 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.191859954 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.59689891 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.354771276 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.907149631 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.589476013 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.341965133 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386331486 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.441512797 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.239589494 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.348190032 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.233942823 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.576904848 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.345782653 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.589969201 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.241293334 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.24223775 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.37064878 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.554054802 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.234957027 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.348764075 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.599077037 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.077775339 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.35278566 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.039063788 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390715014 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.352009935 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.360169164 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.345803005 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.369692563 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431097642 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.35326372 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.353418705 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.352676214 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.509765706 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.352370289 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.353116364 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.357332786 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.437488744 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.716410161 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.087611789 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.123439607 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.915189977 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.082559419 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.933846254 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.380293165 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.343850391 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.344481636 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.278304861 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.49602279 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.870205135 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.618823209 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474281897 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.359818748 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374732021 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.263196307 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.371737755 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.563535276 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.619478033 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.315489276 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.343495672 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.138578517 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.225918251 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.356047413 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.556301099 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.822171835 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.887371881 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46188501 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.345498897 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.800910346 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.620223783 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.436841653 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.345219909 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.935913984 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.365594473 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.627362699 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.369188143 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353433847 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.501256047 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.357577401 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006315051 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.37521013 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.506520605 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.120796511 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.356890652 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.608991597 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.812229052 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.364948292 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.917339557 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.05359756 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.617315017 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.417048487 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.357138982 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.44977826 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.49487466 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.354628027 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.248398236 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.348211067 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.19120499 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.057240662 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.357681977 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.919000975 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.634437392 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.344984423 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.35773431 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378246568 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.35788046 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.571400612 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.015998526 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.572966828 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.358941013 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.358329414 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.919710065 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.919433878 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.384180129 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.283540007 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.351630941 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.594369048 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.602505545 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.372482737 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.802302851 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.059904853 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.873298561 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.321598455 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370830289 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.349457089 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.038024776 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.925716291 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.11707857 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.831366164 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.009062909 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.352140025 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.63074533 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.355884337 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.362841138 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.63281998 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.354063387 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.357445076 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.368335985 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.922562632 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.124929308 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.373224393 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.301925398 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.293301549 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.575719103 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.368600379 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.289137635 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.351006216 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.522602618 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.359530495 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48033647 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.363450077 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.360526665 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.35812125 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.110267791 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.633995666 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.357371818 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.331556775 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.328709411 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.372406429 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383741786 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.607920651 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355564021 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.027291306 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.703257627 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.608422768 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.361527888 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.338842333 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.355945925 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353304533 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.069930485 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.362013879 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.358296526 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.891805859 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.367849819 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.370433744 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.357515241 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.568606567 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.564357725 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.353104662 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.37216311 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361209311 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.374964726 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.260048036 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.119238348 seconds)
  done (took 1638.653340844 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.405085077 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.393482164 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.385210217 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.400586059 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.386830549 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.383918512 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.40399898 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.393947271 seconds)
  done (took 52.423823978 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.365919387 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.516963705 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.383750607 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.363273423 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.369462966 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.357950681 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.804655766 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.382906496 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.362567134 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.364392913 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.359859077 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.369081259 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.986193508 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.371034841 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.357910477 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.347014289 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.370402183 seconds)
  done (took 65.716651197 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.354243108 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.896662878 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.459209848 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.359481692 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.346883793 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.385713908 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.080562085 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.377920233 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.355153668 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.665079676 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.023411236 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.370788183 seconds)
  done (took 84.947657562 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.363466314 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.364487889 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.365790732 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.363702902 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.364884733 seconds)
  done (took 8.097649122 seconds)
done (took 2065.785991593 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.601822029 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.013248974 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.00155826 seconds)
  done (took 5.288132718 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.505584571 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.555329011 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.674897207 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.69902191 seconds)
  done (took 7.710324379 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.639229989 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.733991308 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.546424808 seconds)
  done (took 6.195211849 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.735490369 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.377014247 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.389819933 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.357883734 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.367218175 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.366673063 seconds)
  done (took 20.371085256 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.363482825 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.365809675 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.365019839 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.367088765 seconds)
  done (took 6.738245614 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.340109831 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.042352401 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.34734185 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.360326924 seconds)
  done (took 18.36695528 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.109502414 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.125043682 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.110361954 seconds)
  done (took 7.622832638 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.370778165 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.214239152 seconds)
  done (took 9.861682338 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.650642395 seconds)
  done (took 2.928107594 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.495870613 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.692718437 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.373623175 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.287018912 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.410921921 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.089677956 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.948854749 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.548547886 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.257178104 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.468335518 seconds)
  done (took 27.852405582 seconds)
done (took 131.31054458 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.115530821 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.746891999 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.568412133 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.082171037 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.595789984 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.570761265 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.561256608 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.049575185 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.597038026 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.583969479 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.125644331 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.59249465 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.720513683 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.745518505 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.718929036 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.366598957 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.59062122 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.164793151 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.767900637 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.006189061 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.564069635 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.725367335 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.955717024 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.746823581 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.590066098 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.51879791 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.308259741 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.366676532 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.943241632 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.324719581 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.518366434 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.179016235 seconds)
  done (took 190.290756756 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.370581698 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.376136999 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.365313214 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.364730192 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.390927745 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.364278266 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.364192604 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.394494738 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.364283495 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.380075561 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.363697237 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.376952195 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.365320376 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.366530021 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.365133673 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.363269765 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.380866378 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.38377151 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.377541841 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.364781049 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.364045112 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.388020944 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.364246418 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.365777547 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.372081732 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.364047394 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.364762563 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.376799084 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.365620736 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.376921964 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.366001068 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.375911444 seconds)
  done (took 205.169443035 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.368632378 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.378595721 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.367933407 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.365080136 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.381072125 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.367521071 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.366390529 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.365217513 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.377534035 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.373324277 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.366569896 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.366299098 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.368547198 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.365289676 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.369554159 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.388897731 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.371769891 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.368754855 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.37089879 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.375254619 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.368412295 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.366839638 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.366497555 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.379614977 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.369390204 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.365663298 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.38547451 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.366938934 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.365726572 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.367162153 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.383299052 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.382775863 seconds)
  done (took 205.175516115 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.569802386 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.373972644 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.375675126 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.328665636 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.375900736 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.375622144 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.372469517 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.56478146 seconds)
  done (took 14.621194502 seconds)
done (took 616.535123168 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.629017555 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.354575865 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.583338517 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.403791102 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.120592782 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.419801802 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.396058208 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.560027163 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.303865089 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.575189145 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.604679807 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.418785546 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.737499098 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.401649141 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.644077829 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.499119107 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.248151554 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.371222764 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.713575675 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.905310299 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.658003355 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.845761955 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.586422067 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.294879952 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.746729659 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.831195302 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.107054642 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.240644054 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.419789741 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.707837264 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.988572472 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.352293214 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.459673392 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.460589025 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.517524654 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.497288894 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.330799161 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.45791893 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.602867783 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.594756406 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.890540025 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.115688218 seconds)
  done (took 92.883089168 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.360498074 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.360409887 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.359398775 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.360962384 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.361763291 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.359500289 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.360096955 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.358878935 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.361147256 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.360110668 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.359866361 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.361759737 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.360089322 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.361939478 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.36068393 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.360380675 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.361213373 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.363377275 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.360312192 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.36102762 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.362219476 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.360123203 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.361742348 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.361773326 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.36143437 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.364614486 seconds)
  done (took 36.673292908 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.380854367 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.623958547 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.788978539 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.39383683 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.380050973 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.384204036 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.455561795 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.388560875 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.383130557 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.384279537 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.548947997 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.391324117 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.416240999 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.815811929 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.390547966 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.380963169 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.381603251 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.380919567 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.632165668 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.39839281 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.478598306 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.390011512 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.454840937 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.39857063 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.404875841 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.381919434 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.385924964 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.898285256 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.40909068 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.550236896 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.159042996 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.461312134 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.857515623 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.824413935 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.166928357 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.391919306 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.383779125 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.554619743 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.391964666 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.382929704 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.457965673 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.391540556 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.79967263 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.001232965 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.407565302 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.384849195 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.919409368 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.578262527 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.621599376 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.39399662 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.822945964 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.394908515 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.384950769 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.384797932 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.619775874 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.397589806 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.383903742 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.909006849 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.414129974 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.456812957 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.392567242 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.383323982 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.640665155 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.390834128 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.63027116 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.393923017 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.393199963 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.404002772 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.800059974 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.394710514 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.020887536 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.408578022 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.385401701 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.551064374 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.639163618 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.961554826 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.413951642 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.645105807 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.87014505 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.484276353 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.396957213 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.891596828 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.487844108 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.397502453 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.388234391 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.388233314 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.386372137 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.436083569 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.458303756 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.954009216 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.035559324 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.934390236 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.487606142 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.407016322 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.386418218 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.912143385 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.412640025 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.387123179 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.796148113 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.025529659 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.411601836 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.394816033 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.021572188 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.413201961 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.463357593 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.400358553 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.807263387 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.393720813 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.439064645 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.387916759 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.394225035 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.409125859 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.463145994 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.397164894 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.389840984 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.99056402 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.587497839 seconds)
  done (took 181.981747864 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.384172115 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.380595019 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.381989811 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.397294334 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.381958522 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.390489319 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.381900327 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.383082632 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.388468553 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.381920115 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.383513338 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.384632189 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.381999886 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.386723841 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.394400963 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.390890027 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.994474343 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.383999502 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.382718546 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.381299153 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.176704973 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.390956284 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.380847909 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.382393685 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.382594688 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.382997468 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.388666987 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.384643 seconds)
  done (took 153.482540105 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.389912498 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.940399052 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.415003205 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.516087423 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.417139831 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.389155003 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.515508985 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.454241959 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.408425712 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.390246444 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.387844735 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.683308732 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.392212662 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.887758952 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.574908591 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.541687723 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.888907651 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.407995736 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.38927771 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.389491941 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.517610221 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.401209455 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.68260641 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.938630473 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.408552544 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.937918632 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.37519109 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.391725939 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.38990199 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.943121848 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.406057008 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.684167317 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.465316547 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.456217491 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.95861744 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.911235732 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.919211966 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.541630375 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.390076903 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.390233497 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.390020952 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.375437065 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.94196251 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.409612117 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.392487083 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.931060698 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.409568334 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.392916063 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.397421851 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.39037618 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.449094736 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.466107265 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.70607665 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.948950815 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.483207259 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.412045067 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.519178471 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.763414789 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.394423851 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.892121548 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.374574683 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.947883847 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.410675331 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.376620195 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.392560362 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.397788737 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.536826272 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.527590839 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.893837984 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.409905049 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.893944374 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.552891672 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.399431432 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.392070962 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.395202649 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.946756753 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.911169649 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.553941478 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.53173819 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.588295725 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.386951994 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.393506938 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.378888583 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.467950421 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.400625171 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.949508552 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.912350352 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.411907529 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.394974324 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.395530115 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.396110527 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.565045907 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.974365616 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.484225417 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.891057027 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.70781548 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.693233847 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.396315373 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.451135658 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.414221031 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.693514877 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.397471617 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.45137023 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.829306464 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.69362826 seconds)
  done (took 165.420035491 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.633878275 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.560236081 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.484507051 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.531508396 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.978745849 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.959214888 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.659796102 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.534271485 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.511813629 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.660399303 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.537063976 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.485435151 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.562495482 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.475599752 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.117887267 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.489518356 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.508038048 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.555154355 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.507124181 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.403934194 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.054581785 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.677813191 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.567357943 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.257118694 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.485454878 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.151268949 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.951712536 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.926028777 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.573763916 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.674859238 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.926534746 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.511061541 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.322276131 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.064248423 seconds)
  done (took 66.605576451 seconds)
done (took 698.329624824 seconds)
SAVING RESULT...
DONE!
