cset: moving following pidspec: 30898
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.291468513 seconds)
loading group "string"... done (took 0.583592782 seconds)
loading group "linalg"... done (took 7.143056654 seconds)
loading group "parallel"... done (took 0.165729456 seconds)
loading group "find"... done (took 1.121373618 seconds)
loading group "tuple"... done (took 1.981476469 seconds)
loading group "dates"... done (took 1.269552957 seconds)
loading group "micro"... done (took 0.235199261 seconds)
loading group "io"... done (took 0.964986478 seconds)
loading group "scalar"... done (took 38.45905226 seconds)
loading group "sparse"... done (took 12.346738984 seconds)
loading group "broadcast"... done (took 0.974724632 seconds)
loading group "union"... done (took 13.112122321 seconds)
loading group "simd"... done (took 4.419576127 seconds)
loading group "random"... done (took 8.950008472 seconds)
loading group "problem"... done (took 1.964006208 seconds)
loading group "array"... done (took 21.189816377 seconds)
loading group "misc"... done (took 1.921181059 seconds)
loading group "sort"... done (took 3.224290698 seconds)
loading group "collection"... done (took 17.983086106 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.532264905 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.140736111 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.116548362 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.137385386 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.182957317 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.132068037 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.14441592 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084951064 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.048343065 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.160198142 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.13790612 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.475940108 seconds)
done (took 5.060647079 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.200927064 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088114664 seconds)
    (2/2) benchmarking "String"...
    done (took 0.09555381 seconds)
  done (took 0.896517378 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066089154 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.127322288 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.079609619 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067821587 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066446614 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.080307927 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066356964 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065737496 seconds)
  done (took 1.272169431 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074715499 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068551634 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.083639965 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067321659 seconds)
  done (took 1.013137034 seconds)
done (took 4.17937292 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.895649848 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.232211442 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.188221977 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.452444755 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.147736616 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.187921303 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.67531764 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.32047858 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.211393636 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100464651 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.105350506 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.376643228 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106176068 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.678479664 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075963571 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.105160583 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.172344222 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.41248246 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081077283 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08223737 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.103450105 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.143915624 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.101995242 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077472822 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.167710854 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.069139068 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.146976453 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.095498039 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.067872053 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.241608105 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.188877409 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.722409475 seconds)
  done (took 10.491528899 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.100919507 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.115774634 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067962147 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.13819182 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.100802297 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.08527624 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070414719 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.082113236 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.090991806 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.15616525 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.112416519 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.104189223 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.080595822 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068640685 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.099110474 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.21094151 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.106237524 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.083888004 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.085610322 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.07483564 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.120666309 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.081451353 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.092688098 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077348471 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.15092769 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.193330573 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111986175 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.109372684 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067772775 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.08056983 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.130419094 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.139871477 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065533483 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080259118 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.137921231 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.109759462 seconds)
  done (took 4.515921232 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.021474514 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.08497335 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.157421655 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.107510034 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.15145282 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067115766 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.126416293 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.079749091 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097480043 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.230982733 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.076231255 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.107893554 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.452684482 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126684006 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.10033068 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067092789 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.083102723 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.06667508 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.509801394 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.143983039 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.11996636 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.084125566 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.089245124 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069610405 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.356763322 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067515552 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066376682 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083931284 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.058424077 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.144212284 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067550115 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.206930221 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.087659433 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086837022 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101419458 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.19337556 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093883203 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.121683431 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.065663718 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.080660047 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.167138313 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074130377 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065868946 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.104994081 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11730879 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.103138929 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.083677135 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066957769 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.180277519 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066089203 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.098516128 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.870214958 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.163548181 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.077739462 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065259532 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.285405691 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.083516462 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083241529 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064054877 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.254806201 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.150815731 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.066411738 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.082624055 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069900338 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.067863003 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.757523413 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.067627516 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.742513436 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070107502 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076414593 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084410475 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066552032 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087980021 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071930909 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.099293724 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066359535 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.067140145 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.081977715 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065210358 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.084024307 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.085287503 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.202096415 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.082818868 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066704294 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.063853223 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.102142317 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111007725 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.070774781 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064700967 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116423107 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067783837 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.08273167 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.100971028 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08423746 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063516312 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.100041302 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084363112 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113513896 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.083798005 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064687913 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.120320079 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.079724531 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.095966602 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.090624167 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113107428 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.078004782 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082476719 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.152155877 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064928519 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.063963432 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.083447448 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065077649 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.082732547 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068685546 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.096009454 seconds)
  done (took 21.111577145 seconds)
done (took 37.85924648 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.289423292 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.089926302 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.091494626 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.073716856 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.09124881 seconds)
  done (took 1.430870002 seconds)
done (took 2.197709122 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.118826644 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116438434 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.062989188 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111430619 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063923669 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.115696786 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.113498946 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080336818 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117436449 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063721635 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111553545 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064176476 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063218919 seconds)
  done (took 1.997627701 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083405205 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084434663 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084971701 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081257081 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078225579 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081318439 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079427861 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103991609 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079852391 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087885492 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063699995 seconds)
  done (took 1.670019782 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082896703 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083766572 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084485209 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080437297 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077928662 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081726836 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08014637 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101677976 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080069777 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089202342 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063429358 seconds)
  done (took 1.669970565 seconds)
done (took 6.094995866 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079353977 seconds)
  done (took 0.838601029 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.693805944 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.498929846 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.082313198 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.13328287 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.222297181 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.151659166 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.434116479 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.109559293 seconds)
  done (took 10.259144294 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.102401515 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.085343562 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068304822 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.084670721 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069509173 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.088306656 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.07123357 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069562149 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.086201247 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071654165 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.084275297 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071413819 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.083670279 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070201717 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071263483 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.083689157 seconds)
  done (took 2.090687788 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093315815 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091635985 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.090245715 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075958834 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.088357476 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072080197 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.091554423 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073868366 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.0865456 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071719 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090937431 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073703904 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.087059367 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065476614 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.090936786 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076315554 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086312498 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074651567 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.090089626 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075979491 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.090305186 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065038785 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087904515 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075077224 seconds)
  done (took 2.835667355 seconds)
done (took 16.78984428 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.13069924 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.075284329 seconds)
  done (took 0.972412755 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081391641 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.097478931 seconds)
  done (took 0.951418218 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083671601 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.080345616 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.088946631 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.092306016 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066210708 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.080638697 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.101699996 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066613614 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.080964657 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.06614999 seconds)
  done (took 1.580261516 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069253823 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.092491016 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.06970194 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.096136647 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073352876 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.079626292 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072852584 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.083386559 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078147215 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.07768775 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071894101 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.097860704 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071211803 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.099461738 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072749247 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083582576 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.086035914 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067331313 seconds)
  done (took 2.216914087 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066144854 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066331355 seconds)
  done (took 0.907962666 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067895234 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063292962 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081526323 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066043675 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.07857555 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062491237 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.078378229 seconds)
  done (took 1.273090593 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.398346848 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.10754568 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.241364146 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.087144709 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.103299424 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.261254323 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.082096242 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070909233 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.08727551 seconds)
  done (took 2.251894749 seconds)
done (took 10.927007495 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.08001646 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086091552 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.109257009 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.416744902 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.104819215 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066062383 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.131878381 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.218096873 seconds)
done (took 1.991190354 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.125224962 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.607983513 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.398248996 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.210944465 seconds)
  done (took 1.998560872 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.37098911 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.091494321 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.07316862 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066710499 seconds)
  done (took 1.386069806 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067030462 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068900275 seconds)
  done (took 0.920110603 seconds)
done (took 5.211872817 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067347886 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065941735 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.079645848 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065777321 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.063661078 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.079555035 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066214303 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066482281 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.081517166 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 0.066213105 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066187849 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081706705 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063783469 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081382002 seconds)
    (15/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.0635529 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.09891861 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063368567 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065989408 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.082390043 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064309022 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065105377 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082468328 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063887245 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064035634 seconds)
  done (took 2.528057701 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085886275 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.082544462 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072051672 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.087529856 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070557864 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.087647161 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071519606 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067221165 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087153953 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068457897 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084763447 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070336725 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.083526963 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069925161 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084637957 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070246833 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087228536 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068215819 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068945107 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.085625437 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071508351 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081738676 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070983227 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086961501 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070684732 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085527964 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068679544 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.082356134 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071648017 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085605208 seconds)
  done (took 3.118808211 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.071068651 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063278508 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.080161369 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070230303 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063725579 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.081134531 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064062658 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.08024984 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.065093294 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064687033 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081543626 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.064082612 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064210115 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.080360225 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.0650875 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.08300013 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080192051 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064107669 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.07932439 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.06530152 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067564515 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079728662 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064426552 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079141965 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064325448 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064293713 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.08003617 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063550654 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064609444 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.080424455 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066951794 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067314305 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.079708721 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071058757 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.083456545 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063324893 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068278788 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.079051393 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064953181 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063997584 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078857536 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064254694 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063748813 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.086361424 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.06424246 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.082060014 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.06433964 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064779412 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.080700714 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.067177803 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.079707087 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064516276 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.066006076 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.080996975 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068123622 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063621303 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.079992272 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064412358 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.080803568 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063690366 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063333837 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.079688033 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066563285 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064775115 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.095241563 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071338687 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.080490696 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065111359 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064998356 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.082165611 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.06620975 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078104324 seconds)
  done (took 5.94240828 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.117818321 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.091128096 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082302528 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065900289 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078985064 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064276849 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067755755 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080301797 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065749351 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085852165 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064465939 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065028119 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08094035 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07711013 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080557127 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065983426 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085287765 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061743458 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063985878 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.08297499 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064267926 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.083375464 seconds)
  done (took 2.468378179 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.186702824 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.087471701 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.109194767 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.089819876 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083879238 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073287864 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070295738 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085108951 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070615705 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084042419 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068674816 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085188409 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067864218 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083945159 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068404669 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084879639 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069637535 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084752053 seconds)
  done (took 2.344855673 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077890949 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.06564725 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.105244359 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065615028 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.082556017 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06893667 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087246349 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075485923 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084702258 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066558229 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.09099788 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068872051 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.084559468 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065865891 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068950478 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082761298 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.06909752 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08244162 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075237646 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087634999 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072120093 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08987767 seconds)
  done (took 2.512669082 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081996511 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067493055 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.100899587 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085489465 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062497572 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064479265 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.089022422 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065549954 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.089221457 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067896564 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066575747 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.079975727 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.071269484 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.082597438 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071071276 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082032502 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068716755 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065938401 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.084017517 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062458854 seconds)
  done (took 2.304531304 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086886145 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083791486 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067405465 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09187369 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067877886 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.083968631 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074780244 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.08385865 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067684276 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.107046909 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067759555 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.085804006 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076185328 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.08829213 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068340698 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090989583 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07497646 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.091416508 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067270564 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083430142 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.21706535 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067521888 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091401569 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067236483 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083284807 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067772059 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067686977 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088371265 seconds)
  done (took 3.159506944 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066839149 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066226383 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079971496 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063281454 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064056381 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.080162204 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064279264 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063928681 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082554648 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064244846 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066404317 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.082458995 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066830211 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.082374684 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066618223 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066243758 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082276412 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.06381321 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063950408 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080240097 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066220786 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065753814 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081981255 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064417223 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07931337 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066588235 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064677772 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.080466845 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066480231 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064337889 seconds)
  done (took 2.916111698 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077422489 seconds)
    (2/2) benchmarking "in"...
    done (took 0.090454387 seconds)
  done (took 0.970031181 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065133787 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080346004 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080905947 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070475244 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086928632 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067445212 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.090780473 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070398233 seconds)
  done (took 1.412174143 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082292517 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077237161 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084157593 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.077850382 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.094161431 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083291892 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.153123725 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.084441442 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073160775 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.081938886 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079844607 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065732176 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.089164481 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067645771 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.089280848 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072854651 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064525368 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.088130156 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068899983 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.081830036 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067542943 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09145595 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068742767 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063374919 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084497003 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.075569486 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.093874555 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.068431703 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086177418 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.074246178 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072002983 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.07760543 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067210731 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.083819885 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064872893 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.091923723 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081147607 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085917257 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.075134561 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067864476 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092423411 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.06231 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087930068 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.07302341 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09273993 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066569063 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.06722903 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.078809509 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064623348 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085248376 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062788169 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066619689 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.077512606 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073218262 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.085845481 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077214949 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.067727195 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.084892277 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.06911298 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.086503126 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073487871 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.084534802 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068994851 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066468007 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093189553 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.07061185 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09139664 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.06234704 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060636528 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.081040873 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.076055556 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105050225 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072688103 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.083210329 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068587095 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.081038372 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069264251 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068246427 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08806222 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.073091237 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.083215243 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072605288 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090203168 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066920604 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069397462 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.090752969 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.06477896 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084968795 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064666705 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098739495 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065587302 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.080542987 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064587729 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076609417 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.086110614 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066699541 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.080604432 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.0729859 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060963973 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.083936818 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068092165 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084352778 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076650612 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088739181 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071992748 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.09146384 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074606324 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067037418 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.08668941 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.063771791 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084159329 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066142519 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.073475565 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.077670714 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069431995 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083570524 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.067973372 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.074728251 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.081804482 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.06663359 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090000931 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.07259201 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.081745583 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063114672 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069918757 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.083289582 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069693089 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.090350429 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.06502301 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061769005 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.078376839 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069879596 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.083156494 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070013813 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087825393 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.06923585 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061248393 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.081671637 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071510431 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.091624457 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067077838 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066969542 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.088984505 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067615022 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.082456445 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072656474 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.085517732 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065513037 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072434993 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.083449272 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062208293 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086421934 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069199207 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065471109 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.086193882 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069660157 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.085290126 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068235189 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065266378 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.088959193 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066802009 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.082392656 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066819024 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.081539961 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076573712 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.06809903 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.07892523 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064174649 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.089681055 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065109743 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066391262 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.082788542 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069021737 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.084359626 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065209481 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066581481 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085353568 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077660087 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088165504 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068156794 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.088874291 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078293969 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.083528033 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068704752 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066162194 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084656474 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067499932 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.092452291 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.07253005 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088212755 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.06940625 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063228408 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088699613 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073754084 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.08297864 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064910102 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065599858 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.086736372 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072306178 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086634272 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067350791 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081636597 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066886135 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069542949 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.085956213 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067516008 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.082388537 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.070986323 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.081723059 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072734033 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06752737 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.093109865 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070197467 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.078594709 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071474379 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081202418 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072606959 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061691982 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.081514655 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065942409 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.084357853 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065738297 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069814781 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.077704053 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073977623 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091522312 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067284199 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066430099 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.083102138 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073313259 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.084681732 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070873571 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069778201 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.089904197 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077213534 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.082621894 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070183241 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.093879491 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.067416204 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060800012 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.088337636 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.06597966 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.082992325 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065699153 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.065254721 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08572831 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075156956 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.089923051 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061057084 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.08590944 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065596546 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065542805 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.079395494 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071807562 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.086571094 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066758975 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074326909 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084262995 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067852269 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086981227 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067044104 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067353763 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.08461208 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069332503 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.084184759 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069960429 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065863008 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.086971916 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065721923 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.081298699 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068399921 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066529021 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.083557625 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07211242 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.082672843 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066811922 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068214431 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.084694585 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067725985 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.083260323 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065702827 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086068033 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067246917 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067206568 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.086117091 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062304323 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072934852 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.082930051 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074387178 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.083666521 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.064001495 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.088496663 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068703909 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071531519 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.084588581 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067633592 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.084902035 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066596375 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.068787504 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090316979 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064445915 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.093620933 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074840866 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084406171 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.068880248 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066728746 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.08544274 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065358262 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.085361407 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067640058 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066970046 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.083846825 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071871731 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.086355529 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067484749 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068696007 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.084069785 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.067173855 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.085637109 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061855258 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066036559 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.083297295 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.067594152 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092869492 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067556971 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.083508005 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065794159 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067766433 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.083188718 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064053192 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.09150524 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075534884 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.084620571 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073341882 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065425405 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.085801327 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076827592 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.078635459 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065924854 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064501073 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.082607841 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073855351 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.084394972 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.076081097 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.083962502 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066216814 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.064017506 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.08391817 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065571096 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060849927 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.081590456 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070261264 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.083507941 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066084797 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066872319 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.086679768 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067856073 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092978771 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065974693 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.084465703 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.067475445 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.064038255 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.082630738 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065962858 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.086984348 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067808694 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065346042 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.081873091 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.067043065 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067565039 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.084762636 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067337414 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.085137553 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07330044 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066673207 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.086782185 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069859286 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.081122976 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069800701 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.083787408 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066393448 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.06628351 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.087409956 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070263849 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084572096 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075489801 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065748317 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084911151 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067195385 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.082440146 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066752824 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066875576 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.083696888 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066459888 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.085420055 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074859647 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.06370907 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.086814148 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066886284 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.084640674 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073168965 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.085235564 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069582614 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.09060177 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067100809 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068658705 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.091439491 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070447813 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087400976 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067787984 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067894248 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089684422 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066282837 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.089887146 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.06671157 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.083938923 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068733988 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064831248 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083840845 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066459063 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066046814 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.089661037 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.06740113 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.083213173 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.0658028 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064149971 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.084776499 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070062005 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091557605 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069162481 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087276456 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062673741 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063628672 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084937634 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.0646699 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.084818255 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070230696 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072777688 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.086687882 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.06699539 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.083068426 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075303279 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072254846 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.087498108 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064840394 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.087689407 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067923104 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.086012113 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067692938 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066823725 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085478412 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070605635 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.085636182 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066541321 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07375356 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.087318736 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068643743 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.08560395 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067989583 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067020291 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.079731354 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.068808813 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.086457975 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072363773 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068309894 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084570257 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077200133 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.082135694 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067956239 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088452297 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066683904 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070798679 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.079763522 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068787471 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084858198 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067744804 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062464389 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.084293475 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065542727 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.086122589 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066185131 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062076746 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094162212 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.076036636 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.087401001 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065944352 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064820156 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.079896261 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062684079 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.083118935 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068809316 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068660714 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.095100371 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065905279 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.083590612 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062492405 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066779235 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08688931 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069764944 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.08175531 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062315458 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066271196 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.086787713 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072638616 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082952775 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066791817 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.06985237 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.086131463 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064701964 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08699569 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063544887 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069828303 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097090834 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.06768349 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084862558 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07279181 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091478686 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067915707 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.07957167 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067180138 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069538138 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.084588984 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068235728 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.085200948 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081793549 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086801681 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065645737 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065428321 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.086537517 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066180196 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.091809921 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067897135 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067935378 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.088404792 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068740137 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.092074373 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070198038 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091861731 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069566824 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.087279965 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.066571447 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067479403 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.082223317 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065952887 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067329603 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.085424801 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071510303 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.092531044 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066184052 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094061324 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076153301 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.085440097 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.06362171 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065934868 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.083490769 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062379611 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.085205681 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065282252 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.065192784 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.082345356 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066390472 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067187663 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090015249 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068071409 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084827679 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067568696 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060629503 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.087235863 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069696244 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085977448 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064162747 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066400263 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.084954589 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.07058717 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087848621 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.0646287 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068081981 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.086797148 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067685883 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.079766232 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073670961 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065306359 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.086777129 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066767944 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084826276 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.06769702 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.06945845 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089440298 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068625936 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086813724 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.076358623 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086840748 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064887522 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063850954 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.090360932 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.066162911 seconds)
  done (took 45.987086491 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.107662592 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081757634 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063017014 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080508382 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075231345 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081449378 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062512236 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063788955 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081035058 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066154929 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079932356 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06248131 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.089192782 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085716723 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092586121 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066181844 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08050753 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063625211 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.079709814 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063800711 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.08963806 seconds)
  done (took 2.466480727 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075978682 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.088729282 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073578299 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.095178007 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067979942 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.088864898 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073451052 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088777305 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.094759886 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067391139 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.094546172 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071791622 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.085320663 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067700547 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085599266 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071717532 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.093993279 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068293286 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.088956691 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073015868 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088613921 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073160801 seconds)
  done (took 2.621777447 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067990859 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065591169 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085251924 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061924228 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065033254 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.079535482 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069903619 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.082485515 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.070075201 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065465478 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.083100703 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.073911608 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.086109016 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061842684 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066147771 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.082133455 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.130880517 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.07022519 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065235191 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.085923992 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062093837 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.086103209 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061979793 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061831504 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.083324043 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070389111 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.084799269 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064605841 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065552784 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082844433 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066824441 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081312726 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068010778 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066669553 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083106303 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065676327 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065983556 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.084469479 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062254748 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.082696442 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067073685 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062001 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.08442868 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.06810256 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063627432 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.082277452 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067818559 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.083688141 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061661539 seconds)
  done (took 4.460590614 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.085330679 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.12905435 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086591611 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089388172 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.101203708 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.092283275 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069703598 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.110433635 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.06354666 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083893566 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082056928 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.101954619 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.085248365 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.071345434 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.06907399 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084949583 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06672596 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083652405 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069937273 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084321573 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.07039265 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090675979 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.098293042 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.080644139 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.087686122 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065290182 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.083891961 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070951775 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.097297894 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071576887 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.089471479 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072063726 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.099413606 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.07144116 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084032082 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068575196 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.101175235 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066127927 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.086933624 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063744727 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086393991 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.071259195 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.090735449 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.082788944 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084150617 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071103655 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084982003 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063809575 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.097705639 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.069326805 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.092561837 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.099703255 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070631153 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085088912 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07182084 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.100240756 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067342073 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.082908184 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.06993734 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.097576038 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064422472 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087633708 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.081211436 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.08684673 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072976413 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.099572062 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072303193 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088282185 seconds)
  done (took 6.596849615 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075997727 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.090951321 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080615254 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099827213 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091022447 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072316581 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.091319935 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073303102 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.09079238 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077514234 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.090910763 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11198385 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.068493782 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.093371402 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072750672 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091834903 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072842383 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.091705627 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072384243 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.091532041 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.091367945 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.08118531 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091422845 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.098678212 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.102859693 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.086517131 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07338029 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.090312177 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080469285 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.091580689 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.1028212 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073471632 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.091218249 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.0996375 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.085151868 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091270883 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066567512 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090177682 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073142985 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.091454257 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068648174 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099731216 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072838489 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.086595841 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073302831 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.090649502 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.099348942 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.084310347 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.09475874 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.095615575 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073856601 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.099708258 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072676883 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09164957 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.098741338 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.105705133 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100497608 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099259371 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073585358 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.099270862 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.098597401 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.106904959 seconds)
  done (took 6.297668656 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088717663 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09408736 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.096869505 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063122005 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064385267 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.08880312 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064909392 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.082873264 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075120347 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.093740866 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078102097 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088683428 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07314742 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095983856 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.087962653 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073739679 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088767535 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071158956 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092708059 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070354336 seconds)
  done (took 2.491397158 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076768544 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.10221309 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067205327 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071665199 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.088741065 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072393561 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.087922724 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069563466 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085849291 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070041902 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094635302 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07724078 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085803246 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072330582 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.094922382 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072401413 seconds)
  done (took 2.151918537 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.079825854 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.095363223 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.081256797 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.086059082 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065093521 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.082270268 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066303746 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062807477 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.082387426 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.081151388 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.0857639 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068853634 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.085657413 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064960105 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062294032 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088030327 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.06281662 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082517769 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.067346523 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.099089794 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.07766031 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.083545664 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067237716 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.067640862 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.08597195 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071684416 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.085558482 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064097136 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083743797 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.06728505 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085412357 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.074341879 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.08227691 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065519331 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065020027 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082189997 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066972648 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085553388 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070435079 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.066018867 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083912326 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066115751 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085177692 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068135117 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081274742 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.067220842 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062949629 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091546838 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064941243 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085749304 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066537815 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.087382475 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.067559003 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.077321227 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.08981361 seconds)
  done (took 5.059085258 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081091081 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069362708 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081819203 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064964073 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088469575 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069080853 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.06949394 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088067532 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068633861 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08317128 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068962977 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.087798022 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068730821 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069810535 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087635273 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070003965 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081489984 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068458609 seconds)
  done (took 2.233886648 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074054392 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066424079 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092542724 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067374828 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085005255 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069206157 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062455098 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.084577065 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06596948 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08527454 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067252936 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068597118 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083763717 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069321132 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08480009 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066894109 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068694683 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083553694 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067864941 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.081296991 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069478399 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064805345 seconds)
  done (took 2.498575975 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.073642093 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.092409338 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.162193396 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.106462418 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.081948833 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.09946902 seconds)
  done (took 1.488328263 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091830804 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098239134 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067706176 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10735078 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074835245 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087483687 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068499526 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087431613 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077469921 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10051965 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068606141 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096107055 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095641833 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077080658 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093203996 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074840563 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087559527 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068167245 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086341586 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105742589 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069495557 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095670725 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069625411 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087345411 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068615606 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096026855 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077873963 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101584046 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087017368 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078107021 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092515895 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068870077 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096612934 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100937576 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070347277 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096396887 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069252813 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105476146 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074255858 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095363658 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069113903 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09415492 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09664151 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074395938 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096147079 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069679836 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092684188 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068684777 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088326864 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111729584 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075087425 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095847761 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093462604 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078214571 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096377461 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113530006 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08284927 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095772837 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093026795 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082811222 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096114386 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074051264 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09643213 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100764458 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075048272 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095364851 seconds)
  done (took 6.592632685 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086487216 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105573734 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069425763 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101944216 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096343922 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069287206 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087935318 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069505116 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086973863 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06837928 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128607317 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069498688 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095573958 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095503674 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069387724 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087305238 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069760522 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096040265 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068747881 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112150837 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087144031 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076840192 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096000053 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094996255 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082709704 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093779986 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06824904 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087962237 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069019092 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088142921 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073230518 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08819557 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096081667 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069242392 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095645205 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069793824 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087398284 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073888007 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087683556 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074239283 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096213216 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105882767 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069517067 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087283345 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082834094 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08808182 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068252939 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087547418 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068357162 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086462825 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081864193 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101880481 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102253308 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096077832 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069796283 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088676875 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068857059 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087580526 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069138356 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092669247 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077649488 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087983127 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113055985 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069000832 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087732116 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077719471 seconds)
  done (took 6.480373445 seconds)
done (took 127.88736737 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.201319227 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.183061344 seconds)
  done (took 1.25398865 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070269316 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.095576377 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.097282652 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128469825 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.086842258 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100482564 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.118834036 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078903192 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066596342 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086610648 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067470033 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087973743 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131830449 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066547188 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.085968123 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069415785 seconds)
  done (took 2.316309983 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.103083716 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.195577506 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108451123 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066292683 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099646334 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.078827846 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.085302954 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.076940358 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.094964103 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065797328 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077847058 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096078422 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065139222 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.09498649 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.074067714 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.097779854 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.066232128 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.097612398 seconds)
  done (took 2.525095905 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.105050766 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.141377207 seconds)
  done (took 1.124502315 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.198914989 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.122306429 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.201587014 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.409847163 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.2040416 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.277104268 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.172514737 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.170482824 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.154710107 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.169110146 seconds)
  done (took 2.956030502 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101204848 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.170729501 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.309938903 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.137269248 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.085683528 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.1153834 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.137597556 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.089657778 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.101052916 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.099549206 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081853045 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096961684 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.097646571 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.095544449 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073992721 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.097068571 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121047767 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075030438 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.096683908 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075947539 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117928491 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067919607 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074298723 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.093991393 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077328608 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.097522735 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.066130659 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.085821196 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076370777 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094295695 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078123578 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.11396522 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.096971915 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.130619131 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.08125134 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.130490234 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.096590015 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.0719188 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.094649246 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072730854 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.097981276 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.076991813 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.102924156 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076143866 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.085920786 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076974605 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.085390321 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066823297 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.099135387 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.077469488 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.09918491 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078392967 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.129460175 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.096717776 seconds)
  done (took 6.207734736 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.747207322 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.110141748 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093490035 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.805606733 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089227577 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105708732 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.715728596 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116912101 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.210300162 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.76512523 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.090130925 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.098698494 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.180270989 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.213709589 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.898330027 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.284832316 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.634931683 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.105384029 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108815774 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.13153885 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.139615675 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.175610988 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.149733494 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.408000788 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.075276364 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092467649 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.138091071 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074589274 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.160560811 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.084706786 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093576899 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.155247239 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.224135473 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.155027363 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.096042981 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069530872 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090735276 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.148218447 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.216326223 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.191045729 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.158141099 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067644308 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090299746 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.14015419 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130513068 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068680633 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.139301828 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.152519146 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.168692929 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073516832 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.09551557 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.141634262 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.138664337 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.142595137 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.10048443 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.262983236 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.289047136 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090044333 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098453274 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.103176133 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.212397024 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.103640612 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.199286916 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138907008 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.167377885 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090423124 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.730575091 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.147100577 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091124249 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074260606 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118261561 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094080608 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.137575211 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.145291065 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.362248296 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.162459857 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073574238 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069424412 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.203847087 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082953235 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09064839 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.14102691 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.074288115 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.1218691 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.162605859 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.141430513 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.147691028 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.208994421 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.141182792 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.137959654 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.09518514 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.123299721 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.074938811 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.188354859 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.193151769 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.140483653 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.187319275 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.160271849 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.142372073 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.14773243 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075649695 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.170027583 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098706204 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100120849 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136984354 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.191020776 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.122143022 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082766198 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093289051 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.140651516 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.124561218 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085698185 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.138596912 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.169505993 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.431866855 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.147447274 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.066891469 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106792835 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138669789 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.140319937 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094950158 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.21536286 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122580349 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.14573922 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120798361 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088998461 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.11918926 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.141593008 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.078634474 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121357505 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.136958393 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.097544929 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.212635094 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.190030506 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077391354 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.193724978 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.160962524 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.094936587 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.150280764 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120105887 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.147233698 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077180656 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.158726821 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07617733 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.744769898 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.145243477 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120737431 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073494866 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.165435868 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068998271 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104264345 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.103474137 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06786227 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.756830926 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.106785364 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.09921426 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.082284339 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094737737 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120377457 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.136603222 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073184738 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.138338169 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.202937331 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09548417 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097751731 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103680568 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.139458842 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.096051257 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.083654967 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.103796519 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.083723241 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121335369 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.093432837 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08292768 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.145179862 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.159974362 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.174191028 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.569681526 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070368803 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.103002005 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.18105528 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090906282 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.240202292 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.15689155 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.177622794 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.140094703 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.10077734 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.290882226 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.142483717 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.165334711 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.085442285 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.149995811 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088750577 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.138259716 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.143656585 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06926436 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096042863 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.141162947 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.144736515 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.161760492 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.921170991 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.09131793 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.204656696 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068309811 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.149433482 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.095739702 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076498396 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.259622716 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070361539 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.166927612 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.142932833 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073516216 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.10377727 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.817575666 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.103679572 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.139005347 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07378105 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.195189738 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.142500988 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.134566454 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.136973589 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096250477 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.13897506 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.185117211 seconds)
  done (took 40.344056177 seconds)
done (took 57.60588565 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.256347572 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.177381857 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.241601491 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.143757986 seconds)
  done (took 1.798620224 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.14348744 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.104012786 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.11653155 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.084732741 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102832565 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085278751 seconds)
  done (took 1.540084524 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.401843291 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.263819356 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.228980281 seconds)
  done (took 1.7999818 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.260844834 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.21095607 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.444779967 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.295414757 seconds)
  done (took 2.246196944 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.180006635 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.112367697 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066574699 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.105319087 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.156641705 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.248793799 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.127268208 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.186819678 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078874687 seconds)
  done (took 2.217241275 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.196523336 seconds)
done (took 10.709253736 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.143706388 seconds)
    (2/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.102686162 seconds)
    (3/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.100855554 seconds)
    (4/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.292290663 seconds)
    (5/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.1008252 seconds)
    (6/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.215686992 seconds)
    (7/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.20606417 seconds)
    (8/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.168247964 seconds)
    (9/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.072474545 seconds)
    (10/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.112842666 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.1881962 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.071664905 seconds)
    (13/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.099821223 seconds)
    (14/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.082826839 seconds)
    (15/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.09684456 seconds)
    (16/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.17957898 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078743901 seconds)
    (18/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.212303208 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.134230826 seconds)
    (20/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075701393 seconds)
    (21/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.169516321 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.105272224 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.13645951 seconds)
    (24/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.227189084 seconds)
    (25/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.182043246 seconds)
    (26/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.06644907 seconds)
    (27/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.176590112 seconds)
    (28/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.098598633 seconds)
    (29/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.145907583 seconds)
    (30/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.191757598 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.157098568 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.11323461 seconds)
    (33/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.199514744 seconds)
    (34/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.162464067 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.128210364 seconds)
    (36/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.210958406 seconds)
    (37/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.167455973 seconds)
    (38/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.187893737 seconds)
    (39/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.051319189 seconds)
    (40/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.066394412 seconds)
    (41/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.193257772 seconds)
    (42/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.109511597 seconds)
    (43/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.094348122 seconds)
    (44/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.134657301 seconds)
    (45/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.12025858 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.111544079 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.10680901 seconds)
    (48/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.167736473 seconds)
    (49/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.087914527 seconds)
    (50/309) benchmarking ("sort", Float32, false)...
    done (took 0.149462878 seconds)
    (51/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.077507076 seconds)
    (52/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.162883098 seconds)
    (53/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.099258204 seconds)
    (54/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.133887046 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.13130065 seconds)
    (56/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.135834849 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.09474186 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.092471989 seconds)
    (59/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.104725368 seconds)
    (60/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.092431534 seconds)
    (61/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.122515426 seconds)
    (62/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.099676505 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088118483 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067289238 seconds)
    (65/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.097421073 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.076925115 seconds)
    (67/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.071936669 seconds)
    (68/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.110240003 seconds)
    (69/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081527445 seconds)
    (70/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.095385279 seconds)
    (71/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.167806328 seconds)
    (72/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077718097 seconds)
    (73/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.07250632 seconds)
    (74/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.073532879 seconds)
    (75/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.077216725 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065688472 seconds)
    (77/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.198276598 seconds)
    (78/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.156567777 seconds)
    (79/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.16945917 seconds)
    (80/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.217027117 seconds)
    (81/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.07396518 seconds)
    (82/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072605015 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 0.088519718 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.136559431 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.097366376 seconds)
    (86/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.133877063 seconds)
    (87/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073494241 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065533844 seconds)
    (89/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.094050926 seconds)
    (90/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.092926249 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.111811015 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.147791189 seconds)
    (93/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.099173542 seconds)
    (94/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.072825805 seconds)
    (95/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.156561389 seconds)
    (96/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.076556036 seconds)
    (97/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.075539318 seconds)
    (98/309) benchmarking ("sort", Int8, false)...
    done (took 0.16301084 seconds)
    (99/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.22497068 seconds)
    (100/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073979047 seconds)
    (101/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.189415767 seconds)
    (102/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.180888735 seconds)
    (103/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073647069 seconds)
    (104/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.155340298 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.122481737 seconds)
    (106/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.089062257 seconds)
    (107/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.091709197 seconds)
    (108/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.093761055 seconds)
    (109/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.098568544 seconds)
    (110/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.09427776 seconds)
    (111/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.14464485 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.088132677 seconds)
    (113/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.1053054 seconds)
    (114/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.18169244 seconds)
    (115/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069908143 seconds)
    (116/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.102337643 seconds)
    (117/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051725558 seconds)
    (118/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052288332 seconds)
    (119/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.089692776 seconds)
    (120/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.069482139 seconds)
    (121/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.192618048 seconds)
    (122/309) benchmarking ("sort", Bool, false)...
    done (took 0.156655251 seconds)
    (123/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.051734124 seconds)
    (124/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073757769 seconds)
    (125/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.088941676 seconds)
    (126/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.076049951 seconds)
    (127/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.06158907 seconds)
    (128/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.094648153 seconds)
    (129/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.051539404 seconds)
    (130/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070549261 seconds)
    (131/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.09425529 seconds)
    (132/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.169628201 seconds)
    (133/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.09058891 seconds)
    (134/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.088789466 seconds)
    (135/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.073679932 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.094905143 seconds)
    (137/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.093922838 seconds)
    (138/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074639785 seconds)
    (139/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.102830207 seconds)
    (140/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.170383462 seconds)
    (141/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.118199449 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.07693905 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.122038668 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.066396219 seconds)
    (145/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.052765236 seconds)
    (146/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.096235547 seconds)
    (147/309) benchmarking ("sort", Float64, false)...
    done (took 0.126163923 seconds)
    (148/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.111682544 seconds)
    (149/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.061735944 seconds)
    (150/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.096300758 seconds)
    (151/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.074616381 seconds)
    (152/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074098388 seconds)
    (153/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.075185862 seconds)
    (154/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.07471248 seconds)
    (155/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.051159424 seconds)
    (156/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.093178091 seconds)
    (157/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073000405 seconds)
    (158/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.052512177 seconds)
    (159/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.088341102 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.066574855 seconds)
    (161/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052937191 seconds)
    (162/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.21994772 seconds)
    (163/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.088575422 seconds)
    (164/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.05183636 seconds)
    (165/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.067402452 seconds)
    (166/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.084496741 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089191167 seconds)
    (168/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072556637 seconds)
    (169/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.096844206 seconds)
    (170/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.052039344 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.155376659 seconds)
    (172/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.075163346 seconds)
    (173/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.092202154 seconds)
    (174/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.071996277 seconds)
    (175/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.071606204 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.113437968 seconds)
    (177/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.071268297 seconds)
    (178/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.193683523 seconds)
    (179/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072798326 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.113745483 seconds)
    (181/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.068695622 seconds)
    (182/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.087251124 seconds)
    (183/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.053929922 seconds)
    (184/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.054642851 seconds)
    (185/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.051406407 seconds)
    (186/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.096938787 seconds)
    (187/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.109866027 seconds)
    (188/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.085963343 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.066681694 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.116348331 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.096321004 seconds)
    (192/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.072610817 seconds)
    (193/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.180221176 seconds)
    (194/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.09469869 seconds)
    (195/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.05194693 seconds)
    (196/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.186822015 seconds)
    (197/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.068667345 seconds)
    (198/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.201094294 seconds)
    (199/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.076978014 seconds)
    (200/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.092804532 seconds)
    (201/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.072991847 seconds)
    (202/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052847624 seconds)
    (203/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.073612729 seconds)
    (204/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073773606 seconds)
    (205/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074463879 seconds)
    (206/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.072963449 seconds)
    (207/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.293436668 seconds)
    (208/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.0885658 seconds)
    (209/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.07267817 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.089335918 seconds)
    (211/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.089106425 seconds)
    (212/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.052556077 seconds)
    (213/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.201797076 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.067355196 seconds)
    (215/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.086843658 seconds)
    (216/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.052884947 seconds)
    (217/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.07351476 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.088199235 seconds)
    (219/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.079735017 seconds)
    (220/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.053044186 seconds)
    (221/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.131342941 seconds)
    (222/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.145367882 seconds)
    (223/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.073924722 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.139421095 seconds)
    (225/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.141450616 seconds)
    (226/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.068865835 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.119402034 seconds)
    (228/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.052020142 seconds)
    (229/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.100113606 seconds)
    (230/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.109411197 seconds)
    (231/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068987011 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.116867531 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.172464399 seconds)
    (234/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.050979905 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091394477 seconds)
    (236/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.074929118 seconds)
    (237/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.099388852 seconds)
    (238/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.075662555 seconds)
    (239/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.166861256 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.088488078 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.092100986 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.137048636 seconds)
    (243/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.067191681 seconds)
    (244/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.074541975 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.135291734 seconds)
    (246/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.09054523 seconds)
    (247/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065846187 seconds)
    (248/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.110730796 seconds)
    (249/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.099007906 seconds)
    (250/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.067347395 seconds)
    (251/309) benchmarking ("sort", BigInt, false)...
    done (took 0.229859809 seconds)
    (252/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072797579 seconds)
    (253/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.052077261 seconds)
    (254/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051064427 seconds)
    (255/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.096291537 seconds)
    (256/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.061609482 seconds)
    (257/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.05224541 seconds)
    (258/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.089320704 seconds)
    (259/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.052700868 seconds)
    (260/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.062925575 seconds)
    (261/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.099773572 seconds)
    (262/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.053098486 seconds)
    (263/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.053473274 seconds)
    (264/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.087679449 seconds)
    (265/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.06643602 seconds)
    (266/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.100114715 seconds)
    (267/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.068263431 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089700893 seconds)
    (269/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.08325738 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066571951 seconds)
    (271/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.061747589 seconds)
    (272/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.073138397 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065754699 seconds)
    (274/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.073756747 seconds)
    (275/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.086059161 seconds)
    (276/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.053484234 seconds)
    (277/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.06592298 seconds)
    (278/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.086124852 seconds)
    (279/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.053263184 seconds)
    (280/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.060607903 seconds)
    (281/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.086994772 seconds)
    (282/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.051460757 seconds)
    (283/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.190099427 seconds)
    (284/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074268109 seconds)
    (285/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.104877393 seconds)
    (286/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.065106614 seconds)
    (287/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.053034163 seconds)
    (288/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.086234839 seconds)
    (289/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.112930472 seconds)
    (290/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070993488 seconds)
    (291/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.074750531 seconds)
    (292/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.052456309 seconds)
    (293/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.198740679 seconds)
    (294/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.06684678 seconds)
    (295/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.050949836 seconds)
    (296/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.075121673 seconds)
    (297/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.053717191 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.066173175 seconds)
    (299/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.112106368 seconds)
    (300/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.07155448 seconds)
    (301/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.073188456 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.102306982 seconds)
    (303/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.066811863 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.143539743 seconds)
    (305/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.052146018 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.087759646 seconds)
    (307/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.06520838 seconds)
    (308/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.071075187 seconds)
    (309/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.073441588 seconds)
  done (took 32.964126724 seconds)
done (took 33.882809925 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082111998 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.113746852 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075344602 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.114678032 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081397825 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.100355024 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073300496 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078661499 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.102559779 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.08245978 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.101797753 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055017225 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097625445 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076523921 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096899328 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092035548 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.100622016 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072825992 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074692745 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.087420241 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074272537 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.087569583 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067989875 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.056189802 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.100154835 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073095634 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072265706 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.097502412 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066264795 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.088074886 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069483681 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072990292 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087241486 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079786039 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.094253265 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074172481 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.075779656 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.098363771 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067489087 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.088402126 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074378097 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066180264 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.094882245 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074075791 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071078971 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.09398228 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075209066 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.101819288 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092319746 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090295908 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074451177 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.099623173 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.07825281 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072628881 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.092030176 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074315562 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092989636 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092483475 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.097099404 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068029801 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073717613 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095948607 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071359416 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095180058 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073939804 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076095645 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098082214 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.07137086 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.09814941 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071051736 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065268343 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.096295619 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069303916 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065613133 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.097331697 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077501505 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.08573074 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071477919 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072426603 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.094364105 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065924386 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088983688 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067464093 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.072707981 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089379434 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055071415 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.070184295 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.094033738 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.06469276 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074637539 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.093851064 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.07312858 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.08935694 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076675235 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065071388 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092558012 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.0659544 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066205905 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.08967546 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070346606 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066391478 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090550585 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074876482 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.089195598 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072646 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080425522 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.088098175 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072574984 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.08698746 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065367027 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.082354417 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.098407884 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.06670914 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090591597 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065861672 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073679894 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.087036805 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066411699 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066513902 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.087330163 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.072301892 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06607896 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090465249 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073298766 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.101776468 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065909412 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069452737 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089799793 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066242299 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.071465676 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.088414226 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.06653316 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.067430963 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.086042457 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068367834 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.088046234 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073211163 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067801487 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.096032607 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.068102107 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.096870392 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070597907 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.072079097 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092681061 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064751104 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059458364 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090204443 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068548506 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.068675219 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.088475024 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.068090673 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065996578 seconds)
done (took 13.155969463 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067443609 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.16820044 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.125623715 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096346744 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.110236004 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.06647154 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.099655652 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.103380518 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.091200605 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.126582323 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087610268 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.107526241 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.113697108 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087159726 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066657199 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070400226 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.089805203 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.088850411 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.124853926 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086690891 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.13848237 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087013959 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.120147014 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090876912 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.111331797 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.094089771 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.089168272 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.071048011 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069216976 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.125052964 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.108802 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070285255 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.0671873 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.123054615 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.117020915 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.086703214 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.088640046 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.084321086 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.08861064 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066575866 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.113908203 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.100646288 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.104062781 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.082664343 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.095211082 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.070214166 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089759611 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.085994049 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.113069759 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.081303099 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.110671367 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.133134669 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069881858 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.104843033 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065307731 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.109787776 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.082016139 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.091147559 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067373075 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090613873 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066018597 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070470055 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.110485755 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.11467192 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070895434 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.104451727 seconds)
  done (took 7.236471928 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085347369 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.11618262 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.08514993 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.107013043 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06675832 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067344713 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.089623635 seconds)
  done (took 1.589807525 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067954107 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.089072849 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.112209867 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090063053 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.108710336 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.08705692 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.099568267 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067714654 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.106985063 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068237591 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088663291 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.127274211 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.068448002 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.096532364 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090996901 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089673376 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091049572 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089819681 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070239707 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.114006765 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06989331 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.08707011 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.092202272 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067799736 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.104213471 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067689683 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.138201218 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072609058 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.09066007 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070265366 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066012918 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.139125735 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103832557 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078263732 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066882679 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.104222415 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.082729365 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087880955 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.084034734 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.095682265 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.081500636 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.06796621 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.091132006 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066912186 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.0714706 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.100328321 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068751835 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.090203357 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069708263 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087504932 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.091223465 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081835252 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089776343 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071336813 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068828428 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095605133 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077600595 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.090191295 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087227011 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068766577 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.107103261 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084042352 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.104439033 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083590878 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09276927 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.082167919 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.104513618 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070156613 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06887589 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.093338339 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.084229892 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.08778699 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069005614 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078201349 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.091595546 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091158014 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.113732922 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068696545 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.10037744 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067164302 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068641702 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.090172308 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.090762194 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.09428216 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067583529 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07147195 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093549422 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065881978 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066427725 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.094449387 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.066464165 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068344794 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.093226954 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068465193 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092848851 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083769257 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.06749869 seconds)
  done (took 9.274560262 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069350373 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068956584 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091880971 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068122193 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068598742 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.090774979 seconds)
  done (took 1.446638798 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.099899175 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.091684426 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.082106545 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.095289864 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.106213377 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.105115478 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.083985152 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.105974497 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.085276975 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.102408734 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.083059611 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105821069 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.089416068 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.09672947 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.082859777 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.095907396 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.08341875 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.09959231 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079361407 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.0969093 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.089237327 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.096407515 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074093824 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.107083758 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.071113773 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072476152 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100115086 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.080219717 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.10187436 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.083268922 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.095598451 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.07170494 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.094558871 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.083503157 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.105668129 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.072814165 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095495223 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.072457671 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100278932 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.071196624 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105985452 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074200439 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.078809993 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.095451827 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.106563689 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.072583063 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.071553053 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100005699 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.082011415 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.095119683 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.072454585 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095288596 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.070763918 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094957444 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072520979 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.106121841 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.072115564 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.105836656 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.07374931 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072455175 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.092847692 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.070888441 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.10539096 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071149465 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.103055126 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.072325662 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.094911138 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074091321 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09657 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.073262333 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.071598327 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.0925533 seconds)
  done (took 7.33237353 seconds)
done (took 27.851899049 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.646379707 seconds)
  done (took 1.626470042 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.76452657 seconds)
  done (took 1.74924511 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.536068504 seconds)
  done (took 15.526842745 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.610944367 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.758358529 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.795727714 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.155122478 seconds)
  done (took 3.305736908 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.887375158 seconds)
  done (took 1.89779023 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.235031353 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.222879682 seconds)
  done (took 1.449423534 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.734152016 seconds)
  done (took 1.733525696 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.277695131 seconds)
  done (took 2.268981065 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.320782467 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.180108908 seconds)
  done (took 1.50352555 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.522170953 seconds)
  done (took 1.523207492 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.911920869 seconds)
  done (took 7.918372359 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.23025073 seconds)
  done (took 1.242440383 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.268441373 seconds)
  done (took 1.271297516 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.13305486 seconds)
  done (took 4.136187779 seconds)
done (took 48.14460676 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078358626 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081674453 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.104726086 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.07916514 seconds)
  done (took 1.341527374 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078193521 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073988032 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100376676 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073323299 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.10050171 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.074358745 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.098857029 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077822302 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072729495 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097612708 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.074201658 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.095631937 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075808357 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.098312577 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070887287 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076577741 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.100041792 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073708912 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.099285015 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073978695 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071855396 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097456269 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076171699 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.095901253 seconds)
  done (took 3.037759028 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079775413 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073987393 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097794367 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073131131 seconds)
  done (took 1.331290813 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077836591 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.116267599 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089349997 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077947356 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.115724193 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.110617053 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.070013731 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069522726 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.095171981 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.078154173 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.091386367 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.09917519 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.111390455 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077426236 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.103516244 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.067167229 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.069454107 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.11091957 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078205251 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.101680217 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070718826 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.08068024 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.091483732 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090573641 seconds)
  done (took 3.157654004 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078607361 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127618967 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078257464 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.113889104 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.092021777 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065694066 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.099464295 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.115006958 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.125833737 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.089865764 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070186937 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066780828 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.095928576 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.06564423 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076713702 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.132685374 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.136164415 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068855408 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.121305345 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.066430018 seconds)
  done (took 2.903792461 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.076046639 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.07117902 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088887644 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.06909629 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077266175 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.09618646 seconds)
  done (took 1.496744624 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069098198 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067882771 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090794675 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067382687 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.07233663 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.090575 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066780461 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067322828 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.091192252 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.0676368 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067288805 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.08918497 seconds)
  done (took 1.919831162 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.38381274 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.092513224 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069570343 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.087193344 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072228217 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.090246806 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080700681 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068875671 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.114187014 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067505754 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.090735887 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068343097 seconds)
  done (took 2.303923342 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261873513 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077501811 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.322520077 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168562404 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140740013 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154522764 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105634085 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139226053 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.196930344 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138843118 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199622923 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224492733 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13390072 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168637274 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114907851 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.132811182 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186656382 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221998867 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105612116 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223703652 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207178389 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156418525 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178659524 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127573619 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134572135 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151259299 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072017593 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105995612 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232772444 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161835886 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200904281 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138686356 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096979209 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230234978 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225327089 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194141811 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163399655 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085264098 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.157335348 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.163053875 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.25555418 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11411897 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194804557 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133319172 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105794531 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171643348 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144581006 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.147251216 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.136239578 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115120718 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173508604 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23915961 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.164782907 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112273886 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136735417 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141623051 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.143623458 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129079634 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24165881 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192882661 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181579696 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071817881 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124378857 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186152598 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158919585 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.141797032 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.15292122 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118029809 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192216493 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185592643 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145923835 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200597286 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.154557717 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114251223 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147127451 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17023332 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155379949 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227104219 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154511404 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073016206 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151864378 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129959992 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107182409 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.14413636 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101199489 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23448319 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099669558 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.13913102 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140781266 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136454243 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135952927 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195197419 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201151988 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130102391 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066817381 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130271262 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.148834842 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175246869 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112956694 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135150693 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14681852 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.105206525 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167015314 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.076019196 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15165536 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.103839388 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152515442 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162586075 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.101149438 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15512398 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103315323 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.128091669 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16430363 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218998051 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116120893 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083453892 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227062165 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154931823 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.13125047 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174928668 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.213535031 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.103007885 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129198627 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204633618 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242792146 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090323269 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221816104 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134092103 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109080818 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.088571037 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154530452 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139339011 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.148990384 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109098674 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.154394518 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225559904 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.076000684 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121647369 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166364616 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107332925 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081920843 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139773783 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126697738 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.1204314 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.101546266 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.133220206 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194612641 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154321626 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134458886 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153698835 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124793859 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199913896 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114650504 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.131094507 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130338226 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069734339 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.163521546 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215361419 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080987284 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225059195 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.154232046 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132393361 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147902094 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107956984 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168546494 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079923532 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.096510745 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174827135 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137498934 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137613662 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.183882498 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131080942 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.155521877 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.151979057 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18682395 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160719826 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.161493614 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132864853 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088541252 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139354252 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153842994 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.098674181 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.120864002 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.083556144 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130979466 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122906341 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08433683 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196929509 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155343302 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127137113 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140339058 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098016125 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.204851041 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077851608 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158165374 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.146159324 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121141107 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.212120551 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18714568 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188886569 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101979297 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199606001 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071497851 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100126821 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.091850983 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.181179835 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083939858 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109940745 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144870074 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179437429 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155891476 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192426992 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112561315 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148479346 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.211831148 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.072085023 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.143677618 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178848439 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177659508 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.13105867 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112382161 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.100030099 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.200232871 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136418601 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246068218 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144045314 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154067158 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181760162 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.129639267 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106627176 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107007388 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192346535 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133371723 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.181667973 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125965566 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115536486 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138254191 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.082821185 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130766407 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154764569 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14837498 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188193148 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.144190878 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162330604 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078732374 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168957339 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151533308 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151982812 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.06524146 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148158772 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220706703 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120828692 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146880313 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185011912 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105061776 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.154730361 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235967522 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175617801 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110838363 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138040918 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154988886 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157597759 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147509737 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170041063 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138279773 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163633107 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138143037 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085654158 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113717253 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125702031 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134475021 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.096977229 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.16465099 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.145102376 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.0954573 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160057376 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138357451 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137852589 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146907346 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.124988295 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.091495665 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123503426 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234627866 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15049997 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234317314 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.127955894 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179775243 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227205738 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076197016 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106389524 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.081598055 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194421184 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086079683 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162480031 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.123981484 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132260503 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155366746 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172857826 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122010185 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069376882 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137219591 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189939083 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112682543 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125074549 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.132982057 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221530646 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.104426898 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106858621 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153797873 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131618595 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104038716 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232334296 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.087645969 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099364835 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101718414 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082210023 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157421115 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215505456 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.109095981 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.13095884 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142797837 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147699533 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182939644 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103067704 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125943208 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142051839 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206141399 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158336326 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.09167121 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140768061 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184555843 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188628476 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133332772 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.122577931 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205035586 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212046802 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.22096004 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.090744269 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144240601 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142468846 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136395302 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196385942 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084386778 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225940389 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109321968 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167521672 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132538712 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120211686 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159713706 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.126715953 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089357483 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205363325 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150596857 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10060351 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106636999 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147329355 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150997051 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134950558 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.077113633 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194802025 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.074346994 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193693418 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203951301 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108661305 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134531267 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097408696 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108993627 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136783807 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131439819 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087934503 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.143576617 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228601484 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.118525392 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182776487 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197296061 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143093277 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16923603 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127634268 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.663008906 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.079888974 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213623893 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149056071 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239056604 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125606089 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147551327 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1121612 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178172832 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176073383 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133085416 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.205957367 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163144467 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.149840883 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10609491 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104344894 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137743595 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.117804263 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135267366 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143938145 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145054891 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.128325042 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.151597288 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156470846 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.108093065 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096999426 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217264943 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146319876 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174500424 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196193231 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086023626 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147348475 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197981252 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081097921 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.150891827 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214635594 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136941097 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125941768 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082384736 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.134133161 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232336505 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.07308037 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222162125 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152456402 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139579347 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14210712 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.147820198 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187941005 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136485283 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155673212 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096857016 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.166306689 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119104004 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111079031 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.104423259 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107916813 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139314453 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.125971591 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131022165 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.123175561 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206106561 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071691209 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122433554 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131174045 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173322913 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237643918 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.11658009 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083387941 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148096972 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140219698 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.142789446 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180083533 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.083208462 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110296088 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.083845212 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.138204754 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.137511753 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141789897 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106709965 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139968158 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227546396 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.111528852 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.226998349 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122951 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134170263 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070719016 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.106728322 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097101624 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125196525 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13637691 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128411059 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23221529 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.098587804 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.118319349 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120518421 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074253795 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111171468 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159295294 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139519345 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151257892 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125421863 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.064053662 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138008306 seconds)
  done (took 71.287846505 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.133597635 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.103542619 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.116383574 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.174934868 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.145188698 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.237731924 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.180462281 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.222288127 seconds)
  done (took 2.408159728 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.0698899 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.116366183 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.10271554 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.116867067 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.089586386 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068841123 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.294934879 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.109993116 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067425691 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.114243907 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.119166773 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.091700212 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.469186357 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065884918 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.094471143 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.083798511 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068189734 seconds)
  done (took 3.228376084 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.426767196 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.628482009 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.450971918 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073118947 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.896701249 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088466585 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.387939413 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.161327706 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.070802578 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.43403302 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.747427825 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.130405739 seconds)
  done (took 17.592883847 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.07551139 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069238679 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.10921639 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083300158 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.098444029 seconds)
  done (took 1.537352469 seconds)
done (took 114.54747192 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080387993 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.342549077 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053541684 seconds)
  done (took 1.526969193 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.084743739 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084400246 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.110544499 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083980687 seconds)
  done (took 1.467424454 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.075133027 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076464487 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.11005991 seconds)
  done (took 1.362481774 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.276983567 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.166573821 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087924849 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083760421 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078557942 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103962774 seconds)
  done (took 1.36906243 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073361466 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074907647 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.09855766 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076492359 seconds)
  done (took 1.419296489 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076749648 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052622036 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055671548 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.0816611 seconds)
  done (took 1.368537667 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.090651102 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.105321763 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.081009247 seconds)
  done (took 1.376337656 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.108557855 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.11163166 seconds)
  done (took 1.324034199 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082018843 seconds)
  done (took 1.179891294 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.095002704 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.137832416 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.154856564 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.136746924 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.164453625 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.136107492 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.112439903 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087173389 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.103749528 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.115181416 seconds)
  done (took 2.347533051 seconds)
done (took 16.445781692 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079083627 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.482662362 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.359844237 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.115854931 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.666219801 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356026012 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.00294174 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118024083 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120422416 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093193453 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083304473 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.673780021 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.96621166 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.439340752 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.954575393 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.32203325 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.675411457 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068036031 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093467377 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067454434 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.961631258 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093543652 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067328019 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068344493 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.674260726 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370650336 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09384834 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.317170875 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067442757 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.095756604 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354390801 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094511726 seconds)
  done (took 16.089123933 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071340718 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.143990039 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073340204 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083329605 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.096575696 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070055203 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.098296906 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069330346 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.153417774 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067629547 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11035186 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068105556 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.098671256 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068768165 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087088388 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.094671283 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069162271 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068846667 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093898332 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069356361 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112808901 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067960808 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068238007 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094937754 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068391911 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.106489624 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068354326 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068018157 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094414896 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070448322 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.097273533 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069110653 seconds)
  done (took 3.845651696 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115650113 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.151947545 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073973466 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.128219877 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11315512 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.09670097 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.169722545 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093017357 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.15449079 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06851749 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111448907 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068016522 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.127626334 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069150356 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114062254 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06867269 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06996873 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09474458 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067861781 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.09505797 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087105851 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093816976 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069186664 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068672617 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094920555 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082294593 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094296748 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068487934 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068287378 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096562796 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071466337 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094165557 seconds)
  done (took 4.153570985 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.07343309 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075593109 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108920677 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083371186 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.09604541 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071247877 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073282172 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.096335088 seconds)
  done (took 1.785089355 seconds)
done (took 26.972191524 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078459396 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069887068 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.099495474 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080885348 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.099034012 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079890668 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067694828 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.101289903 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.076759375 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073058964 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.101428615 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.06790717 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.097574547 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.068163612 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.0746323 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.093912203 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079829643 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.097895364 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079344992 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079530838 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.096539555 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076684882 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.100782079 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078894691 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.10571315 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079543761 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.082175265 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.10004923 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068977126 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.096629042 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076245614 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083302911 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.095053836 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079559432 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.09436921 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067717264 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.067221028 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.0939796 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080111955 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.100379858 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069932287 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.10017496 seconds)
  done (took 4.662479709 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.088468582 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090836821 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.112152041 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.065130635 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.097283563 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064872556 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.114154732 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.063141951 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059147404 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.11536249 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055843692 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058891545 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.089516894 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053857441 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059086269 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056275148 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.088642086 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055923537 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.05973337 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.085605745 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057765134 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054080805 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.086908172 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062907257 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.05673242 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.087741771 seconds)
  done (took 3.053084739 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076000021 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083308974 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113392038 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127364504 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.131974328 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077472073 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.10479333 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.087494085 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.112723754 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067640651 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071904851 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.122425239 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087611762 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.100437764 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067792755 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.113615695 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081855757 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069319684 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.101117939 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090297906 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.111880399 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.078345009 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.119202233 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081209468 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066967203 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097335858 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071246524 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.107642225 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07253616 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077045834 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.098800467 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071482636 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.096107147 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078894673 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072080353 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.096091564 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089323691 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.10458706 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078258493 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067957608 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.097918675 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068857444 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.11418745 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.112020818 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.093867134 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074641897 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.07505445 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.104495452 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068086098 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112768711 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07719932 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067846976 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.097364062 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066891708 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.094223872 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081294966 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070495923 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.097344417 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076801743 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.09807953 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.080780476 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072061579 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.110606483 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067727977 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.102025667 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.06708661 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.06873272 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.093883702 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.090323739 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068970739 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.135899397 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068754317 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.095518599 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077116584 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.10193489 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074086533 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068378054 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109450674 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077170542 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.098025179 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.07623424 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.07069469 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.097504772 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087881267 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.097236829 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068814762 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068421567 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.101189053 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.07055544 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.095559614 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081002604 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068347938 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.097899298 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084729334 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.093872999 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069315561 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074298344 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.099479128 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.06687798 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106852078 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073303512 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067820634 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.103343173 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067645032 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.097268386 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077436018 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072918063 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.094205334 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072584518 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.100732657 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068588784 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069920904 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.097675703 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069583164 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.104150841 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073997493 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072951552 seconds)
  done (took 11.283295645 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.191577708 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.186214333 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070738624 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.178071583 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077045392 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.107595334 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.178541455 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.09616185 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.097150813 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069038331 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068675802 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.130508522 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.124495186 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.10621416 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.105786452 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067529161 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.113406491 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.104158934 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.181470584 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.175109249 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.115060401 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.075986048 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069725729 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.097596 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.079072836 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.104481556 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.084771062 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.103229164 seconds)
  done (took 4.291960673 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081974888 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.128740436 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073684164 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088891592 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.119099682 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068968302 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.101021281 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069609029 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.108237036 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079556918 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.096004737 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073947858 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074522216 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.106210751 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068929773 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.105593394 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.07787428 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.06945141 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.098387219 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073324036 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.105278538 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080894843 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071904744 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.094531823 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074103209 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.095102506 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064862537 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.113417864 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067679527 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.118199767 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.06642112 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074343893 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.109420141 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068845632 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.09528046 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.072134875 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071236694 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.09912189 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.06991565 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066270448 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.094440017 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057346822 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066765578 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.108111047 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073972978 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.087962894 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073977236 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073336291 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.099684924 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065170314 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.098902233 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071101031 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071120739 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.104805962 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072462377 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072765595 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.100065263 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.06614254 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.103441166 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071616967 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064120525 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.094131208 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073052437 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066810877 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.103530633 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072622276 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.094853513 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.071241698 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.073433629 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.102459501 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071246614 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070939092 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.093697411 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070280249 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.100706161 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.073443872 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072358054 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.095495298 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068227254 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.06876246 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.084247871 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068476869 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053806397 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.099827301 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.06648048 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066769579 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.09896246 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074338627 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.109166419 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069573322 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.10211733 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069115398 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067163161 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.099470998 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.064254632 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071273256 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.111569983 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.11162116 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068646404 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066294202 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.110684759 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072767548 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067056355 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.084244114 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.07446013 seconds)
  done (took 9.84164805 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.096725251 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091933865 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.097564993 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083362616 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.124203404 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.09332794 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.103555822 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.074360738 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069783147 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.112816488 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.067914063 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.10410298 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068397786 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.075999043 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.125700408 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075681494 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.097770235 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077108959 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071975121 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.135481217 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.081998244 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.109606344 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.080293331 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.096622877 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.072584085 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079412606 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.124124826 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.080144317 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.107146293 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.083993613 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.08011369 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.123643397 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.085891388 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.100072707 seconds)
  done (took 4.296261807 seconds)
done (took 38.53676892 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.204478443 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.404142977 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.188714535 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.077772677 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.201540909 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.204714252 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.199974507 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.19074519 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.393481126 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.191552049 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.4598904 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.841393142 seconds)
done (took 58.692388563 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.220135881 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.333198062 seconds)
    (2/2) benchmarking "String"...
    done (took 1.462394484 seconds)
  done (took 3.928117421 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.538246427 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.082244246 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.445900871 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.189500309 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.194976909 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.485251633 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.790848105 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.020229749 seconds)
  done (took 27.340464079 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.197010499 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.546196927 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.497291222 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.499338359 seconds)
  done (took 17.874641609 seconds)
done (took 59.033725739 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.185952208 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.230660048 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.232535586 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.190532934 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.293544385 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.213000583 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.499869807 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.219768425 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.20124402 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.177774165 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.20866703 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.195294124 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.203563173 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.506060812 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.190317495 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.200780695 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.210729728 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.690993868 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.577918949 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.199982311 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.210092099 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.192668949 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.207482622 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.205601382 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.191585516 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.191635388 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.191500051 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.215787943 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.368638684 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.19071497 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.280881335 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.726900083 seconds)
  done (took 189.934873226 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.192401301 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.313734978 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.375170811 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.251878032 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.805385084 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.388901427 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.321438682 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.870897882 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.204329015 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.217637547 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.469935691 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.192443487 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.537593711 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.156257163 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.202667882 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.292838074 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.386667682 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.516256323 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.206870675 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.471712502 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.193380711 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.468360277 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.406351726 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.415949879 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.197332588 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.202619793 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.208260102 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.196233213 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.382094395 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.327541327 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.21261814 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.215089537 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.748740368 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.050616617 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.212068329 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.200834517 seconds)
  done (took 150.147060948 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.457567245 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.191055692 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.189228396 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.190084474 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.190270948 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.217456684 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.189595537 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.707941982 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.707688123 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.696578029 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.92227101 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.188749158 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.247923717 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.39950459 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.189844795 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.282015423 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.199360904 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.189479205 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.203516176 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.215536844 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.19000893 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.188706694 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.700672733 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.20210652 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.371605315 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.19307216 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.188195277 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.21742691 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.584155469 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.187351783 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.217535793 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.501514718 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.228985729 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.1871826 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.46646263 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.380676215 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.297587793 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.189475141 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.217137758 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.189768217 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.456698043 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.187820271 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.190889195 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.19225107 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.757206706 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.189109333 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.698707185 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.190597251 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.072673832 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.189364795 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.189427942 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.43642201 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.622522118 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.18945931 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.190260955 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.191829326 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.187652684 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.190540476 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.220171767 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.452352041 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.285052785 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.189689275 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.191458844 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.21806247 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.19054226 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.271655295 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.189853057 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.76741244 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.244865995 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.304937139 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.691133889 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.189695284 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.280497734 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.308329345 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.18743526 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.189455615 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.188296371 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.187999151 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.293434958 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.188136938 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.564908875 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.19287475 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.190073977 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.247991104 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.280381237 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.18899107 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.447455671 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.189217582 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.188690491 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.880121568 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.282645863 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.186663678 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.187483394 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.188347488 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.187637427 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.560756507 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.686209189 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.323684811 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.189063388 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.187118672 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.38375591 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.189177114 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.567964878 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.669484327 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.752291269 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.188244757 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.294488517 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.191149206 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.190029086 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.187780446 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.216648836 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.188672792 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.248483711 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.189389436 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.585377775 seconds)
  done (took 343.304294282 seconds)
done (took 685.97671659 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.883168702 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.859375806 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.968107441 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.85957661 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.839441875 seconds)
  done (took 10.540824294 seconds)
done (took 11.671787001 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.361567288 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.360411103 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.244103379 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.363255018 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.216834582 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.377984313 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.338771363 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.208933238 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.288105012 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.258571446 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.282762627 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.232177567 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.215398319 seconds)
  done (took 17.880726781 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.487541288 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.483827243 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.261467995 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.483327079 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.229726834 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.493084806 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.380431253 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.392576561 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.373442198 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.206856052 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.203799706 seconds)
  done (took 16.128664709 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.492654882 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.482489995 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.255215094 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.497986864 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.230446723 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.50049985 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.37897695 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.39203736 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.37568576 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.202615843 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.202855362 seconds)
  done (took 16.143234664 seconds)
done (took 51.28509336 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.201130468 seconds)
  done (took 2.332433162 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.229629842 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.388825143 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.212657653 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.203409616 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.199875686 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.200207398 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.206722169 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.198157801 seconds)
  done (took 10.972341602 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.197410908 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.193855277 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.195429803 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.195591264 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.194643899 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.199724024 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.196996114 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.19399452 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.196438481 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.197601605 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.194483718 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.197029711 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.194429063 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.197535833 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.198036576 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.193084548 seconds)
  done (took 20.268760736 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.195773604 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.19465856 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.194589501 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.195162564 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.194181 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.195090789 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.195814893 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.195172663 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.194944582 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.194508228 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.195277367 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.194868435 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.195995809 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.197619549 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.195084299 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.196091227 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.194681051 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.19595436 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.200216192 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.194377748 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.195383496 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.194457569 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.196210444 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.195749317 seconds)
  done (took 29.826172144 seconds)
done (took 64.531486467 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.097490122 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.661408846 seconds)
  done (took 8.88900727 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.197851406 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.198671904 seconds)
  done (took 3.530929703 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.197704195 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.197370434 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.197752101 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.197739569 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.198101272 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.198183451 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.198595375 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.197137243 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.198363921 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.196895415 seconds)
  done (took 13.109673199 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.198944391 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.19852281 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.196501884 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.198972225 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.19958164 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.195217341 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.199101631 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.198877679 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.200602884 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.195546671 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.200279567 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.196293384 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.198572481 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.197891685 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.199497076 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.196839829 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.196724349 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.198360467 seconds)
  done (took 22.69838309 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.199097047 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.199783759 seconds)
  done (took 3.531428475 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.196270198 seconds)
    (2/7) benchmarking "second"...
    done (took 1.195863248 seconds)
    (3/7) benchmarking "month"...
    done (took 1.197568278 seconds)
    (4/7) benchmarking "year"...
    done (took 1.197057655 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.197142797 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.196302171 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.197800045 seconds)
  done (took 9.511019779 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.199966178 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.376941186 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.451564129 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.805133364 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.20238768 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.204341179 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.059484431 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.203297635 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.204605052 seconds)
  done (took 13.840190389 seconds)
done (took 76.240617833 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.16871048 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.190512967 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.967476085 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.207772578 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.208267093 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.490048697 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.206042439 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.317842837 seconds)
done (took 36.890412034 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.207746144 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.883636632 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.885087297 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.189514514 seconds)
  done (took 11.089518446 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.182429288 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.02776838 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.182908165 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.13878002 seconds)
  done (took 17.665708111 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.748472383 seconds)
    (2/2) benchmarking "read"...
    done (took 1.518817831 seconds)
  done (took 4.398671188 seconds)
done (took 40.492542816 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.198241933 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.198567491 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.196053157 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.19772788 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.195350919 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.195142984 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.197449171 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.19686439 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.197695894 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 1.197194789 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.200854986 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.19560645 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.193810236 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.197367901 seconds)
    (15/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.194645699 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.195121193 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.195820895 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.196341587 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.200261111 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.19527881 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.196777226 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.197085426 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.193568044 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.195462296 seconds)
  done (took 29.850103926 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.199163361 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.198165237 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.196558803 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.19842297 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.193750982 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.197655302 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.198270389 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.193874631 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.19716099 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.198320324 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.195165599 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.194961124 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.19865576 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.193857487 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.198342201 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.195334015 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.198737065 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.194584163 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.199086958 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.195083525 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.19765778 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.19581787 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.195317947 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.196782524 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.195749846 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.196326073 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.202946707 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.195656864 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.19685107 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.196205616 seconds)
  done (took 37.036249294 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.200251577 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.204895563 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.198287 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.19791668 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.201346626 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.198924645 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.197498219 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.197958838 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.198122304 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.19697368 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.198514383 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.197381053 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.199899424 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.19798145 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.19806955 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.198337239 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.198685513 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.199379161 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.196938038 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.197829349 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.199103768 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.19765632 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.198931299 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.197016369 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.197263964 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.19949245 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.198330491 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.198759928 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.198417562 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.199786174 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.197112575 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.198738989 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.197802919 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.197958225 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.200358166 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.198295269 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.20432837 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.207592458 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.199036221 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.199132489 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.198788799 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.200035562 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.200164213 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.19902093 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.198760857 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.200283672 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.200886565 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.197996318 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.198780637 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.199088443 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.199007244 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.19864688 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.198548181 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.199956813 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.200779663 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.19904765 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.200255589 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.20117406 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.199245121 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.200887422 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.199156212 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.200324737 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.200204172 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.199604557 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.200665635 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.199486433 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.200084143 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.199718204 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.201619482 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.200415216 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.200498882 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.200470811 seconds)
  done (took 87.486469379 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.200079156 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.198134546 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.198568381 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.197755314 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.196939778 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.20016572 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.197926836 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.201022728 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.197787446 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.20028987 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.200931487 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.198074602 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.199058479 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.200813793 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.199129083 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.198966549 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.201607905 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.198801739 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.201409611 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.201640799 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.200016137 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.198654398 seconds)
  done (took 27.523154191 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.200494243 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.202707888 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.197718818 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.201101132 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.198563197 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.201048879 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.203272448 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.203084134 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.202484895 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.200500361 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.200261692 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.201912599 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.199400009 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.200698524 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.200476096 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.200468079 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.203764174 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.201397257 seconds)
  done (took 22.754554489 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.199624008 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.201608249 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.204019845 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.201712207 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.201552691 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.203764735 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.20116542 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.203380603 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.20439334 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.202502376 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.203856453 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.205231838 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.205176382 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.201209811 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.204235316 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.200912798 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.203405081 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.199843953 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.203225531 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.201254187 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.200798804 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.203949777 seconds)
  done (took 27.594206352 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.203633932 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.202646693 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.20137142 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.201028727 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.201830813 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.204399681 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.205785197 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.200686225 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.20364732 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.20413205 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.201867044 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.20459554 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.201063762 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.201606949 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.202484952 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.202021795 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.20473792 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.203513523 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.204814191 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.202499611 seconds)
  done (took 25.196470223 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.205087086 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.206284778 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.205884934 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.206081988 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.205070727 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.206588563 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.206161106 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.206464514 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.207775146 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.206677868 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.205555539 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.207701966 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.207485842 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.206617326 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.206724371 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.20680523 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.208330508 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.20603031 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.207093556 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.206289592 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.206193877 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.207507767 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.206548607 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.207330689 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.207661681 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.207249546 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.206343555 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.20728288 seconds)
  done (took 34.926264887 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.20607893 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.205971387 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.204916038 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.203610564 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.206000813 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.204264235 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.205628284 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.20526995 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.208286327 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.203440815 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.20604024 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.204936931 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.20780879 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.206581082 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.206687109 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.207173406 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.206904955 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.205157207 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.203496098 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.205154557 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.205413293 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.207764454 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.20647308 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.202382586 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.204455831 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.207399537 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.207743082 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.205028867 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.206378587 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.204551281 seconds)
  done (took 37.312114586 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.225102333 seconds)
    (2/2) benchmarking "in"...
    done (took 1.226709931 seconds)
  done (took 3.591496049 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.204889928 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.207536405 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.207444729 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.205547954 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.203797498 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.209943462 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.208061116 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.206154232 seconds)
  done (took 10.793626715 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.20713622 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.208872275 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.207685039 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.208854101 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.207238037 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.207046547 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.216367429 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.221089827 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.210292869 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.209566819 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.214288495 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.216846093 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.213126445 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.208657786 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.20832563 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.211915538 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.207569435 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.208792893 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.208880325 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.209667735 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.209580459 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.212727456 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.211622843 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.20656597 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.209665281 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.222059415 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.215854301 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.208250238 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.210096805 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.216621259 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.209755185 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.206414896 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.210557029 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.209852738 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.207685251 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.208904546 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.221522789 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.224682929 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.219351173 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.211947013 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.209492509 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.207687673 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.212567401 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.213965283 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.213472291 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.210200583 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.211670214 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.209651371 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.209178075 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.21342327 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.215217886 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.209961851 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.207585553 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.217629532 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.212384531 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.222055807 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.225590887 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.212368721 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.218426531 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.224774201 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.225868899 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.218807359 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.214606274 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.211039125 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.218905671 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.233537483 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.221329529 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.222113829 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.208777842 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.212115526 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.222220424 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.225344458 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.221309041 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.210980771 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.211643272 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.212248992 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.2121528 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.212501227 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.221876012 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.229959596 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.211835188 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.212719335 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.22176858 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.231992307 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.211384249 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.211990923 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.21288987 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.211925118 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.212791324 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.224288175 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.227098635 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.210479037 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.213134144 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.212949964 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.213749468 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.213094532 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.210637845 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.215089231 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.209522326 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.212989072 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.212856717 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.215238329 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.222839655 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.21389772 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.2124324 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.224015497 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.211803108 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.212707754 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.224900049 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.214778585 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.214744858 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.214289612 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.224144861 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.21100631 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.215759859 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.222778981 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.213650231 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.215407831 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.215071172 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.213025674 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.223171201 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.239722841 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.213886141 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.21476256 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.21817473 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.225611611 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.214028573 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.218861248 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.214371601 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.213964353 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.213071119 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.219179353 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.214707742 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.217802374 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.216022899 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.217279072 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.213789008 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.215949506 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.21496434 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.218014882 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.218325597 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.216124817 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.217764269 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.219861979 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.217007786 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.219126497 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.224578123 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.215296619 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.218332078 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.217264198 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.212315085 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.215335542 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.217707174 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.215617856 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.21652751 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.214518905 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.21585837 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.216612616 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.215999119 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.215799287 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.215538846 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.216662871 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.218164573 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.219295214 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.22321242 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.214615717 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.213735481 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.215688571 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.216260556 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.217038105 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.217513269 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.215858811 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.218336082 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.222778154 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.216877207 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.217654953 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.221745892 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.217222589 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.215213065 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.217524121 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.218103342 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.224346464 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.217613131 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.225904266 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.216778897 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.218620413 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.216911984 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.219276777 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.217538736 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.217177875 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.218696923 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.223956091 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.230699792 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.228231194 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.218688901 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.22118503 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.219421239 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.220443124 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.225614023 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.217048186 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.217960917 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.218387208 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.216720569 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.2180708 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.221071244 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.218080675 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.218219106 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.218502235 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.2181081 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.21921532 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.219234867 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.220783121 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.219868525 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.216332414 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.219775011 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.219537436 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.219128366 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.215801638 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.218806659 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.218355644 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.219887272 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.21948039 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.230255677 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.217680749 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.222127259 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.219652347 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.219918209 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.218658925 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.220026959 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.224484238 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.220559688 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.228300201 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.235321901 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.221593776 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.229828017 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.232824182 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.220107935 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.223281854 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.218288151 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.217065331 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.222182703 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.226732526 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.219219046 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.221142869 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.220398347 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.220032572 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.219139819 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.23028715 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.219828676 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.219856489 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.219355212 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.224084444 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.217040579 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.222329871 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.221015011 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.224037254 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.223805291 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.220893649 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.222137002 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.224202388 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.220662628 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.220096283 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.219364399 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.223427319 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.229650651 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.228057187 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.22229984 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.225326116 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.223061862 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.224428038 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.224305043 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.220113696 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.2218354 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.235927839 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.229549809 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.231463884 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.226025485 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.223218961 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.230218489 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.222870058 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.226274484 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.222966726 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.222932592 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.224557856 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.220118378 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.221661921 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.22558003 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.222463335 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.226081651 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.224516622 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.22676131 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.222725303 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.221298356 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.224433168 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.224385497 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.223233068 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.225032771 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.222806708 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.227946687 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.224956721 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.223936027 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.222901292 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.232494235 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.236408461 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.224265322 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.224884434 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.224595395 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.223434595 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.225734038 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.223715391 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.225335592 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.23167462 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.22498203 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.234035654 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.22511402 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.236604822 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.223444848 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.224669861 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.229816406 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.220424371 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.223063208 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.225274397 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.223476034 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.234507746 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.23865089 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.225361646 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.227636398 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.223625046 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.224310352 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.224328759 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.223790457 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.225193655 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.224954985 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.23702177 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.237459222 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.229525183 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.227425555 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.22169427 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.225973995 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.224884948 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.225201661 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.231849774 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.224111675 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.227720657 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.22500568 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.226638831 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.226070998 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.225648127 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.226398816 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.224295099 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.226077227 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.235362665 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.239860443 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.229758236 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.225761828 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.239341384 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.226553607 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.236728731 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.23980459 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.227270855 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.227069868 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.224910529 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.229123962 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.227513086 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.227507776 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.226391179 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.227624874 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.229534764 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.228176703 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.231539095 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.22804535 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.228101018 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.226170718 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.237042539 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.248406652 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.227511437 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.231921887 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.224293642 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.228877965 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.231759607 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.226938353 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.22905822 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.23060748 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.236255907 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.234490595 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.227840308 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.227535395 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.22890896 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.227799538 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.22769597 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.228562681 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.227460156 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.228896341 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.229498184 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.227802076 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.234744594 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.227069374 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.229275368 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.230509086 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.229823707 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.241438056 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.228972102 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.230280306 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.226658106 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.228320545 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.229079994 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.228567706 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.228277717 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.229646566 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.229193284 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.229749219 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.233341885 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.235029437 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.231980429 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.228191176 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.227111026 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.231181316 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.23160824 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.229024023 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.229630451 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.229508509 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.229687679 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.229893709 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.232202098 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.228713268 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.228903621 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.229754025 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.230673352 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.231715876 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.237261319 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.230812819 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.226395109 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.230428535 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.22969821 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.228662203 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.230453736 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.24172137 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.233223489 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.239429929 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.237524576 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.234646677 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.230150276 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.231292439 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.23861238 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.229413525 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.231696239 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.231314234 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.232327502 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.231099808 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.233680008 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.231040726 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.242030033 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.231208168 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.232759619 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.242832402 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.24649812 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.231725378 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.233605069 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.237668371 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.232968317 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.229110918 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.232024818 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.232341323 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.241552412 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.249448115 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.232337939 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.233938052 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.230776732 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.232953022 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.237007774 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.232691874 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.233010271 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.230104907 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.233114137 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.232296852 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.232697944 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.230662555 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.232708581 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.233458318 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.235870811 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.239019251 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.23022505 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.236956341 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.231435087 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.234901545 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.233377441 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.232968754 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.230570691 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.230565422 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.233813793 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.233324294 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.235562864 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.236679977 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.234326957 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.233632645 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.235038216 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.233755226 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.236421533 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.24277168 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.240544366 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.230025383 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.23414919 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.234834309 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.239171194 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.23674198 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.235597335 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.234046396 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.237238381 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.233272767 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.236085754 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.232971028 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.236786632 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.254257392 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.248325101 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.236049957 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.237068582 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.241208727 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.234008539 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.23320614 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.233843525 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.2386677 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.238830208 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.24275444 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.23451834 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.243540699 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.249274794 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.236696545 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.239501936 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.238722452 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.242797266 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.239531935 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.234437 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.235910237 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.239939923 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.252852072 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.236144942 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.245378297 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.265190762 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.251441153 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.238190143 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.237495202 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.236891115 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.235826099 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.241135068 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.237528947 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.236734438 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.237724245 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.237549831 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.239247566 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.243521956 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.238707006 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.236522365 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.236043139 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.23788858 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.239510817 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.234309357 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.236374926 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.236971297 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.236931914 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.236212992 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.238042346 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.237352418 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.250040233 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.248594521 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.237346893 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.237493075 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.233944126 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.242043538 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.239870569 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.246215563 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.244126882 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.238584909 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.237886448 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.24017289 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.23838561 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.234354681 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.239696935 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.237694557 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.237045723 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.235208215 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.253532345 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.245100231 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.244856896 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.238213219 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.238061751 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.238154113 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.241555054 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.239302617 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.23962924 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.240934388 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.238485489 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.241442103 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.238425113 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.23944484 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.241651791 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.243328907 seconds)
  done (took 731.773583549 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.235827479 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.23692296 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.2362157 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.237414664 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.236895511 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.236540762 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.237196057 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.236134555 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.23587061 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.237359337 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.23731203 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.23667691 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.236458082 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.236734243 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.237580928 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.236984622 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.23782061 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.236918671 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.235783177 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.237034911 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.236704399 seconds)
  done (took 27.144236941 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.238625464 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.237241673 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.237830531 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.24398867 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.237860281 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.239914938 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.236463757 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.242052865 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.24033102 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.237817111 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.24225293 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.239560767 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.237916809 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.23782733 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.240074297 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.239020228 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.239672337 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.238694406 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.241411652 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.23853301 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.241278176 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.236942927 seconds)
  done (took 28.438601949 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.240954692 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.242899647 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.241437506 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.238042136 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.242085002 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.240326383 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.242339737 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.241184072 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.242124632 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.245389421 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.24085513 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.242444407 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.247380647 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.243503175 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.246989384 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.24187969 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.385716576 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.24329826 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.241281752 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.242912373 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.239520016 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.251705836 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.240129407 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.239481181 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.240891799 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.241359752 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.242499423 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.242728595 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.245154671 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.243361975 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.245103073 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.242168375 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.24310123 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.244124849 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.242358024 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.244327882 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.246483207 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.243351036 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.238921708 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.242751548 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.253220525 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.258609413 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.243252487 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.253346985 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.245079705 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.243894295 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.24807974 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.248627261 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.241926055 seconds)
  done (took 62.261911454 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.242806535 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.242629731 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.241341847 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.242729206 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.245599186 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.244530215 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.244607013 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.244682562 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.24269099 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.241202832 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.244902017 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.242259978 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.243449361 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.245300528 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.247472387 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.240733307 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.241478306 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.242491286 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.241253462 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.24195095 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.240804648 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.243996114 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.24812514 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.23420152 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.236685463 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.233542629 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.233434469 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.236089099 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.235087855 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.233854287 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.240347818 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.228710344 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.228430436 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.226474309 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.224506208 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.228783767 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.227260668 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.22538045 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.228691989 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.224466909 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.221516336 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.222119198 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.220351182 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.219841133 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.218506092 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.218505416 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.217775993 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.220556699 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.216688831 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.220412753 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.220277017 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.216671263 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.219028268 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.217273969 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.219652932 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.221733776 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.215141606 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.214792796 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.219697988 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.215216359 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.21551794 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.217552238 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.216043959 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.21992195 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.21576856 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.212845985 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.214931324 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.21450545 seconds)
  done (took 84.804212739 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.213827806 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.21624849 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.215053101 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.215153987 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.216696407 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.215566029 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.215426429 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.215995611 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.215809205 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.215323146 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.215181966 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.216127658 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.214227489 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.215000406 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.216089834 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.216458801 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.215367558 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.213938429 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.214411511 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.216582129 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.217718928 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.215969301 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.216579568 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.216670814 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.217596333 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.217626023 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.215702791 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.216045808 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.216879926 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.216774001 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.217484134 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.215691803 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.215928125 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.215831718 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.216856577 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.219781943 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.214504856 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.212936435 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.213726616 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.213627188 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.212755837 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.214853855 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.213636649 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.214672893 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.217261181 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.209707871 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.208984009 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.209389938 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.207273793 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.211364476 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.209921255 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.210405884 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.2101549 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.206831879 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.20599953 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.206824606 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.20680179 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.206143034 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.206446163 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.207023667 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.206207083 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.208689587 seconds)
  done (took 76.395716113 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.209741627 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.20856958 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.207836243 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.207452206 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.208893668 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.205689333 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.209720424 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.209262165 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.21040929 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.208918887 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.208736908 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.206717756 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.205874147 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.209221108 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.207877141 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.203896385 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.203150087 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.204326617 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.206748072 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.205616571 seconds)
  done (took 25.293748968 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.205886542 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.208623555 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.203516942 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.203478693 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.205615048 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.203280382 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.20284862 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.204816764 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.202806927 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.206099971 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.201950469 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.199393094 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.195399493 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.199241044 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.200305519 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.197697749 seconds)
  done (took 20.384180825 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.197726752 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.202649095 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.196206147 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.195746036 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.194310223 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.193191395 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.19734949 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.193590824 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.194614044 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.197170491 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.197435264 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.197679589 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.197613956 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.197131248 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.194905069 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.197048293 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.195168175 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.194625382 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.19736656 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.197519451 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.195458697 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.195138412 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.197847691 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.197451875 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.193659583 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.195030413 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.195870043 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.196018287 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.195165496 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.197749852 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.19488071 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.196363716 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.194594163 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.195403231 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.199216575 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.195239226 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.198435668 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.198121633 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.198031764 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.197643653 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.197938361 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.195697693 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.197815157 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.198921858 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.195142261 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.197664896 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.19557093 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.195569992 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.195035955 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.195727743 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.197988095 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.199541933 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.19834914 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.197272403 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.198728636 seconds)
  done (took 66.953324983 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.19689127 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.196396471 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.195541179 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.197272587 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.196633091 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.194652877 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.197690568 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.194519201 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.194112593 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.197194406 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.196338571 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.197617354 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.195932992 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.197219685 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.195221844 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.197524473 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.194368812 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.194542883 seconds)
  done (took 22.664802071 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.195122167 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.196109264 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.197663534 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.195100644 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.195442035 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.19808684 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.195734361 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.197806059 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.197762585 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.197925219 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.195682505 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.198719943 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.198625668 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.198815024 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.196360163 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.196395117 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.19921404 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.198930361 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.196217653 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.196338858 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.198725085 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.198585981 seconds)
  done (took 27.474580704 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.197692218 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.199337153 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.214859622 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.242284821 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.224948406 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.19844883 seconds)
  done (took 8.412932098 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.197281076 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.198922081 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.196622659 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.198934148 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.200052134 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.196706427 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.1961063 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.196115435 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.199498348 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.1974474 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.196909686 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.199314408 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.199252399 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.197236655 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.198788498 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.199276922 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.197122951 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.196830375 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.197587766 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.199973581 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.197151158 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.200244316 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.197370517 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.197346671 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.197194148 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.197508383 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.199910243 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.198182939 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.198597154 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.200558287 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.200713458 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.197728255 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.199409347 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.197874449 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.201184511 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.200937873 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.197537774 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.200847627 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.20029797 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.197938154 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.200532475 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.200519107 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.200486165 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.198760141 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.201027903 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.198241158 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.198585826 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.198549771 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.19870276 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.201217433 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.201210842 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.199077486 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.201554215 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.202225113 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.202273142 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.201708959 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.199584677 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.200224285 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.202262759 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.200866169 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.199350645 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.201666268 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.199221516 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.200071335 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.202258636 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.199987282 seconds)
  done (took 80.28807102 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.199000048 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.198890492 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.199130195 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.200422852 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.20126195 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.198993372 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.198903218 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.198496462 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.198532916 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.1988758 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.201042549 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.197495325 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.200399678 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.202404119 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.193893797 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.193313979 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.195073193 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.194071062 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.195009579 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.196748255 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.194292603 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.199865263 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.190617973 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.190001095 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.190970689 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.192110726 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.189753407 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.1906375 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.190414972 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.193036292 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.188144979 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.187185149 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.186609835 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.187977107 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.18663274 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.186357478 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.187427591 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.18790198 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.189383604 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.18934498 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.186252545 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.18936524 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.186683734 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.186361125 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.188081617 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.186804314 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.188095011 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.187107726 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.187148403 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.187712851 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.187245386 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.188014724 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.187435241 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.187204426 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.187475948 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.187380301 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.187707296 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.187453301 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.187447311 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.190227423 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.187420558 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.188474044 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.190573194 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.187988147 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.188910911 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.188478072 seconds)
  done (took 79.784906506 seconds)
done (took 1687.271074683 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.244548103 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.197055505 seconds)
  done (took 13.568186831 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.351920275 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.305279808 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.188908102 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.194731686 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.189968574 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.188806449 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.185652637 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.189859859 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.189825088 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.190380039 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.189657901 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.379350837 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.244458362 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.190396896 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.18981329 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.281959069 seconds)
  done (took 40.780578809 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.211949568 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.198332213 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.294817694 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.21347526 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.218726595 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.360445038 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.246723115 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.198920835 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.343671281 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.234464572 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.546100657 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.219342032 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.197541578 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.156102687 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.213461133 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.360521131 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.410214624 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.548682438 seconds)
  done (took 27.301940526 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.576042561 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.209286988 seconds)
  done (took 8.918944877 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.195154313 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.23513105 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.218003172 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.211622013 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.193191714 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.23887326 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.247936339 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.25490854 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.232516585 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.223289314 seconds)
  done (took 63.384481983 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.215635597 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.1994013 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.199700965 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.197746283 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.190208672 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.189926469 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.197091338 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.19477263 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.310611144 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.30577056 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.21096721 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.20539508 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.198861848 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.199714152 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.195754523 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.232055283 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.348494559 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.195628741 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.194986423 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.203628996 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.1993876 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.281967532 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.234311314 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.195730547 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.306203205 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.327107957 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.201969964 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.205196089 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.336773806 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.196120499 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.198347948 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.199129219 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.201034772 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.74760231 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.620411421 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.204736008 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.231738113 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.207631878 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.197567754 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.3174132 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.199658983 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.206659787 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.192914848 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.59178294 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.351656105 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.29897551 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.266750772 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.200180247 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.200952682 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.256782152 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.200174391 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.201446738 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.226571926 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.907868444 seconds)
  done (took 102.43499908 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.222327523 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.68303739 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.360685197 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.21356994 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.940038393 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.84220777 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.193527372 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.437350432 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.233583865 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.194374892 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.520344323 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.651827898 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.19464245 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.218181132 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.859686092 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.257336331 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.196037774 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.951551658 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.195988687 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.19479706 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.599205976 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.218685642 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.193763363 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.358967052 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.231674708 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.612525719 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.439431502 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.628599658 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.196311115 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.194261252 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.615912551 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.194686215 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.219130404 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.196487465 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.449070933 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.505232292 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.487727806 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.194713382 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.212724312 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.19769834 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.218029833 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.613541582 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.495725281 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.195243044 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.195438647 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.616626087 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.194478548 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.201956849 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.197919709 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.392593848 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.942880574 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.196536695 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.451037037 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.19678134 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.455177266 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.238662237 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.256669262 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.644355796 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.196939236 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.261186606 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.213071593 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.197722372 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.20228784 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.195974961 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.200400363 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.503158325 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.30628273 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.200771842 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.50194872 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.610976941 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.195895298 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.686650058 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.102306546 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.196281792 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.271848747 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.207483291 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.769586234 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.64322662 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.196077364 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.196941946 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.487812902 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.197279871 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.497005644 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.208739377 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.198571792 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.611150407 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.212551867 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.208002107 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.197311687 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.207299941 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.841065452 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.200117416 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.458951555 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.231204979 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.197579963 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.197549766 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.2416299 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.203968022 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.197301582 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.201336615 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.68856565 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.201689485 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.498959351 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.215030788 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.198378632 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.198035742 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.201953118 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.198585576 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.412190226 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.708523514 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.19800413 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.198130545 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.197878585 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.198934019 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.339213278 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.198739149 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.466571705 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.201974695 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.206378819 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.202337381 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.896072144 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.21179751 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.200686876 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.198778871 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.016546997 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.403481116 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.214219787 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.209260916 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.199478831 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.2128368 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.382840019 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.199610522 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.240851038 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.198971237 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.861209483 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.204624614 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.214887332 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.597509156 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.208845953 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.01082248 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.216790619 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.200272625 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.492891283 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.455320087 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.239098512 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.201197092 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.213509202 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.858587196 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.205562576 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.338535104 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.217792143 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.199576677 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.39570212 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.594230096 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.201669572 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.772677021 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.201316248 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.409306999 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.201473272 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.503630263 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.645825674 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.20166208 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.205953142 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.860585574 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.864624985 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.83210033 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.200326353 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.515395879 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.196430915 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.654836495 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.200897848 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.20145435 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.647464582 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.201690568 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.208225726 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.201250515 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.201502509 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.368082835 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.374399224 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.97527625 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.205171729 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.626874475 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.227462243 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.202330588 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.218912743 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.205715019 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.554332956 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.268334547 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.207041317 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.231620819 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.203489449 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.210180303 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.643507447 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.143660105 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.202770151 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.353425038 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.795387208 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.203869399 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.202811058 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.84905881 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.476644616 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.678415044 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.250876 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.473884779 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.207047172 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.240514225 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.885078668 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.250094959 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.680404269 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.206201986 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.20371919 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.768921923 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.20469913 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.550002475 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.20297636 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.205240257 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.69092713 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.20425702 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.206891628 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.3937358 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.214918927 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.446166555 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.204279501 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.213552965 seconds)
  done (took 1078.915656094 seconds)
done (took 1336.431683546 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.204336782 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.204840038 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.194810698 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.208957127 seconds)
  done (took 25.960234957 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.216968625 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.212344646 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.213849065 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.212044538 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.215362676 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.213251526 seconds)
  done (took 8.43595832 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.230010137 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.208133003 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.208249372 seconds)
  done (took 18.796663729 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.403534226 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.353232834 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.54716665 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.127984187 seconds)
  done (took 9.583249402 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.215816458 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.214246069 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.216383147 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.216681507 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.217477698 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.218772246 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.215747538 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.218145011 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.219338897 seconds)
  done (took 12.105211845 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.72300982 seconds)
done (took 80.751687821 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.402035523 seconds)
    (2/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.216295934 seconds)
    (3/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.19490718 seconds)
    (4/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.616437776 seconds)
    (5/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.295947105 seconds)
    (6/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.839485352 seconds)
    (7/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.690553215 seconds)
    (8/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.331120201 seconds)
    (9/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.897610908 seconds)
    (10/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.227669974 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.317917667 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.43839917 seconds)
    (13/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.230764766 seconds)
    (14/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.400846803 seconds)
    (15/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.248813173 seconds)
    (16/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.431971501 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.260117444 seconds)
    (18/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.196088051 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.294232498 seconds)
    (20/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.23669475 seconds)
    (21/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.703360562 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.407926966 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.28630526 seconds)
    (24/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.520343892 seconds)
    (25/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.2085742 seconds)
    (26/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.20948734 seconds)
    (27/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.719054216 seconds)
    (28/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.293937325 seconds)
    (29/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.210940383 seconds)
    (30/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.879766933 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.595402278 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.18168164 seconds)
    (33/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.202832311 seconds)
    (34/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.202481256 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.031419886 seconds)
    (36/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.198941566 seconds)
    (37/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.350349571 seconds)
    (38/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.616250433 seconds)
    (39/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.351802809 seconds)
    (40/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.438182224 seconds)
    (41/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.591974135 seconds)
    (42/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.330297544 seconds)
    (43/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.338140699 seconds)
    (44/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.209372156 seconds)
    (45/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.971608487 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.553375052 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.062406782 seconds)
    (48/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.521727037 seconds)
    (49/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.344558004 seconds)
    (50/309) benchmarking ("sort", Float32, false)...
    done (took 5.156873171 seconds)
    (51/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.220123039 seconds)
    (52/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.390731546 seconds)
    (53/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.209915428 seconds)
    (54/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.390604752 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.794209922 seconds)
    (56/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.471659526 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.321584745 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.490451462 seconds)
    (59/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.460232473 seconds)
    (60/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.237623873 seconds)
    (61/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.221585344 seconds)
    (62/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.912013242 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.463142956 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.268175968 seconds)
    (65/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.219419297 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.544642805 seconds)
    (67/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.923913961 seconds)
    (68/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.957896942 seconds)
    (69/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.36144117 seconds)
    (70/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.251292315 seconds)
    (71/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.50507882 seconds)
    (72/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.235324635 seconds)
    (73/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.411738428 seconds)
    (74/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.360481791 seconds)
    (75/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.302726223 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.555893632 seconds)
    (77/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.223426648 seconds)
    (78/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.200694262 seconds)
    (79/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.213245936 seconds)
    (80/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.184193391 seconds)
    (81/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.220502099 seconds)
    (82/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.236293568 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 5.320913335 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.245553812 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.708493572 seconds)
    (86/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.275206146 seconds)
    (87/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.359436166 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.606591595 seconds)
    (89/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.646214684 seconds)
    (90/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.212272548 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.899024003 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.291287836 seconds)
    (93/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.419287728 seconds)
    (94/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.22193128 seconds)
    (95/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.715326878 seconds)
    (96/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.296372273 seconds)
    (97/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.217253314 seconds)
    (98/309) benchmarking ("sort", Int8, false)...
    done (took 4.263132755 seconds)
    (99/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.657592316 seconds)
    (100/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.238453336 seconds)
    (101/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.268601274 seconds)
    (102/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.682829485 seconds)
    (103/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.238998353 seconds)
    (104/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.500418491 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.203236876 seconds)
    (106/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.776274091 seconds)
    (107/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.435874598 seconds)
    (108/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.949658202 seconds)
    (109/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.237545824 seconds)
    (110/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.320943118 seconds)
    (111/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.212574319 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.711475565 seconds)
    (113/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.550391217 seconds)
    (114/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.812980413 seconds)
    (115/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.276931941 seconds)
    (116/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.337095415 seconds)
    (117/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.41109677 seconds)
    (118/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.207580991 seconds)
    (119/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.215726483 seconds)
    (120/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.294333542 seconds)
    (121/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.590282488 seconds)
    (122/309) benchmarking ("sort", Bool, false)...
    done (took 1.729530113 seconds)
    (123/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.370744956 seconds)
    (124/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.237825722 seconds)
    (125/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.331482623 seconds)
    (126/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.297991482 seconds)
    (127/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.198775775 seconds)
    (128/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.504210757 seconds)
    (129/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.722686164 seconds)
    (130/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.881751753 seconds)
    (131/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.470060232 seconds)
    (132/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.212934885 seconds)
    (133/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.229485895 seconds)
    (134/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.237513862 seconds)
    (135/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.347590861 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.32115779 seconds)
    (137/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.333094584 seconds)
    (138/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.239445162 seconds)
    (139/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.71808943 seconds)
    (140/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.215057038 seconds)
    (141/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.397565788 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.748289321 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.267844196 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.905398366 seconds)
    (145/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.215167937 seconds)
    (146/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.245272777 seconds)
    (147/309) benchmarking ("sort", Float64, false)...
    done (took 5.447124332 seconds)
    (148/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.21882945 seconds)
    (149/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.545835589 seconds)
    (150/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.240285456 seconds)
    (151/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.233409888 seconds)
    (152/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.241057204 seconds)
    (153/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.008992386 seconds)
    (154/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.338977214 seconds)
    (155/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.555669687 seconds)
    (156/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.987106564 seconds)
    (157/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.240890314 seconds)
    (158/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.396006609 seconds)
    (159/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.764497489 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.645592535 seconds)
    (161/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.030973197 seconds)
    (162/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.72823775 seconds)
    (163/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.228166329 seconds)
    (164/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.484044107 seconds)
    (165/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.263030429 seconds)
    (166/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.498723121 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.590358565 seconds)
    (168/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.257020087 seconds)
    (169/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.240816138 seconds)
    (170/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.489021167 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.327701259 seconds)
    (172/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.257128556 seconds)
    (173/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.280248794 seconds)
    (174/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.331224058 seconds)
    (175/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.529164494 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.342716713 seconds)
    (177/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.300559729 seconds)
    (178/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.216439938 seconds)
    (179/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.242306034 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.326889679 seconds)
    (181/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.207352396 seconds)
    (182/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.901737514 seconds)
    (183/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.246396615 seconds)
    (184/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.469654424 seconds)
    (185/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.369550764 seconds)
    (186/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.321784897 seconds)
    (187/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.896423597 seconds)
    (188/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.27346349 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.997445428 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.031345172 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.059365868 seconds)
    (192/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.978690244 seconds)
    (193/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.216891631 seconds)
    (194/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.454985722 seconds)
    (195/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.427313791 seconds)
    (196/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.426386725 seconds)
    (197/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.317150646 seconds)
    (198/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.217285437 seconds)
    (199/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.22868121 seconds)
    (200/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.391018249 seconds)
    (201/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.233112738 seconds)
    (202/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.198077763 seconds)
    (203/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.980399547 seconds)
    (204/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.426806752 seconds)
    (205/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.764893236 seconds)
    (206/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.904765813 seconds)
    (207/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.321880664 seconds)
    (208/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.231288351 seconds)
    (209/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.241050864 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.439795883 seconds)
    (211/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.219536687 seconds)
    (212/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.831472256 seconds)
    (213/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.206564775 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.832872201 seconds)
    (215/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.258795238 seconds)
    (216/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.207787563 seconds)
    (217/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.295934377 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.992801535 seconds)
    (219/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.30340176 seconds)
    (220/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.654795597 seconds)
    (221/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.933940045 seconds)
    (222/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.420142861 seconds)
    (223/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.422158068 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.219047333 seconds)
    (225/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.220617421 seconds)
    (226/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.300377856 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.214473349 seconds)
    (228/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.683057271 seconds)
    (229/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.222805365 seconds)
    (230/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.385364818 seconds)
    (231/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.282522779 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.271886488 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.247183466 seconds)
    (234/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.507273195 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.607027763 seconds)
    (236/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.222032726 seconds)
    (237/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.779325133 seconds)
    (238/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.212106478 seconds)
    (239/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.22077516 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.622828153 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.281733363 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.3428136 seconds)
    (243/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.218938838 seconds)
    (244/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.81809242 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.322352827 seconds)
    (246/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.283107886 seconds)
    (247/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.412403269 seconds)
    (248/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.249810059 seconds)
    (249/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.8054355 seconds)
    (250/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.232824853 seconds)
    (251/309) benchmarking ("sort", BigInt, false)...
    done (took 6.224496307 seconds)
    (252/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.247139254 seconds)
    (253/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.975743418 seconds)
    (254/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.209181415 seconds)
    (255/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.603758969 seconds)
    (256/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.552137122 seconds)
    (257/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.812283621 seconds)
    (258/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.281169626 seconds)
    (259/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.780456831 seconds)
    (260/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.210571423 seconds)
    (261/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.920145258 seconds)
    (262/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.539395979 seconds)
    (263/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.237883284 seconds)
    (264/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.887839931 seconds)
    (265/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.890960682 seconds)
    (266/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.238026225 seconds)
    (267/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.327736331 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.926561415 seconds)
    (269/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.344989939 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.808201498 seconds)
    (271/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.366697508 seconds)
    (272/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.737612764 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.628875497 seconds)
    (274/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.316453047 seconds)
    (275/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.303148977 seconds)
    (276/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.646200427 seconds)
    (277/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.221039874 seconds)
    (278/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.346982253 seconds)
    (279/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.211232234 seconds)
    (280/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.584188103 seconds)
    (281/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.627390084 seconds)
    (282/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.320942335 seconds)
    (283/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.999048926 seconds)
    (284/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.369313732 seconds)
    (285/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.413255079 seconds)
    (286/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.304241898 seconds)
    (287/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.798464125 seconds)
    (288/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.304435626 seconds)
    (289/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.396644037 seconds)
    (290/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.275355613 seconds)
    (291/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.736743129 seconds)
    (292/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.574469869 seconds)
    (293/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.22185973 seconds)
    (294/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.221840063 seconds)
    (295/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.517136638 seconds)
    (296/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.244645343 seconds)
    (297/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.757287555 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.064572091 seconds)
    (299/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.304833394 seconds)
    (300/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.244033854 seconds)
    (301/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.627556087 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.314750352 seconds)
    (303/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.281537911 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.25083885 seconds)
    (305/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.566723798 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.055649173 seconds)
    (307/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.470934241 seconds)
    (308/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.247399551 seconds)
    (309/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.630064513 seconds)
  done (took 872.895234914 seconds)
done (took 874.04908231 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.255753423 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.258892571 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.233387761 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.255037398 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.354961978 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.262833734 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.245225479 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.235495232 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.281617858 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.283190734 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.241101292 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.261784718 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.243688998 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.243093991 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.234147254 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.257166028 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.136920523 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.244188955 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.2601494 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.244201395 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.26096017 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.242411686 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.283791427 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.262944539 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.237729315 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.237204381 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.247041569 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.262697299 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.355995627 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.247699354 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.237962611 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.255966962 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.137673368 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.234002885 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.23096866 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.264262003 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.256335415 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.244522747 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.239690486 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.276581372 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.498623102 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.244944541 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.245931972 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.237075787 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.236785351 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.241281485 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.245769984 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.242657425 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.257855639 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.25867735 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.50795266 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.260827798 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.248641166 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.237138862 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.247650359 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.245762298 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.239530148 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.261882687 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.264835738 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.261686138 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.133275856 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.241115693 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.239033195 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.262712175 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.25288764 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.525700895 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.232750039 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.241485991 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.498994199 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.242731552 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.526133853 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.254758426 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.238290096 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.260896946 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.277888606 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.143364454 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.231959842 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.237239075 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.254642705 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.245412817 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.247428996 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.25943982 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.242622324 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.238553478 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.260934777 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.266374951 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.248404953 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.24764513 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.246334525 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.266666466 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.254622045 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.259552015 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.24239321 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.233376941 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.247451661 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.241973989 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.251053133 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.250383492 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.24322461 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.249605749 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.498895478 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.264652933 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.235881753 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.235622812 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.23920508 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.262192923 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.50066051 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.248731337 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.260428474 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.286863224 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.241777939 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.141442419 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.252772523 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.264490786 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.249860069 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.24298984 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.234614717 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.154090411 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.498633291 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.26313598 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.242245018 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.247176174 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.264732962 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.242401739 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.235881269 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.161839266 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.243683934 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.263289835 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.369721041 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.250817351 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.2804973 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.247292471 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.242947987 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.268946895 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.264517993 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.28059142 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.243800249 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.265128148 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.265188879 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.237572074 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.260545735 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.251634624 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.242411851 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.24553072 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.234588647 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.269745686 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.261891819 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.261331068 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.262963422 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.371523443 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.2395486 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.157051436 seconds)
done (took 209.001604784 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.299902659 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.229919573 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.329366966 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.240118413 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.33426629 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.334791673 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.234926078 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.23546245 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.235983148 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.615689732 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.236066691 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.236220175 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.231262251 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.236129644 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.320121675 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.237872091 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.235543422 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.579338903 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.238714834 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.308601077 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.238030048 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.235841381 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.238650881 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.618385926 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.237945585 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.231036719 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.310346613 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.239258052 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.584636278 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.232265204 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.23974005 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.585380665 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.328276692 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.255892274 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.248596262 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.245529485 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.335311712 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.254221655 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.320538904 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.319829292 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.331425534 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.27722554 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.234074344 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.235603329 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.239997259 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.240278457 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.237014691 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.266177546 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.232462531 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.237113034 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.604739426 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.249647467 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.237791304 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.238023463 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.237387978 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.269000699 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.239064484 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.241204259 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.329761875 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.240633082 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.303129097 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.621042064 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.618421312 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.239891997 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.23693072 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.238369223 seconds)
  done (took 142.101573191 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.30837428 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.315691751 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.346725608 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.242995186 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.293677082 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.351380707 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.24169235 seconds)
  done (took 10.277289427 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.247373946 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.24200292 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.29114997 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.290890267 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.241217797 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.38846275 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.241630933 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.253842293 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.239698665 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.294009463 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.243256971 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.241766701 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.248873169 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.237790212 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.290761412 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.25328464 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.356833288 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.242932852 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.24247612 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.398542886 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.239736371 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.249210575 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.294283946 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.25340483 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.244126898 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.249561985 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.810462022 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.2428759 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.239988401 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.242896851 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.239981106 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.281356382 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.242879717 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.238333538 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.24014794 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.359608067 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.242759895 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.240466271 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.243959964 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.239621709 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.24420526 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.243820258 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.243304339 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.241089272 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.243810671 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.2670921 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.243819414 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.244339548 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.243430799 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.244364221 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.294464774 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.243613564 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.243259874 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.242497339 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.300791773 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.251454857 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.244566613 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.242445483 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.24543979 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.24264733 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.401974583 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.291552482 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.244291348 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.292537102 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.243957496 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.245261285 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.243912635 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.244311726 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.300143477 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.244170729 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.29317531 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.242334517 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.400403441 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.268417531 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.246509028 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.247006919 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.247553566 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.245549589 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.245774175 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.251635965 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.242793642 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.246831569 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.251103567 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.242859851 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.242825672 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.348955208 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.354544563 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.242609123 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.259067563 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.252763551 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.242469203 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.299089206 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.246030715 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.243078862 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.298609659 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.361505198 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.300005382 seconds)
  done (took 144.428496438 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.250000254 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.254320863 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.247060479 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.262025978 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.246577867 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.246667905 seconds)
  done (took 8.688259551 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.248848593 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.246985936 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.246649823 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.246142378 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.246659477 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.248328006 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.247989897 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.248408196 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.250472709 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.245513385 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.248195684 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.249899489 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.248753832 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.24740762 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.247021828 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.247867137 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.248386822 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.24477838 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.247360305 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.248436709 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.353375975 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.247873838 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.249683388 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.250076113 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.252103841 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.248305589 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.256064353 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.248432274 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.248665517 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.256017037 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.250797682 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.250849309 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.249916765 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.253177039 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.25200934 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.249424667 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.250837596 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.250750659 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.246899267 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.250819007 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.251283905 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.249089068 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.250340622 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.25144642 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.251399723 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.253799748 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.25412082 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.257831489 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.249786832 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.250815608 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.251063202 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.249290494 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.250059555 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.251695538 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.254796246 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.253663362 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.254590808 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.249918158 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.249893855 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.251820407 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.250234451 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.251012428 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.253031391 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.25389007 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.247081736 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.25164844 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.251850534 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.252376 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.250037968 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.250248739 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.253821699 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.248416133 seconds)
  done (took 92.305397489 seconds)
done (took 398.974832747 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.390075834 seconds)
  done (took 7.576629808 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.450380948 seconds)
  done (took 7.638296141 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.045676055 seconds)
  done (took 19.23322033 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.313685368 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.310987446 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.248903705 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.246588348 seconds)
  done (took 26.307651076 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.376571026 seconds)
  done (took 7.562785134 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.253207129 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.242877857 seconds)
  done (took 13.684773401 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.535567879 seconds)
  done (took 7.722147279 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.99741724 seconds)
  done (took 8.188194717 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.268069811 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.26715818 seconds)
  done (took 13.734293485 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.235480984 seconds)
  done (took 7.424496288 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.818913872 seconds)
  done (took 8.007819739 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.25502871 seconds)
  done (took 7.444344478 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.330710232 seconds)
  done (took 7.519253072 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.371382681 seconds)
  done (took 8.558867292 seconds)
done (took 151.789269554 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.246414509 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.246327138 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.24607287 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.24706056 seconds)
  done (took 26.174022175 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.286148027 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.286147666 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.287706398 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.297407374 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.289554379 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.285623922 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.279421364 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.279655504 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.298266406 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.2899142 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.288792226 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.289559845 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.290775791 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.282094411 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.293621868 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.303515808 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.299011114 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.2884683 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.279872572 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.291327921 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.254968913 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.298812627 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.291512613 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.254843671 seconds)
  done (took 32.075473484 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.450890559 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.324841335 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.407898807 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.30676857 seconds)
  done (took 6.680271016 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.306051692 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.307408246 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.318455605 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.3576952 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.390068963 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.316820084 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.282045572 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.275726822 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.262400967 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.307742056 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.383361335 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.323763915 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.41715852 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.255208598 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.442300831 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.255401993 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.254923665 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.307476511 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.358165931 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.387921705 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.256183617 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.307831346 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.310408636 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.324678293 seconds)
  done (took 32.90047032 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.253941945 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.263506643 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.26124733 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.255263567 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.25583137 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.255286903 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.261183476 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.256697774 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.276508947 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.255788975 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.254166518 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.254349148 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.255153724 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.255954237 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.255474976 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.268681755 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.269073258 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.255109224 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.25923793 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.261451222 seconds)
  done (took 26.37640163 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.249657484 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.208635954 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.601305074 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.505203523 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.249854283 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.251730221 seconds)
  done (took 28.258821016 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.318046493 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.435143002 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.25815182 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.574336892 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.649461865 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.257889309 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.257631981 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.467086007 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.734840024 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.73678741 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.307198021 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.318054112 seconds)
  done (took 18.508130121 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.250623458 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.25123006 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.259666756 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.26792612 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.305928146 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.262672838 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.264202661 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.250400996 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.308234045 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.310962511 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.262608786 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.307366234 seconds)
  done (took 36.495706085 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.339636371 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.297178189 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.147072894 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.982996281 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.62854084 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.463314222 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.997131544 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.667230155 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.258207793 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.526193215 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.88987541 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.354601288 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.506460973 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.262612134 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.2551193 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.219920499 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.477927087 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.700522844 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.256000733 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.931809288 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.278462631 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.253534618 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.088586882 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.279280988 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.464031773 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.381833858 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.51305206 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.25501712 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.510690675 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.265185907 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.264714939 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.253979995 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.528434226 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.884477716 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.347081403 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.264849817 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.944542754 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.965188448 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.254359406 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.009350083 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.675243701 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.256515378 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.264881736 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.25612838 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.188153539 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.266183525 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.67793337 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.261175501 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.965189869 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.254383312 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.265268908 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.349162289 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.258316704 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.071740004 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.254372122 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.256356937 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.252324524 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.261938576 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.827214375 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.389786972 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.267587645 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.190862829 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.360652149 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.014984241 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.824720868 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.358014701 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.25921367 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.25930364 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.190662778 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.994530726 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.273954986 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403493114 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.27665491 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.906210425 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.896667643 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.910810839 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.199634936 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.766723065 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.261200561 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.191492778 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.483304424 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.256052027 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.191337823 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.203568498 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.190487134 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912533476 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.265800307 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.610694119 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.263985737 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.672550568 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.268410646 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.274311714 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.281012401 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.479864009 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.147746229 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.257501515 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.679877047 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398859088 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.279992211 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.674953232 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.194007771 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.262233268 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.511368505 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.468771615 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.261898123 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.221369168 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.444109964 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.259264958 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.27489103 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.270942974 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.269793912 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.784049985 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.270382521 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.408218578 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.274650444 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.259409529 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.953762748 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.25992906 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.360994002 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.922865908 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.499708643 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.992631995 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.260537548 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.341813289 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.262521928 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.259136291 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.049961706 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.773398131 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.259526412 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.267557809 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.261297525 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.270189813 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.260178056 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.2041331 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.26796138 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.947726321 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.26277424 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.483394379 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.260904652 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.535691388 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.19347692 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40585199 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.314876032 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.482315665 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.376897556 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.258790567 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.517722983 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.265693013 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.262562656 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.272037431 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.27899224 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.359253886 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.282325381 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.26932429 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.515051315 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.265012609 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.264798848 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.046081493 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.67538044 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.268201128 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.264902586 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.080088126 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.788730613 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.239628285 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.269070338 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.150221079 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.274120116 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.325301106 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.26644991 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.270663188 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.930364714 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.066744018 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.266135824 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.259050234 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.484299405 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.271904943 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.064953693 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.341871297 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.442939716 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.794046078 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.275676737 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.195353776 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.971339091 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.953891004 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.261669293 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.19736678 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.262190599 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.270384353 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.272741381 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.485863889 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.793387251 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.265092734 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.964095925 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.268606336 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.272939536 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.268192765 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.262554894 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.902916085 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.417607195 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.273281876 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.275095127 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.406162815 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.276555431 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.196686415 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.26599718 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.267373305 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.26260738 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.263073183 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.295917807 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.97203906 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.729254682 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.521410415 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.989120765 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.274937943 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.123519105 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.292727249 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.289059657 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.717620778 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.28365097 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.277375834 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.27414112 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.274604097 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.02548105 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.923388903 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.831840583 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.954361954 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.751000989 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.138741684 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.276437311 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.264683643 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.686861844 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.198772404 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.820725121 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.435884664 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.687965263 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.209473449 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.448301837 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.377074183 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.96672171 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.274197366 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.493020513 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.132278783 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.725556671 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.289862312 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.476624651 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.299778552 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.264578233 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.211203044 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.570004148 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.483494816 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.738661016 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.343327418 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.68444658 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.725998141 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.279712115 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.265053083 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.554018446 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423308018 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.981400589 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.437621402 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.265141174 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.976113308 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.739856676 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.274526195 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.491425577 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.840949851 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.278932378 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.451203244 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.203113107 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.277154148 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.276779871 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.271517511 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.402082715 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.271188697 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.51932078 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.277842149 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.200933662 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.278692912 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.748199554 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.122394747 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.273052148 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.267264047 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966569107 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.271739494 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.525974736 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.274091522 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.889466326 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.268368004 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.201064832 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.201181174 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.9601276 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.274120552 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.244235828 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.723558314 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.353192458 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.252222929 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.292072441 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.133864714 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.523110958 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.282084259 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.797922443 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.494790042 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.038976014 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.291236567 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.367832128 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.772254778 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.270922243 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.268960455 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.50444662 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.104473298 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.493335071 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.179223892 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.181128184 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.268087494 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.481375183 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.268298412 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.969593276 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.505276639 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.979488681 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.272582329 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.918661777 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.294432839 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.957595728 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.197424418 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.375050394 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.276494928 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.348790173 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.279775757 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.27959297 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.281073854 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427287335 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.965038951 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.284233872 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.283346327 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.363305611 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.426065184 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.897253301 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.273046724 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.80650783 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.956091539 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.805623364 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.284000379 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.271285599 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.274210901 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.203903874 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.41928292 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.495777311 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.544599486 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399030703 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.414257131 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.292561788 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.787445675 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.28592479 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.48226355 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.545451532 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.165400681 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.27357317 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.282928515 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.272512857 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.280721871 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.482376119 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.73116506 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.795430503 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386516909 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.271315829 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.691309948 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.54538454 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.271595841 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.27226694 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.8621942 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.287358808 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.573784792 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.27800742 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.003733136 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.42006753 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.282155095 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.907184038 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.282030616 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.43175127 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.045239482 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.055039063 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.527762634 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.679537096 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.283666648 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.807039163 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.917250401 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.540528803 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.340172274 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.284146827 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.382033538 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.419395812 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.284212884 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.274304846 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.273840561 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.117820201 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.982809113 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.283450619 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.811578751 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.539585707 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.271137623 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.271232747 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.297676186 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.284274062 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.497483247 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947887269 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.498818871 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.284536381 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.280889794 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.09132486 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.81447589 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.286842976 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.208089878 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.27805323 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.496265874 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.511258859 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.297039793 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.733329591 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.985376693 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.801263763 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.247694233 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.297311624 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.274662749 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.932214264 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.814695726 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.909931836 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.733896446 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.841396322 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.275299892 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.55006307 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.280224798 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.27993807 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.552707115 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.279151491 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.275781236 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.286989813 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.811370859 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.987347193 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.286465995 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.986897695 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.213074955 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.616322797 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.907315365 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.211897866 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.285954571 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.449021513 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.278421611 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403538177 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.287787161 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.278090289 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.28522192 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.034942164 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.558375041 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.281906491 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.27779917 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.810978081 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.289446568 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.28412376 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.498473908 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.285674193 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.950260224 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.627695458 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.531289393 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.287523333 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.266827759 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.281542304 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.277788349 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.264762359 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.475252388 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.501995599 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.802024682 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.290829202 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.287613363 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.281826306 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.493923447 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.489237487 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.024756904 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.303703332 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.277946109 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.29430122 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.190297646 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.779061437 seconds)
  done (took 1543.044274168 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.289912975 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.282476397 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.358661129 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.292540607 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.293730864 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.314297947 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.348032797 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.387299383 seconds)
  done (took 51.78572934 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.277264049 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.498820533 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.307628278 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.278825876 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.288247814 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.277579474 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.686148587 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.280794128 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.288875408 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.289136261 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.29248205 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.278270255 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.862261896 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.289556384 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.28789569 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.270241225 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.28774497 seconds)
  done (took 64.264186662 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.287558165 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.484282983 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.35634743 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.296374281 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.937206169 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.27905739 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.440161179 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.321213903 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.290342957 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.298312744 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.928403799 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.326969609 seconds)
  done (took 82.467071386 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.286215263 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.284475245 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.285525608 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.284958173 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.285470051 seconds)
  done (took 7.64636262 seconds)
done (took 1957.868110587 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.545349277 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.923972683 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.891836986 seconds)
  done (took 5.035986783 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.428742319 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.474405562 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.597080081 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.616412936 seconds)
  done (took 7.338073073 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.557944147 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.659780838 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.46699641 seconds)
  done (took 5.905244704 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.564494051 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.290654492 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.364707932 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.278890081 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.281538249 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.282025611 seconds)
  done (took 20.06402737 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.284319372 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.286203885 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.284513679 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.286674695 seconds)
  done (took 6.363023264 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.269926706 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.022433579 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.269148095 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.285717006 seconds)
  done (took 18.068489477 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.030710112 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.043922041 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.027913951 seconds)
  done (took 7.324638271 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.29420871 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.126366438 seconds)
  done (took 9.642018003 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.595638539 seconds)
  done (took 2.817398248 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.41568174 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.548248347 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.218458376 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.172725917 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.249683496 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.746854933 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.754672254 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.379098041 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.159668976 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.229623403 seconds)
  done (took 26.097550141 seconds)
done (took 121.641937933 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.792378251 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.660382889 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.484240773 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.761025003 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.504094314 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.483986735 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.493367602 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.72807263 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.270254992 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.262894051 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.803496042 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.505005009 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.43866774 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.661613079 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.439980138 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.281147381 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.505955087 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.828921809 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.448159697 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.642551666 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.496735277 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.40040963 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.63492588 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.418592624 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.509011026 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.436966881 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 4.980610075 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.286136585 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.622361095 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 4.999578462 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.436109341 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.819341894 seconds)
  done (took 183.260845163 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.292883711 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.282209961 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.295174078 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.296053386 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.290455187 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.283757722 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.296566965 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.283037532 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.299406123 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.286643505 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.290195158 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.28273562 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.28509661 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.297403792 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.296612886 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.282931325 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.283467066 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.306901653 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.282642517 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.28425412 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.297319806 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.283203068 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.300553005 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.285280218 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.283900979 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.285226271 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.291945586 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.284201454 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.28416372 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.283508916 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.284846244 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.289245154 seconds)
  done (took 202.476251815 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.283955417 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.284986732 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.284293508 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.283618278 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.282891743 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.297533083 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.287222786 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.30898833 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.29448032 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.291861544 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.293961281 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.290093979 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.285491296 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.284399118 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.297409741 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.28504466 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.287208481 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.285094711 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.298044903 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.295312952 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.28726686 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.289031727 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.290069042 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.284812611 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.298120669 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.286526098 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.285655905 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.288370944 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.285634077 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.284406957 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.285949104 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.294180367 seconds)
  done (took 202.488441613 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.487149573 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.29271037 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.293099016 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.244534073 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.292555945 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.293347165 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.288717493 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.489310849 seconds)
  done (took 13.909051206 seconds)
done (took 603.356291909 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.470979958 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.184930004 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.482999663 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.31435498 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.98629406 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.315128328 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.313830437 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.467489586 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.187999367 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.471504183 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.460888597 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.313188454 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.594249296 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.3107958 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.549566836 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.402895906 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.115262592 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.221074944 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.610725066 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.761847701 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.554765646 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.687236875 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.470616996 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.179020987 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.598286259 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.687734562 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.913904552 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.114909795 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.313328821 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.614342598 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.848868944 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.163409144 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.364044014 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.348208403 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.405042476 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.38473471 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.140224012 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.34598794 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.48570776 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.459929913 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.775511095 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.015259973 seconds)
  done (took 87.635982952 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.287913131 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.287196529 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.287399169 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.289300902 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.288335617 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.287792672 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.28723201 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.286645217 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.288513783 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.286500413 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.287989865 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.289869208 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.286660033 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.287820125 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.287360838 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.287211043 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.288258994 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.289736605 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.287726943 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.287685345 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.288684936 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.287981482 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.289284186 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.288546223 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.28895928 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.289177182 seconds)
  done (took 34.721894895 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.297231927 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.517367495 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.680809504 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.302875057 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.297547685 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.301666017 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.36773439 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.298533912 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.300839467 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.300294257 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.443526066 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.301085478 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.332989306 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.689963921 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.300519419 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.297679703 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.297939878 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.299103112 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.524326342 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.308645087 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.370687886 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.298565105 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.369089577 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.309496931 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.301761261 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.299346508 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.302352088 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.781046927 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.30009288 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.44421982 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.000710088 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.367550444 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.738567889 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.692914861 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.996713549 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.301942329 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.299061434 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.449196641 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.301221092 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.298888827 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.367971527 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.300595301 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.692874738 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.903717178 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.314929321 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.299839292 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.804591758 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.449730934 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.520650572 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.308173672 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.714327045 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.302752633 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.302082173 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.301345626 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.519321157 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.306527756 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.299464525 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.805270946 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.30551642 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.370178592 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.30133569 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.300922743 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.531834426 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.300222221 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.522072703 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.301561515 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.31045849 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.302648453 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.69688917 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.304044491 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.92324754 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.316040466 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.301538773 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.445660619 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.523274982 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.833244411 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.304882799 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.538040566 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.751963666 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.368995245 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.305481828 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.772582381 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.37384341 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.305691071 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.304800781 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.304279456 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.301644472 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.344408446 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.370692398 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.852546513 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.920944857 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.825118798 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.375748513 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.316914664 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.303806766 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.808139424 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.317785421 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.302484743 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.688539338 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.923834429 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.317338433 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.311323677 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.909788859 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.319005836 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.37301017 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.308055542 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.699920012 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.304257992 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.345467316 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.303261058 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.310951495 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.306597392 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.372366546 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.309465077 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.305119368 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.9026146 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.470268017 seconds)
  done (took 170.475955745 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.30714943 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.29640095 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.304231749 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.296466555 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.296696499 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.302757264 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.298327644 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.299432837 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.305727896 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.299557856 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.297385232 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.298356886 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.298824317 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.3106052 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.306981437 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.304823011 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.910538807 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.299616099 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.297577448 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.296653 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.075914474 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.299364167 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.298281286 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.29823801 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.304783269 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.298442179 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.305389311 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.319557167 seconds)
  done (took 151.068970785 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.305353629 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.810508869 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.306116774 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.423989945 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.323383955 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.302806951 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.420667917 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.355853665 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.307163564 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.303355018 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.302294351 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.576060406 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.306558676 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.765868398 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.474819248 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.424295112 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.76557241 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.3062563 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.303487465 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.303902915 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.425184916 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.315942409 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.579660782 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.817367148 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.307374939 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.814834184 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.301658014 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.30549382 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.304882907 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.818297225 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.304009395 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.579755476 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.375795137 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.360801333 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.816164551 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.768584292 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.768598926 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.436799879 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.305908039 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.303827183 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.305000646 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.298564451 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.817813641 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.307026184 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.307691498 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.816012799 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.321031584 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.307718396 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.315701658 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.304157652 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.359448855 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.360311263 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.584754187 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.823112047 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.374923362 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.327469103 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.42370989 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.684954946 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.310204622 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.769525669 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.298856649 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.822213363 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.309692361 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.299938766 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.308109241 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.312311213 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.443340486 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.425341326 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.769724774 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.308802607 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.770836882 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.442740958 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.306096663 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.307550026 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.309909123 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.820529178 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.772357983 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.442770959 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.429346914 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.481959972 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.300949574 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.306903235 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.300621275 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.376727702 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.306698952 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.82229011 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.77141533 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.30982126 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.309654174 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.309877962 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.310231086 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.465742558 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.821965952 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.377821237 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.770087325 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.597054642 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.583410455 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.309462278 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.361797796 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.308306574 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.585774546 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.31015607 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.36021198 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.748525884 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.585981852 seconds)
  done (took 154.755963545 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.530354968 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.401773161 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.39367263 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.413616202 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.805492292 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.8592569 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.414784083 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.427698696 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.409535813 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.537542828 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.384570874 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.399245608 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.477684936 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.378596085 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 1.96675184 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.37055102 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.397418391 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.425905083 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.41256239 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.273287599 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.903515931 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.58703465 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.465234708 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.285908659 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.396974535 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.041434311 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.825443186 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.799802319 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.463600968 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.468127525 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.809945991 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.37548906 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.181993199 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.932028041 seconds)
  done (took 62.461926748 seconds)
done (took 662.347711508 seconds)
SAVING RESULT...
DONE!
