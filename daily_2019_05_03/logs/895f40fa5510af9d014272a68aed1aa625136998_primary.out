cset: moving following pidspec: 30766
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.280635018 seconds)
loading group "string"... done (took 0.59000946 seconds)
loading group "linalg"... done (took 7.182220498 seconds)
loading group "parallel"... done (took 0.169422499 seconds)
loading group "find"... done (took 1.14582148 seconds)
loading group "tuple"... done (took 2.014307507 seconds)
loading group "dates"... done (took 1.289014282 seconds)
loading group "micro"... done (took 0.239226822 seconds)
loading group "io"... done (took 0.96891385 seconds)
loading group "scalar"... done (took 38.887981483 seconds)
loading group "sparse"... done (took 12.476763646 seconds)
loading group "broadcast"... done (took 0.991902286 seconds)
loading group "union"... done (took 13.418072526 seconds)
loading group "simd"... done (took 4.417905125 seconds)
loading group "random"... done (took 8.940754392 seconds)
loading group "problem"... done (took 1.925186145 seconds)
loading group "array"... done (took 21.153874903 seconds)
loading group "misc"... done (took 1.91618883 seconds)
loading group "sort"... done (took 3.198785087 seconds)
loading group "collection"... done (took 18.000591415 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.534427934 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.143270249 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.118791236 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.140482237 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.185729542 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.132757454 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.145392769 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086001864 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.030446702 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.169707174 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.140378178 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.478076398 seconds)
done (took 5.064698483 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.202404467 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087275275 seconds)
    (2/2) benchmarking "String"...
    done (took 0.09742819 seconds)
  done (took 0.88782488 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067164141 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.126881896 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.081497432 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068343586 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067600473 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.082298553 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068175849 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067103756 seconds)
  done (took 1.272632251 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.07528556 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069863775 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.085853701 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069007154 seconds)
  done (took 1.010905833 seconds)
done (took 4.163100411 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.898793582 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.236778563 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.191140012 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.456705716 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.151943533 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.189706535 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.686601525 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.325032003 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.215255531 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.104231167 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.108516756 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.384009858 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.108126322 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.675880828 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078238912 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.106850468 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.167586126 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.437204709 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082283153 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084717605 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104603358 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.144687944 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.105045824 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.079800099 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.170116154 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070395423 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.148471027 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.100069205 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.071982037 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.251865186 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.193788749 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.722936521 seconds)
  done (took 10.598986778 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.102580544 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.11766706 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070826786 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140675312 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.105513678 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.089135328 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072582315 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.085423928 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.092441966 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.159216707 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.116275269 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.107494846 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.082530088 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071170777 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.10195819 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.213208852 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.111474436 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.087462389 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.087722813 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076441174 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122816206 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.084570922 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.094513618 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.079654656 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.15367623 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.197644301 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.115704479 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.115007097 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.072280346 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.082877793 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.134969301 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.147033485 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069334971 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.085118583 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.141752681 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.113701587 seconds)
  done (took 4.635730569 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.024500097 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.160449902 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091792774 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.152545075 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.086290929 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.109513282 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.083689496 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100368194 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.24728189 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.076533701 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.454673392 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12882089 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.10235272 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068559237 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.084601681 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069380033 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.513095308 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.146796871 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101615685 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.104318627 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09079263 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.071790125 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.359015926 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068816456 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.0673332 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08548484 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.060989096 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.145702335 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068970181 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.215043781 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.089724089 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08901129 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103509932 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.198313788 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.113725912 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.112481985 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.126115893 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067340723 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066663582 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.185364764 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.075934285 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067249013 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.10642074 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119455677 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.106025039 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.085336673 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068491353 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.181603276 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068542387 seconds)
    (49/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.082309339 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.083501467 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.883298308 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.168166419 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.095008523 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068182484 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.289066823 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085599463 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085407315 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.066273274 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.272356544 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.153501079 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068693384 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.085097978 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067181216 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069809208 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.383587749 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.069388863 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.959193531 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.072904262 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.080271734 seconds)
    (70/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.082996295 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071495016 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083653992 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074428321 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08974638 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.087293174 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067190874 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.086452759 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.068135559 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.083092297 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.070975323 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.100662948 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.207572858 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.069085796 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068009743 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.083462127 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.086567245 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113599998 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.072374989 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.083468666 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102007368 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085259 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.068626439 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.121213574 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068766196 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.102923989 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.086551346 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.11538884 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.085636209 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.115905051 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.074542328 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.066800649 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.115973513 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.087068774 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101731532 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.095236599 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069576418 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.154225621 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065585698 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.084008753 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068200423 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082853147 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.070104053 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068890798 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.09944542 seconds)
  done (took 21.213068395 seconds)
done (took 38.182330314 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.291396888 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.093207809 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.092306611 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076157062 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.093021118 seconds)
  done (took 1.434257101 seconds)
done (took 2.19600268 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.121331953 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117928119 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064097962 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113833876 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064699667 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.117608737 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.11498824 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081916089 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118609093 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065234682 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113257815 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065295565 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064354227 seconds)
  done (took 2.011029049 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083680843 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085202997 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086677569 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083013053 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079486559 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08356165 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081082402 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105813344 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081337434 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08878993 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065423089 seconds)
  done (took 1.681911785 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083064157 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084441808 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087421073 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082845418 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080927359 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08403277 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080758163 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103897936 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081789047 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090230479 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06539855 seconds)
  done (took 1.683420459 seconds)
done (took 6.127783217 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079305858 seconds)
  done (took 0.831252863 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.694787627 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.468360411 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.084353481 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.135198756 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.22234558 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.153112153 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.436232139 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.110216334 seconds)
  done (took 10.230886581 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.091839423 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.085801513 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.083421568 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.089449985 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.073428776 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.089970539 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073687953 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.072502687 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.089746094 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.074440518 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.088661401 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.073034341 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.09016005 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.07321903 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.072443865 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.08763176 seconds)
  done (took 2.131351253 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094664862 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.093080476 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.092042096 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076637601 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.090586387 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073955517 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.093055559 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074884572 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.088607109 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073801987 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.092874566 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.07628746 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.089009344 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066613637 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.091457226 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077935154 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.088372327 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076801996 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.092506205 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077871534 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.092159324 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066854593 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.089583864 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076584793 seconds)
  done (took 2.875656334 seconds)
done (took 16.829104626 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.131448076 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.076679982 seconds)
  done (took 0.968252706 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.083136414 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.09886195 seconds)
  done (took 0.950105505 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.0837344 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.082254641 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089845863 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.093426047 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.08263873 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.067195727 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.103499962 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067939816 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.082877316 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068404394 seconds)
  done (took 1.589672269 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069454547 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094427679 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071750123 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.098317601 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074900869 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.081225483 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.074237206 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.084863628 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078772019 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.079982058 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.073583749 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.099478369 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072772324 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.10164103 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074153561 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085132075 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.08762424 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.06933487 seconds)
  done (took 2.241226267 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067252112 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068125877 seconds)
  done (took 0.905945991 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.069079339 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065813922 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082665403 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068098487 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.079760378 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064814918 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.082219149 seconds)
  done (took 1.282861333 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.401307508 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.112464662 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.250180436 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.091571365 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.106688152 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.26742364 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.086749721 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.074123403 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.091995151 seconds)
  done (took 2.299871203 seconds)
done (took 11.004722936 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080530023 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088602881 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111453604 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.426810726 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.108799254 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.069466134 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.145322016 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.210338427 seconds)
done (took 2.01409062 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.128622274 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.614886164 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.400528234 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.213236937 seconds)
  done (took 2.009480158 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.371874968 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.094327978 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.076404152 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.070095684 seconds)
  done (took 1.390722664 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.069082367 seconds)
    (2/2) benchmarking "read"...
    done (took 0.072586067 seconds)
  done (took 0.92680325 seconds)
done (took 5.238888205 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07000761 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.06964475 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.101566329 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.065941155 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.084571423 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.065184211 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.06552795 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.084867194 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.068069928 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067656837 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.083738011 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.070592099 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.083175636 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067599448 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065820076 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080498018 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067186407 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065705631 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08088365 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.065680934 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065634359 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082829857 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065580669 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064996911 seconds)
  done (took 2.5756057 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.086888114 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084218573 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073100516 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.089372605 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072176668 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.089058764 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.073292978 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068034943 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088082403 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070375017 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087609116 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072222212 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.085325926 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072106635 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085883614 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.07252202 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088771246 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068460538 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072528798 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.088161572 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073810997 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08436791 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072342493 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088216376 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072109789 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08683871 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070077405 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.084229995 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073562178 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.087501871 seconds)
  done (took 3.166254142 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072020309 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065449621 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.082544883 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072102026 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065095104 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.082176075 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.06548257 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.081923718 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.066380707 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065842556 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.083289492 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06633754 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065691929 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.082633211 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066270542 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.08459777 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.081999816 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065952495 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.082186009 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066749394 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.069094846 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.081180073 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065625746 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.082033813 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065722793 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065256806 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.081716302 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065843304 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.066604672 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.081742613 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068398747 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068717278 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.081072057 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071925994 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.085451599 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065521005 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.069594136 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.080935477 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066217568 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.064933119 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.081085176 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.065434957 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.065182702 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.088307795 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065712577 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.083317223 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065176523 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.066859977 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.081597215 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068365132 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.081514989 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.065061568 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.067403257 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.08223144 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069221068 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.064988144 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.081952742 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.06511003 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.082044737 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065654552 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.065164524 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.080621982 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067437036 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065876372 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.096814803 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071753844 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.082289105 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067268656 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.066948382 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.083674426 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.068125489 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.079623404 seconds)
  done (took 6.046618567 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.117526671 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.09285622 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084274884 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067565492 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080130266 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066279934 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069346921 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081482739 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068204489 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087982685 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06647659 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.0676338 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083806325 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078121652 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081919879 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.0679631 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087451725 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064195836 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.066106106 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086599686 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067516098 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.087376652 seconds)
  done (took 2.5137221 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.186486242 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.089454795 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.110863439 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091268006 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.08577179 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075089166 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.087226288 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072286475 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072738936 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087239932 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070088823 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087658762 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06948541 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085876054 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070834451 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086245427 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072071583 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085637532 seconds)
  done (took 2.377138588 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079236687 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.06802084 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.106558564 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067996577 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.084297121 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070869016 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089373298 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076556507 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086351329 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067946474 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.09236102 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070623213 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.086938797 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06799147 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070727174 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.0839512 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070387997 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084177677 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075840026 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089379688 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072858604 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092349677 seconds)
  done (took 2.541266692 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08282004 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069813651 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.101636235 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086877431 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063858795 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066210928 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.09074055 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068549995 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.090257382 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069376607 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067830428 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082809975 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072676677 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.084352841 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072915931 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084043104 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069819595 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068409255 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08558092 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063848514 seconds)
  done (took 2.330580443 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088354211 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08492198 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069435191 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093371414 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069361792 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.085483237 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077065521 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.085302536 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069463243 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.10916776 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069664349 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.085271453 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07680827 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.089855637 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069716421 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09260989 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076944301 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093262556 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069248202 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08473277 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.219149714 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069210878 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093584547 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069730442 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085195854 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068796863 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069002558 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089714991 seconds)
  done (took 3.197527525 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067598908 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067805122 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081888737 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065446578 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065183092 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.082193756 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065968915 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065869618 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083980513 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065171985 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067096709 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.083326285 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068053565 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.08343355 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067266634 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067887261 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084106262 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066159964 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065829418 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081669881 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.067970089 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067428951 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.083977341 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066265354 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081575194 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.067751429 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065843378 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.081378944 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068536878 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066122801 seconds)
  done (took 2.954572596 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.078268008 seconds)
    (2/2) benchmarking "in"...
    done (took 0.092087014 seconds)
  done (took 0.966768038 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065770903 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082730369 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.082246534 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.07204256 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089320726 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069469898 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.0930189 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072668825 seconds)
  done (took 1.42293507 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082734479 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.080177732 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086108102 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080561506 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.095901216 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.085251332 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.155825129 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.085692219 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074392959 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083402935 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081164063 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067425176 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090263161 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068570571 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.089971933 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074324669 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.066670021 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.089546063 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.07067813 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.083623711 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069662622 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092221749 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070179386 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.06517248 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085936509 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.076933773 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.095709502 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069280377 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087595213 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.074777253 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073362214 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.078784023 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.069073839 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.086058793 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066841056 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.094701826 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082410229 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087240019 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076660806 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069656014 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.094175651 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.06389783 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.088567535 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074160429 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094366956 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.06896796 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068605322 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.080238315 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066180058 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086281369 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.064249976 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068685897 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.079809471 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075684487 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.087824562 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078571424 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.085748833 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069945481 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.071711942 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088038602 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074934954 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.086752774 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070556089 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.068284522 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094293179 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073103575 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093953254 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.064581708 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062408425 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.082625025 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077450528 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106927563 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074254552 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.085524288 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069810697 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.082867243 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071699773 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07016516 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090152093 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074576984 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.085438508 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073937421 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091362326 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068919818 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070486673 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.091919703 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.067514526 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.086305795 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066245713 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100617995 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.067557173 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.082645328 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.06597623 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077710507 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087830677 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.068880911 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.0820234 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074897661 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062689356 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.08502884 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069536961 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084790985 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.077740928 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089641513 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073932113 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.092771635 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.075853375 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068438575 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087868701 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065266342 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085487106 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.067808317 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074639753 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.079183868 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071340394 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085287659 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.068598795 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.092411173 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.066401159 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.06835233 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091463471 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074115299 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.083522461 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.064913535 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071200247 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.084605124 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072220163 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092254935 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067072628 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.064003254 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.080069083 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072030978 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.084755845 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071803149 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089929069 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071477775 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063324715 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.083538937 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073192023 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.093399955 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068874551 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.06854698 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.091238834 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069028426 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.084423107 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074958441 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087180976 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067853826 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074120194 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.085887861 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064259023 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087740634 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070776231 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067401645 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.08802714 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072047904 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.086648339 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069484747 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082778071 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074051845 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068911095 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.083471365 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068348633 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.083105207 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078002731 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069784146 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.080223315 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.066027815 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.091744934 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06646749 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.068007305 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.084064281 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071149513 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.085134655 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.067069004 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067827008 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.086136627 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078944893 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089716755 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068896506 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.090169821 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078895445 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.084438223 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070431954 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.06778184 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086218777 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069514627 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.093465833 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.07379498 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090363105 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.07046461 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.06496244 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090100142 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074812116 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084436168 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066563637 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066935442 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.08853232 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073564756 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.088275238 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.069492044 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083622063 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068969073 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071941324 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.086981157 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.068635199 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084360165 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072992909 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.084513365 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.074857658 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069092792 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094634652 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070883467 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.080679344 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071624438 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083196438 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073763486 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.064193464 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.083116438 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.06849052 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.086498129 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067544611 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071332459 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.079351226 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075758252 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092619758 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068120763 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.06733231 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.084775456 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074463875 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.086524391 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072660823 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070739405 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.090591051 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077992054 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.083994873 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071479698 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.09469179 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068700916 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062136006 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.090291501 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067322622 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.083995592 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067698162 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066205488 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088572329 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076108331 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091935574 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.063021672 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.086883825 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067195801 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067553342 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.081058328 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072469272 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.08760821 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.06923075 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074615488 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087109441 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069168769 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089256286 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.06839804 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.06923312 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.086332656 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071904352 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.086320097 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070738483 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066642317 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.088130228 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067863138 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.0834118 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069941281 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067866446 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.085719646 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073594766 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.08431685 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069007648 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.087482827 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.06942 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069396599 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.085850386 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068164633 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088095999 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069257927 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069024634 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.087116998 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064830069 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091798768 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.068791302 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07605946 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.085211874 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.06554044 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.09056343 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071036001 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073181561 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086339955 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.069574633 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.086120967 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068861423 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.087919746 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074785547 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066117947 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.095529712 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075871341 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085638597 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071351197 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.084932387 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.0697914 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067524067 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.08622508 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069129033 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067610047 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.085536473 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072546038 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.087132768 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068177745 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068854198 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.087202654 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068296429 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.086413344 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063496203 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067130146 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.084720718 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068877401 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093884185 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.06956274 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.084510669 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067918947 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069438441 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.084042427 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065745069 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.09182345 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077051859 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.086265636 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075545019 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.083697106 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068982307 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078265745 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.080463409 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.066921518 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.08361575 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065915881 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07603547 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.085876429 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077858305 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.085950108 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067888686 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.065906507 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.086244539 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067723644 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062866123 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.084089593 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072177773 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.084103323 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068410896 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.068467599 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.089169694 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070050296 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094655572 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.067963329 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.086977783 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.069245517 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.066402 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.08474405 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067596074 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.088254361 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.070339267 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066488614 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.083055384 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068500438 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068360586 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.087119503 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068818946 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.086785676 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07492267 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085753608 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070914757 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071735124 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.083102512 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.07087527 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.085454469 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068341626 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067436625 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.088960716 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071058845 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08602775 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076782562 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.085059876 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068845797 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06879162 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.083045934 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068429148 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.06756314 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.08577373 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067619915 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.086808775 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075750357 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.083148983 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071425182 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06806403 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.085798216 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075322648 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.086132374 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071417001 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.092005347 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.069246961 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069926977 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.092963822 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071702172 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088341559 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069916455 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068836787 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091973696 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067460359 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.091817361 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069151628 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.086439129 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069924121 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066280797 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085890212 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.06897821 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067247274 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.09143512 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.070136417 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.084475649 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067398061 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.083026647 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069114883 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071715048 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093414062 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.07108112 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088419948 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064123222 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.065638025 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087427981 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066102242 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.086564415 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071571555 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073351811 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.088489861 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069073148 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.085306809 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077160034 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091309154 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071767046 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066276669 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088709144 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069999412 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.087855488 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069161333 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068868911 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086936383 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072555735 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.086765653 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067516298 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075188775 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.089051316 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069702764 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.087459397 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.068658915 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.06865763 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.080865584 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069810851 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.087955408 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073898813 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069598195 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086385158 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078992579 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083200132 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068817765 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088448867 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068142512 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072219648 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.081496401 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070575173 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086731429 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069675795 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.06374554 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.08503492 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066228067 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.087559019 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.067179016 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064228422 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095448596 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.076939586 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.088254246 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067714541 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066616467 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.081777232 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064441407 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.085225594 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070470388 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070473299 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.095978873 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068107469 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.084936022 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.065026145 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068271173 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088911931 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071369917 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.084195302 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.065024695 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066964117 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.089292227 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074288727 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084697229 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068448889 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071238196 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.087596005 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.067042277 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089135594 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.06628215 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.089100918 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080839117 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068477258 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086540579 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073932013 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092987993 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.06955654 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.081296221 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.069067919 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070812254 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.085834162 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.069135323 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.087316692 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082622769 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088505689 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067453596 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067760651 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.088061199 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068137815 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.093463842 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070138778 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.06832354 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.091098417 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070392557 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.093898065 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071380717 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093085576 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071565709 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.088868773 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.067577026 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068790311 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.084079531 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.068051539 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.087744902 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.069217635 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072753712 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.093900214 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.06789611 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097008715 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076567058 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.087904413 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.065889935 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06681402 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.085220616 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.064772505 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.087294133 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.067148581 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066386733 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.084940489 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.067590039 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.086231201 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073368983 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068809175 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.087238463 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.06924251 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.080757781 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070353313 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.07120741 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087069445 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.06607388 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.068391043 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.087154497 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072719218 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089289757 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066958804 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.087182851 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070615062 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068713917 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.081742569 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074962426 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067403196 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.088912315 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067423322 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086594149 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.069281575 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089323268 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073828201 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069025495 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.088491466 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.077593625 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087919558 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.066451898 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.065488107 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.091394336 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.066701781 seconds)
  done (took 46.943972187 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10823352 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083404211 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063809943 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081800836 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076043013 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082969055 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064147178 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065119203 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.082545187 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06767271 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.082376861 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063728344 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.091277463 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088054203 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094923258 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068373438 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082347723 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065439954 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081623645 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065647978 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091192899 seconds)
  done (took 2.493855566 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.077211299 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.090439941 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075231569 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.095668815 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069720378 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.091559337 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074933404 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09097242 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.096181316 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069235042 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.095890443 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073225578 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.086786013 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.069426067 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087220271 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073766787 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.095862749 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070183911 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.090751487 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.076272653 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090430041 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075540637 seconds)
  done (took 2.655535786 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068579609 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.068844833 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.087417059 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064104561 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067771963 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.080955383 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.071977512 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.083720051 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.080079188 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066073064 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.084846892 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066932114 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.086721542 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063722096 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067455142 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.083991992 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.132424477 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.072216901 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.067531314 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.08826563 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063763694 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.088494045 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064521985 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063757189 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.085474604 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.07246179 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.086325094 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.067017766 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067740904 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.085226235 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.068815798 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.083743612 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.070064428 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068986025 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.085191774 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066987483 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.067527947 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.086488528 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064385947 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.0844293 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068399375 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.064734459 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.086727268 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069342917 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.066254207 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.084312888 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069366193 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.086051447 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063928914 seconds)
  done (took 4.549831206 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.086164737 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.131843319 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.089350045 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091654172 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.10303402 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.093736769 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072184006 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.112351392 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.066634594 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.085622382 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.08468731 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.104830429 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.087661525 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.073380812 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.093014296 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069808454 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069057301 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.086174788 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.072489703 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085992313 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.072821374 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.093610139 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.101729608 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.081954555 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090173685 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068184298 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.084985891 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.073302793 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.099498737 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073678391 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.090649231 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074078588 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.101928095 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.073914958 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086006372 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.070642283 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.103545837 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.086543413 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.071682776 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.066039098 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.089233638 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.072661923 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.093791802 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.1038552 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069113854 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.073759072 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.086897656 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.066188519 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.099251357 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.071008033 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.09493335 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.101046659 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072723054 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.087227406 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073500919 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.101584072 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.069259016 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.084423991 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.071559457 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.098550944 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066566464 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.090540071 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.08292181 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.088216562 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.075604326 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.101401253 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.074217369 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.090143282 seconds)
  done (took 6.746934663 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077180906 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093035071 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.0829519 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101672978 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093482703 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.076058577 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.092597454 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075187075 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.092313193 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080463088 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093351781 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114332748 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071343022 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.095886097 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075437161 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093891886 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075435962 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093308437 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07502454 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.095188735 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.09345747 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.08332736 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.09319554 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.10230032 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.105286864 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.088061986 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075598689 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.092764116 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083146319 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.094410032 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104353505 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075859854 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.093401902 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.101863774 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.087005778 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.092955692 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068678422 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092769011 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074921871 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.093906592 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070849622 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101446571 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.075307885 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.089802988 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07427644 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.093340088 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.101458488 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.08690683 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096092992 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097949314 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075383418 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101370651 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074672552 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094463082 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.101697736 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.108809406 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102114482 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101099448 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075042896 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.102018387 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100128853 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.109851764 seconds)
  done (took 6.435025122 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089810742 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095903231 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098640651 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064301193 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067114348 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.091488781 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067708537 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.084975262 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077371038 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095102551 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080248309 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090341315 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075877176 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098160016 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090369082 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076115839 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091192473 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073173186 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095207632 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072676385 seconds)
  done (took 2.531882412 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076996897 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.104496145 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070313942 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074257561 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.090913746 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074660039 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.090374461 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072059025 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087553601 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072236615 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09752894 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079090021 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087676785 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075140206 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.096694411 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074474311 seconds)
  done (took 2.185246323 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.080349104 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.097819247 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.083069649 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.088095588 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.06771238 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.084495013 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.068403488 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064856374 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.084101015 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.083481836 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.087762942 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.071234702 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.087481773 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067481481 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065691016 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.091153891 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065474427 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.08525962 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.068970566 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.102493678 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.080197653 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.085804626 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.070397347 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.069587174 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.088966232 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.073366592 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.088356467 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.066567327 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.085601724 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.069420764 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.087168539 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.07655306 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.084179721 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067967144 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.067179316 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.084809242 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.068944943 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086893927 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072092205 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.068207401 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.085793575 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068419328 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086735538 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069587864 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.083611959 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069638268 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.065133604 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.093490719 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.067662531 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.087597252 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.069649579 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.089656267 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069645104 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.078700817 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.091534821 seconds)
  done (took 5.178116762 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082360305 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071112466 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083592514 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066939804 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090835579 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.07090968 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071575366 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090435465 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070595473 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085437009 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071273712 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089688952 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071309122 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072668759 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089328822 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07286346 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.083415486 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071607994 seconds)
  done (took 2.271551492 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074498843 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068911313 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094983723 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069467182 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.087442184 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071640387 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064482121 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.08628103 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067861376 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087286825 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069401355 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070976497 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085807706 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.072039472 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087027685 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068625069 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070849177 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086138279 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069404349 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083221714 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.072244512 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066873353 seconds)
  done (took 2.542471518 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.073998521 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.09559384 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.163723156 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.108955414 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.085328412 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.100647299 seconds)
  done (took 1.496277622 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093319111 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100721239 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070261646 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109049473 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076786276 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090256086 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071173033 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089069157 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079504565 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103468015 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071232477 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098313412 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097223128 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079710549 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094425004 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075991257 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088761298 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070675413 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08838191 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107659954 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072038813 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098726515 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07099708 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089186377 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070753461 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096851006 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079327312 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103129767 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089179076 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079564339 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09424204 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070958825 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098291631 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10251131 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073511934 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097834548 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071179332 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107135145 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076896847 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098129062 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.07134113 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095695147 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097414957 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07629613 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09807885 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070623505 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094623414 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069781127 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090094854 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113354948 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077037692 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097484678 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095677831 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079343138 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097734198 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115391353 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084105611 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098214002 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094922376 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08355434 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098421815 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076471229 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097821539 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102454513 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077001844 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098088573 seconds)
  done (took 6.716387532 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087014253 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107397232 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071367837 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103305283 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098441111 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07138965 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089521381 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071496281 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089359618 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070977533 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130804028 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070781527 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09798496 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098292301 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071311131 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088805759 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07088793 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096520234 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070288432 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113719547 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090066181 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078951097 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098555834 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096719137 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084766711 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095460122 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071503431 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089629569 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07023709 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089981818 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076258811 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090256864 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097857094 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.07057704 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09745742 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071926716 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089477239 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075498989 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089678532 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075850581 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098270822 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107728858 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071555577 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089506163 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08431463 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090122805 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070202371 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09003951 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070200178 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08958351 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083461726 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103700902 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103168484 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098275837 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071011559 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090385826 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071426655 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088805945 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071644866 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094529464 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078805316 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089469303 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114403888 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071165165 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089358327 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079375972 seconds)
  done (took 6.602610443 seconds)
done (took 130.228220194 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.208398847 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.191221155 seconds)
  done (took 1.267863941 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070181087 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.0972537 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.099713855 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129710131 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.088040018 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.102261203 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.120121069 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.080963507 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.06826275 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.0875771 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068801624 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.088560546 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133146837 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.06870614 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.087954719 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070950141 seconds)
  done (took 2.337593526 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.103963261 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.197096137 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110494723 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067670687 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.10048679 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080049987 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.086945579 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.078986292 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.095789512 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067684209 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.080173517 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096521549 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066719471 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096738377 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.076651894 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.099080038 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067663151 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.09914468 seconds)
  done (took 2.551275348 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.104857168 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.142875683 seconds)
  done (took 1.123429929 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.200890186 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.12307877 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.202399018 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.412172654 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.206176754 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.27841837 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.17402312 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.172975897 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.15184841 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.16927223 seconds)
  done (took 2.96299561 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100843558 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.172104389 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.311231873 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.137892345 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.087977055 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.117645807 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.138651695 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.09073239 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.103311786 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.101193814 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.082161727 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098853672 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098603727 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.096315103 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076398693 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.098986806 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.12289023 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076713292 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.098295661 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.078165003 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.119136989 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068946455 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.096180635 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.076396458 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078931317 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.099675663 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067193678 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.087654847 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077101743 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.096069367 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.080670076 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.114449883 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.097907457 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.131520191 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.0826554 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.132100341 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.098894626 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073641995 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.096218971 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073980372 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.098338548 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078259126 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.104362184 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.096589153 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.06769265 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078608418 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.087319928 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067859918 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.100634499 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.079053156 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.100646122 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080037548 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.129906975 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.098085052 seconds)
  done (took 6.283076769 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.745268007 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.112160593 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094719988 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.804992407 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09043249 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106576538 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.710154517 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118889055 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.210620691 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.762261727 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.090422438 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.099958843 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.18194512 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.235762176 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.882004593 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.282420785 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.631186912 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.106811978 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.109993114 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.13239839 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.139709591 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.177529415 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.149348273 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.437270923 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.076065441 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093034021 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.137095419 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.096658064 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.140524867 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.086133745 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094553115 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.156660534 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.224577799 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.156610627 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097233946 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070966756 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092256434 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.148715333 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.242315012 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.171879063 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.159580405 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069619868 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091869604 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.140951236 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131988942 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069969513 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.140524408 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.173109552 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.149591633 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.0761829 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.09776622 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.143831243 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.138757822 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.143566629 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.102837613 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.270316702 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.283954319 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091791846 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100137258 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.105210251 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.236597685 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084842731 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.200613213 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.141685974 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.167639669 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.092642917 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.733257373 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.14788304 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.093232703 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074757222 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120616482 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096685973 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.13875866 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.149386969 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.369640415 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.142935601 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073993094 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091609606 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.208079869 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.104369198 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072328752 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.140351851 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.096716005 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101901754 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.164761199 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.143557825 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.147468767 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.209708497 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.141901535 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.159764491 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.075827345 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125038683 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.09692112 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.191084013 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.171881667 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.14075939 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.207775179 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.140779481 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.142987573 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.147589723 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097774376 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.150527569 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120435419 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.08179086 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137945909 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.191716964 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.124038759 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083352644 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095940823 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.140791959 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.126522914 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085629823 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.160763385 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.149800634 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.457643245 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.146489788 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.089638668 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.087277406 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139895237 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.161505588 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.078437187 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.234226829 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102244491 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.168899114 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121265865 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.070417258 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121095451 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.140915537 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.078173508 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12364315 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.159900974 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.078513848 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.215953554 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.190687143 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.078225836 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.214745349 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.162064687 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.077244704 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.149046344 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12139512 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.14502252 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.099411683 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.139815683 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076278564 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.776299354 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.143604165 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.122801178 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073770807 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.17715825 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091988075 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083910097 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.105226027 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069833969 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.756922429 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.085910574 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.103643547 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.104939386 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.077132521 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122748934 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.136865398 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094479178 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.140632078 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.18080131 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098606604 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120083157 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.085149871 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.139721283 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.097696653 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.104614253 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.085503283 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.105442429 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12341153 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.0751507 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105125815 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.146399747 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.1431265 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.193919554 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.541875479 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071009772 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.105840721 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.200811907 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072449839 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.26138938 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138111128 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.196567237 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.141278256 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080456711 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.285124667 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.142736897 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.174692235 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.107146417 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151626452 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070856966 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.136330501 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.143678855 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092622395 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076164722 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.139977579 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.165568372 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.1435693 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.927749979 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072966554 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.204462295 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068763289 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.170458679 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07792355 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09798237 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.238666005 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.09290473 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.147615972 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.143477206 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093949523 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.084399881 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.666362766 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.1070088 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.140259611 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.095945694 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.174287052 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.163780658 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.136420137 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.139052058 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075775094 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.138892052 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.20985043 seconds)
  done (took 40.520838841 seconds)
done (took 57.923617826 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.257910175 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.178803615 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.242802214 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.144320718 seconds)
  done (took 1.799672318 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.144753977 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.110818818 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.118262558 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.086731476 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.104654646 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.087819842 seconds)
  done (took 1.55350848 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.405026027 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.266632214 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.231285056 seconds)
  done (took 1.804459702 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.261855321 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.213464911 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.446717378 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.297666004 seconds)
  done (took 2.248990454 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.176369764 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.114164766 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068772436 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.107274976 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.15948783 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.252453325 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.129111913 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.188431814 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.081072622 seconds)
  done (took 2.225540939 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.199307535 seconds)
done (took 10.737887269 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.243844511 seconds)
    (2/309) benchmarking ("sort", Int8, false)...
    done (took 0.194546063 seconds)
    (3/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.193150877 seconds)
    (4/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.1998073 seconds)
    (5/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.194812789 seconds)
    (6/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.079583604 seconds)
    (7/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.096704775 seconds)
    (8/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.078976332 seconds)
    (9/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.166547621 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.073646364 seconds)
    (11/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.104136532 seconds)
    (12/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.243250815 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.080324544 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.122452827 seconds)
    (15/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.103258984 seconds)
    (16/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.230494277 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.07834441 seconds)
    (18/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.096965355 seconds)
    (19/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.211990144 seconds)
    (20/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.200249681 seconds)
    (21/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.152175466 seconds)
    (22/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.100308474 seconds)
    (23/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.22419354 seconds)
    (24/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.076134563 seconds)
    (25/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.164500493 seconds)
    (26/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.075412331 seconds)
    (27/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.10615538 seconds)
    (28/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.162630658 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.189726244 seconds)
    (30/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.197152826 seconds)
    (31/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.236552959 seconds)
    (32/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.19657127 seconds)
    (33/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.100816489 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.118068539 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.075995579 seconds)
    (36/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.105997835 seconds)
    (37/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.081705582 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.116848959 seconds)
    (39/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.076176794 seconds)
    (40/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.172140527 seconds)
    (41/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.05657172 seconds)
    (42/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.181873944 seconds)
    (43/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.076365063 seconds)
    (44/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.074735549 seconds)
    (45/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.159706968 seconds)
    (46/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.068325853 seconds)
    (47/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.101104418 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.067194915 seconds)
    (49/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.165742349 seconds)
    (50/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.190399952 seconds)
    (51/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.137334618 seconds)
    (52/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.081381843 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075400549 seconds)
    (54/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.18664477 seconds)
    (55/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.115061928 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.094448297 seconds)
    (57/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.11417 seconds)
    (58/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.081440632 seconds)
    (59/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.193088169 seconds)
    (60/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.210522141 seconds)
    (61/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.076348503 seconds)
    (62/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.07615806 seconds)
    (63/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.171247687 seconds)
    (64/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.207997742 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.066907812 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.140296497 seconds)
    (67/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.071653609 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.091634385 seconds)
    (69/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.08272533 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.115529312 seconds)
    (71/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.137909514 seconds)
    (72/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.132829036 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.078698368 seconds)
    (74/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.14966123 seconds)
    (75/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.171349336 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.097717883 seconds)
    (77/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.183287399 seconds)
    (78/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.078158545 seconds)
    (79/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.074895185 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.128063898 seconds)
    (81/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.160198985 seconds)
    (82/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.055177819 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.157188962 seconds)
    (84/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.174104573 seconds)
    (85/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.0710814 seconds)
    (86/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.1253163 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.090751425 seconds)
    (88/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.075553803 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.107531013 seconds)
    (90/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073489393 seconds)
    (91/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.091606124 seconds)
    (92/309) benchmarking ("sort", Int64, false)...
    done (took 0.069455445 seconds)
    (93/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.170090376 seconds)
    (94/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.071082225 seconds)
    (95/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.08919364 seconds)
    (96/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.163856502 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.121776533 seconds)
    (98/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.07158009 seconds)
    (99/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.095211619 seconds)
    (100/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.054665252 seconds)
    (101/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.05529859 seconds)
    (102/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.094982618 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092542552 seconds)
    (104/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.1134644 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.156921903 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.144931228 seconds)
    (107/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.11456881 seconds)
    (108/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.056278835 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.067158878 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.0990972 seconds)
    (111/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.073835683 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.169859507 seconds)
    (113/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.191659648 seconds)
    (114/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.100011969 seconds)
    (115/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.097362137 seconds)
    (116/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.150535052 seconds)
    (117/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.090180788 seconds)
    (118/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.111671086 seconds)
    (119/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.097778614 seconds)
    (120/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.078327732 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.171230147 seconds)
    (122/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.063116347 seconds)
    (123/309) benchmarking ("sort", Bool, false)...
    done (took 0.159102811 seconds)
    (124/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.076195334 seconds)
    (125/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.104658001 seconds)
    (126/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.094637579 seconds)
    (127/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.158673829 seconds)
    (128/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.067148036 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.089320638 seconds)
    (130/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.110295865 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.093959061 seconds)
    (132/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.07615418 seconds)
    (133/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.056161554 seconds)
    (134/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.097219469 seconds)
    (135/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.055303924 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.068073523 seconds)
    (137/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.192290458 seconds)
    (138/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.192514195 seconds)
    (139/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.116732396 seconds)
    (140/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.096971388 seconds)
    (141/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.076243282 seconds)
    (142/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.097514332 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.094010176 seconds)
    (144/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.053482109 seconds)
    (145/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.164480814 seconds)
    (146/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.101027202 seconds)
    (147/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.069929254 seconds)
    (148/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.05529145 seconds)
    (149/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.089139547 seconds)
    (150/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.054284343 seconds)
    (151/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074100068 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.089114324 seconds)
    (153/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.076147218 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.06729936 seconds)
    (155/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.075924145 seconds)
    (156/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.053910701 seconds)
    (157/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.053365518 seconds)
    (158/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.096591225 seconds)
    (159/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.068696292 seconds)
    (160/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.054112024 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.099808572 seconds)
    (162/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.077693561 seconds)
    (163/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.097542468 seconds)
    (164/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.070339646 seconds)
    (165/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.063440969 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.133583079 seconds)
    (167/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.106319655 seconds)
    (168/309) benchmarking ("sort", Float32, false)...
    done (took 0.152930408 seconds)
    (169/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.201658057 seconds)
    (170/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.078676325 seconds)
    (171/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.160658331 seconds)
    (172/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.13833444 seconds)
    (173/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.162700376 seconds)
    (174/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.072212389 seconds)
    (175/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.075896668 seconds)
    (176/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.172083616 seconds)
    (177/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.11672542 seconds)
    (178/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.083979122 seconds)
    (179/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.075492808 seconds)
    (180/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.078108031 seconds)
    (181/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.092474655 seconds)
    (182/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.112125464 seconds)
    (183/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.074495371 seconds)
    (184/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.079298281 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.092335602 seconds)
    (186/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.053313796 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.12048725 seconds)
    (188/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.071741812 seconds)
    (189/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.098910594 seconds)
    (190/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.13855607 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.13361164 seconds)
    (192/309) benchmarking ("sort", BigInt, false)...
    done (took 0.212522187 seconds)
    (193/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.180385835 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.067865986 seconds)
    (195/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.100199145 seconds)
    (196/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.053513332 seconds)
    (197/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.067279781 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.11344582 seconds)
    (199/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.072233259 seconds)
    (200/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.337452467 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.11674072 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.115025823 seconds)
    (203/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.053735186 seconds)
    (204/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.074677153 seconds)
    (205/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.054516171 seconds)
    (206/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.054840784 seconds)
    (207/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.054278887 seconds)
    (208/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.075466159 seconds)
    (209/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.054464426 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075918007 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.098099736 seconds)
    (212/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.069221098 seconds)
    (213/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.063281098 seconds)
    (214/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.085767575 seconds)
    (215/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.067848868 seconds)
    (216/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.107087148 seconds)
    (217/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.079352873 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.158186913 seconds)
    (219/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.069253458 seconds)
    (220/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.194359453 seconds)
    (221/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073645073 seconds)
    (222/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.074968333 seconds)
    (223/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.053124851 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.100942128 seconds)
    (225/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.076620349 seconds)
    (226/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.066980227 seconds)
    (227/309) benchmarking ("sort", Float64, false)...
    done (took 0.148824067 seconds)
    (228/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.079078143 seconds)
    (229/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.068902026 seconds)
    (230/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.10230508 seconds)
    (231/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.143048924 seconds)
    (232/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.076537288 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.142276203 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.147508431 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066779404 seconds)
    (236/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.091097994 seconds)
    (237/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.067386493 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.136129491 seconds)
    (239/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.053724521 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.116922537 seconds)
    (241/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.069570477 seconds)
    (242/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.095380899 seconds)
    (243/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081849255 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.09322738 seconds)
    (245/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.131607381 seconds)
    (246/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.07103281 seconds)
    (247/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.078619638 seconds)
    (248/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080835745 seconds)
    (249/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.192192192 seconds)
    (250/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.069193527 seconds)
    (251/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.090226017 seconds)
    (252/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.075020667 seconds)
    (253/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.064928279 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.116634015 seconds)
    (255/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.068191409 seconds)
    (256/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.095534382 seconds)
    (257/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.065995684 seconds)
    (258/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.054249997 seconds)
    (259/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.073430042 seconds)
    (260/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.098112075 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.098590639 seconds)
    (262/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.098100815 seconds)
    (263/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.053643018 seconds)
    (264/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.055099197 seconds)
    (265/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.114852722 seconds)
    (266/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.075484087 seconds)
    (267/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.052733105 seconds)
    (268/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.076990877 seconds)
    (269/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.074692838 seconds)
    (270/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080082481 seconds)
    (271/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.09137688 seconds)
    (272/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.054091714 seconds)
    (273/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.053085154 seconds)
    (274/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.076025273 seconds)
    (275/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.054537008 seconds)
    (276/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.076520214 seconds)
    (277/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.089480778 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.068364566 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.114393508 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.066613207 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.067471777 seconds)
    (282/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.14181917 seconds)
    (283/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.055325161 seconds)
    (284/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.074698042 seconds)
    (285/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.09387347 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.068317539 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.097095825 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088013951 seconds)
    (289/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.052836105 seconds)
    (290/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.086152486 seconds)
    (291/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.06832372 seconds)
    (292/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.054561429 seconds)
    (293/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.075681322 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.072994388 seconds)
    (295/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.068777295 seconds)
    (296/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.076196347 seconds)
    (297/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.054151947 seconds)
    (298/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.056360647 seconds)
    (299/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.052332654 seconds)
    (300/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.090161853 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.067653258 seconds)
    (302/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.052343454 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.094920275 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.06760039 seconds)
    (305/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.098661261 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.091018209 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.11220423 seconds)
    (308/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.069235134 seconds)
    (309/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.201976336 seconds)
  done (took 33.594464363 seconds)
done (took 34.5077805 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082959473 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115547035 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.077102691 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.116708129 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.082012223 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.102110824 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074862828 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.080577809 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.104574564 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083448851 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.103307832 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056364816 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.098567269 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076673743 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.099135218 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093701725 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.102649637 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074573361 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.075301895 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.088865503 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075740528 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.089367859 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069428918 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057743008 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.102129394 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075294214 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.073711351 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.099387344 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068246193 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.089311588 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071485247 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074831748 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.089729066 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081169659 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.09570388 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075238463 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076508616 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.100491411 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.070027833 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.088977644 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075117089 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068024386 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.096710439 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075522508 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073107491 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.094442877 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075750476 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.103062511 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093743655 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091835837 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075599763 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.100438871 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078731442 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073907052 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.09404036 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075581837 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.094259527 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093174542 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.097971845 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06934304 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074809633 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.097999069 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.073011684 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.097029111 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074728068 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077351867 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.100394782 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073386851 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.098670776 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073523848 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067255947 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.097328916 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071077307 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.067637472 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.100546232 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078959018 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.08831226 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073551839 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074434185 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.095238335 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067257063 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090635761 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.069495469 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.074188151 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091121296 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057170589 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071810211 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.095280806 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067891726 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.076112628 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.095679345 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074062555 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.091265825 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.078742422 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068253065 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.095048298 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068505085 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067313564 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.091888916 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.07192209 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067322592 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092162909 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.076643067 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.091627726 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.074091909 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.082414096 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.090026799 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074326251 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.088372828 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.06743695 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.083264852 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.099983954 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.068322586 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091680866 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067372397 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.075179356 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.088869301 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067518999 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067416616 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.089845635 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.074630855 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06707611 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092167497 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.075288817 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.103116378 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.067568842 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071188626 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092576078 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.068160549 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.07322466 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.090058549 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.068301221 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.091965518 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.065396779 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070756531 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.089634718 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.075822094 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069960906 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.097758745 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.069650724 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.098355217 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071972085 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.074034154 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.094982527 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066738072 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.061226282 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092406057 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069842719 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.069224367 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.089992493 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.070095985 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066856362 seconds)
done (took 13.403696235 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068041123 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.169658804 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.127221716 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.09784054 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.111156268 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068233848 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.101281638 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.104951582 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.092613743 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.12795743 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.089465893 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.110419648 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.11617409 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.089886536 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068237736 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.071839953 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.09221721 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.090451664 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.127080022 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087911278 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.141765502 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.089794593 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.122545813 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.092239831 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.113782621 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.104770162 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.091444219 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.07219651 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.07068065 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.11722189 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.109833058 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.07175633 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068244581 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.12399203 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.119669587 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.087840538 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.089944155 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.087062312 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.090079342 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067791713 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.116223055 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.102042799 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.10585107 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.084178376 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.097035391 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.071327321 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.091513743 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.087408555 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.115250715 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.082794712 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.112180163 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.134984573 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.071913813 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.107249481 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067423746 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.111707273 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.107328794 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.070944021 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068246932 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.093416288 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.068433943 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071602301 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.112744248 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.116556737 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072337924 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.10760024 seconds)
  done (took 7.355877956 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085981279 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.118647685 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.086427185 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.108247343 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068199583 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068595482 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.090711533 seconds)
  done (took 1.598526302 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068555101 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091340652 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.113572154 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.091224017 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.110542224 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088749813 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.101127288 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068936077 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.109029054 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.069765571 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089744636 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.129263438 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.06967184 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.09834829 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092460867 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.091411135 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092142499 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.092125114 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072989239 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.115063988 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071972026 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.112516833 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070753222 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069464381 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.105800175 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069541176 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.139620314 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074292489 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.09251218 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.072237042 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067882892 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.141384255 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.106520762 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079590735 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069443078 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.105948839 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.084158286 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090119764 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.085162352 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.096936764 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083949929 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069527128 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.093587062 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067968234 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.073105717 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.102581977 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.070685876 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.092924607 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072026122 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08935586 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.092583384 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.083548442 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.092084668 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.072968138 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069883456 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.098167724 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.079706441 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.093087125 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090058609 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071041913 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.109454353 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085288634 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.106743247 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085225033 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.095164294 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.083537265 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.106175996 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.071764764 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070708614 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.096386262 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.085657474 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.090005393 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.070366709 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079359193 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.094308704 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.092378019 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.114367507 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071188866 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.102243281 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069482734 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070201397 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.0922663 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.092403274 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095571858 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069386049 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073460806 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094927487 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067953 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.067646646 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.095349209 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068210143 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.093317803 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.072107719 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069753579 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094681331 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.086343615 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069520162 seconds)
  done (took 9.449658341 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070339665 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070863136 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.09411 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070701825 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.06972867 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.093168892 seconds)
  done (took 1.456478617 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.100624841 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.094437576 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.083506615 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.097656279 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.108610716 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.107367173 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.084921712 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.107217933 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087227948 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.104833037 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.084574932 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.10728052 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.090774245 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.098123638 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083872241 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.097946824 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.084900217 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101426783 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.082145696 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099546615 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.08962298 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.098931062 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075709325 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.108501258 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.073000921 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.075638022 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102061775 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.081538513 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.104076398 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.085106229 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.098346651 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.073590155 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096795446 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.085412745 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.107176003 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074173114 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097959455 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074423703 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102447813 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.07304454 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.107988608 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076298477 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.080865953 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.09689997 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.109012357 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074187816 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.073957826 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101681357 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.083800541 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.097312773 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.073959612 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.098089876 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.072610501 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.096774479 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074614764 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.107775514 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074213661 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.107898607 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.07569995 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074299158 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.094990027 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.073010057 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.106840618 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.072713907 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.10580298 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.073898527 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.097506012 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076710198 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099295592 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.075994319 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.073970334 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.094740489 seconds)
  done (took 7.472755321 seconds)
done (took 28.303596533 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.649368445 seconds)
  done (took 1.629508846 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.766706563 seconds)
  done (took 1.750081304 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.651660027 seconds)
  done (took 15.642280584 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.6159878 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.753941309 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.810795624 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.160423251 seconds)
  done (took 3.324555756 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.888089005 seconds)
  done (took 1.892590476 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.235279994 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.225236536 seconds)
  done (took 1.451115554 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.733241576 seconds)
  done (took 1.731922933 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.289179485 seconds)
  done (took 2.279246749 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.320631273 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.18286236 seconds)
  done (took 1.502374752 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.523551439 seconds)
  done (took 1.522606372 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.606965898 seconds)
  done (took 7.611956357 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.229918558 seconds)
  done (took 1.241629245 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.267756147 seconds)
  done (took 1.268999979 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.114677735 seconds)
  done (took 4.117432458 seconds)
done (took 47.956687384 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078434654 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083642838 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.105646317 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080142963 seconds)
  done (took 1.346526709 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079152731 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075943461 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101513158 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.074746421 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.102571704 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.075843901 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.100371545 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.078534488 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.074116309 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.098895462 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.075980862 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.097426367 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.077731224 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.10026462 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.072242445 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.07750294 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.10135464 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.075366036 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.100990662 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.075067264 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.073136095 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.099775403 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.079181991 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.097210143 seconds)
  done (took 3.076431882 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078569362 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074409176 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.099285511 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073958338 seconds)
  done (took 1.33388211 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078834546 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.117278794 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.091118042 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.079917683 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.118130632 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.112294192 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072876563 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.073025822 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.097183143 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079497162 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.093120875 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.100670121 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.112441331 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079114787 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.105022046 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.068738769 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.070939299 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.112469567 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.079547173 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.103060194 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.072872157 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.081506862 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.09287371 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.091722944 seconds)
  done (took 3.198125471 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.079014986 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.129759834 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.07995227 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.116119501 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093186086 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.091011475 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.077902962 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.117027751 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.127071892 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.091759316 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.072179742 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06863187 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.097987946 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068091965 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.077934828 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.134518685 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.137607874 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.070800233 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.122997921 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.067865196 seconds)
  done (took 2.936917585 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.076446017 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071938523 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090366965 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070210972 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.07796109 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.097863427 seconds)
  done (took 1.501058185 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070014707 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069756554 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.092261982 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069091038 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073922345 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.092160425 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068269763 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069150584 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.092872527 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068858356 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.06857363 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.091075956 seconds)
  done (took 1.937937077 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.384286509 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.093720259 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.092959767 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.06723932 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072680702 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.092026673 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082405395 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070048622 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.116411112 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068947121 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.092662004 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070537378 seconds)
  done (took 2.320165079 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262271878 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079585053 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.324909559 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170045246 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142132812 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156594977 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107420407 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141040476 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.198560218 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139319366 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202631803 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224645501 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135447321 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169114519 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116809914 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.13420994 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18838698 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223555466 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131992378 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200570322 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207247509 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157874567 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18154523 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129516237 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135760009 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150787857 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.074141718 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106546247 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233336751 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161498882 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201606935 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140535853 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098836337 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231141928 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226713587 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196123937 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164202548 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087116789 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.159106259 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.164547891 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255257431 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115388164 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194997173 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134749471 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107377566 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173599136 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14751109 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.14831463 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.137939139 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1166233 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175143594 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241009218 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.166109414 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114141905 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138544294 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143413163 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.144902009 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105744463 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26860885 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196745502 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159515457 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.097094673 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125471367 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187677979 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160884382 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.143270496 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.15428014 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121308124 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169082417 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.212279942 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147440465 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173851348 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.181033607 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116002935 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146765669 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171171849 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158607829 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231167941 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156609684 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.075829556 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153844026 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131827228 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108982592 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.147185188 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103391415 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234231782 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102156056 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.140909553 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141076623 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136660165 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139487656 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196962731 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20405757 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131949294 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.068519301 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131825685 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.151660495 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176500465 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116384855 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137105302 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150400125 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.106565115 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168271636 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.077815217 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154336154 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.105617512 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154512904 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163864271 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.103499169 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157163728 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104731634 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.130606921 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164189471 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220383281 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117812272 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084986838 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227251105 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15752314 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.133919152 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176094174 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.215779131 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.103411979 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131021591 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206677858 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242182104 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091800176 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223548674 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136411273 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111312167 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.091116739 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156316135 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140456173 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.150472595 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110791508 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.155955827 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228236739 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.078776222 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123175283 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167777965 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109434703 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083514727 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141068039 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129649276 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.123384449 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.103319972 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.135935372 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1968402 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15661517 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135464909 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15532556 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126801679 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201901736 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117549197 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.132532838 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132572694 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.07271924 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.16708726 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218549668 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082282098 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228077471 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.155424519 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133303112 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149916594 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110804575 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170726211 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081498968 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.098383405 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175333094 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140949859 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138834897 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.185715645 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131816327 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.156613325 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.152705895 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189592152 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162494154 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.164389324 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135200079 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.089709247 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14140444 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18058996 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.076206015 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.122874281 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.086082592 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131420604 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124533509 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08629737 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198127131 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157741907 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128786115 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141845111 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100576046 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.206178741 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.079576509 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186135546 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.149332254 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097695794 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.212988718 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188610822 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190665209 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103800143 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20348221 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.073484555 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101681894 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.09370269 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.182541845 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086777934 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111934121 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146596427 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182062396 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158429685 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193958996 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114014623 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176380513 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189754658 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.073378294 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.146632055 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205037887 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154691484 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.134897515 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112405051 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.101745268 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202449883 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137515649 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248488682 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145585822 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154878722 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209612117 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.106380356 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108354885 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134792532 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169204617 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13472552 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.181712471 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127431497 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117068351 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139468388 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.084138494 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131423616 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157539425 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149821527 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189981249 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.146562547 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163618442 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105192962 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147740208 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153967677 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153261565 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.066393413 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149369083 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221949088 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122192026 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147826552 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186857806 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107659817 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.154258455 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239780977 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176497194 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113540809 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139369812 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157093372 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159787343 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148624765 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171083768 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140454124 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165820965 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139334956 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.112879666 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090382905 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126392177 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13525515 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.123454455 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.140996877 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.145875476 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.096767768 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18731441 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141120472 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114076053 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148114597 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.125699185 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.118701398 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100497265 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238098518 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151514438 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235515352 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.129467893 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.183151548 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228392723 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103187186 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082755792 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.109097306 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172365638 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087555855 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190090407 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.099825293 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133644945 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156382118 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199871507 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098387666 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.0965791 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112614865 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190733691 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1401871 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101660254 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.133776708 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223746229 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.132449457 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08186885 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154966119 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134209143 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105162737 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258770313 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.0636653 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126712297 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078803618 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083176256 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186155629 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189943718 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.111877596 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.134473084 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145775053 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175835625 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16057321 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131467728 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101909955 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143162295 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207736931 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160398527 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.091689484 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141757954 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186346467 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190578194 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135638619 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.124751927 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233984575 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189110317 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.223670193 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.117798479 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146694074 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145269002 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112663121 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198279744 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112290096 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202642851 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111678472 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166858538 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133674511 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121729047 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160133168 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.127416912 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135191076 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182030919 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150264885 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111454726 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082646208 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147518531 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152804633 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136078127 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.104131272 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170957489 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.101303549 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168798593 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231086208 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084418606 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13595291 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124970482 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084655949 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138770522 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132490746 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115029917 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.122770992 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231675311 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.118836088 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183580316 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200130971 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14430213 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168401735 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129840568 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.666169749 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.106726776 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188493219 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149963966 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238735083 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127105458 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149635591 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14061482 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153874202 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175185833 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133839594 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.20703251 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164253105 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.151390652 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10822752 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133258329 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140472537 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.094413669 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136322223 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143973127 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14613287 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.130192836 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.151813004 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157116125 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.111161708 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124172793 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192218215 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148114293 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201976534 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172888209 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087355295 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149361278 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199629979 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082408873 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.178598152 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188989693 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137371233 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128371402 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.109562826 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.109180476 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233137118 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.102044394 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195322435 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153889213 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140016579 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144230697 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.175008282 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165147282 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138015538 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156913799 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123569623 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.143484757 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146085436 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087972167 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.107314551 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136877419 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143355957 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.101779578 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131969071 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.146628109 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185051766 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.100060395 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099209694 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132469512 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202969807 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239846601 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.092238953 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111812866 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150704757 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143519117 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.146832849 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1564722 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.084516552 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111584558 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.111339384 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.11596623 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.137850949 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144079285 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134329861 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141403907 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200928926 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.113953661 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.253716912 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098326946 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136164594 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.071688235 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.108636789 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125270142 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126570254 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112582581 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128565928 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233494067 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.125446052 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.093510698 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122541488 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.076224932 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112221843 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160903057 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140484541 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151966431 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128736092 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.065423369 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139351618 seconds)
  done (took 72.111918853 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.133427147 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.104691524 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.118267637 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.173220756 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.14603286 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.239051785 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.181620752 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.223633626 seconds)
  done (took 2.414892632 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070459373 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.118142203 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.104006148 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.117336574 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.09160023 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070421204 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.293764894 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.11096362 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068642892 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.115051179 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.118964143 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.09270328 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.470907126 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067107282 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.096063424 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.085852382 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068443279 seconds)
  done (took 3.247990413 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.427079398 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.63655918 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.452991982 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.075587051 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.879477026 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.108390593 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.374565106 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.163895642 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.092332986 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.43321708 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.727726051 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.152019832 seconds)
  done (took 17.622171847 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075862063 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.07033659 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.110807549 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.08429154 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.100269552 seconds)
  done (took 1.539540957 seconds)
done (took 115.58775621 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081758572 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.341736772 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054874533 seconds)
  done (took 1.52829804 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.08459462 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085616683 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.111659715 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.085310079 seconds)
  done (took 1.473246754 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.076091027 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078394708 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.111971881 seconds)
  done (took 1.369332916 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.279279942 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.166710487 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.089072393 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.08420301 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079248821 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.105878204 seconds)
  done (took 1.372093833 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074626808 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.077186671 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.100571691 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.07794451 seconds)
  done (took 1.427136871 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077953903 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.054258472 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056639172 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.082810933 seconds)
  done (took 1.373168554 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.091397713 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.107366122 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.082357908 seconds)
  done (took 1.381128054 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107675452 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.11374696 seconds)
  done (took 1.323666765 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.08261527 seconds)
  done (took 1.180191858 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.09615299 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.140841335 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.156717103 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.137930866 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.165988553 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.137602363 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.114081717 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.089518724 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.105704333 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.116125178 seconds)
  done (took 2.363799945 seconds)
done (took 16.504575472 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079081101 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.388630753 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361486135 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118233073 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.667975919 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.35779882 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.042183123 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.120051858 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121601761 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.095949345 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084899263 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.675266354 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.967063298 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.346331474 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.955987552 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.321858909 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.67554508 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06955212 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094675328 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069397831 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.00145681 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094937203 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068710559 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069516397 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.67613742 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372734211 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095449852 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.324553608 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06924625 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097460264 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356538674 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096258742 seconds)
  done (took 16.030139837 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071515533 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.145616381 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075271334 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086046678 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.09848984 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071367121 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.099868336 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070594002 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.153859115 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06983976 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112599742 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069388167 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.099607458 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070464305 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088088585 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.096144964 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070618317 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069811176 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.09613903 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069794182 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.114133754 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06992538 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07017813 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.096468697 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070262286 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107738857 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070161862 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069582025 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095490461 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071659748 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.098876688 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070740909 seconds)
  done (took 3.893791885 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11727265 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.153707948 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075613041 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.130904861 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114733352 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.098643199 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.172101731 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094250975 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.156850591 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069963844 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112153527 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070198819 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.129461219 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.07099285 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.115030944 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069825782 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070661079 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.096019197 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069977958 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.096149034 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087555466 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095481583 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069968917 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070201499 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.096615446 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08281227 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095986977 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070249205 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070384551 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.0984396 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073571738 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095851213 seconds)
  done (took 4.203737516 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073764551 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.077052202 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.110759704 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085201847 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.097972215 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.074629404 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.074717588 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.097960752 seconds)
  done (took 1.79936489 seconds)
done (took 27.026313581 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079998165 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.072136811 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.101091403 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083036807 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.101505331 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.0810709 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.06969893 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.103030592 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078564558 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074301241 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.103399946 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069174308 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.099333446 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069150401 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076521798 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.095909873 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080655885 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.099824777 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080995573 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.08109663 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.098064199 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.079294604 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102378268 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080706099 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.107737777 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080841105 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.084533812 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.101674278 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071228227 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.098386379 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.078051007 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.085385088 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.097124301 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081113294 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.096881636 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070057615 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.069624545 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.095512136 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081535315 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.10240923 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072915365 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.101710752 seconds)
  done (took 4.740108273 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.08921024 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.093473822 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.113089306 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.06665427 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.099063941 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.066632824 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.117393478 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.06518939 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.061470572 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.116615683 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.057817133 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060822138 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.091651919 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.055462979 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060887145 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.058314924 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.08979885 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.058282556 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.061216814 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.087646411 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.059828213 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.055543293 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.088807261 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063905526 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058078468 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.089741352 seconds)
  done (took 3.100979585 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076470635 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085267205 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.116339171 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130599664 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.135438683 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.078477722 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.107131436 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.089592195 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.114406575 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069288627 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072736363 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.126022027 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089612151 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.102794318 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069220582 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.116397125 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.083898003 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071480073 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.101977358 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09136553 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.113446224 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.079439702 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.120779939 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.082728748 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069083145 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098377033 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072939638 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.110406272 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074907191 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078773635 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.100573206 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073441036 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.098139638 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.081220564 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073751574 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.097874257 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092152058 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.105672457 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079760363 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.06967497 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.100058714 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071114202 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.116782217 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.114043631 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.095867889 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.076517522 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.076810617 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.105377257 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069475569 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.114479067 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078333491 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.069209359 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.099348004 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069078416 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.09595701 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082755597 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071264471 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.098413307 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077826403 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.098907701 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.081631977 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072947885 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.111282211 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069105117 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.103081841 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068694004 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070349828 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.095036071 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092133337 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070255839 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.136610088 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069835004 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.097889994 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.07793436 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.103470463 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.07547181 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069466404 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.110939847 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078095908 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.09967377 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077141805 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072799294 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.098973666 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.088928164 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.098676762 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071517442 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.07046785 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.102992592 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071967312 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.096938657 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081829196 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069048924 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.099399638 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085805437 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.095109125 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.0702554 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075475011 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.101063365 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068680472 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107579584 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.07509035 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069603677 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.105055372 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.06905562 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.098966624 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079333222 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073301643 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.094764746 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.074195658 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.103267584 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069876633 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070326635 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.100205594 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071943772 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.105523053 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.085451994 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073553858 seconds)
  done (took 11.478708345 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.195008198 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.187399046 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071759564 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.180020644 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077733223 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.108016911 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.18136413 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.096777977 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.097223809 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.07003207 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.07102727 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.131849113 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.126226838 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.107185546 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.107603289 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069541265 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.115178611 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.105179417 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.18297614 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.177458249 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.116339969 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077118541 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071241518 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.098064963 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071263471 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078898564 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.114175142 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.104122402 seconds)
  done (took 4.322786785 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082408063 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.130320462 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075666908 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089960233 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.119791336 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.070080171 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.102851376 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070898405 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.10930547 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.081807247 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.097117159 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075452464 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075759552 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.106669268 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071010012 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.106750207 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079402974 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.071600431 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.100963683 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075077153 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.106130101 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.082949442 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.101240655 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069056645 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.076276046 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.096189522 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066093178 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.114974266 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069167311 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.118452272 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067602315 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075662212 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.110599888 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070393673 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.096503924 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.072377982 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.072793526 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.100617988 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.071033414 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068252246 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.095680949 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.05944547 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068276978 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.109702359 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.075813687 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.089046506 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.075212045 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.074774922 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.102453544 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.06709547 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.099807916 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071738009 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072641251 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.1057815 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073743521 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.074484783 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.10108182 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.067580491 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.104719477 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.07250485 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.066022654 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.095113855 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074049529 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.067883752 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.104208383 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.073503991 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.095357336 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.07231377 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.074402788 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.103162929 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.073090558 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.07186738 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.094958979 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.072065953 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.101663402 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.073714893 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.073537715 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.095483874 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069713017 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069688583 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.084977054 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069144362 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.055698906 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.100001648 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068115665 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.068604234 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.100007553 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.076043356 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.109512774 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.07152524 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.102891364 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070569234 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.06870269 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.099879807 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.065849151 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.07312245 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.113507242 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.113279997 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069873247 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068261626 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.11222091 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074863648 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068763865 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.086062925 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076294264 seconds)
  done (took 9.984154568 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.096655456 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.094458517 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.099331173 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084259727 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.125075382 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.095654935 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.104509816 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075753627 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.071305788 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.1135271 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.069471873 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.105281386 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.07006455 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079159016 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.125605256 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078211667 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.099412552 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079282186 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073290865 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.136153563 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084489129 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.111373763 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.082298385 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.098278188 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.074200899 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081939458 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.124753158 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.081104116 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.10830158 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.086612248 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.081363631 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.12434484 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.086720321 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.101129758 seconds)
  done (took 4.351738559 seconds)
done (took 39.086073307 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.199748605 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.402600602 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.185691246 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.05422785 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.201045175 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.223978433 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.200375031 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.185834344 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.399632398 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.191358012 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.413859931 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.805247998 seconds)
done (took 58.599457694 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.230150252 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.32797621 seconds)
    (2/2) benchmarking "String"...
    done (took 1.456639311 seconds)
  done (took 3.926706996 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.603860697 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.178605872 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.450163819 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.190457974 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.203517881 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.493033373 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.800984899 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.019992204 seconds)
  done (took 27.468431985 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.192911105 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.557880809 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.561608438 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.555742625 seconds)
  done (took 18.002860739 seconds)
done (took 59.365492691 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.176906309 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.216948899 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.237046417 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.186469176 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.297373839 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.21828216 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.799114132 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.417706648 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.192948424 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.17350068 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.211798209 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.19531375 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.209218882 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.727633997 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.206059323 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.192353814 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.265612307 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.766686449 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.573792664 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.208472029 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.207290634 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.215696494 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.207971911 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.192490235 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.196154491 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.190686225 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.190921814 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.190730987 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.459426896 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.198609263 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.284292979 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.294097493 seconds)
  done (took 191.435275136 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.191556507 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.265017008 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.345412866 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.210100124 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.759544245 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.397249521 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.355240349 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.805702372 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.206469903 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.215154643 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.488009389 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.192624996 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.535052229 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.212306702 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.198629715 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.297973944 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.389516672 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.501415393 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.204580333 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.45938641 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.201171151 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.475280197 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.420025967 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.403917204 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.200915458 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.237876215 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.223372955 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.199933416 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.392709332 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.335287531 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.216487238 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.226617073 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.773788006 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.050137904 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.219240075 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.214627426 seconds)
  done (took 150.157371711 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.45292283 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.193515858 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.193065031 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.192867062 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.2229631 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.192405379 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.71335411 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.713473387 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.69460378 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.470764706 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.257073661 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.451150344 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.198350648 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.285616685 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.205651153 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.194594837 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.209755522 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.220803083 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.194689605 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.193680525 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.728698888 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.210167202 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.701622593 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.203526286 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.193474589 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.223485918 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.584689016 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.194959872 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.223961792 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.510289176 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.238828931 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.195109048 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.496818898 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.795436577 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.198523801 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.303280603 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.196898402 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.225328297 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.195915655 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.463890311 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.195624422 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.195915682 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.199063076 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.782733041 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.198634389 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.71570355 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.194981913 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.118581192 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.198695336 seconds)
    (49/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.19489371 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.194871298 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.92281094 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.715535011 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.199439629 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.195461478 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.199081342 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.195753842 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.196778966 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.225854478 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.751595482 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.298011708 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.197231609 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.19916116 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.226557304 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.196470436 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.321912243 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.200883362 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.365708617 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.253764339 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.30775205 seconds)
    (70/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.197027525 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.732112621 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.199535159 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.288506272 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.314826449 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.196781569 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.196330582 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.197215299 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.196341484 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.302166143 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.197188341 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.594638724 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.203084341 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.197653802 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.256231166 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.290109205 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.197842419 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.497699748 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.200849395 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.197382317 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.891694727 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.290082391 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.196873691 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.197738745 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.196872531 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.596121298 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.720100256 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.395055354 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.203631827 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.80684311 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.200620756 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.197305517 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.608926388 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.712031968 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.806025316 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.200394037 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.304071898 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.20232938 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.200407897 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.197812392 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.226770484 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.19989111 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.25676869 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.198491193 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.594331029 seconds)
  done (took 345.840861246 seconds)
done (took 690.021562377 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.889740441 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.864109337 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.971203295 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.866713862 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.844875536 seconds)
  done (took 10.577168632 seconds)
done (took 11.718762939 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.377209616 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.376933485 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.25641827 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.37823265 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.225993763 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.393814311 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.356297267 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.218233905 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.297189048 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.272291118 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.295245939 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.245908362 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.225558531 seconds)
  done (took 18.060563009 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.499044414 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.489335025 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.259619785 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.490399621 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.236524459 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.488885244 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.38509867 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.392331347 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.385804763 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.211200327 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.211264521 seconds)
  done (took 16.19188664 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.501862878 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.489668184 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.264487581 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.50552928 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.237787183 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.497222158 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.385641988 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.392789938 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.382451401 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.211619217 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.210427926 seconds)
  done (took 16.22087841 seconds)
done (took 51.615239398 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.207161658 seconds)
  done (took 2.349099073 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.238787223 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.400368106 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.220076287 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.210202965 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.208359217 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.207432545 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.210660769 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.206404635 seconds)
  done (took 11.046114064 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.203676155 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.204174226 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.206609476 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.206133576 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.206845274 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.207113257 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.20745751 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.204597984 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.206218331 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.206287045 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.204892889 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.20388328 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.20636507 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.204705926 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.204737066 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.204139461 seconds)
  done (took 20.431761142 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.20668368 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.20477999 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.205565626 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.204943903 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.205048925 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.204732325 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.206035911 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.204451714 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.204334314 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.2049133 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.205867379 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.205266029 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.205530409 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.205283146 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.20574896 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.206184998 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.205560249 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.205378844 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.20972711 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.206205174 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.205502 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.205450574 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.205053697 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.205776914 seconds)
  done (took 30.080298041 seconds)
done (took 65.050027015 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.268818044 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.879867138 seconds)
  done (took 9.292989598 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.208593112 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.207955097 seconds)
  done (took 3.564542636 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.208047376 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.209141972 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.207268466 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.207876595 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.207729475 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.2075208 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.208517374 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.208992649 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.208332579 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.207529327 seconds)
  done (took 13.226765699 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.208596051 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.208475467 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.206882604 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.208665718 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.207996507 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.206186423 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.208198299 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.208238085 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.209912724 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.206139763 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.209263209 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.206430166 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.208462282 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.20670685 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.209900542 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.207428221 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.207616847 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.206644724 seconds)
  done (took 22.887784897 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.208721766 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.209843235 seconds)
  done (took 3.565325617 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.206309771 seconds)
    (2/7) benchmarking "second"...
    done (took 1.207601817 seconds)
    (3/7) benchmarking "month"...
    done (took 1.207068072 seconds)
    (4/7) benchmarking "year"...
    done (took 1.207366713 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.208018562 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.207539767 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.206742875 seconds)
  done (took 9.597951673 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.211074044 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.380805251 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.456107485 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.79032268 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.210724827 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.213789658 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.999236023 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.214287974 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.215405345 seconds)
  done (took 13.838443455 seconds)
done (took 77.11913714 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.197206888 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.201622139 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.027036253 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.208914211 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.230839343 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.544752671 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.242711587 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.340481953 seconds)
done (took 37.141996671 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.208186539 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.942499052 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.944436365 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.203997053 seconds)
  done (took 11.23923083 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.201189153 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.108796726 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.197803153 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.199446629 seconds)
  done (took 17.858473011 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.810353703 seconds)
    (2/2) benchmarking "read"...
    done (took 1.534582072 seconds)
  done (took 4.493407381 seconds)
done (took 40.946995325 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.210491036 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.21124769 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.20957722 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.209353034 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.210769425 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.209269705 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.208986128 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.212102708 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.212849983 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.212437722 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.211867635 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.211925794 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.212223901 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.21356174 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.20946994 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.209264894 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.212713574 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.209987607 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.20999715 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.209789575 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.209267249 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.211459854 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.209952056 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.209329127 seconds)
  done (took 30.207187306 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.212952202 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.209277141 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.212214441 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.213941376 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.210766641 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.213362646 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.212979166 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.210080231 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.213814319 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.21371843 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.210989338 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.211822247 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.213076559 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.211459684 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.213549473 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.210689913 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.213216219 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.211585977 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215033014 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.21138501 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.213340219 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.211083504 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.212168993 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.214150894 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.211634103 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.212019142 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.213913333 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.211900213 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.213941992 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.211848037 seconds)
  done (took 37.522041504 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.21931638 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.220667713 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.214172373 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.214227967 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.214446105 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.214553141 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.214166327 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.214594297 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.214252812 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.214003342 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.214338113 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.214418533 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.214718539 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.214229361 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.21522137 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.214923428 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.215866281 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.214654744 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.215350207 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.214241981 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.215735648 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.215221941 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.215237781 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.215089308 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.215603916 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.215418805 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.216188445 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.214774773 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.215150242 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.214364654 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.215594953 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.215552179 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.215359326 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.215297952 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.214962939 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.216039084 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.220014261 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.223226483 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.215756748 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.215803505 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.215708656 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.216637083 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.216048856 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.216141799 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.215728039 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.216138912 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.217588559 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.216504022 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.217649609 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.216978126 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.217378166 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.217925054 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.216721242 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.215944812 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.217303267 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.21620101 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.21790839 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.218216498 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.216920518 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.216304698 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.216339075 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.217642223 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.217633914 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.218046024 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.218591357 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.216965177 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.218191373 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.216049384 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.217098649 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.217123298 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.217024935 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.217214647 seconds)
  done (took 88.72091997 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.217046522 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.215523818 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.214783292 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.213688239 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.214869621 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.218009516 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.215470261 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.21741445 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215488545 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.217577368 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.217274365 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.21593524 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215994304 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.21850869 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.217576177 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.216405782 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.218386149 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.215086577 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.217839206 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.218764782 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.21872378 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.21564631 seconds)
  done (took 27.921043474 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.217986875 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.21768746 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.216070359 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.218587382 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.215838395 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.21870418 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.219022877 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.218322951 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219070275 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.217661883 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216578249 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219134576 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.216118924 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216257671 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.217407172 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.216458453 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.219274341 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.216624447 seconds)
  done (took 23.072331358 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.217465955 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.217273307 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.219971182 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.216920928 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.218301216 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.221024283 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.218229141 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.219741184 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.219469877 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.217721121 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.220422448 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219957104 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.220122487 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217878941 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219347383 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.2189551 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.221007209 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.218451617 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.220872382 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.217559136 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.218451155 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.22154913 seconds)
  done (took 27.97824798 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.220369545 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.22138919 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.218680081 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.218054311 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.217451763 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.220890829 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.221290392 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.217701198 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.21998384 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.220797706 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.218308999 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.220922491 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.219747015 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.21864923 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.218577046 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.219277117 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.221405243 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.22026424 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.221451995 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.21826773 seconds)
  done (took 25.551841259 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.223248092 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.2238172 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.223848085 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.224789512 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.223455959 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.222734609 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.222972051 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.223087817 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.224933498 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.223454945 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.223364149 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.223559349 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.224309396 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.225053378 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.223569736 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.223901337 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.224422298 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.223821716 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.224372301 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.224596443 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.224465925 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.224208152 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.224403526 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.224293155 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.224332892 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.224802947 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.224309218 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.224538649 seconds)
  done (took 35.431577177 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.223661655 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.222841886 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.220300017 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.221426787 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.221031577 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.221607233 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.22153803 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.220483857 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.22399158 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.22066101 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.223817648 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.224008895 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.223794741 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.223560744 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.224514283 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.22324422 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.225210921 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.221088592 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.221848972 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.221946723 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.223555852 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.224208042 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.22455514 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.22234222 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222312115 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.223291696 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.223064517 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.222361749 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.224520656 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.223495351 seconds)
  done (took 37.844881706 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.242786816 seconds)
    (2/2) benchmarking "in"...
    done (took 1.24296612 seconds)
  done (took 3.647137542 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.221539257 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.22497549 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.22668358 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.222639458 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.222833832 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.225251406 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.224743059 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.222342756 seconds)
  done (took 10.952721547 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.226324856 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.22442387 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.224752759 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.225884341 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.225960785 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.22865094 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.236692023 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.241642372 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.230540105 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.228856571 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.234019473 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.235922643 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.232719817 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.228660277 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.228260975 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.229810652 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.225054239 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.227164368 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.226806268 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.226467115 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.227358516 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.232059415 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.231404177 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.2233841 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.230534165 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.242590664 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.236005977 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.225779199 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.230063978 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.235902619 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.2291807 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.224353819 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.228279776 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.22760108 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.227146133 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.228349475 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.240721616 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.246034466 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.238660452 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.229570957 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.22752057 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.225661306 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.2322525 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.233649296 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.232111515 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.228650121 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.227247423 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.225559415 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.230162414 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.233652024 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.233323953 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.229832514 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.225277912 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.237017319 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.231680822 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.239734641 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.246443372 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.234126857 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.240223995 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.243566107 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.246476624 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.238081683 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.23363927 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.229688179 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.241823688 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.254742707 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.241782297 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.242714676 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.226694748 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.229022644 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.241255191 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.247658956 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.241145231 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.229999801 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.23034689 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.229870134 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.233290653 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.229448453 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.241376805 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.252987607 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.229826654 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.230501912 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.242419824 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.254061467 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.231146949 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.231051896 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.230713993 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.230958609 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.234137973 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.24434204 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.247307956 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.230943018 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.232630518 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.232299217 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.236161261 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.230781931 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.230969977 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.234536262 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.228018524 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.229698779 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.231021177 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.236437125 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.242646816 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.231346495 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.231726846 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.242317853 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.231028449 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.233090922 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.245615056 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.23112944 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.231681018 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.235209539 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.241473489 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.228640221 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.237356369 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.242598372 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.232522048 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.235471207 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.231787613 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.232556532 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.244795723 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.26102657 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.232297056 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.232011265 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.239533195 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.243310806 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.232543947 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.238874943 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.231607193 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.229806043 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.230711094 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.237863122 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.233298326 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.235872628 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.232953346 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.238196049 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.230052671 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.233103759 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.232964346 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.236929361 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.237524441 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.237043326 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.237433828 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.239372625 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.233725804 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.237904417 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.244258083 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.237629278 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.237482257 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.237572751 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.230666668 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.234195496 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.238410055 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.234339404 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.237099144 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.23372252 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.234365088 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.234278266 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.234322657 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.234203348 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.233829479 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.236909111 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.239230765 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.234894834 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.242972343 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.235438768 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.231515511 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.233667685 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.233636189 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.237085352 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.234751248 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.236176009 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.240367612 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.242000511 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.234175825 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.235722199 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.241071282 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.235002132 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.234641232 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.234961581 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.240257216 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.245045367 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.236005433 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.246667 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.235972396 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.235412785 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.235575298 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.238052627 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.237887917 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.235391179 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.240766676 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.242466493 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.253212945 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.247601074 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.238859757 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.238923305 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.239466636 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.239686846 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.244464101 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.236796394 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.235719278 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.236432932 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.238398924 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.237264055 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.241803931 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.236919371 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.238768469 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.237582158 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.235721553 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.236530476 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.237398096 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.241755336 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.240992962 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.23439957 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.237191174 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.23742358 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.239553384 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.234318163 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.239259758 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.239104628 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.238818414 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.240083997 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.250411471 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.235126521 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.241460068 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.242217737 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.240792852 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.239289693 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.237486908 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.244241267 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.241035214 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.250545841 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.258117781 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.242172159 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.248477343 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.25763089 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.240035088 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.244990853 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.2378261 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.236759056 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.243613437 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.246006508 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.23841083 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.239206039 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.238717565 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.241139434 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.238076662 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.250382566 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.236460383 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.240204432 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.238358672 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.244577495 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.236186669 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.242681005 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.242504631 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.242957624 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.245167529 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.239444287 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.240002934 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.243839743 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.239153824 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.24051466 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.240803684 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.245142155 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.247361414 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.248973655 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.244045926 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.24561659 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.243102423 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.243684311 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.243100719 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.240548703 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.241881008 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.257740072 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.249136177 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.251836189 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.246616388 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.240021578 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.250519631 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.243744547 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.247275964 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.243109879 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.243178371 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.24402276 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.242818458 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.237779199 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.244904884 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.240729652 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.24423922 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.244811877 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.244978939 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.241165334 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.243114169 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.241432853 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.242230819 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.241056174 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.243973127 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.240980937 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.248331751 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.246820734 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.243711494 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.244569533 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.253453211 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.261597303 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.247400465 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.244897616 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.245075539 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.244165073 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.246176407 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.243877754 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.248426199 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.250026574 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.248064274 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.25496407 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.246414031 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.257513158 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.2430593 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.249160055 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.251188342 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.239740315 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.244275413 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.245572479 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.243656224 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.254942854 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.260326209 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.24530625 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.247328542 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.244029491 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.243731665 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.243160407 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.243663477 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.244319249 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.24375123 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.256642937 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.263767988 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.249930914 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.248780005 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.241192868 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.244532053 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.243154759 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.244894714 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.251604985 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.24460085 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.247513903 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.246398238 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.2471193 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.244375829 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.243851636 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.243731765 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.241271449 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.24478508 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.255559716 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.263578253 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.247877179 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.243760435 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.259304865 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.245269879 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.256846135 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.262425862 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.247007342 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.244952996 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.244131745 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.250584848 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.247844656 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.249545147 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.244424718 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.248982872 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.248726879 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.245966967 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.251615957 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.24825008 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.245580103 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.248532327 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.257803499 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.269225104 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.249739474 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.248863396 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.242157734 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.249884345 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.249635945 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.245914447 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.24716937 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.250310008 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.25910063 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.253478012 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.249075784 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.246176579 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.248943125 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.246686506 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.24616884 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.24641021 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.247051356 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.245711829 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.251332897 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.246949495 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.256298816 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.246912063 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.249654473 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.251824669 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.250131609 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.261541961 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.248191836 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.251136119 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.248799597 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.247155606 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.250291821 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.248806611 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.247310256 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.251031332 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.247795174 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.251657985 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.256907875 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.255616232 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.253946914 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.249006137 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.248075758 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.251554772 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.250951486 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.248776964 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.247758923 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.248734943 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.251324934 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.247889615 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.252805562 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.24930072 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.246870635 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.250660969 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.248392891 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.254212403 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.256750615 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.25190486 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.245936778 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.248669903 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.248705308 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.249921978 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.252402328 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.26234647 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.254037432 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.261290544 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.259360855 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.252565937 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.251924803 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.25425958 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.259606811 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.250568199 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.252010109 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.250076178 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.254804054 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.252683578 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.25544767 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.249726032 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.261757011 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.253703142 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.251813418 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.262541634 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.270401196 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.250128272 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.253272889 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.257506869 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.25329243 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.24772323 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.250612798 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.252272191 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.262124786 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.27243774 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.249907864 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.255612739 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.251550467 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.254817558 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.255217681 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.251175258 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.254891715 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.247697118 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.253928994 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.251844755 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.250097442 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.248320492 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.253177349 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.253684603 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.256345563 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.261033407 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.248554421 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.256710688 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.255805143 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.256355194 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.2539849 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.251577923 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.248462531 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.248816365 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.25474193 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.251232316 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.254957798 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.256887552 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.253596405 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.25464925 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.251890782 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.252000969 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.257420161 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.264127734 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.258324238 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.249120198 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.253691003 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.256284371 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.258443576 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.251458145 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.252410478 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.255428762 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.257519789 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.251817501 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.253547095 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.252638032 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.258496423 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.27344519 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.268813302 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.255346216 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.255202432 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.26167854 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.252369135 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.249610152 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.252101128 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.258350895 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.258461675 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.26048992 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.25343601 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.264203317 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.272186236 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.257569152 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.256631243 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.258993552 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.264702338 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.259830372 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.254607591 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.254583467 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.260516557 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.274332875 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.254042469 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.268042018 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.287627398 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.27392408 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.258609584 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.25454796 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.255854442 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.254952759 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.25974819 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.255740236 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.254188576 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.254702296 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.255413659 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.258067599 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.263600817 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.259246788 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.254402364 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.25467482 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.257619242 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.260639239 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.251938141 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.255654159 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.254599219 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.255451427 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.255592093 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.256257343 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.25890829 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.273763487 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.26846004 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.254997755 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.255884168 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.252226433 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.262901736 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.260912478 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.268546659 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.262520443 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.256319197 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.255778846 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.260875997 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.256714679 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.253807499 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.259254315 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.258118949 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.258895177 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.253729284 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.273914347 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.265367252 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.264910343 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.260396731 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.257182473 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.255851216 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.261831355 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.256210089 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.2569485 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.262770255 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.259447492 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.260671508 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.255946169 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.256502684 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.263028628 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.263982335 seconds)
  done (took 743.49058439 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.254511908 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.254651648 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.253788185 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.254373896 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.253763521 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.253818232 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.254040276 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.253538878 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.255390851 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.25508311 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.254964171 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.253822134 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.254672014 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.254716785 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.255665785 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.256961537 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.254900462 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.255253957 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.255018894 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.255984515 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.255985468 seconds)
  done (took 27.542527497 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.257155558 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.254609469 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.255904789 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.258943436 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.255808466 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.258198885 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.255352972 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.258611234 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.258710365 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.255819358 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.257953191 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.25921913 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.256088638 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.255785915 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.257028124 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.259193699 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.259506751 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.25650118 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.257955058 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.256910799 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.259808107 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.257000456 seconds)
  done (took 28.856905315 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.259945297 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.260574576 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.261562303 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.257172167 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.260069365 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.257485285 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.259451199 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.259711692 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.259852082 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.264376215 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.261794167 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.264399489 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.269044714 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.265016242 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.26491315 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.259770612 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.404243989 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.260685522 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.261590461 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.26148458 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.25675305 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.271205211 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.257832348 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.256969349 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.261683617 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.260962812 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.260437081 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.262226519 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.261405734 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.264979803 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.264648803 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.260605402 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.262643297 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.265874731 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.265695936 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.264788499 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.265000471 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.261356196 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.258482617 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.261641118 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.274563267 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.281949224 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.263497457 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.272079724 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.261938838 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.260861356 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.267337472 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.269794398 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.259586738 seconds)
  done (took 63.226474714 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.26136263 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.262498398 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.259189578 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.261210552 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.26172919 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.261854794 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.261693501 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.262425972 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.259842349 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.259681409 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.262746426 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.259798012 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.2605444 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.262521461 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.262526519 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.259993865 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.260101096 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.260108633 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.259939105 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.25998589 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.260520967 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.26341989 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.263924526 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.260932176 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.263508861 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.260826874 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.260385831 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.262729819 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.260732884 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.260879879 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.263114385 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.262857902 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.264708968 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.261025021 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.260025814 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.263880767 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.263726652 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.261665942 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.263997958 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.26048171 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.263779506 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.263670696 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.264104786 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.264868112 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.261671365 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.261550884 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.261121963 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.261452671 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.262164923 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.264113878 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.263033599 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.262386009 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.264392951 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.261016407 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.264145737 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.264182854 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.262641868 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.262412931 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.263982679 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.262172055 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.262772254 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.265144499 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.263121575 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.265481013 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.263823111 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.261983141 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.262032477 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.265450526 seconds)
  done (took 87.03105175 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.26593367 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.266068743 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.265126316 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.265384268 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.266271361 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.265556844 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.265771547 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.265880951 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.265742137 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.265515397 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.266007214 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.265484296 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.266213865 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.265510489 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.266441012 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.266006826 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.266063555 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.26661921 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.266807873 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.266053961 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.266095816 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.267101315 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.267158367 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.266925824 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.266747131 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.26703068 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.266529751 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.267609322 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.267646619 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.267164701 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.268641181 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.267272512 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.266772232 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.268306377 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.268059747 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.266989088 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.26808138 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.268095117 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.267085088 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.267169145 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.267323351 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.267260219 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.267216223 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.266623132 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.267026986 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.268535235 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.26772994 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.268083038 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.267517888 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.268453996 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.268139357 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.268403491 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.267699253 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.267626763 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.26833426 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.267890763 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.268536151 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.269032964 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.26808365 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.268887696 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.268677999 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.268389813 seconds)
  done (took 79.763453068 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.268375408 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.268626586 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.265977986 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.264742251 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.268529983 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.265446863 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.269290786 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.269287779 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.268701096 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.268931347 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.268666053 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.266557876 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.267705991 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.269548066 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.266878688 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.267131992 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.266754448 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.266207475 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.269278139 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.266802864 seconds)
  done (took 26.557165263 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.266698562 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.270337714 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.266369028 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.267226725 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.269501224 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.266929019 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.269190283 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.270558755 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.26796471 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.270463052 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.27067433 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.270844025 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.268356514 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.268562548 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.269505276 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.268394495 seconds)
  done (took 21.507374105 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.267112171 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.271208302 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.270760072 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.271187306 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.267638297 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.268042484 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.270874717 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.268848408 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.267878008 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.271011612 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.271147438 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.270597303 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.271277485 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.271364434 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.268926032 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.272170449 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.268457484 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.269550792 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.271376862 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.271690027 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.268463238 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.269671593 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.27149662 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.271327961 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.269438173 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.270222918 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.269063659 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.268673176 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.269083585 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.27206419 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.268393168 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.270031587 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.268906323 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.269165002 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.272429104 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.269322087 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.271881666 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.272516495 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.271782106 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.272296585 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.272045679 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.270021034 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.272089997 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.271753215 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.26973108 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.273301906 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.270254029 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.27096076 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.27045185 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.26949771 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.27232901 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.273393181 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.272594446 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.273324513 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.273325949 seconds)
  done (took 71.089926379 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.273083883 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.272975407 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.270346613 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.273052148 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.27278247 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.270807858 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.273556455 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.270735839 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.270861488 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.274476188 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.272022062 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.273936975 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.270236088 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.273551475 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.271265106 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.27338712 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.272024938 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.270930662 seconds)
  done (took 24.108616923 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.272329422 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.27170192 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.275617285 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.271582123 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.270955436 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.274757059 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.272247271 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.274327421 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.273950856 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.272402193 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.27200154 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.274843725 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.274425159 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.274651838 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.273090581 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.272045279 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.275197025 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.274733757 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.272675569 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.272302491 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.275407982 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.274826567 seconds)
  done (took 29.225989482 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.277974978 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.276256103 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.295992935 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.322445909 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.309206113 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.276196731 seconds)
  done (took 8.968099912 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274010509 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276271089 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.273126926 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276409189 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275401543 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273669166 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272714861 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273816809 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275362426 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274041431 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27307335 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276360535 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276040636 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272978721 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276603435 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276335363 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27314974 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27396382 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274308184 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276008643 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273638092 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276273616 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274417735 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274095382 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275092415 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273918522 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276833207 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275385357 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27420595 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276612048 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27693173 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275164256 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276565767 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275537491 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277568126 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277611188 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273771136 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277502625 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277092414 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275262509 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.278024117 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278065284 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277333257 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275560072 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277344803 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275200709 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275421817 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275787876 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276041288 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279259215 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277503858 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275644772 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278323375 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278282544 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278630806 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278759881 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277086356 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27639682 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279425574 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276995692 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276647791 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279459572 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275894438 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276920202 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278591872 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276235589 seconds)
  done (took 85.428712419 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277299822 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.277046782 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276864957 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278910801 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277031854 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275519699 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277181129 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276673653 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276836099 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276421029 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280075693 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277459366 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276434263 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27690364 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276987749 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277269903 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276936906 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277378763 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277475262 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280505698 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276843748 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27712502 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277646132 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277950741 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278068284 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279881676 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278400165 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27697573 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27762776 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277622335 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278236767 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277645448 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277701371 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.278350759 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278241211 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277905857 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277814064 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278199253 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278319049 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28210164 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278213598 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280692323 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27828508 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278571848 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278885729 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279325039 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278667533 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278530392 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279159901 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278435268 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278944368 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278772496 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279338471 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27796082 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27829715 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278837086 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279122288 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279146833 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279204051 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281985961 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280128632 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280104167 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282835272 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279770748 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279725012 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280769689 seconds)
  done (took 85.58962454 seconds)
done (took 1732.385474661 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.291690156 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.355052679 seconds)
  done (took 13.862689654 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.44538344 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.40005621 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.282829109 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.313789356 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.28381524 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.305380217 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.291355289 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.283079529 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.28370439 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.283154377 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.283606729 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.474020726 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.279418616 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.283929587 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.283734437 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.377097183 seconds)
  done (took 42.3780441 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.311711044 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.290408695 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.401715642 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.308210944 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.310973608 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.471675045 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.341801462 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.28828004 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.457557631 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.328826172 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.849143835 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.311966353 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.288053952 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.391373636 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.306241377 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.471975886 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.537067688 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.85249701 seconds)
  done (took 29.737285057 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.737109697 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.312037076 seconds)
  done (took 9.267317559 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.302132049 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.325558146 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.300891925 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.309365341 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.307990925 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.320162745 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.296225638 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.320045249 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.315985808 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.317220322 seconds)
  done (took 64.341693961 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.308670345 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.289337554 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.290367313 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.28797817 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.280162927 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.280280569 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.288123841 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.283053255 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.951137917 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.418210339 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.305504564 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.296214936 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.289961369 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.290321307 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.283366094 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.32674938 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.417650157 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.284050015 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.284174505 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.296254094 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.290697108 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.42783851 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.331512049 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.285677392 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.416124437 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.967553158 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.29613626 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.296595931 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.407522622 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.286117365 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.289404667 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.290831273 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.292489511 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.853108138 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.804627943 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.298918075 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.314440144 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.299558636 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.285817703 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.479835231 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.291905006 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.297474378 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.283837748 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.76981191 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.45275154 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.402317977 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.555055753 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.292112832 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.292901718 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.353935691 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.291776853 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.292322757 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.319260548 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.063677918 seconds)
  done (took 109.147358172 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.303753396 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.773801858 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.454112289 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.308565861 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.086840988 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.936242559 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.286793872 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.579159894 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.294778638 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.285792919 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.620089436 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.798183561 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.292323638 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.295091106 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.413145596 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.295552848 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.286100656 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.078370782 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.28976857 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.287382174 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.703046912 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.30346302 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.286018266 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.582999799 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.325539799 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.765963545 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.843711169 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.776822696 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.290563141 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.286451946 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.762786692 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.292689102 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.347881081 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.285294316 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.561192272 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.657979353 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.641108114 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.29453637 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.288287003 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.288480444 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.323488759 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.763217441 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.650845155 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.2889689 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.287190102 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.769414862 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.290589186 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.294655752 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.288199607 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.48724966 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.234506095 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.288772151 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.751339683 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.286940866 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.663855753 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.363594136 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.346216856 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.796960566 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.290460167 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.402464098 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.292073964 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.288607516 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.292283071 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.289473688 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.289226899 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.654126111 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.663718491 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.287935894 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.654879684 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.75993383 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.289318976 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.817633554 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.184879272 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.305437739 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.328218748 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.293054965 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.870131478 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.796982471 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.292370703 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.288548131 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.640778802 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.294371795 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.609699441 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.303355576 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.304016194 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.713545524 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.312585664 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.308901312 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.288748268 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.318580604 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.919178212 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.304916326 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.557020028 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.332710396 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.288270372 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.289555043 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.323659363 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.288920895 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.289539266 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.292251119 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.820701895 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.2926839 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.586111542 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.310855891 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.293206132 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.289552052 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.291705425 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.29099022 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.506902751 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.759664878 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.291475479 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.290381381 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.296066864 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.293805085 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.574750205 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.29212286 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.613675971 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.292685488 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.289979516 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.295671072 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.968549037 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.329033708 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.290944527 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.307934828 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.143101576 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.502425377 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.309237133 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.292755945 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.290592026 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.309051337 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.663124691 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.292737592 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.339650265 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.291104209 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.001649858 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.319808618 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.326654908 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.897948973 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.297474081 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.279443359 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.318587939 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.292602181 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.59803655 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.56755168 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.595269903 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.292509055 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.291961186 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.986509866 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.33515392 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.426468179 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.311312949 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.29413581 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.492081357 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.560155904 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.292005081 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.876005718 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.292000201 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.504964109 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.292754614 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.628343652 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.792607379 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.295264574 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.294241994 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.001199059 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.974526115 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.910755263 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.294456544 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.627115747 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.307260214 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.750221281 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.29315248 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.295082584 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.745030713 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.293334509 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.29694891 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.29305955 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.294484728 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.365245796 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.468916502 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.684202125 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.293196254 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.773975692 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.316081463 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.294431663 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.297840722 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.295120329 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.648560334 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.343865437 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.293898038 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.341427656 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.295379169 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.295762253 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.785640675 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.24175051 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.295907211 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.448701786 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.932614698 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.299329231 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.295095716 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.913159281 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.56554706 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.825836383 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.321734149 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.622321686 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.302623373 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.336250276 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.02567478 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.309122099 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.787816404 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.301067896 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.296275699 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.90019271 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.299774931 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.346468345 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.294501852 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.297707853 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.833305797 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.298609895 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.299693569 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.730788304 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.299686604 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.543919003 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.295955884 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.29904126 seconds)
  done (took 1102.658894856 seconds)
done (took 1372.609924241 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.295775621 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.298665403 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.282773125 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.299800755 seconds)
  done (took 26.410679024 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.302009892 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.30831321 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.301392474 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.302557541 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.303127145 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.302156906 seconds)
  done (took 9.056500039 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.395721903 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.301116027 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.300432032 seconds)
  done (took 19.232596907 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.527610271 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.578067783 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.681683291 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.51287351 seconds)
  done (took 10.537505237 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.301671116 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.302436241 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.302016076 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.303583533 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.303033018 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.304847352 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.30305142 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.303536941 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.304426285 seconds)
  done (took 12.965117618 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.333884182 seconds)
done (took 84.770011713 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.689342517 seconds)
    (2/309) benchmarking ("sort", Int8, false)...
    done (took 4.369873445 seconds)
    (3/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.526658834 seconds)
    (4/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.652671982 seconds)
    (5/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.482981067 seconds)
    (6/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.299370946 seconds)
    (7/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.386184147 seconds)
    (8/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.322067934 seconds)
    (9/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.924990155 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.578233682 seconds)
    (11/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.313821202 seconds)
    (12/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.29160023 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.340251264 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.690373048 seconds)
    (15/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.460194834 seconds)
    (16/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.723156201 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.321869469 seconds)
    (18/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.36280819 seconds)
    (19/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.677272387 seconds)
    (20/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.299296765 seconds)
    (21/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.669090358 seconds)
    (22/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.325713491 seconds)
    (23/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.281113399 seconds)
    (24/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.345979026 seconds)
    (25/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.300247763 seconds)
    (26/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.746707329 seconds)
    (27/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.66834197 seconds)
    (28/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.225120945 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.418010915 seconds)
    (30/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.298650781 seconds)
    (31/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.281236694 seconds)
    (32/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.317650538 seconds)
    (33/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.511158444 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.186890612 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.402363311 seconds)
    (36/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.774984829 seconds)
    (37/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.322450027 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.701311931 seconds)
    (39/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.33906987 seconds)
    (40/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.676989697 seconds)
    (41/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.306748218 seconds)
    (42/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.08468784 seconds)
    (43/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.486289714 seconds)
    (44/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.380100028 seconds)
    (45/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.47088553 seconds)
    (46/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.320209841 seconds)
    (47/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.306452451 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.730023421 seconds)
    (49/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.508392419 seconds)
    (50/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.511723553 seconds)
    (51/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.399707668 seconds)
    (52/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.398830642 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.409990164 seconds)
    (54/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.168885218 seconds)
    (55/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.315801062 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.557722397 seconds)
    (57/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.307383704 seconds)
    (58/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.386216488 seconds)
    (59/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.528707054 seconds)
    (60/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.283444066 seconds)
    (61/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.383925236 seconds)
    (62/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.487837671 seconds)
    (63/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.928649723 seconds)
    (64/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.173963686 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.289750393 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.374029857 seconds)
    (67/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.362912928 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.3548041 seconds)
    (69/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.41038965 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.877162058 seconds)
    (71/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.303874366 seconds)
    (72/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.833934715 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.739436075 seconds)
    (74/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.305896155 seconds)
    (75/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.909973677 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.89083934 seconds)
    (77/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.901381703 seconds)
    (78/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.349274562 seconds)
    (79/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.628679056 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.381816818 seconds)
    (81/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.066741137 seconds)
    (82/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.314931 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.422933925 seconds)
    (84/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.068666017 seconds)
    (85/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.363354182 seconds)
    (86/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.634395591 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.871559637 seconds)
    (88/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.796710963 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.373022135 seconds)
    (90/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.315145509 seconds)
    (91/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.317063808 seconds)
    (92/309) benchmarking ("sort", Int64, false)...
    done (took 5.502706435 seconds)
    (93/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.619606812 seconds)
    (94/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.390469292 seconds)
    (95/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.75981586 seconds)
    (96/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.70834395 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.923359715 seconds)
    (98/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.970977868 seconds)
    (99/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.329518786 seconds)
    (100/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.801752349 seconds)
    (101/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.302838526 seconds)
    (102/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.386569964 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.01145182 seconds)
    (104/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.316906828 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.322332878 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.402157752 seconds)
    (107/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.327717871 seconds)
    (108/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.291069174 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.993580755 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.499819296 seconds)
    (111/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.560441319 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.318032068 seconds)
    (113/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.377278292 seconds)
    (114/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.35734784 seconds)
    (115/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.183422538 seconds)
    (116/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.886759924 seconds)
    (117/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.31555923 seconds)
    (118/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.693220969 seconds)
    (119/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.330641125 seconds)
    (120/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.387022773 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.304751294 seconds)
    (122/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.685112143 seconds)
    (123/309) benchmarking ("sort", Bool, false)...
    done (took 1.819502677 seconds)
    (124/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.32441913 seconds)
    (125/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.366539368 seconds)
    (126/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.576547546 seconds)
    (127/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.901562682 seconds)
    (128/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.067348503 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.989559439 seconds)
    (130/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.604106777 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.089118744 seconds)
    (132/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.566228115 seconds)
    (133/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.287770598 seconds)
    (134/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.168208839 seconds)
    (135/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.302339002 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.963336909 seconds)
    (137/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.14485756 seconds)
    (138/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.304649801 seconds)
    (139/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.197695604 seconds)
    (140/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.406854222 seconds)
    (141/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.3057582 seconds)
    (142/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.476168419 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.749563979 seconds)
    (144/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.910343177 seconds)
    (145/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.919729524 seconds)
    (146/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.311828239 seconds)
    (147/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.31075554 seconds)
    (148/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.613623976 seconds)
    (149/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.408595158 seconds)
    (150/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.714982729 seconds)
    (151/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.330012051 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.079726475 seconds)
    (153/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.329364631 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.51908141 seconds)
    (155/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.867138622 seconds)
    (156/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.174492667 seconds)
    (157/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.925507288 seconds)
    (158/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.42487937 seconds)
    (159/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.081385668 seconds)
    (160/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.949679906 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.252289971 seconds)
    (162/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.327380052 seconds)
    (163/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.329279633 seconds)
    (164/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.415120924 seconds)
    (165/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.668140163 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.290169704 seconds)
    (167/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.382886722 seconds)
    (168/309) benchmarking ("sort", Float32, false)...
    done (took 5.334703639 seconds)
    (169/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.308116618 seconds)
    (170/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.310566431 seconds)
    (171/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.446946687 seconds)
    (172/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.652173342 seconds)
    (173/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.910776973 seconds)
    (174/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.326058913 seconds)
    (175/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.795176556 seconds)
    (176/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.296825171 seconds)
    (177/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.337366514 seconds)
    (178/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.730295613 seconds)
    (179/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.166145109 seconds)
    (180/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.308943124 seconds)
    (181/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.444688422 seconds)
    (182/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.617509107 seconds)
    (183/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.332786714 seconds)
    (184/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.617635573 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.406216467 seconds)
    (186/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.626848915 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.503282685 seconds)
    (188/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.37121842 seconds)
    (189/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.34849466 seconds)
    (190/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.310773332 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.292198235 seconds)
    (192/309) benchmarking ("sort", BigInt, false)...
    done (took 6.329822228 seconds)
    (193/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.931449468 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.24298592 seconds)
    (195/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.365148671 seconds)
    (196/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.614515974 seconds)
    (197/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.365157137 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.483692785 seconds)
    (199/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.377127124 seconds)
    (200/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.309012272 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.300264189 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.830388241 seconds)
    (203/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.990644736 seconds)
    (204/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.471722047 seconds)
    (205/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.377062723 seconds)
    (206/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.291899198 seconds)
    (207/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.23380256 seconds)
    (208/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.160069498 seconds)
    (209/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.947455316 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.527832117 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.843456693 seconds)
    (212/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.330864385 seconds)
    (213/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.621454223 seconds)
    (214/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.123011167 seconds)
    (215/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.323778954 seconds)
    (216/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.811711544 seconds)
    (217/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.430123493 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.408531647 seconds)
    (219/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.392502767 seconds)
    (220/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.310211897 seconds)
    (221/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.329303466 seconds)
    (222/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.724562644 seconds)
    (223/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.732062289 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.357971237 seconds)
    (225/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.928818523 seconds)
    (226/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.348851473 seconds)
    (227/309) benchmarking ("sort", Float64, false)...
    done (took 5.590640903 seconds)
    (228/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.317391397 seconds)
    (229/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.348355231 seconds)
    (230/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.657551644 seconds)
    (231/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.313220457 seconds)
    (232/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.691617633 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.311422106 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.33165425 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.955493513 seconds)
    (236/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.312213456 seconds)
    (237/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.4175375 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.338641704 seconds)
    (239/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.299079038 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.177958986 seconds)
    (241/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.453968444 seconds)
    (242/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.748279919 seconds)
    (243/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.763732543 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.173039076 seconds)
    (245/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.792519327 seconds)
    (246/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.409855943 seconds)
    (247/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.191349384 seconds)
    (248/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.050307127 seconds)
    (249/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.408711127 seconds)
    (250/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.326311153 seconds)
    (251/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.530678368 seconds)
    (252/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.417947253 seconds)
    (253/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.308778697 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.358417514 seconds)
    (255/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.746898414 seconds)
    (256/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.088591538 seconds)
    (257/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.325068461 seconds)
    (258/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.015202076 seconds)
    (259/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.339469859 seconds)
    (260/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.337418409 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.360356008 seconds)
    (262/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.692799074 seconds)
    (263/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.932310328 seconds)
    (264/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.947739028 seconds)
    (265/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.78315819 seconds)
    (266/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.340764268 seconds)
    (267/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.622562573 seconds)
    (268/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.85503863 seconds)
    (269/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.338821232 seconds)
    (270/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.045315156 seconds)
    (271/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.447076191 seconds)
    (272/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.625623695 seconds)
    (273/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.594814998 seconds)
    (274/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.377667321 seconds)
    (275/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.596473918 seconds)
    (276/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.397336725 seconds)
    (277/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.394337112 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.671066114 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.917373002 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.424881773 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.677272307 seconds)
    (282/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.333499712 seconds)
    (283/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.18503146 seconds)
    (284/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.337415895 seconds)
    (285/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.396395336 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.200748668 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.501509834 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.900583276 seconds)
    (289/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.214804847 seconds)
    (290/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.8436202 seconds)
    (291/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.362246376 seconds)
    (292/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.954180644 seconds)
    (293/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.511682677 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.372790216 seconds)
    (295/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.315893721 seconds)
    (296/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.160939851 seconds)
    (297/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.160985557 seconds)
    (298/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.303931479 seconds)
    (299/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.692336581 seconds)
    (300/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.098499115 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.724856708 seconds)
    (302/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.659390367 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.33657402 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.25079109 seconds)
    (305/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.324697644 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.475911896 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.722444528 seconds)
    (308/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.432110611 seconds)
    (309/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.316309279 seconds)
  done (took 921.419025714 seconds)
done (took 922.655892854 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.346467219 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.339775904 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.322955882 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.345395488 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.436218724 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.353813455 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.334330977 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.326815244 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.371426074 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.372778246 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.322156853 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.351693737 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.325435067 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.324167234 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.324416448 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.339716741 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.348438045 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.323247531 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.340449235 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.334771272 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.340145992 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.322625277 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.375406124 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.352892209 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.329073426 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.327272883 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.328320566 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.34386439 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.435493775 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.327720664 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.327833459 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.336764524 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.34892796 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.324452582 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.320825126 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.344116548 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.337339165 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.336351401 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.330030642 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.358754164 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.760274774 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.324717675 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.326486614 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.328018109 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.32641191 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.331229327 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.327916459 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.332961484 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.338624437 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.340555419 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.755221509 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.342331135 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.329477015 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.327261979 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.338356118 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.325776244 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.330936964 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.343320496 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.346894686 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.341654983 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.345587225 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.333133436 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.329584594 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.345094494 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.334393779 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.794080947 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.323902831 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.332519399 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.766997717 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.332998395 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.795227415 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.335130967 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.329583338 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.3419183 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.359270342 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.356091224 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.323615407 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.327720114 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.334382601 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.326796104 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.338082248 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.339506178 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.333338833 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.328400449 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.341801303 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.356879116 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.339053844 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.329636218 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.338043828 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.348443517 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.335060696 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.340273142 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.331441713 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.324006227 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.339011948 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.333567769 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.331740538 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.3314375 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.334979541 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.339916151 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.766880654 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.345022958 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.325696672 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.326735617 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.328896161 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.343958617 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.769424206 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.330005926 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.350773625 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.377666138 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.331027131 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.350024075 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.331305674 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.345330077 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.33868088 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.333368727 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.326201279 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.351180244 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.766433966 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.345127293 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.331950176 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.328412463 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.346414367 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.33176253 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.326486265 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.360070127 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.332519782 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.344474031 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.450458498 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.340978397 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.361648151 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.328992982 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.333451862 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.35986494 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.346436146 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.361721936 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.334028226 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.347543262 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.346373631 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.327908439 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.342533693 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.341779632 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.333224023 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.338565957 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.325463101 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.364988733 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.343988888 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.342919377 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.352668787 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.451862206 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.328929457 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.352962523 seconds)
done (took 224.561214624 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.395181839 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.324633499 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.443407981 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.330733256 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.431973983 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.432306155 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.326750736 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.328714551 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.328556186 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.708940183 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.328480795 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.337086685 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.324640915 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.329149303 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.415372466 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.330896834 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.328059824 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.674027013 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.331501534 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.403763874 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.330758351 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.328544977 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.331464962 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.712347279 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.332954715 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.330342585 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.403921202 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.330975376 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.71708924 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.326588628 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.326944015 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.678426499 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.422741454 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.34843539 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.341897215 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.338063134 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.433895207 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.349008147 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.414724343 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.414545633 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.446216651 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.370964811 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.335330789 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.33561372 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.334330706 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.333628501 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.329314477 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.3592426 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.332594422 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.330558526 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.674846519 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.34236525 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.339137188 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.3309484 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.330703804 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.353965664 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.331613504 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.334209665 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.42494931 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.332971841 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.399018283 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.71592071 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.711913347 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.33370414 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.334872483 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.330285345 seconds)
  done (took 148.462514029 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.402820303 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.408791517 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.451237701 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.337737638 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.38424555 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.455434511 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.340221046 seconds)
  done (took 11.046096498 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.34193693 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.333746049 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.386330973 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.385863432 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.333416857 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.48426125 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.333556129 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.348100554 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.33171254 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.390628987 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.335897464 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.334892753 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.341191341 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.338408675 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.38554865 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.347933772 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.452754203 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.337765391 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.335315088 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.488639683 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.331665224 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.341556431 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.388965074 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.34896856 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.336035196 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.343653813 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.904662282 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.335406932 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.332619869 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.33510548 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.333058697 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.376987815 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.336197724 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.33516582 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.333519714 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.454747752 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.335497868 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.332951766 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.335806298 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.334902399 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.335491827 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.335482799 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.336849304 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.334122547 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.336055433 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.361354215 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.33639133 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.336959278 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.336287478 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.336646541 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.390878079 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.336467336 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.334574336 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.334336611 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.394396462 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.342693269 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.337264633 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.333923033 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.336542043 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.334104896 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.491620386 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.388199998 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.336643861 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.388095753 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.337226056 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.33701914 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.336613988 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.336332953 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.393995766 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.336586179 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.387734809 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.335459862 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.493931786 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.363497433 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.337995894 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.34343291 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.342735439 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.33799835 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.338801474 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.346481139 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.334720234 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.341735557 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.345512859 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.334827503 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.334167262 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.442357869 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.454833184 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.335420149 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.354403212 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.34772611 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.335079117 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.394307327 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.338567303 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.335886717 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.394929608 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.456762479 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.394843572 seconds)
  done (took 153.593739286 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.345916389 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.349741926 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.342339086 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.356471277 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.342775135 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.342018832 seconds)
  done (took 9.351632575 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.34503679 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.340595166 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.339664583 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.339639363 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.339547631 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.340420154 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.340133683 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.344710769 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.344791073 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.340554188 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.339907763 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.342387794 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.340710326 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.340643799 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.340125102 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.339748448 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.34011414 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.338145579 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.340014597 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.341461488 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.437975957 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.341117273 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.341349717 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.344912919 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.344669072 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.341631081 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.350783313 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.34047393 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.341077515 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.349444329 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.343866035 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.341001307 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.345316171 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.350990047 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.345600111 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.346257043 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.344466239 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.342232957 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.339358919 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.34161295 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.343681286 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.342161702 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.341705679 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.344379422 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.345655484 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.349564087 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.347341289 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.353203703 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.341703538 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.343197577 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.343945318 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.341962525 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.342866201 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.344091457 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.350404382 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.349625455 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.347328196 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.343317909 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.343042286 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.347850777 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.344064598 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.342814143 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.347474951 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.347633629 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.350948305 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.343768863 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.347775425 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.348881636 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.344337902 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.343949409 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.344822174 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.341270276 seconds)
  done (took 99.122233069 seconds)
done (took 422.838477426 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.354433983 seconds)
  done (took 7.631423012 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.442456489 seconds)
  done (took 7.723383466 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.505987907 seconds)
  done (took 21.787665347 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.389615532 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.411830636 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.340784521 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.340501966 seconds)
  done (took 26.76022801 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.879917581 seconds)
  done (took 8.156955436 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.336018663 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.345187105 seconds)
  done (took 13.960172164 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.431509692 seconds)
  done (took 7.708314682 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.81737362 seconds)
  done (took 8.099261033 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.36383284 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.371462906 seconds)
  done (took 14.280947285 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.322475742 seconds)
  done (took 7.599940314 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.636182438 seconds)
  done (took 8.91423001 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.351416186 seconds)
  done (took 7.629654749 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.397481959 seconds)
  done (took 7.673929694 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.41085597 seconds)
  done (took 9.688137888 seconds)
done (took 158.891391541 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.340022612 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.342367899 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.343517137 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.344377284 seconds)
  done (took 26.647368815 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.37934661 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.377545242 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.380540578 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.388639017 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.381367822 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.378491027 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.371889067 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.371016317 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.389486067 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.381534941 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.380738671 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.380528988 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.380125347 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.371371036 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.381374732 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.381010857 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.389667364 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.37970735 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.371408672 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.382020104 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.347470111 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.390308875 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.384015572 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.34716626 seconds)
  done (took 34.347593265 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.545289555 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.419649099 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.501810499 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.400962736 seconds)
  done (took 7.146056674 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.397548921 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.39959802 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.411160102 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.449949087 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.477396757 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.409761905 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.369314084 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.36787398 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.352279873 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.400252422 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.474737508 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.415665468 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.484615016 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.347144194 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.532264897 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.34700275 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.346872121 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.398447341 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.449834977 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.464599071 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.347533421 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.398541086 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.403663 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.416895876 seconds)
  done (took 35.141864762 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.345475343 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.354358602 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.352021249 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.34705224 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.346933378 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.347044462 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.352731651 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.348093176 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.36781216 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.348095675 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.3465579 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.346270072 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.345802586 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.34673683 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.346562653 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.360402744 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.361026156 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.347061734 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.351148651 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.353430285 seconds)
  done (took 28.295598255 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.345582296 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.197912412 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.695244102 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.59943965 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.343606586 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.347850477 seconds)
  done (took 27.811386165 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.424113022 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.553087467 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.351458369 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.721924228 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.798795024 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.352626549 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.351874601 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.590329685 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.912294751 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.939130805 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.410364858 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.419980462 seconds)
  done (took 20.110373834 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.344418823 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.348455048 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.350907397 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.364457234 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.408783416 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.356499976 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.35824699 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.345021042 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.412832119 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.413002923 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.354975473 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.410944095 seconds)
  done (took 37.750856101 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431557481 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.393367377 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.433854251 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.192373523 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.729691761 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.555954448 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.231371388 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.795416595 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.352749666 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.618069966 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359245456 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.434214436 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.600193108 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356478017 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.347589847 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.39329095 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.572147705 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.857247845 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.347059214 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.449841644 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372871926 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.358233672 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.643469365 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.375985415 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.558427858 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.4824894 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.605775348 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.345630226 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.638303168 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.359730803 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.356360891 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.345248657 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.619447492 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.04819266 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.440746786 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.356202927 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.195721247 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.067442231 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.343898551 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.539980823 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.359928095 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.348389 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.356375008 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.346720897 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.281053817 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.347904215 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.812256524 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.354583178 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.057841111 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.347124031 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.357589678 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441155261 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.350601096 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.164100056 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.487093241 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.347806387 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.344599258 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.356886394 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920628976 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.999116867 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.350718419 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.286051536 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.505333092 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.545471834 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980890469 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.450157478 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.350621943 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.351241024 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.282616041 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.530971472 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.36756582 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485729778 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.368961724 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.010765626 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.077891016 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.350212844 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.278521266 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92131713 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.367166088 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.28519842 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.576644048 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.348853297 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.287112106 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.294391037 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.283397142 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.112518027 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.360448458 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.801477072 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.361929229 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.794353523 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.363007221 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369582667 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371675484 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.573774276 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.232033522 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.348841764 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.364634325 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487498834 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370920436 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.798189423 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.287903325 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.352839252 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.606755694 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.561099416 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.364180327 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.41605885 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.566689247 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.354757 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.369138585 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.351699614 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.362614939 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.947626816 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.362535133 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.01226078 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370010922 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.350441577 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.152297791 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359895217 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.454398263 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.35000351 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.60783406 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.183609882 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355872095 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432800892 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.353087682 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.352791707 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.573659841 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.870457335 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.351702068 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.353030863 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.357076778 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.365756956 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.352066187 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.308530734 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.361679757 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359251209 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.355386989 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.576191763 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.351382256 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.62956931 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.285052114 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489457586 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.453837746 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.576864985 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.574416446 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.351822035 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.610000011 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36243107 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.357321396 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.36544756 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371667457 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.451002861 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374115969 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.361990299 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.609659736 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.356107079 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.357019529 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.593932222 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.825698479 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.354629508 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.357470457 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.261581247 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.952080213 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324280873 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.352764995 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.247396011 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.367515879 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.417359093 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.357918319 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.363256429 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.26648788 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.324896284 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.359685192 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.351047192 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.578039979 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.364566557 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.47043418 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.437321439 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.563832204 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.956917889 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.365775399 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.288015461 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.064404065 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.046124189 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.352847526 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.289765811 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.354392337 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363579515 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.365218783 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.678002171 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.961095188 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.358696315 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.472020753 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.36276418 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.365062432 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.360525345 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.354754727 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.236603743 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.024544572 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.37434735 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.369368962 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.497194759 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.368606998 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.288986406 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.358030383 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.359193004 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.354571403 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.353848053 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388339603 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.479325335 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.848066573 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.614673273 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.054190086 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.369935612 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.583805069 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.389196245 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.359661281 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.369170091 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37357313 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.368512805 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366008873 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.366924803 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.58104391 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.028203562 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928147698 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.123355163 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914632938 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.37869999 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.368747475 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.358755666 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.812949735 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.294822491 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.915270407 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.554877739 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.809737559 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.314762945 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.56904239 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.63693159 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.154536439 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.367424082 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.585573398 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381680183 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.361374546 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.371213428 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.569130647 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391150173 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.361591125 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.287827615 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.643163779 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.598870608 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.369708001 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.440598066 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.810893815 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.368332072 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.361910114 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.35998488 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.804002653 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.5439067 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.071649873 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.537272333 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.369722645 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.360180701 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.851188684 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.367914746 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.584149188 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998936002 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.374242504 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.571696826 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.300697204 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.368272943 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.369231665 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.359068143 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.738134889 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.364451284 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.617995619 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.37035213 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.295723045 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.361116087 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91287083 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.21517062 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.365997797 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359647105 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.162659502 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.363439048 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.658605851 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.372648217 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.224863656 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365398095 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.293311663 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.293861085 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.052330255 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.364354573 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328114896 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890584507 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.476043522 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.44866247 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.382673279 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.210789636 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.615714493 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.374839788 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.963512967 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.587380942 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.315145223 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386216262 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.460794151 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.363061189 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.349518954 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.359985999 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.597215132 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.265062118 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.586827973 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.467962779 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.268641815 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.362675301 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.576378943 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.361172821 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.367697795 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.623751407 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.074797147 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.36219411 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.094299631 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386711477 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.364004163 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.285082741 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.519225734 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.371762816 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.442237864 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.373797131 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.372284883 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.37184077 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.545741595 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379849744 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.366477727 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.376340048 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455614403 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.061920344 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.274077112 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.368225049 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.975161402 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.12143702 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.978463808 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.377700485 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.363436545 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36604831 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.297127782 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.511037305 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.590099613 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635956318 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485414471 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.579388144 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384447562 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.364907871 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.376855024 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.57786263 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.637946055 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.25811331 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381421398 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.378749363 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.363412862 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.373784379 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.574488258 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898981946 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.967205004 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49439605 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.373994555 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.82353936 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.641459574 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.364329692 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.364293944 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.866961282 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.371203177 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.82447395 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.373172679 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375757491 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.515157357 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.374368113 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.072440856 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.37709995 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.52441537 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.138293478 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.518038069 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.623276529 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.869562356 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.375864429 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.972911248 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.09263848 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.629584734 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432005536 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.37647169 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.483575171 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.512326218 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.37316418 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.368600356 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.366681819 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.215934461 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.075345151 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.37642398 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.977709276 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.631217577 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.363431263 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.376790806 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392501259 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.37642505 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.591189089 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.144268874 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.594522274 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.375964799 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.369756622 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.184190441 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.974186875 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.378582454 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.30057027 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.370378373 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.623617502 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.606460112 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.389146598 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.819276887 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.077641585 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949581779 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.341898104 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387809152 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.378974923 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.098412223 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.976331236 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.284285217 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889478611 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.92898027 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.36832855 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.644108418 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.373708663 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.3670535 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.646617907 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.371901375 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.375315674 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.381280689 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.972091578 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.187266787 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.376684326 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.533464461 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.3068243 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.715057013 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.071473354 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.308489967 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.37112114 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.565237484 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.37246733 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486192487 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.380088421 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.379440049 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.3787561 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.108259619 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.717041852 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.374417071 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.357193847 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.371477371 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.373017249 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380124483 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.611345395 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378178748 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.034301253 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.721644823 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.623920953 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.37290755 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.3567309 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.374310406 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370734469 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.365821274 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.576171974 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.693071795 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948802121 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.380056037 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.382079635 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.37473353 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.587909126 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.583128142 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.372751171 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.385950645 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380116146 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.388543307 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.27585324 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.877578766 seconds)
  done (took 1612.261344188 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.401834912 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.418386767 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.38984975 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.41077599 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.4295602 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.394003245 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.442123436 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.456235053 seconds)
  done (took 52.651017859 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.372912946 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.598192324 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.406101859 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.373832424 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.381882322 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.376541605 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.829296945 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.378071654 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.382911077 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.385046211 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.383168951 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.378281744 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.016521207 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.379872718 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.371514369 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.360318267 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.379418725 seconds)
  done (took 66.069719188 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.382420344 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.633604444 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.39334924 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.372974848 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.640584617 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.385525079 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.543554143 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.431973995 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.379169119 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.55687126 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.042764003 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.37720222 seconds)
  done (took 80.44824902 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.380423701 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.379831989 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.380549449 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.38007918 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.380166796 seconds)
  done (took 8.209916607 seconds)
done (took 2038.171812011 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.622088036 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.114442636 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.05403379 seconds)
  done (took 5.477143158 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.520566222 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.575347275 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.689500153 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.694802951 seconds)
  done (took 7.788545783 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.64915821 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.760165352 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.549076956 seconds)
  done (took 6.265857923 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.860740525 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.372113484 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.443713469 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.370297419 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.372649681 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.369656801 seconds)
  done (took 20.422541932 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.375144042 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.377073055 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.3748009 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.377251667 seconds)
  done (took 6.813569931 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.355583414 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.149838093 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.357921775 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.374004862 seconds)
  done (took 18.546330656 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.121924222 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.13326781 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.117947619 seconds)
  done (took 7.682315426 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.389646424 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.22069506 seconds)
  done (took 9.920459081 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.677997957 seconds)
  done (took 2.98877728 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.505427532 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.644990528 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.457016302 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.424946055 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.505025445 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.429301254 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.119432893 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.664325513 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.395670503 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.68587073 seconds)
  done (took 29.1422073 seconds)
done (took 128.654695879 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.358170944 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.397378924 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.579181201 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.332606649 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.608258964 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.580610726 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.872781005 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.295044672 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.836600588 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.827892583 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.336345189 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.612765505 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.598047176 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.399022287 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.599690874 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.388221994 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.609019555 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.400272611 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.054830521 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.219535714 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.875388452 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.962801355 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.160775385 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.991431692 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.609976653 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.532123598 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.563913965 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.385000481 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.23025559 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.580863392 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.533452356 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.388763189 seconds)
  done (took 194.032962324 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.377251848 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.391279722 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.39765872 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.377141073 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.376772988 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.391939728 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.37877135 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.395721252 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.388397434 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.376981457 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.377712072 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.386074254 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.379877537 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.381303968 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.379431999 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.407717668 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.378283147 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.378120585 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.384274352 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.377681122 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.37842447 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.393208595 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.394962593 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.378058932 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.384340968 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.378646682 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.378389308 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.378818337 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.377789364 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.393912123 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.379782932 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.378696736 seconds)
  done (took 205.592855507 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.377528522 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.378723187 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.378877725 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.378736342 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.394396495 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.381073197 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.377876541 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.394963067 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.379008567 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.378325487 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.381256559 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.37867782 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.39350471 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.393398251 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.378684235 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.397106993 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.378158262 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.390620818 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.379832279 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.389683591 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.381699881 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.378968404 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.382896849 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.386636842 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.379246536 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.397202196 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.37972429 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.379261238 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.399561239 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.396503477 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.380682412 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.380521989 seconds)
  done (took 205.61772749 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.581026995 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.384634534 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.385714032 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.342736637 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.386512918 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.384179762 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.382304197 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.583529851 seconds)
  done (took 14.745868529 seconds)
done (took 621.300635912 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.796028856 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.508211236 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.582336833 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.404591339 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.199538581 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.409394236 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.405949591 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.581519478 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.329479954 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.584845264 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.723686068 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.404791373 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.862900655 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.403280508 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.662440778 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.505209615 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.336523625 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.45571812 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.73213271 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.980598984 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.664620624 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.936045856 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.580044016 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.325576039 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.878999838 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.943985962 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.13726816 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.332422606 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.405662721 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.730234903 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.132624449 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.391669855 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.471036721 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.45054814 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.503599849 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.486714557 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.376618073 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.449727484 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.595102241 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.693943477 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.973945269 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.142616701 seconds)
  done (took 94.789887147 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.373561368 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.374860201 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.372781021 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.374223508 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.375378749 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.374718636 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.373819219 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.372450586 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.375084061 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.374295379 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.374501449 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.376418113 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.373632072 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.375571828 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.373973271 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.373590546 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.376089198 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.377201259 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.37428682 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.374945743 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.375671805 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.375180558 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.376180055 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.375264196 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.375627339 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.375870649 seconds)
  done (took 37.064395584 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.387833571 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.629657033 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.815310456 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.397312079 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.391507069 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.395025996 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.472267045 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.389940565 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.394146632 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.394784186 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.550189116 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.391510653 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.430103808 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.82255515 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.394593512 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.389845458 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.3897543 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.395022433 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.636991737 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.402009533 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.475619999 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.392556941 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.474655019 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.402985046 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.395858435 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.394634584 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.397518832 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.893814199 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.395132155 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.550754374 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.220790234 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.473905404 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.848195876 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.826948149 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.219099124 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.394079429 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.392094538 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.557088265 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.395335138 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.394417843 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.474284645 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.394183726 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.826061605 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.029746824 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.411678376 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.390664337 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.917737124 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.556755565 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.6587048 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.403542553 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.849896706 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.397714861 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.394248699 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.396076652 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.658589128 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.403649603 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.394933658 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.939638701 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.400101579 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.476283106 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.392535489 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.395524655 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.647804387 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.395583181 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.635450359 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.396333976 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.402980675 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.396574274 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.826762061 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.397900378 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.046062853 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.412183094 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.393308764 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.554010948 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.636299021 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.94963505 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.399290253 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.650363433 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.861498582 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.47539293 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.399928522 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.886048344 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.480540169 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.401680291 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.39505582 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.397008911 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.394061434 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.43689015 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.475079886 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.973865371 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.039735751 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.959035794 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.481772176 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.409804558 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.398884913 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.942061581 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.41165869 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.396128616 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.823602214 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.048736336 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.414425059 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.405175117 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.036410633 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.416470523 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.47888029 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.401550586 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.835165922 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.398006134 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.437647122 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.394504047 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.404925814 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.401511701 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.481098558 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.401616412 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.394962646 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.032279883 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.577916735 seconds)
  done (took 182.994617199 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.392282148 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.392514347 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.389690859 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.391758682 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.390938162 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.397806517 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.39213396 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.392529085 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.399634648 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.392653296 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.39184683 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.393590456 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.394579505 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.392756386 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.402011584 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.399765149 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.048894933 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.39377686 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.391920077 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.39232818 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.205350188 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.395922124 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.392536421 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.392912762 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.393613278 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.392257795 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.399573063 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.395580866 seconds)
  done (took 153.827981069 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.397129998 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.992178893 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.398037502 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.537945106 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.419261416 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.394504612 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.53555495 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.459850762 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.400260523 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.395222412 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.394797887 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.718355905 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.398572596 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.936199076 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.601376755 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.537389486 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.942415731 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.398542852 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.395511138 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.395475519 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.539823081 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.405936046 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.719590801 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.992363661 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.398154915 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.994404399 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.386440372 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.398967125 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.400021703 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.996435269 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.397098951 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.717832411 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.481207417 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.463022249 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.997123519 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.941734016 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.938153269 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.550904502 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.400794416 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.395399461 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.39614843 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.386603419 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.997008846 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.400296041 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.401038505 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.989206921 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.417102942 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.400348757 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.407474024 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.396498319 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.464786603 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.465242262 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.723937128 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.005169589 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.478730646 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.421096368 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.538855028 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.762159383 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.401989839 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.942402808 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.387385023 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.999324276 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.40253792 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.388086506 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.40081954 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.403501697 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.555817565 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.536881952 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.943142774 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.403863984 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.944893827 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.55730459 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.398423893 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.398011807 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.4016161 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.000298325 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.963941202 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.559473376 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.542646488 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.607265285 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.389181259 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.402311624 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.38869678 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.483722593 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.399186688 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.998381543 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.945089554 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.40164781 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.402135766 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.402009755 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.401135863 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.588566162 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.002365807 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.484158329 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.934788701 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.740014885 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.724738849 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.402035111 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.462883598 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.400682068 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.726403899 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.403331877 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.461087169 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.826181569 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.725419651 seconds)
  done (took 167.184401893 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.653849954 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.767512821 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.498057138 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.521653916 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.95430164 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.990590508 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.624412416 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.535778884 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.514161606 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.663858472 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.610851172 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.491935494 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.593886102 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.483985666 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.134093989 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.479338168 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.499824517 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.536224043 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.518493167 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.522051218 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.05059438 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.706719005 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.580303063 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.562494407 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.501104491 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.186101609 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.961608499 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.94272099 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.577659472 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.791807967 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.933627282 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.61275161 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.388880185 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.084978263 seconds)
  done (took 67.810876829 seconds)
done (took 704.988612267 seconds)
SAVING RESULT...
DONE!
