cset: moving following pidspec: 20340
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.621688935 seconds)
loading group "string"... done (took 0.513881755 seconds)
loading group "linalg"... done (took 8.725474253 seconds)
loading group "parallel"... done (took 0.178640345 seconds)
loading group "find"... done (took 1.407465661 seconds)
loading group "tuple"... done (took 2.069109704 seconds)
loading group "dates"... done (took 1.349865785 seconds)
loading group "micro"... done (took 0.214439594 seconds)
loading group "io"... done (took 0.610833711 seconds)
loading group "scalar"... done (took 42.911418899 seconds)
loading group "sparse"... done (took 13.665931455 seconds)
loading group "broadcast"... done (took 1.117777017 seconds)
loading group "union"... done (took 15.173682722 seconds)
loading group "simd"... done (took 5.362320481 seconds)
loading group "random"... done (took 10.715185582 seconds)
loading group "problem"... done (took 2.205640653 seconds)
loading group "array"... done (took 26.760334774 seconds)
loading group "misc"... done (took 1.162680306 seconds)
loading group "sort"... done (took 4.067859749 seconds)
loading group "collection"... done (took 23.183585411 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.607371972 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.138075282 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.149576035 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.178894659 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.209527091 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.140720311 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.160602022 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.464231683 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.025495977 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.234128669 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.132864931 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.5547926 seconds)
done (took 5.730225436 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.228432659 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.076771344 seconds)
    (2/2) benchmarking "String"...
    done (took 0.130171906 seconds)
  done (took 0.883547863 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076246103 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.177509264 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.095220605 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.11191349 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.112400517 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.110598616 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095777792 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.112344642 seconds)
  done (took 1.494960978 seconds)
done (took 3.371929808 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.832520508 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.848660705 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.493976035 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.129308294 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.159338437 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.133169579 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.321978027 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.162327637 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.126660038 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.125589109 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.180042127 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.373570648 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.434396163 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.969304813 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.095872861 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.131443323 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.082076732 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.731434967 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.083187754 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.130976559 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.526437544 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.112836877 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.117875571 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.126601127 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.217266134 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.133387663 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.194107715 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.103529705 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.684294059 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.102337997 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.187635881 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.100393979 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.163333236 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.233355212 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.082140834 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.10900491 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.676080531 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.192027878 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.114172348 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.09691483 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.681663788 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.08096327 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.195367139 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.109359648 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.112151865 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.212487568 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.126643552 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.080430442 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.102095278 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.104385666 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.159586419 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.473580668 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.106728199 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.147172626 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.110241259 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.722492064 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.101081061 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.159080185 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.126397911 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.111736411 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.099195476 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.118093575 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.173152094 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.133320078 seconds)
  done (took 20.091348902 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.119558232 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.141916196 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.095722934 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140560887 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.141676669 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.098329068 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084049765 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095718831 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.111259574 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.185810529 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.138453596 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.147009261 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.092658303 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081352508 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.119238792 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.252201588 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.10506578 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.121861084 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.082164617 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.108145793 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.141540504 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.097051346 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.111805531 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.095253729 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.171797723 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.221672055 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110082401 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124895922 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.095074261 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.101513426 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144169436 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.163208187 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.076800275 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.095131436 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.182734873 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.121704264 seconds)
  done (took 5.210389171 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.203361183 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.122689253 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.194801261 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.180260224 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.152254369 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.169202437 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120786678 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.269769563 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.185133334 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.168324095 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131845496 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.118733533 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079978906 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.099066467 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.081087924 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.769696688 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.189055399 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.153345527 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.126925523 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103507874 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083716741 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.378308685 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100966287 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.082436074 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103527218 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.072064117 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.178041749 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103723343 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.285919104 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.119700673 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.09147404 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135519168 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.210142415 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.112512865 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.141185324 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102484486 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.082798289 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.216743896 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.110362072 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.094916267 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.106899803 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.134790303 seconds)
    (43/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.101017261 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117813604 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.138970572 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.102192677 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.111811147 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.231367813 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.100576738 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.12102155 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.052843669 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.201206999 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.0961602 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.098111261 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.345936752 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.118477548 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086483441 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.09993171 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.289060668 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.134972814 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.083469623 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.077320361 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.104542537 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.079743156 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.40796526 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.091400992 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.976774085 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.100106393 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.157910216 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10070275 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.106170493 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08688353 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102729766 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.102816182 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.09758098 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.081224732 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.09717494 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.08044752 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.101682963 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.100016546 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102445329 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.079080727 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.164701514 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.119431545 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.100968624 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126954903 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.101908781 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.081276021 seconds)
    (89/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.130379163 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129029601 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083127345 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.101345459 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.12534083 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.1064515 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.115864566 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100422438 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.128755918 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.098241119 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.080797088 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.183563285 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.081044164 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.12550762 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100508438 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114302538 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.122027207 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097624382 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084589552 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.096181738 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.080729894 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.161140222 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.081564344 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.079767399 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.102799489 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.111840551 seconds)
  done (took 23.8813072 seconds)
done (took 49.861140477 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.435883829 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.113279518 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.113406497 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.112911027 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.110913408 seconds)
  done (took 1.645995604 seconds)
done (took 2.376912515 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.332589473 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.205120283 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.101292918 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.197506567 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087818902 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.203765441 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.168095984 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.10117371 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.213992621 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.099690453 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.175792872 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083694486 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.106348195 seconds)
  done (took 2.838033792 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093299896 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.118252537 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081025338 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.10892988 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075438887 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.093930296 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.108895703 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.136686095 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.090571348 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.10229545 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.075441452 seconds)
  done (took 1.810616634 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092259696 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116320801 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.0809214 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.090859783 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092598712 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.09124631 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.108372899 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118730691 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.091850283 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.102889198 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.075534303 seconds)
  done (took 1.791458021 seconds)
done (took 7.162589139 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.143174825 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.768039696 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.125149829 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.177471798 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.34792983 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.205275361 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.644687753 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.138456513 seconds)
  done (took 16.483503549 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.112168234 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.115188429 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.082224436 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.100262287 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.081685385 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.098760913 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.083685923 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.098163737 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.079220767 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.096724164 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.080265931 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.098975184 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.081836078 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.095796227 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.079897575 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.095093281 seconds)
  done (took 2.277023706 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.116579643 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.115448871 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.104043003 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.089606584 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.102385673 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.102647909 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.086532102 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.10333707 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.083496132 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.100851707 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089956041 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.105640252 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103592972 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.082992354 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.10241752 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.091090537 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.100387039 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.08717434 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.103941084 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.086373308 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.106957074 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.100849535 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088969536 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.104993315 seconds)
  done (took 3.201007717 seconds)
done (took 22.691658599 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.168937199 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.085544783 seconds)
  done (took 0.988751953 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.102398845 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.120988403 seconds)
  done (took 0.965467031 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.108274574 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.098756368 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.138045943 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.11697626 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.08259748 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.080914744 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.132370128 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.099316211 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.08324925 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.09928498 seconds)
  done (took 1.780795831 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.086307626 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.102125535 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.090689183 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.120100815 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.110522331 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.084301088 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.103879702 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.085641452 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.104756405 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.080734781 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.107732315 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.103131385 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.106881627 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.120365078 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.087144094 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.228624977 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.109490011 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.085780474 seconds)
  done (took 2.659411173 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.081731588 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.083309588 seconds)
  done (took 0.909075124 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.085054986 seconds)
    (2/7) benchmarking "second"...
    done (took 0.096374331 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083735274 seconds)
    (4/7) benchmarking "year"...
    done (took 0.100397798 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.080167372 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.096261812 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.080680655 seconds)
  done (took 1.365588216 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.488707643 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.259512975 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.315355695 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.116292406 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.134599289 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.360790625 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.136322949 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.096744037 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.113586092 seconds)
  done (took 2.826246991 seconds)
done (took 12.234156418 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.092233682 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.136437762 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.492600599 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.117066459 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.078295489 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.16088943 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.265953812 seconds)
done (took 2.088668373 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.351390192 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.123559938 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.088689752 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.079761383 seconds)
  done (took 1.38614496 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080077008 seconds)
    (2/2) benchmarking "read"...
    done (took 0.086063969 seconds)
  done (took 0.916335557 seconds)
done (took 3.050598717 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079488614 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.078254507 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.094289293 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.078643705 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.093374395 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.075978965 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.132018693 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.078181586 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.097514125 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.078732595 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.094828202 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.079192568 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.078574902 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097980803 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076805595 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093647976 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078993033 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.093841063 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077221516 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.0768763 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094891266 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.078703616 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.093874289 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.076721428 seconds)
  done (took 2.864162219 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.106279163 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098385904 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.085406407 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.103150121 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.084559873 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.103006647 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.103366708 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.080184122 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.102810639 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.082132805 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10136294 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084327564 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.099593956 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.083555798 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100490986 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.084056523 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.103188156 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080087538 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099237713 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.084672645 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.103356468 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097356439 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.083763258 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10393506 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.083436537 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101962107 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.081964956 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.09782743 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.084971852 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.101398558 seconds)
  done (took 3.561011604 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.088369978 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.076436859 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.097430113 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.089079259 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.094456356 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.080562167 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.094821638 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.08080199 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.09988043 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.077020141 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.100307428 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.077457641 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.079605148 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.100446961 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.082047177 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.101686503 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.095191478 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.097623061 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.079998301 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.099469937 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.082634176 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.096939106 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.080092788 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.077101982 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095415814 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.076540536 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.095283034 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077049842 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095139676 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077247774 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.099969205 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.084236602 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.076223214 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.106900718 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.0835507 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.094711405 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.086294695 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.095142126 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.081944063 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094638418 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.076614097 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094383789 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.080217209 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.088192466 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.097544888 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.078199206 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.097313707 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.081832706 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.098223952 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.084340953 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.094287084 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.079939942 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.100322567 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.082952194 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.082900296 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.094621209 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.078574284 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.094055085 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.081611905 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.095193274 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.076636217 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.094342779 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.084145244 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.078635609 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.119555403 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.106196089 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.080043215 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.100610472 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.08188157 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.085770129 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.102051041 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.114047822 seconds)
  done (took 7.18927303 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082883824 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106372508 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080080616 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097407576 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07605189 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.077893643 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.102593493 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077896514 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097213292 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.114688656 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078473851 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079853114 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096809742 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081973806 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096154094 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.07952457 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.10587204 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075975076 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.095148971 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082181401 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09662792 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.084660508 seconds)
  done (took 2.722474182 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.224196503 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.105296864 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142657483 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.11537341 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098555911 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.114675608 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.084823857 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.104540545 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102192035 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089720137 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106691988 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085944753 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.11510923 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10617387 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08859267 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.107817236 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085528806 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.107071172 seconds)
  done (took 2.745027156 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.09477196 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098955145 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.104849424 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.10038418 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.080358922 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.102163124 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087234637 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.115164851 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.082481953 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.103016873 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.109378664 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082924169 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100731537 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081397597 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101775933 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080837882 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.100852124 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081445437 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109692118 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087518123 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.105870513 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.109098797 seconds)
  done (took 2.879769598 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099312848 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101198321 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.102783967 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.103298919 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.07951286 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.100711676 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.090051165 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.098275211 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.091169187 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.101599632 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081656362 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.101024551 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.088579603 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.082584052 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.108052402 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080942918 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100690261 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081372634 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10073803 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079834823 seconds)
  done (took 2.650153614 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.123690481 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113284901 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.095324256 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125229877 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114674039 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.095630184 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.125681644 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.095784991 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.115025148 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127993073 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.096558759 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.114274911 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125818622 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.103830927 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114624665 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.107530557 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126779079 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.125442605 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.096573357 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11385903 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.128495837 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.097143923 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.126116132 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.114900593 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097776639 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114465481 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097613122 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.122233768 seconds)
  done (took 3.920548907 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081629294 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.080748019 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.097067915 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.078281225 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.097010051 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.07883458 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.079117456 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.097207554 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080564338 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09682309 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.081107334 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.09926495 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081238915 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.081112119 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098861652 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.081469159 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09962505 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.078612791 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097043809 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078618193 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.081250285 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100201184 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081232141 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.097055093 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07917048 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.099384642 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079348569 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.078565592 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099650523 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.078686844 seconds)
  done (took 3.38310656 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.089626838 seconds)
    (2/2) benchmarking "in"...
    done (took 0.111088896 seconds)
  done (took 0.969886012 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.080372693 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117442688 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078725004 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.103311052 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088734957 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.100626009 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.091665458 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106469022 seconds)
  done (took 1.533427368 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.10669879 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.12134828 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.08937561 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.113389334 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.102237826 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.119626194 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.168098446 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.088724935 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.108580119 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083058093 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.120556112 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082040502 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.110481812 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087362117 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.109151972 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.114969444 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.084030975 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.092333993 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.109760289 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.084884449 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.107085673 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117514683 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092707741 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.107847432 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.08473524 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.112423373 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.096359373 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.111923494 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087406177 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.113020028 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.107661669 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.077399723 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.087577018 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.106221682 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.083965581 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.118787646 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118880917 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087665042 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.110504935 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089564057 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110497703 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.080649894 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.111542314 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.089062149 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.113159855 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.088535094 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.107559536 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.08106974 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.101649555 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086349009 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.099681045 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086654216 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.09494038 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092300221 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.110021551 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.10146067 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.103269768 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.087393521 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.105739527 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.085879001 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.108662096 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.087152609 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.111725054 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.086312034 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110725406 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.092396426 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.11075666 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.081250475 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.09506317 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.083591938 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.110883127 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.125941231 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.094164578 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.107182742 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089529667 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.101758446 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088791246 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108168566 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091624108 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.113114251 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.087902045 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108477242 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093676252 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104512991 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.086478107 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.108877913 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.0849991 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.104121596 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.083175758 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.12205978 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.085481916 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.10294001 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.083125974 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.112414357 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.086783208 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.105611003 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.083400382 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111028121 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.076437926 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.106839469 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089872573 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.108137259 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.113833543 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088856385 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108728815 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.092256848 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.112721562 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088141116 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.105046891 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.079195256 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107287821 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.085052479 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.091678237 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.095046517 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088919449 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.105262094 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.089507981 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.113580271 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.102963963 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.089299872 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.113120689 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.094634745 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.103409604 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.07928679 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.105726773 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.08876165 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.11182605 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.095288927 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.104276757 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.081130219 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.100551802 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.091819707 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.106168882 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.089947426 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107569249 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088774485 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.096154184 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.084109634 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.10712572 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.094278983 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.106465032 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.089846413 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.112547671 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.090607397 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.105676305 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.093466429 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.104912008 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.084168648 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.11211098 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.087814372 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.100692154 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.094597608 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.106615715 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.085490943 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.106874873 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.093911503 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.106390625 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.089697097 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104338423 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.088483061 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108420409 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.083255342 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.106911684 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.085966244 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.115179712 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.087659273 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.099909772 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.080215924 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.108968761 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.084474169 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.106192105 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.083829261 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.107640507 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.090237466 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.103534561 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.087339622 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.105756345 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10035374 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.115963147 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.08977744 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.119378994 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.094914487 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.106344236 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.089781845 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.106634503 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089944457 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.10802241 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.093312466 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.111281062 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089510773 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.108505526 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.080441798 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109453467 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09361664 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.104145635 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.084326479 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.102461568 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.088606998 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.11430245 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.088632677 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.108440917 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085701834 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.109071886 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.094210957 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.107068426 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.088461515 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.102088431 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.089222553 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.111534197 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.090526417 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110189785 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095867022 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108006294 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.082465189 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112521937 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08578195 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.11155248 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.082954682 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.1037364 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.084950487 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.108992558 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.086670125 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.106409574 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.077880975 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112854148 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094570074 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.108713746 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.084213573 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.10784095 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09856306 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.106383234 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094880702 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.107042728 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.091693099 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.121252582 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.103064431 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.089070018 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.116279048 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.089848712 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.097007227 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.092308682 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.106082012 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.083851915 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.087546224 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.105728532 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089339545 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111631363 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.090541998 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.097468125 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.08846768 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.105746655 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.084387572 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.101918161 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.094303472 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.108499031 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.088539349 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116500476 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110547885 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.090629 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109149254 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.089418252 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.108995157 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.09113084 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10901325 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.091494206 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.106486521 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.084279132 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.107337745 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.084927375 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.085644456 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.107895102 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.089271265 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.108300623 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09131179 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.108523588 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.113460919 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.089415673 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.110456451 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.107507732 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.105697081 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.08490756 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.109801659 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092314685 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.10756372 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.088778373 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.103013173 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094402415 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.108360899 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095619981 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.108084598 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.081504964 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.109906008 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.089601963 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.110586706 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.092778394 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.111997562 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.088518961 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.109099405 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.089722569 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118390619 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.085287391 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.115405807 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110913272 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09258988 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.107877043 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.090877086 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.10625251 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.085700516 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.107593386 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.090765339 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.108556595 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.088902679 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.110914863 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.090148694 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.107328114 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087625636 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.109921803 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.090335533 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.110748976 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.07889369 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.084549733 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.105013163 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.089538554 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112630225 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.090459504 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.107497971 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.088302518 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110537439 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.088790508 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.100622796 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.094775306 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.111258915 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.090413426 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.118271392 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.08522405 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.108558673 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118729609 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.079258952 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.087044786 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.105135135 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.085997586 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115110123 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.09131116 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.11428518 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.089944678 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.105376348 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.082665644 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.110504847 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.088670296 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.09900703 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.08672922 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.112264264 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.087799582 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.107555498 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.090654234 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.111251558 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.092482342 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113441448 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.089062245 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.109438042 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.091066096 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.10154042 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.086000511 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.103830525 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.089934622 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.111164288 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.086277128 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.101677092 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.089658644 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.108208926 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.08993916 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.108570575 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.089774857 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.114910388 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.089593236 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.108632786 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.096115864 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.098461751 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.090452092 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.108038508 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.090189621 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.084814998 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.111982442 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110238754 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.093083302 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.11393744 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.090255861 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.111412618 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.09099511 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.106325953 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.0901782 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.089800935 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.111449778 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.085378602 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.111187271 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115315916 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.087826106 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.090527243 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.110360495 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.087383742 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.112308298 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.091628566 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.109703712 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.113572874 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.090545388 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.109337338 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.093924541 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.109657995 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092233444 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.112047639 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.089956469 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113777697 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.086576171 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.116781909 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.092287721 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.112375217 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.089348381 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.10534206 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.090420452 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.108485009 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088725804 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.115805644 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.092455167 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.104782132 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.086127736 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.087158703 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.110432154 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.115413888 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096803725 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.109435917 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091837928 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.103312908 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.083374991 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.11149503 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.086453039 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.108111333 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.093625649 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113947157 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.091275538 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.106651156 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.089080443 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.114917456 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094844823 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.112593237 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.087306375 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.112274312 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.092194982 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.110848776 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.088010904 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.109790392 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.092653996 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.112396849 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.089853603 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.105555358 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100321363 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.115281615 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.0922043 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.10869216 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.092589449 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.10991962 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.084461475 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.111874055 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.090706368 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113502691 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.090605054 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.111071684 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101054935 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.105008706 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.089185141 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.115995114 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.09022269 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.117316242 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.104298309 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.091517509 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.112778779 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.093010859 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.103616753 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.086510943 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.087979968 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.110556499 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.086720151 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.10508655 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100717239 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.115915627 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.111232096 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089876958 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088855727 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.106105172 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.084703577 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.106440215 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.093692504 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.109801838 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.099360284 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.108070613 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.08697333 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.104888713 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.094270227 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112156602 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.094001216 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.103798406 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.085386933 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.108089515 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.092079463 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.118149066 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.089860276 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.11141356 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092440179 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.11133373 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.088359364 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.117010551 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.083314348 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.111820977 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103319827 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.112086503 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093960229 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.114081096 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.116883816 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.092778222 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.084721396 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.112750259 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.110565056 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.092283689 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.112717362 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.093624281 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.126200813 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092366082 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.107017674 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.090108949 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.110487604 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.086993022 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.117989043 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.093452189 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.11264781 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.093563474 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.109253731 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.093994821 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.117753225 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09391625 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.114042825 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.091989335 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.10906095 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090463132 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.108691269 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.090185158 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.114067104 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.093051309 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.111830437 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.095155813 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.106928168 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102239376 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.118382966 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.092764669 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.105168207 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.087616346 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.107594936 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.085843612 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.113194533 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.085505482 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.108909766 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.090287986 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.109757131 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.09446369 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113718626 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.091963931 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.112943419 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.091697696 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.09983877 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.096280734 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.111487841 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.094757231 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.103140756 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.091979676 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.11364995 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.097447075 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.117230705 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.089477638 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.110909464 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.090700086 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.113705297 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.086424264 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.115272121 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.09011991 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.109836226 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.08789539 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.110901487 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.094254182 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.11288566 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.094350482 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.115059511 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.092010231 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.115415145 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.095823847 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.104351654 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.08503943 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.11545865 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.088629981 seconds)
  done (took 60.239463346 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.153239987 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092578855 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.082948923 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.103635376 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.130857243 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.0879281 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102739913 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.087198919 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.107330221 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.0969167 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.102475698 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08279797 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.125452628 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.131523454 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.129041337 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.099010377 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101548685 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.087530535 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.102479416 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087121051 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.12321748 seconds)
  done (took 3.033157809 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.109551798 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.121414712 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.120482322 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.10573264 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.113774857 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.121176113 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099812502 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.121581774 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.125286048 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096358447 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.125766728 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.121177428 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.095897435 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.116959886 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.115509688 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098730803 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.126079079 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.113810602 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.102537108 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.119839849 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.118602998 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.099993006 seconds)
  done (took 3.302366445 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.095445843 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.090530938 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.115519897 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.084724017 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.111021198 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.084983344 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.116849187 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.087531967 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.117035882 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.091017464 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.108403175 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.092449601 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.116205113 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.085275788 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.108873273 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.087295409 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.117575674 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.091361871 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.113502775 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.086327867 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.132141324 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.085089974 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.106143252 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.089153094 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.122599504 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.093780106 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.111486018 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.091861329 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.108715777 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.091918319 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.107562109 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.094457935 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.114550932 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.089257513 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.108658861 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.092581626 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.111131789 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.086286425 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.087911555 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.11515983 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.086593594 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.112485987 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.118237996 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.088516369 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.087732858 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.113738746 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.091820189 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.105678548 seconds)
  done (took 5.664387155 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.124407705 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.16230279 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.08972465 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.152162271 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.128331666 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.101665477 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.113185057 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.151599986 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.084960265 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.111425866 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.130710707 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.105491241 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.115271442 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.117489376 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.095872479 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.111193515 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.094342632 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.107093572 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.098212523 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.111510873 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.116327207 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.095838254 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.126693797 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.123898122 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.097329881 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.110394162 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.088180561 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.117331667 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.123727723 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.09970622 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.117688702 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.119345322 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.107852513 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.11422887 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.090700905 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.114826903 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.129480338 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.093107164 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.114748955 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.086120578 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.115071546 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.09802098 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.117147078 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.129772246 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.092702674 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.113762761 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.091036652 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.105430797 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.12420317 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.095495115 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.122766894 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.12682872 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.097836685 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.112855507 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.098082932 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.129691793 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.112072582 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.090627113 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.116135235 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.123584434 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.08634488 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.118106533 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.10719097 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.114991998 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.121367034 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.106356902 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.114060133 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.116055722 seconds)
  done (took 8.559980414 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.120615636 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.118158752 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.129919878 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110560803 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.118496959 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.097399798 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.120649851 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.117043459 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.099293125 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.124907364 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.09811625 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.168523335 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.115183927 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.124647375 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.097611162 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.11868291 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.098753281 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.118169957 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.118060641 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098140238 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.11844614 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.109575651 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.120143085 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.129858902 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.131325044 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.094828377 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.11776613 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.098375989 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.130748839 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.118126537 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.11108426 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.119098872 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.117906847 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.11038942 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.131919082 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.118260886 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.09162116 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119178144 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.09871952 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.119111184 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.114039986 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111019079 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.118192071 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.09451349 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.118531695 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.118227846 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.109948976 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.132170965 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.124520798 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.126256279 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.099316745 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.129570891 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.097368714 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.119651287 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.12907238 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.140675682 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.130310437 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110314343 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118570853 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.130820906 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109691196 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.139178977 seconds)
  done (took 8.065253347 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089178058 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088933154 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.107523979 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.087033847 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.110887279 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.086929188 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.109130036 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.089432915 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088291799 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.109563651 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088922233 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106997622 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087273666 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087865445 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.107337026 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086727566 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106607165 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087310356 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109273275 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087475543 seconds)
  done (took 2.749749817 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.097696657 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.131838987 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.090303171 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.117942577 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.092671793 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.118427737 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.091863182 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113139979 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092573787 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112958015 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.122477294 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103912666 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110639801 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.097222638 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.122900077 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.117886802 seconds)
  done (took 2.565276812 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.111351361 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.132569494 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.136157596 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.094800542 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.107530661 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.097435358 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.113431311 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.085584383 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.106255712 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.098939096 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.115831312 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.096263246 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.112326339 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.087855331 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.089458739 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.1168561 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.105022936 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.094608225 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.091942241 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.136911797 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.115601958 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.093128598 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.11533726 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.09235657 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.113886133 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.096391627 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.118859673 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.086867543 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.109480986 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.093778744 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.113761772 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.118326477 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.087946689 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.09456113 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.109546265 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.087439991 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.114326316 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.093709263 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.117680277 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.093433506 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.110821882 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.093209334 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.113688538 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.095655066 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.106649778 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.093488296 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.10738829 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.096901812 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.113422758 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.093671699 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.113914925 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.099443887 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.118742525 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.122391822 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.101738275 seconds)
  done (took 6.605272756 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.105526949 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.116711861 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.097199264 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.108417784 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.094575897 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.119545079 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.095146863 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.114483264 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093329732 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.108319806 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093536511 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.115109865 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093221534 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.115499569 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.094006558 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115818213 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.085750852 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112876804 seconds)
  done (took 2.715925046 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.094814643 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.090015407 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.119879971 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.090172977 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.112922864 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093281351 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10774959 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.088952042 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109472925 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.090825736 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111135142 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.093650072 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110604825 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.093312623 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.110932382 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091579775 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.113725495 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090047187 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.090650919 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108946281 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.091922682 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.109464785 seconds)
  done (took 3.04280307 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.106764005 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.143571991 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.104346755 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.153819018 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.116353889 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.094826832 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.125223334 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.095415275 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.134261742 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.094438034 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.115332592 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.094437158 seconds)
  done (took 2.2113977 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115302302 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.15015088 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.092091958 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11727325 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127404958 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097237065 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115903452 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09639975 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130840344 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131036566 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096617398 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131048819 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130443899 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129290797 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105935973 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126913787 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116852761 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097741839 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11277156 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139753462 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09734733 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131397014 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096518134 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117955753 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117180022 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109024322 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131725228 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13130729 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096213417 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133278047 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12630603 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096711504 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13359859 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131753295 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113890157 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111226618 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117882328 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14130187 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106273667 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129278707 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.114768462 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106637583 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132247418 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125251214 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131327331 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097359744 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125730224 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096232549 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118161331 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.147555082 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126119215 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108568897 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126498926 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131511724 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132298952 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.147781226 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110851504 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13001106 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1264282 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131046318 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108765344 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127776883 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12957304 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13158505 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106155675 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129402931 seconds)
  done (took 8.772995992 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132396409 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.114796311 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097445707 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134765794 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130010516 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117377527 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097445577 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117837661 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097634645 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114818851 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.398799554 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090800184 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125304989 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127746145 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117280378 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097869736 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117837491 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109032588 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114147677 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.147227318 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117642877 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110533191 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129511881 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129497314 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131377105 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106713438 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117688849 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096239847 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117958498 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117326188 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105356553 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117678526 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129583283 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.092850069 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129134453 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096244382 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119649822 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125702951 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097676181 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127192878 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13010477 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140787176 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097404502 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117717777 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131317923 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097748352 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117775147 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093700904 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117434423 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093778206 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132662352 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130610431 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131930922 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129818655 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098808002 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118184415 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09818468 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118377495 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097457198 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127099635 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12866312 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096942123 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.146823598 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117672113 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11721346 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109909804 seconds)
  done (took 8.795057271 seconds)
done (took 161.491855636 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.107858222 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.14898738 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.10642861 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.176654974 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.08534425 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.145758519 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.119658666 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.121567704 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.092382271 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.113512545 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.09300036 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.116585009 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.158766799 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.10528928 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.088918704 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.11538262 seconds)
  done (took 2.725463501 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.19035501 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.302544192 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.112323676 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.120659221 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097987378 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.11895087 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.09668158 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.120602983 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.092932654 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.128607874 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.11420516 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096151941 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.124942528 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095368452 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.114952382 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.094372416 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.126072384 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.09491972 seconds)
  done (took 3.088782382 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.124030279 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.15853458 seconds)
  done (took 1.133250915 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.129541274 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.195821223 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.316628872 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.168137532 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.119453059 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.137828834 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.169938116 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.132924318 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.201956769 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.131856686 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.109981696 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.115225235 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.14336735 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.104986945 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.12409049 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.098559358 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.148892912 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.122568909 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.101216098 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.122720771 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.125061151 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.124676692 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.125351257 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.10151497 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.195469092 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.138468655 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.121451478 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.100516561 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.122480275 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.101043299 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.1266929 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.135481306 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.11528325 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.201765004 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.105750535 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.197720836 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.107987113 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.121287743 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.100615472 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.121119903 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.125019851 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.105406769 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.136454907 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.10013253 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.121855886 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.108058961 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.120721463 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.120969293 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.105771046 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.131588937 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.128185523 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.105646095 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.19540744 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.10571265 seconds)
  done (took 8.039567837 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.813293467 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.163847547 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099103658 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.918805901 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.152981862 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113597068 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.819734447 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.143971261 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.250739028 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.834388531 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114299521 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.137666542 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.244423375 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.264365592 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.149545793 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.342403287 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.693197495 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.112234299 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.154829543 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.161563946 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.128287728 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.150043792 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.119728244 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.439284078 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.120271464 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099433556 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.128211143 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.133256052 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.17110568 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.098351703 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.124393159 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.194053619 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.275326043 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.20725066 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.093003166 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.113342589 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091439021 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.196987594 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.256686719 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.225146329 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.186301435 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092668665 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.120352194 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.134520902 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118871613 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.114798523 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.177352614 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.185583813 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.206140103 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.102817506 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.134351318 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.108161136 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.13402908 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.172307718 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.118596523 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.3511765 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.329934618 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.12574517 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129362199 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.11651635 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.277905919 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.119227998 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.217604424 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.148485219 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.22604492 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.097969057 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.791208496 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.17462592 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.117177039 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.103828865 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.12119244 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098029738 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.127091976 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.174044482 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.415888605 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.136608231 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.101197065 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119362826 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.221611988 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.113707093 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091735853 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.175637264 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120189858 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.108305333 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.139037226 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.135113587 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.184643478 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.260891574 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.134750476 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.128938157 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.10267203 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.135550804 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.100378576 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.245688757 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.20893598 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.191085894 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.228938286 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.128773681 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.175094063 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.180045636 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.132431071 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.183834246 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.128645592 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119266948 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134454931 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.231089663 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.153905944 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.100522438 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.125838111 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.106713681 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.157268082 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.125370708 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.107444384 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.180622104 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.494137319 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.179406048 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.117693844 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104614745 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122431133 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.170481171 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106376734 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.283290985 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124360657 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.182216262 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.128835561 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.096822799 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.13028512 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.17981443 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.136262828 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.10887727 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.13536747 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.130697303 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.26437204 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.23622497 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11326491 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.253526196 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.19169536 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.104429133 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.205297933 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.107083815 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.181255803 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.130259196 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.133949602 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100329 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.788317995 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.128208286 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.105009602 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.127320065 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.199260299 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094812014 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.117628602 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.09734115 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116406721 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.768199198 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.122963529 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.098057173 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.121129023 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.108359711 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.130654951 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10637913 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.127462357 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.176221566 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.248452659 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.135910989 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.107765983 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.122758971 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.175468437 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.122820474 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.100359728 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.098861874 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.123359032 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.131920118 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.105129494 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.12347999 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.179427022 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.173012562 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.236200476 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.59779745 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.121748483 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.099641566 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.247422043 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123250796 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.301186501 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130432147 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.240475121 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.182156329 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.117284898 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.329211401 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.202626703 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.19910257 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.103801442 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.177772032 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112744024 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.10672478 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.196498322 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.100128953 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129787908 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.172644746 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.116938679 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.138734856 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.157843756 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090741632 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.256036707 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.090345495 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.173484171 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116914004 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.128542405 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.291447639 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.114877204 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.14298431 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.174812383 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.103435621 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.121992476 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.851928605 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.113568041 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.103209465 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.123763926 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.228178511 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.171674666 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.1261282 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.107989775 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.136231257 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.176826428 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.222483345 seconds)
  done (took 46.386520075 seconds)
done (took 62.219016768 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.322744669 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.277659562 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.311176991 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.201815878 seconds)
  done (took 2.06470676 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.193062201 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.164810696 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.133519571 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.119823239 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.166271328 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.096561036 seconds)
  done (took 1.745960798 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.488104595 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.384947568 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.349060764 seconds)
  done (took 2.094858838 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.271067255 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.298009618 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.341807664 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.477486307 seconds)
  done (took 2.371006102 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.220865064 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.138988508 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.104457601 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.149209519 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.185648826 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.192089946 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.151941789 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.166786679 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.141410789 seconds)
  done (took 2.372566736 seconds)
done (took 11.527938354 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.278251585 seconds)
    (2/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.310047509 seconds)
    (3/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.218762947 seconds)
    (4/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.174898732 seconds)
    (5/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.142292508 seconds)
    (6/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.112712451 seconds)
    (7/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.184072304 seconds)
    (8/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.162455794 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.145178567 seconds)
    (10/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.13096577 seconds)
    (11/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.255006068 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.137466442 seconds)
    (13/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.279272304 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.106046069 seconds)
    (15/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.201790344 seconds)
    (16/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.250027888 seconds)
    (17/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.111481226 seconds)
    (18/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.249548603 seconds)
    (19/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.165494343 seconds)
    (20/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.154788053 seconds)
    (21/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.120146848 seconds)
    (22/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.24262815 seconds)
    (23/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.141809917 seconds)
    (24/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.153907631 seconds)
    (25/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.247005679 seconds)
    (26/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.105735559 seconds)
    (27/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.233093419 seconds)
    (28/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.210331084 seconds)
    (29/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.205367656 seconds)
    (30/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.204715464 seconds)
    (31/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.17332672 seconds)
    (32/286) benchmarking ("sort", Int64, true)...
    done (took 0.234075984 seconds)
    (33/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.118463141 seconds)
    (34/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.133018536 seconds)
    (35/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.214939539 seconds)
    (36/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.130933019 seconds)
    (37/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.161323733 seconds)
    (38/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.194062951 seconds)
    (39/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.139811841 seconds)
    (40/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.111702501 seconds)
    (41/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.106866776 seconds)
    (42/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.166827698 seconds)
    (43/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.125293758 seconds)
    (44/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.235439987 seconds)
    (45/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.126536137 seconds)
    (46/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.151044996 seconds)
    (47/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.164449073 seconds)
    (48/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.209240238 seconds)
    (49/286) benchmarking ("sort", Float32, true)...
    done (took 0.242854703 seconds)
    (50/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.114747943 seconds)
    (51/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.135053897 seconds)
    (52/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.201293216 seconds)
    (53/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.116677982 seconds)
    (54/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.128721046 seconds)
    (55/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.103132756 seconds)
    (56/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.171952196 seconds)
    (57/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.133906893 seconds)
    (58/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.187731839 seconds)
    (59/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.111158054 seconds)
    (60/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.207774419 seconds)
    (61/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.127425819 seconds)
    (62/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.104449354 seconds)
    (63/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.136995644 seconds)
    (64/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.101313683 seconds)
    (65/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.170091571 seconds)
    (66/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.108629684 seconds)
    (67/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.149987958 seconds)
    (68/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.134637307 seconds)
    (69/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.104164497 seconds)
    (70/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.137397249 seconds)
    (71/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.09014202 seconds)
    (72/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.176248628 seconds)
    (73/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.147492042 seconds)
    (74/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.109922433 seconds)
    (75/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.119770396 seconds)
    (76/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.102875985 seconds)
    (77/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.130463515 seconds)
    (78/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.105384162 seconds)
    (79/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.139060031 seconds)
    (80/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.114755149 seconds)
    (81/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.13137259 seconds)
    (82/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.091631089 seconds)
    (83/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.220728975 seconds)
    (84/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.251536019 seconds)
    (85/286) benchmarking ("sort", Int64, false)...
    done (took 0.121043285 seconds)
    (86/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.106636102 seconds)
    (87/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.111015749 seconds)
    (88/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.196420574 seconds)
    (89/286) benchmarking ("sort", Float64, true)...
    done (took 0.242715477 seconds)
    (90/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.106053801 seconds)
    (91/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.131719603 seconds)
    (92/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.103604659 seconds)
    (93/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.206007018 seconds)
    (94/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.110806918 seconds)
    (95/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.135589012 seconds)
    (96/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.085501281 seconds)
    (97/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.12999477 seconds)
    (98/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.112427019 seconds)
    (99/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.128113765 seconds)
    (100/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.089379628 seconds)
    (101/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.223611041 seconds)
    (102/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.236514046 seconds)
    (103/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.134597889 seconds)
    (104/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.085735546 seconds)
    (105/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.13239108 seconds)
    (106/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.103843914 seconds)
    (107/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.173328805 seconds)
    (108/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.10308613 seconds)
    (109/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.136475783 seconds)
    (110/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.10439811 seconds)
    (111/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.205934303 seconds)
    (112/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.133641421 seconds)
    (113/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.112795367 seconds)
    (114/286) benchmarking ("sort", Float32, false)...
    done (took 0.187612414 seconds)
    (115/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.213557871 seconds)
    (116/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.185287876 seconds)
    (117/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.142513976 seconds)
    (118/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.139479783 seconds)
    (119/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.181798193 seconds)
    (120/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.089343565 seconds)
    (121/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.130023631 seconds)
    (122/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.107191748 seconds)
    (123/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.168820152 seconds)
    (124/286) benchmarking ("sort", Bool, false)...
    done (took 0.197285401 seconds)
    (125/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.110221326 seconds)
    (126/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.129523696 seconds)
    (127/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.112185622 seconds)
    (128/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.128105433 seconds)
    (129/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.111581372 seconds)
    (130/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.209487779 seconds)
    (131/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.129271911 seconds)
    (132/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.164272257 seconds)
    (133/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.110527551 seconds)
    (134/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.110773836 seconds)
    (135/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.131086471 seconds)
    (136/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.12848254 seconds)
    (137/286) benchmarking ("sort", Float64, false)...
    done (took 0.162254631 seconds)
    (138/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.136741948 seconds)
    (139/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.09019703 seconds)
    (140/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.129277924 seconds)
    (141/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.148652109 seconds)
    (142/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.113416505 seconds)
    (143/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.14547451 seconds)
    (144/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.195202928 seconds)
    (145/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.099024123 seconds)
    (146/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.129785166 seconds)
    (147/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.084425696 seconds)
    (148/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.087892691 seconds)
    (149/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.129123097 seconds)
    (150/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.130040074 seconds)
    (151/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.116720785 seconds)
    (152/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.13319041 seconds)
    (153/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.110754108 seconds)
    (154/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.10953755 seconds)
    (155/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.106176821 seconds)
    (156/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.128535585 seconds)
    (157/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.086099497 seconds)
    (158/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.14845591 seconds)
    (159/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.111119196 seconds)
    (160/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.205460715 seconds)
    (161/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.162945394 seconds)
    (162/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.08430657 seconds)
    (163/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.211548639 seconds)
    (164/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.199065222 seconds)
    (165/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.198652711 seconds)
    (166/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.190720652 seconds)
    (167/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.09043632 seconds)
    (168/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.162221545 seconds)
    (169/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.186844566 seconds)
    (170/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.125730234 seconds)
    (171/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.131836504 seconds)
    (172/286) benchmarking ("sort", Int8, true)...
    done (took 0.230432577 seconds)
    (173/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.112862047 seconds)
    (174/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.125942455 seconds)
    (175/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.102525252 seconds)
    (176/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.129994272 seconds)
    (177/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.196001335 seconds)
    (178/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.107603842 seconds)
    (179/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.115294254 seconds)
    (180/286) benchmarking ("sort", BigInt, true)...
    done (took 0.28866775 seconds)
    (181/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.090935453 seconds)
    (182/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.137503494 seconds)
    (183/286) benchmarking ("sort", BigInt, false)...
    done (took 0.244789881 seconds)
    (184/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.084155427 seconds)
    (185/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.129478489 seconds)
    (186/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.102876671 seconds)
    (187/286) benchmarking ("sort", Int8, false)...
    done (took 0.207808305 seconds)
    (188/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.105842387 seconds)
    (189/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.099186599 seconds)
    (190/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.151004238 seconds)
    (191/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.162887989 seconds)
    (192/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.08768251 seconds)
    (193/286) benchmarking ("sort", Bool, true)...
    done (took 0.234430467 seconds)
    (194/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.122729587 seconds)
    (195/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.103748068 seconds)
    (196/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.116291083 seconds)
    (197/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.105269493 seconds)
    (198/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.122889161 seconds)
    (199/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.173959203 seconds)
    (200/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.127020155 seconds)
    (201/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.090440541 seconds)
    (202/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.130699882 seconds)
    (203/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.099256803 seconds)
    (204/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.139432777 seconds)
    (205/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.088260343 seconds)
    (206/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.136356054 seconds)
    (207/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.089508278 seconds)
    (208/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.117117927 seconds)
    (209/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.101376547 seconds)
    (210/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.113369181 seconds)
    (211/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.103131501 seconds)
    (212/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.1249207 seconds)
    (213/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.198591579 seconds)
    (214/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.096006868 seconds)
    (215/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.10190985 seconds)
    (216/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.126064464 seconds)
    (217/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.088259479 seconds)
    (218/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.126548818 seconds)
    (219/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.106605847 seconds)
    (220/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.121760968 seconds)
    (221/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.1173118 seconds)
    (222/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.115141963 seconds)
    (223/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.092964902 seconds)
    (224/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.148586738 seconds)
    (225/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.094695591 seconds)
    (226/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.128139446 seconds)
    (227/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.195004475 seconds)
    (228/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.098959011 seconds)
    (229/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.111624028 seconds)
    (230/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.087773021 seconds)
    (231/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.11101579 seconds)
    (232/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.084364314 seconds)
    (233/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.201284163 seconds)
    (234/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.088755903 seconds)
    (235/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.113419121 seconds)
    (236/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.103582699 seconds)
    (237/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.116797324 seconds)
    (238/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.098528772 seconds)
    (239/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.090788304 seconds)
    (240/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.147299642 seconds)
    (241/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.131227131 seconds)
    (242/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.104736171 seconds)
    (243/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.119639272 seconds)
    (244/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.109948056 seconds)
    (245/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.127320872 seconds)
    (246/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.254145262 seconds)
    (247/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.086817548 seconds)
    (248/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.131945554 seconds)
    (249/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.098771656 seconds)
    (250/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.133536634 seconds)
    (251/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.084959404 seconds)
    (252/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.093484984 seconds)
    (253/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.134618017 seconds)
    (254/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.130586909 seconds)
    (255/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.085408304 seconds)
    (256/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.091909217 seconds)
    (257/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.120706238 seconds)
    (258/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.126119979 seconds)
    (259/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.092685835 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.10743205 seconds)
    (261/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.116660591 seconds)
    (262/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.107555508 seconds)
    (263/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.124029569 seconds)
    (264/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.091793999 seconds)
    (265/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.127670285 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.100453961 seconds)
    (267/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.112493393 seconds)
    (268/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.114349346 seconds)
    (269/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.179216632 seconds)
    (270/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.111819426 seconds)
    (271/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.097423122 seconds)
    (272/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.151466859 seconds)
    (273/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.098888239 seconds)
    (274/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.130971993 seconds)
    (275/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.088764419 seconds)
    (276/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.146244387 seconds)
    (277/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.084481648 seconds)
    (278/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.128766546 seconds)
    (279/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.0860994 seconds)
    (280/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.127797846 seconds)
    (281/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.090565736 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.123891821 seconds)
    (283/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.096307846 seconds)
    (284/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.120678004 seconds)
    (285/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.079944602 seconds)
    (286/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.111758394 seconds)
  done (took 41.057536524 seconds)
done (took 41.935061193 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.112295713 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.355176318 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.135480418 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.131473044 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.133911516 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.140469678 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.104778804 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.135796656 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.110472525 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.137779501 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.106925091 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.110537871 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.103470787 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.124157355 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.104917044 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.145704908 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.139219677 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.107034336 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.127508378 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.101549031 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.126040432 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.103861618 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.127915923 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.095308254 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.134871503 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.108794985 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.129576937 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.11115188 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.130925922 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.099683339 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.125494868 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.106719263 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.125919074 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.113909753 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.1286082 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.103362684 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.135913152 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.106764889 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.127618468 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.101484707 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.131076232 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.103118562 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.129013593 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.106130467 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.126436649 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.100011179 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.12499295 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.113796072 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.15737282 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.105126652 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.132408027 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.110791659 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.131487642 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.105800759 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.12129844 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.101161121 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.120917539 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.151588239 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.10328382 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.127158576 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.104286901 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.148809147 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.095984589 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.12344086 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.096431477 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.128368996 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.103688802 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.123430564 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.106160265 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.128462396 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.095904479 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.126460474 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.097742574 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.123524925 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.100630247 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.109804526 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.117098224 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.103837499 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.1282339 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.104608198 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.125309684 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.103434657 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.130292305 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.105012054 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.126095917 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.095428536 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.125762584 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.105814881 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.126028302 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.101173734 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.128680658 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.104999052 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.13049777 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.111435727 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.126114981 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.103485226 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.123824589 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.10296639 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.123280122 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.094493228 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.112709362 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094492052 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.12360039 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.094095461 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.121519887 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.108832364 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.125905538 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.106312021 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.127532129 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.104044121 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.142071391 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.110940573 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.123973664 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.105202001 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.124714156 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.107947251 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.124425102 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.10205401 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.125242718 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.105084007 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.12976604 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.105209722 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.121686399 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.106961222 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.135881158 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.098682643 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.122565648 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.103472313 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.127495308 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.107265876 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.127898789 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.102051219 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.128252711 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.099304586 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.122556483 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.098907687 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.128446654 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095899021 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.125372599 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.100383663 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.12608698 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.099824145 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.125773047 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.098730237 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.11816311 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.08945524 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.121450801 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094416554 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.122355248 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.095519583 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.120062571 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.090775729 seconds)
done (took 18.789953792 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.108721566 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.194506852 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.152502989 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.159356582 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.152456478 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112334792 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.129829647 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.150126312 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.102796252 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.146885464 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.151247414 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.13989152 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.132864678 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.136400682 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.138396802 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.101891761 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.126192073 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.11124723 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.160293763 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.153233134 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.154041815 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.102359539 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.146710851 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.144906467 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.100617387 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.154700509 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.12773634 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.101588996 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.127721748 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.134170711 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.118975134 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.128801464 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.103102737 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.138206785 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.13514452 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.10157634 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.139960909 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.097409906 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.124786086 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.12459715 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.115538472 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.137580657 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.097867329 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.131790713 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.124845799 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.104895918 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.124352214 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.100706305 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.127921138 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.096846433 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.130913043 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.148283586 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.100000224 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.127570716 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.127359498 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.102509834 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.128716868 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.104837876 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.127126795 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.128531139 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.101370329 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.12817826 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.106249316 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.142981029 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.124140723 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.103560085 seconds)
  done (took 9.292360375 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.126655548 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.159101189 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.135008534 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.108714395 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.130362422 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.091016897 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.116824848 seconds)
  done (took 1.814753229 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.099806589 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.157728333 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.132833659 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.155630673 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.151706198 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.137704261 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.141250542 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.096068696 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.141934622 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.127277131 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.121877732 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.179568255 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.124862983 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.104488954 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.153576372 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.100001791 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.155812681 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.127043762 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.103002268 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.155873133 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.108390789 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.1513161 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.140229663 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.094567081 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.151566002 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.103606805 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.191155164 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.135792517 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093815757 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.125889465 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.09815055 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.189382666 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.140237065 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.108590687 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.117716032 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.121818464 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.143079708 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.133083893 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.123795815 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.13179238 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.123576297 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.1349578 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.111079078 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.125709094 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.129166122 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.108895389 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.13579024 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.102558641 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.12430666 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.124065177 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.140074067 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.15009819 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.101974651 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.10495676 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.129455682 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.129563842 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.107466497 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.125947743 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.126235324 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.133956159 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.152365115 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.12736995 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.145375573 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.1276614 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.141254655 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.142697532 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.120839471 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.1302715 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.102991295 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.126887089 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.119524679 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.124647015 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.130264436 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.109667799 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.135819916 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.125357848 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.154434967 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.108137488 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.135866613 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.100762401 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.121852576 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.09948423 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.137922666 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.105871702 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.12352566 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.136100119 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.1050581 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.124683628 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.097967601 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.142106001 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.098083424 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.129325488 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.129982887 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.097048821 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.134409084 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.145225693 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.105492987 seconds)
  done (took 13.286785098 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.103999325 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.102626376 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.125885223 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.099038249 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.121723589 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.097756403 seconds)
  done (took 1.610650272 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.132947357 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.12793203 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.113057954 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.126949661 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.16320515 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.122607049 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.146530904 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.139106083 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.115975025 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.139094376 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.121805599 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.155868643 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.160110009 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.111137657 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.149485578 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.105303001 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.146463077 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.108913213 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.136667453 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.103119695 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.138913411 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.128252699 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.099439358 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.145236227 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.109102264 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.128292217 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100689244 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.133375707 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.133662616 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.104332213 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.128136079 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.103403241 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.129221123 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.103916896 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.144217026 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.135287733 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099205188 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.134380995 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.105447485 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.129345195 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.123299688 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.129080163 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.108800854 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.129534888 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.12868178 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.101544596 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.130152181 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101525317 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.145180046 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.110673745 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.130655014 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.101719737 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.125912192 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.104328347 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.126702136 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.131381183 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.105571106 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.145702042 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.110872269 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.132406955 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.099478333 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.127128668 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.130331958 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.102515473 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.128937694 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.10495718 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.127453605 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.097921001 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124542469 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.10088277 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.13022688 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.097989637 seconds)
  done (took 9.817503666 seconds)
done (took 36.76585794 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.684987356 seconds)
  done (took 1.637532653 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.844014637 seconds)
  done (took 1.797419998 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.270243973 seconds)
  done (took 18.251100485 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.500410903 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.592402241 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.009896832 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.175772307 seconds)
  done (took 3.230173149 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.959935045 seconds)
  done (took 1.934830342 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.311848019 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.272810718 seconds)
  done (took 1.542095442 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.817005165 seconds)
  done (took 1.780217186 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.552386219 seconds)
  done (took 2.514261008 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.36639489 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.209155257 seconds)
  done (took 1.551957122 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.596116283 seconds)
  done (took 1.566050428 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.654243979 seconds)
  done (took 16.628462784 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.256581216 seconds)
  done (took 1.242029378 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.317224462 seconds)
  done (took 1.292047208 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.582686738 seconds)
  done (took 4.557376934 seconds)
done (took 60.492937957 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.111445277 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.13373592 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.10761611 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.131017336 seconds)
  done (took 1.45063189 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.11743776 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.13358359 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.108093167 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.129362424 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.113375553 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.135861988 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.110468399 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.194102112 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.131497264 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.107771135 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.133084532 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.105262207 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.131528971 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.103432138 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.126677111 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.110154966 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.133703589 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.107347734 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.128639371 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.132090159 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.101092187 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.131088185 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.106061143 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.127506035 seconds)
  done (took 3.933122367 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.111522769 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.10838511 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.129585612 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.10436333 seconds)
  done (took 1.432153968 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.115328535 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.147392443 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.117409597 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.13380414 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.11674196 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.14042657 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.125513273 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.097845353 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.133494895 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.111574572 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.128941502 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.121004271 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.144782607 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.096680606 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.13644362 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.102644683 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.123701872 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.142679437 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.108558773 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.140341411 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.100793785 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.137585797 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.107999916 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.142333601 seconds)
  done (took 3.957230964 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.186690896 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.140462339 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.153809443 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.106946914 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.175048236 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.150417602 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.098709963 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.152608142 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.099591376 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.14816442 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.128674588 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.148287656 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.140478955 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.126706858 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.100145595 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.131447002 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.115767352 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.143174698 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.127855733 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.111733638 seconds)
  done (took 3.668084794 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.111681882 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.128718443 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.094764403 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.101750225 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.132086376 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.099975594 seconds)
  done (took 1.657046881 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.10118431 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.100997519 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.121984585 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.09570418 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.126814316 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.095265352 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.120438748 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.094887883 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.099756936 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.119961099 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.093626053 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.119568072 seconds)
  done (took 2.276626264 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.215795261 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.101169596 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.12541263 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.097813694 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.13027551 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.123167714 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.10926394 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.123510497 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.127584294 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.128794604 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.09783799 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.128053089 seconds)
  done (took 2.491909088 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225335237 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109200364 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273152851 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.432185491 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167844723 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173899614 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.334693491 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170779712 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.191501494 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14502978 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203533966 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164596475 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161996598 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190366928 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148651453 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.188496125 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19265315 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216646075 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160470879 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214655387 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173200008 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174346378 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18821974 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159682935 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116366977 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168100419 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.126529768 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132169938 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179081673 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176694962 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182067985 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15521531 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120404964 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237436702 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224786998 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22024415 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.377260567 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140206023 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.203893236 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.198088409 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.265731864 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123185807 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23109855 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165503529 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113380216 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192328808 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166913204 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.188736706 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.142273396 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146520134 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189321137 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181251551 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.18477607 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142777063 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.379097006 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131184946 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.15640189 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199615671 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194341925 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220584011 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177737789 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.103150735 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.258846995 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192147445 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196368299 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.157606185 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.174527541 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105822198 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182580445 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.226454944 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188194874 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179874763 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.190748396 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141177249 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17396834 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177500765 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160157988 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183874057 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165861391 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.101891301 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159549415 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141856193 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106126112 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.190618203 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101117299 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235275509 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113714538 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.193708459 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250505379 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164135049 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166062219 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170769222 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173287131 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126710773 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.125161661 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15265236 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.165762129 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138415852 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136024952 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164027048 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149137373 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.106704544 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162225954 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.127823307 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166746673 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.112985206 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175158935 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171695819 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.136276885 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172980385 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130823356 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.163145994 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177983028 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217075093 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11226918 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139457276 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20091043 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166599554 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.117460284 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181020791 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.216867669 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.143098087 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143075107 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175639845 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22282639 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122001846 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196483772 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14656161 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140962282 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.156575839 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138915869 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161204089 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.163745962 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135318022 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.159551728 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200514746 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.106115492 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142896201 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185943492 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134745291 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110748127 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150044607 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142920174 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.122802181 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.155916064 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.146462658 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161684287 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165947167 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159553873 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138671193 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146207832 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225045887 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111770314 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.169437738 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155674492 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.097035215 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.184033578 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216590107 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108585457 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205284358 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.199752435 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243205759 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167979295 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13671812 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183560406 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106638126 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.124948669 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173628977 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169005414 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170989986 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.190438217 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276301978 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.172511361 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.157696206 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129345628 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199433217 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.179371463 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13438968 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.15123974 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167058871 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173672455 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.126821406 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.103757504 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.134901414 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148801283 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10927323 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137915514 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189962067 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171194078 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.263001487 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167331497 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124450412 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189951075 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.133716506 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173192898 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.180933556 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14691521 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.190299097 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187591432 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176085565 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148215038 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182489544 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.098014325 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1310733 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.111697449 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17023495 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137028435 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138832937 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121195023 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186671594 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208259337 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128380377 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.274682921 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172591108 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195752415 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.128082005 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.169815343 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177103373 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162998502 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.163119622 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137544 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.168409082 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184640785 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12353172 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224480323 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168489626 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174044623 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205892773 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.162891318 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134361764 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128094497 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172232289 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146975492 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171180964 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151052005 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114286966 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159987788 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.14003234 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103691837 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216728122 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123762486 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213588033 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.161210492 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180505733 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105027242 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150159885 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166779921 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152154065 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.094846433 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17866453 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218325713 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122804836 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167831023 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180704541 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134755654 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.356803924 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219549007 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191437143 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113894119 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148619549 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167623032 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164441229 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172004819 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186173416 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149026803 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186640512 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16420525 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.121211817 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140228445 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152585711 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128985359 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.155556542 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.138609725 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.160777376 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.150690413 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192950001 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148406041 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137211868 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170092709 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.152058857 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.159769442 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120378454 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235336032 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163661471 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183855019 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.13377223 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.172359392 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233728964 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102156434 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136398056 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.104987212 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186614398 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138749543 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165910237 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.234498779 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277626206 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163254039 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173111538 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144277029 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.097747131 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166147699 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156217123 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.271488434 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146575078 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.116213878 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224919238 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.129428371 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136138347 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167798058 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.338743182 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149612783 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181565909 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.121177397 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.320360255 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103755526 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13670135 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168699385 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177373591 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.14526416 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.164809221 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169637024 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153704134 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168304005 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144341376 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.237411345 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25777724 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17814973 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184351542 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.151940236 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163575239 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169024813 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182455335 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12151347 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.153285387 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170146049 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189254827 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.194253457 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.13941627 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171064043 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169258596 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13841872 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206992134 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112079634 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236454104 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110015419 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174027015 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145546403 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128704166 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138652881 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.258476586 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136952038 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183507462 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164420165 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110398046 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131643514 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157010002 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165177116 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121582982 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.135181706 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186391486 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.130569784 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141843786 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18740745 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137884754 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162648719 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150668567 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116033364 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149512498 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150828576 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113527249 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.174047181 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188317463 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.136313847 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184595049 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183967342 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17228797 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166809992 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150561436 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.640203978 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.133750957 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189211775 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153186928 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191383138 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153804182 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172179546 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139704359 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155656976 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175106651 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156565221 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.227420561 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173458928 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.164945599 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109784941 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151508051 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150607437 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.136248753 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130275122 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171620236 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148790524 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.142082787 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.162755181 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123354652 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.152551602 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145462245 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188497321 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125421308 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217446158 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186854219 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116250028 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17458245 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182003532 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137122487 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.170282629 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180773372 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148609731 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155720918 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.109663981 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.143649106 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186299999 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.102091452 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171557672 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16915355 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175361669 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173610012 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.141176276 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139348328 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150960357 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17036761 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139750922 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.161844294 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136657605 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139584406 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.135637412 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134196138 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168513474 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.164889575 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133092919 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.150836777 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185959082 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.133058246 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110482263 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.359559901 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166079471 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200387903 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.158619767 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113215401 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152606406 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163627554 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.161231284 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166957224 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.105957152 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141653454 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.138177024 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.182251713 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.13336231 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162983225 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202474206 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168154671 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235926004 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.11450153 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.276234728 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1461255 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133638343 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.135745391 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.136083533 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121299795 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143154337 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150557643 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.235643372 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185582997 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.162296885 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.150046317 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103433755 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.133420486 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137519086 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140660646 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162288279 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166090269 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149702659 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.095248705 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150888867 seconds)
  done (took 80.955943182 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.156392652 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.137239935 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.153464961 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.199078629 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.17152913 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.248690653 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.210390185 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.231132154 seconds)
  done (took 2.576268165 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.109721693 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.163803518 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.146069832 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.129788852 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.099724729 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.339273524 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.147520877 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.128465983 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.154676275 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.138412086 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.09835996 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.576740429 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.105703331 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.132057918 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.120614251 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.096225529 seconds)
  done (took 3.744343497 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.197496139 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.534427271 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.912422747 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.253769699 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.235973461 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.16202457 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.734402872 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.194412973 seconds)
  done (took 12.295460056 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.133684791 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.148744934 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.144923683 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.174015969 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.133076379 seconds)
  done (took 1.811563579 seconds)
done (took 123.218071029 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.1057777 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.133911997 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.102672785 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.134536876 seconds)
  done (took 1.53403014 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.118716625 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.09103078 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.117475276 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.087378103 seconds)
  done (took 1.478404412 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.507424026 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.093877063 seconds)
  done (took 1.706143549 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.128446887 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.142350064 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.112686021 seconds)
  done (took 1.462807124 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.114360335 seconds)
  done (took 1.188893384 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.107550468 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.108210122 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.148284204 seconds)
  done (took 1.439720973 seconds)
done (took 9.886023068 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.125798978 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.441918867 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.394341243 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.141510064 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.729574713 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.384916083 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.042732078 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.164962865 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.148660131 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12811229 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.113262578 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.704743556 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.025028004 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.347889746 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.014642985 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.439795106 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.68511483 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.124729608 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.131061761 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.098339455 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.021745782 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097597636 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.127169363 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.099428581 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.681072945 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.428187358 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098212309 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.488619478 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.124467823 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.101432897 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.416340749 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096975444 seconds)
  done (took 17.227085644 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.107869662 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.190414543 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.110410957 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.129147768 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.100313036 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.127459663 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.107876634 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.138036022 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.186774663 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.100699862 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141667876 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.098802343 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.129761762 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095554692 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.144582025 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.098532091 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.126026744 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.098843454 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.131375282 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.097812764 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.143948509 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.099081813 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.125838946 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.098114775 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.12395138 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108884715 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124235039 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.109374141 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.125300997 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.100690856 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.129595194 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096660551 seconds)
  done (took 4.927748382 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.154857763 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.198142946 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.137269187 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.132015934 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.179680876 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.130666911 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.183392093 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.169135482 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.193423294 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.128744383 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.114094315 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.127060682 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.133330689 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.128758827 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.116945552 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.124321854 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.099029467 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.126225635 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.103416584 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.126829456 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.144380224 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096708287 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.099595755 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.127717762 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.098242845 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.138604225 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096737475 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.136776999 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.124001271 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.101931241 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.130902388 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097560643 seconds)
  done (took 5.28007265 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.108839247 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.135983411 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.124741943 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.146538788 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.101751869 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.133392702 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.107157485 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.129737654 seconds)
  done (took 2.071814204 seconds)
done (took 30.580501938 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.120173722 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.108062156 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.141010034 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.114436733 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.13685979 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.126035653 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.12437213 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.110872715 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.141687004 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.110139549 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.144289308 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.099350595 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.125754614 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.098846601 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.141301145 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.103153582 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.143380133 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.107506265 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.149990172 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.114942246 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.129100756 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.109385738 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.111282109 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.146664773 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.1482847 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.121592016 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.144071503 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.105493965 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.125169416 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.097944991 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.146377687 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.124750089 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.130718287 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.11564414 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.129256867 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.104488247 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.127180063 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.098746666 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.14060417 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.110847728 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.133696954 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.110721559 seconds)
  done (took 6.242027277 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.129778317 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.173919797 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.103182827 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.12918807 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.098144747 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.165547661 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.165433876 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.102480288 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.125621079 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.123440304 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.154051826 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.097718798 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.126043777 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.098191802 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.126564068 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.098742405 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.149791847 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.123231486 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.158523653 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.130351133 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.175966506 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.16201919 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.162841744 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.126608987 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.171017834 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.165904752 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.121910505 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.165450445 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.130259577 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.12764317 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.15593192 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.137081254 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.129831566 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.098084124 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.166146926 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.165594775 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.129282481 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.171320247 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.161458304 seconds)
  done (took 6.497239877 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.11058575 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.141623421 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.119588444 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.19289105 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.136091034 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.139760331 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.107000552 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.14454054 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.141849821 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.098589859 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.108778604 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.156966824 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.143867041 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.105139511 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.129861639 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.112702358 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.146472784 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.100389228 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.131330224 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.116974204 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.142655906 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.11101393 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.139988987 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.107923605 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.12469267 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.105920122 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.129287404 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.113021609 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.134224639 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.105748863 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.129242276 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.102417428 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.132731199 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.109903177 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.131034694 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.105632361 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.150082398 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.106160042 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.137953819 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.131710269 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.137729862 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.102343819 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.147917802 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.168847477 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.10325901 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.132907129 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.104257339 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.135580362 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.105299785 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.142763268 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.107794415 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.126296869 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.114141045 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.126546827 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.096400832 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.140177024 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.099439295 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.127782998 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.106001619 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.131953169 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.118686408 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.132683136 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.113037294 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.129747727 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.103647312 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.126264933 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.097946555 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.130752884 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.119609732 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.133104758 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.138541224 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.130862596 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.10351995 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.135441333 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.103347437 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.134285095 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.097535977 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.139670822 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.107467448 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.133171143 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.10831697 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.100622999 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.129447046 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.115413109 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.141243262 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.134210506 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.103317473 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.132893835 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.101498853 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.126555861 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.112181474 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.13160541 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.104187031 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.144486261 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.098726928 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.127623967 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.105408561 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.132947025 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.097048557 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.140812756 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.103955518 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.127283911 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.108995939 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.101990243 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.131417653 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.108081621 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.129179731 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.097810219 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.131337253 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.104964612 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.125654163 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.100441041 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.130166898 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.100831179 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.140071126 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.105041865 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.129097342 seconds)
  done (took 15.381366759 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.24974737 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.224907721 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.202528893 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.310382198 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.151049065 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.126707302 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.226610361 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.178347339 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.129677602 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.13939867 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.215164513 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.167820854 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.191963095 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.202162632 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.190440974 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.131626698 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.118026475 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.180954064 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.229400907 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.308648123 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.14800487 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.112876346 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.169142235 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.168216615 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.146977916 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.114229389 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.154272213 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.148117532 seconds)
  done (took 6.134462353 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.119347786 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.165687558 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.10695651 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.152697287 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.154264813 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.102366898 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.134583375 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.099269169 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.140472753 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.114119328 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.129343792 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.105823136 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.133750836 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.107886025 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.128634183 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.108719012 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.137309311 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.108529913 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.130840329 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.10295664 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.14124433 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.11618524 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.133213025 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.100657354 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.146172062 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.130372811 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.101736323 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.150778069 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.139623748 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.125260995 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.124879753 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.10848334 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.142999235 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.099837754 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.130366409 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.101587938 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.101565586 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.129961044 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.100732347 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.125014956 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.098264435 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.119073213 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.10128111 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.145480837 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.105459614 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.125693727 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.104491174 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.132563832 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.106525196 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.126096154 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.100655908 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.129647328 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.10318065 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.1102679 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.131577331 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.136064509 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.102839969 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.10009586 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.137809851 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.102102369 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.124688288 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.103076678 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.134147532 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.103111722 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.136050944 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.105666208 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.128707213 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.101339075 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.134015155 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.105831721 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.130654474 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.108636694 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.124902702 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.582544999 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.138212769 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.107208728 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.132276378 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.10054584 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.130920712 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.098305099 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.086891958 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.12672416 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.086131482 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.13276451 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.09846088 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.128834653 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.102131935 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.134298216 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.116138547 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.137175239 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.107807642 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.128600469 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.101245503 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.131886067 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.096708629 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.133614253 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.116368082 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.148108625 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.097424165 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.125027195 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.114763107 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.12997559 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.096985519 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.119750811 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.108832528 seconds)
  done (took 14.092015604 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.144037654 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.17914149 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.131015562 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.118282351 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.165407688 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.173870845 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.107971911 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.138101242 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.099646681 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.118868133 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.131848797 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.107471148 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.131744496 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.113753339 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.16892231 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.13809285 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.103482329 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.142961667 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.10789972 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.183205797 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.15046253 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.13885338 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.169039702 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.130964238 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.104873623 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.168417072 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.173722177 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.113231888 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.140694209 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.140878488 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.142442047 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.171781863 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.170148144 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.10461108 seconds)
  done (took 5.845075892 seconds)
done (took 55.265503379 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.20044285 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.418109083 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.176080302 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.188982963 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.207434259 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.186163286 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.175783423 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.378488036 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.916775095 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.166359905 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.181585288 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.199076029 seconds)
done (took 27.499840415 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.22834377 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.349598143 seconds)
    (2/2) benchmarking "String"...
    done (took 1.492152867 seconds)
  done (took 3.943312125 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.183351024 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.182710551 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.428315758 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.186849695 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.182491322 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.20188289 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.187762796 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.19674004 seconds)
  done (took 15.667306347 seconds)
done (took 25.122554942 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.213931872 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.343450841 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.431306932 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.191375183 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.185293026 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.178008011 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.191045943 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.214976915 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.183992393 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.18431234 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.176373536 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.450819224 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.201184467 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.562675815 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.182695065 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.1817481 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.204590704 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.388892754 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.175132747 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.165335936 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.181704224 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.17489937 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.193041226 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.211435636 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.185629717 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.178376068 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.183793786 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.176584479 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.367622939 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.208601393 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.217346195 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.177356751 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.185573276 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.178531001 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.283083896 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.21629237 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.364957506 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.185441229 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.173962298 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.202020476 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.368060456 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.569843722 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.182156665 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.187812705 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.191355137 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.208607546 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.172415606 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.893297691 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.189772227 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.192009555 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.217694312 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.56166673 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.184590393 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.188558121 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.19470515 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.408384952 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.207723294 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.201546335 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.217135285 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.189621706 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.192440228 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.20355247 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.231765068 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.179942892 seconds)
  done (took 141.890559055 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.187327437 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.185064507 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.187215904 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.246897984 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.187207625 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.187164358 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.186240018 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.186577441 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.187106077 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.189638435 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.188873255 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.178830107 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.184819127 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.193132779 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.186422737 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.207252453 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.189351645 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.185361851 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.193808072 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.187855572 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.190955939 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.186400237 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.189670968 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.178638611 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.214554772 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.261739106 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.211239477 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.206850865 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.182552605 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.185863741 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.210158904 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.245794871 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.740626457 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.043098046 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.202694079 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.185077664 seconds)
  done (took 79.56547438 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.185117535 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.184970474 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.185894088 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.214580079 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.182221537 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.697214492 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.696092516 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.907552962 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.415876714 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.322762818 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.417486695 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.182968236 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.272243872 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.18717814 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.175364872 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.19543403 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.209241727 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.175490625 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.182268924 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.686777849 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.1968713 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.401222407 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.348698769 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.186550868 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.210570738 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.575683218 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.17270695 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.209976432 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.499960946 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.216385175 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.174406424 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.497677038 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.080709683 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.286357042 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.173998432 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.209026353 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.176408454 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.458362704 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.172539649 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.182936683 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.186059565 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.181678008 seconds)
    (43/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.181415724 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.800833997 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.18170279 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.673877419 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.182446933 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.062936623 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.173826464 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.182178239 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.01690782 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.732654807 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.197075735 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.181482729 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.183712286 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.179376404 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.178007888 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.2104678 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.018852797 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.273192954 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.184286309 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.183963528 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.209649754 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.18423929 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.212217431 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.17334258 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.622811384 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.254459229 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.298185962 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.673683264 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.181286748 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.276562052 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.291864747 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.173914898 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.181215637 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.181294421 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.182628272 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.289936023 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.17518421 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.557505175 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.336553189 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.186778725 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.289679263 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.278216808 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.176217791 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.505309933 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.179501285 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.18327178 seconds)
    (89/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.183835393 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.853136985 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.269277455 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.176820875 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.182244943 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.179046564 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.555347134 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.665947585 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.327901937 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.184206291 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.182539488 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.292227946 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.186267977 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.564625048 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.65778608 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.8045547 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.186406417 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.293697106 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.342818006 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.190412054 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.180079015 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.288917495 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.186199732 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.240721553 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.184017702 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.578228441 seconds)
  done (took 361.75262317 seconds)
done (took 584.309886005 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.892944798 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.846863748 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.974287559 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.870447444 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.844560277 seconds)
  done (took 10.530082604 seconds)
done (took 11.632012439 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.359052258 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.350364249 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.23204422 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.361004585 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.20733652 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.37583241 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.333078845 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.198978439 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.283012555 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.24953976 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.281105557 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.22653535 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.218435309 seconds)
  done (took 17.777605878 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.497620003 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.179515834 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.259395045 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.514114965 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.219403961 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.522626867 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.40324663 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.195012069 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.39587001 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.193592771 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.200999677 seconds)
  done (took 17.683519305 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.512016429 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.178835352 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.26073966 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.504302549 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.221051312 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.54756637 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.385481045 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.193324604 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.380232624 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.197040319 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.2006359 seconds)
  done (took 17.684837554 seconds)
done (took 54.248021156 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.224083693 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.348606586 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.212783455 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.198051622 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.18942846 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.1894193 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.191505362 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.195255562 seconds)
  done (took 10.852398349 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.189910501 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.195208784 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.195181101 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.189985759 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.193660884 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.195058707 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.194100356 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.196107012 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.193545958 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.193861766 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.192243879 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.194964602 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.198953585 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.191942127 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.191702321 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.192376568 seconds)
  done (took 20.203505524 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.196206849 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.19186608 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.193333917 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.190470998 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.187535163 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.195131388 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.192263889 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.189658187 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.188957787 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.190642226 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.194846119 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.191153692 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.1924705 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.194737091 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.187606836 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.193240946 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.192297693 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.189029883 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.198221618 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.194735589 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.190812082 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.192138252 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.190428982 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.192966329 seconds)
  done (took 29.718538078 seconds)
done (took 61.877154963 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.187863641 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.188761806 seconds)
  done (took 5.483535066 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.250699774 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.260307614 seconds)
  done (took 3.619222521 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.195671511 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.197442356 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.199882295 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.198772742 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.196325787 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.193782865 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.199877325 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.196689198 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.199667551 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.195910368 seconds)
  done (took 13.080010805 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.195705052 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.201677008 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.193625145 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.199212887 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.201234356 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.194694659 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.197598455 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.198335595 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.198696759 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.195957341 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.196831595 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.195763125 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.196784082 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.195971304 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.196037983 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.192873625 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.194497788 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.197668047 seconds)
  done (took 22.650302136 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.207538565 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.21746063 seconds)
  done (took 3.53164036 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.322080338 seconds)
    (2/7) benchmarking "second"...
    done (took 1.23800537 seconds)
    (3/7) benchmarking "month"...
    done (took 1.302795493 seconds)
    (4/7) benchmarking "year"...
    done (took 1.292983931 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.236225834 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.21831301 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.23915491 seconds)
  done (took 9.956958503 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.193993955 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.398520357 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.497568778 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.795686683 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.203279016 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.197225856 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.09347228 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.197342178 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.207183453 seconds)
  done (took 13.893045002 seconds)
done (took 73.319073454 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.188501575 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.225184636 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.198346377 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.204009572 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.535274879 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.225647485 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.193808916 seconds)
done (took 15.881288148 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.180213291 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.189189052 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.185004322 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.199524479 seconds)
  done (took 9.862566639 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.141247341 seconds)
    (2/2) benchmarking "read"...
    done (took 1.519084916 seconds)
  done (took 4.770547163 seconds)
done (took 15.743636825 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.197647684 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.199073369 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.20284597 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.203909672 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.194835514 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.195055029 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.204980174 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.201475452 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.200674801 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.200337508 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.199935869 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.202628379 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.197889969 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.196457325 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.19703363 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.197345566 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.199007133 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.202032765 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.199989126 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.196892668 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.2029543 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.200937555 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.197572699 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.200134094 seconds)
  done (took 29.903776049 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.200761662 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.198670249 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.202166467 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.202553443 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.19381377 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.197887816 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.205044333 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.197775843 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.202822831 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.201485556 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.204369383 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.203585117 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.199651639 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.203148189 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.20194768 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.199473059 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.202781159 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.20261837 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.206519753 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.202120833 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.20460218 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.198381095 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.198031888 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.202869178 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.197622329 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.200899137 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.205916288 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.203942454 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.201975519 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.201753404 seconds)
  done (took 37.155343363 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.208362026 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.212546988 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.208509933 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.199378825 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.206186123 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.204895797 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.203374296 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.204476112 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.204738028 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.202646734 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.203247289 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.204716508 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.206699353 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.204195763 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.203235499 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.206690072 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.204812881 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.203255677 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.201873147 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.206116322 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.208885219 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.207174747 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.205297749 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.204023155 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.207818632 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.206472715 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.204181898 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.20765284 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.20639218 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.207760842 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.209729871 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.21377372 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.209974642 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.208736946 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.206828122 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.208645835 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.21269608 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.214110507 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.209069858 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.205442157 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.208292006 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.202717845 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.206699789 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.207902041 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.208004259 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.209729404 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.209048363 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.207784692 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.206144405 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.207079217 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.206161266 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.208099012 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.20239251 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.202961484 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.200107136 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.201451555 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.201099753 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.200545749 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.202341562 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.203846575 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.204660679 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.20208915 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.201357672 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.201266916 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.201894089 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.19986704 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.200300932 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.201614095 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.200564572 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.192817112 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.193040024 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.192180563 seconds)
  done (took 87.874011357 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.191374586 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.191903155 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.19037584 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.190211279 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.189842725 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.18661988 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.184127714 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.183454189 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.182118138 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.187496966 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.186205904 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.183379864 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.182297138 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.17534819 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.176427839 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.177890679 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.179932683 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.178650735 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.183205963 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.185003194 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.183603275 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.181930591 seconds)
  done (took 27.151848036 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.183144752 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.185302697 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.180608224 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.184824303 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.176931434 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.183071823 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.181289104 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.175327223 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.175336014 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.170571794 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.174675359 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.177962586 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.17447696 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.175413041 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.173704375 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.175149432 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.171443884 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.169946714 seconds)
  done (took 22.280799953 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.17167726 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.169035677 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.170101596 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.167367208 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.173964308 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.169378836 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.168317617 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.170318145 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.171536481 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.169880282 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.16959492 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.168627772 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.169660099 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.167953965 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.169892529 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.170545912 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.171335792 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.168086076 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.173827443 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.169177386 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.168102565 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.171900061 seconds)
  done (took 26.828046366 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.175375744 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.168947055 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.168269893 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.167659858 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.166249918 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.172288529 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.172435801 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.171812001 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.170101703 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.169005298 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.166237953 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.170375731 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.170747597 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.163418426 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.16380226 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.166191514 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.168791042 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.164795948 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.167858175 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.167007523 seconds)
  done (took 24.458656828 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.168809401 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.170377096 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.166644069 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.168342256 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.167078272 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.165475629 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.166894648 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.165267049 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.163256801 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.168052876 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.164740461 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.165575939 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.165621405 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.164407474 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.167280497 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.163819758 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.167526039 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.163233903 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.163203562 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.162453482 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.162910745 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.163060693 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.162941721 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.16311566 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.16398624 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.168254959 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.164847845 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.168231221 seconds)
  done (took 33.717661891 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.169577636 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.16718438 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.165904445 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.163042387 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.162826849 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.163124459 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.166525699 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.166417474 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.16481753 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.163542417 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.165841449 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.167069735 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.166297616 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.171467563 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.164451315 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.17046726 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.169107571 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.165840163 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.16480301 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.164395509 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.17054772 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.166885721 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.167873769 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.163089276 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.1629977 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.169205768 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.164420222 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.164954578 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.169664819 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.165328498 seconds)
  done (took 36.069548962 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.216447371 seconds)
    (2/2) benchmarking "in"...
    done (took 1.215421951 seconds)
  done (took 3.514464073 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.165236857 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.171514506 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.17030164 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.168514545 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.168358761 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.170054943 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.168668698 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.169102758 seconds)
  done (took 10.436379084 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.172018952 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.16632347 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.16924356 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.17103714 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.168883279 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.16677257 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.172833864 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.187482541 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.171383223 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.172752747 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.173287291 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.175326825 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.170409581 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.168820824 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.168081694 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.170556345 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.16864334 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.171262609 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.169823321 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.171247149 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.171313868 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.173333261 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.172279123 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.167121867 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.173979788 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.183974622 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.176459726 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.169927177 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.173108975 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.171692146 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.16883887 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.167376633 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.17361972 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.170396116 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.172049007 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.173317145 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.178542276 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.188887371 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.177418721 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.174124978 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.173484122 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.168104008 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.173918072 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.173546074 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.174468976 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.173167158 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.171531083 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.172629128 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.17370242 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.176281764 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.176957448 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.171967503 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.168850198 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.176512909 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.175779555 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.178978519 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.189281436 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.174563672 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.182218353 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.181512601 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.184258333 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.194084505 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.177297563 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.173292863 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.182222564 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.194372092 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.181277425 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.189639815 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.170940944 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.175467418 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.181658197 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.186594445 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.191956065 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.17454167 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.173306435 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.173315458 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.176648247 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.176768977 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.182701935 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.193730561 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.173988947 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.178068063 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.185086583 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.19431087 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.173683568 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.173726857 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.175211932 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.174847545 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.181705708 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.187049882 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.198518251 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.176618659 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.177319326 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.175766213 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.174820524 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.173239368 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.174430153 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.175321915 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.171286814 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.17628626 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.177405433 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.176896205 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.183106501 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.175226098 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.173721732 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.180676104 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.174924106 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.174904424 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.180428628 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.175199224 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.175110943 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.176461091 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.179624657 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.173550801 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.178095324 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.182470874 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.174296288 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.177390871 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.177129215 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.175544918 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.184407517 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.200385604 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.17512209 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.175627148 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.180891101 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.187874491 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.177529717 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.178206734 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.176296236 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.175524853 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.172680674 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.176203638 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.175711217 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.175555882 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.17764259 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.177692339 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.173725551 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.175997578 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.172361512 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.176006073 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.177446461 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.176199186 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.17664502 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.178304204 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.177411254 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.178191018 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.180888153 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.17578594 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.176199248 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.176963685 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.172944863 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.1772644 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.179002513 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.175926373 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.176024904 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.1766848 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.178221902 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.176497011 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.17658376 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.179731005 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.178461072 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.18345565 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.181466254 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.177424091 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.180518367 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.176873449 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.175577195 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.176385691 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.1784153 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.176277331 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.177487831 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.176669879 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.178302935 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.185895844 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.177708844 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.177065623 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.180634895 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.17884969 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.178668713 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.177221923 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.180310442 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.18470971 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.179454429 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.186248299 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.178459432 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.180517328 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.179970087 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.178574545 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.178720021 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.180351077 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.185645625 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.187428336 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.190468272 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.202753119 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.181435186 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.184423304 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.181538524 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.184202601 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.183125075 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.178802785 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.182476417 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.179799467 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.180494103 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.181029197 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.181123882 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.179178402 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.180067461 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.18138278 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.181737095 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.180497776 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.183703429 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.182593675 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.180073187 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.178793716 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.18162331 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.185150757 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.180841148 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.181079025 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.180904424 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.180160063 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.185592703 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.18297904 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.186337 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.179036375 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.182458673 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.183060687 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.181163394 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.18071016 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.181030873 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.183593015 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.182917813 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.18854206 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.199277269 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.182207623 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.188306025 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.196627675 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.181733949 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.18429071 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.184321883 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.18160492 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.185178608 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.190591377 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.183082931 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.182615359 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.183993572 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.182354709 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.181566936 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.188428663 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.181418791 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.184661977 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.183529341 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.184153856 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.180337267 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.183979613 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.18353859 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.183684757 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.184177921 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.185772689 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.18473684 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.181870149 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.182629966 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.184862759 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.183400544 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.186140286 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.190286387 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.188656659 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.185043871 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.18474398 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.183103673 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.187981032 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.183448026 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.18451766 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.184783818 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.19558514 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.203706833 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.192744438 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.200328614 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.1851337 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.189302055 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.201010843 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.187727789 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.182544946 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.185155845 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.187053867 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.184655117 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.182029555 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.183292916 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.186469963 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.185958699 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.186111193 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.190729157 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.185364282 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.185756405 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.185887252 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.184609467 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.185258028 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.185719601 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.186263293 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.18690341 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.186499175 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.184902493 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.186114015 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.192269962 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.204319326 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.185511271 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.186380203 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.186118346 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.185184886 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.187736986 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.187146823 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.18850099 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.198472772 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.189751856 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.194570641 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.187751911 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.196466822 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.186307576 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.19018577 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.196545 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.183141804 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.186275119 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.185049583 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.187077027 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.193275306 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.204957812 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.188391139 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.19193524 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.188867936 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.189928745 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.188457315 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.187675287 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.188766227 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.187651038 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.195552878 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.209339543 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.191398872 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.191047869 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.185763826 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.190421681 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.188620734 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.188008544 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.191363103 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.188151575 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.189278742 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.189445636 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.188162863 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.189844466 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.190062614 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.190291567 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.187403081 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.188152197 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.196825622 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.207978988 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.193498443 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.191363504 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.198490463 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.189987034 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.195190565 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.207710882 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.189485304 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.189017421 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.189476905 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.191161698 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.189126983 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.190642842 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.190080161 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.192260658 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.195593636 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.190465295 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.192958987 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.191334252 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.193144222 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.19225499 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.200740643 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.210727457 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.19483765 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.194851046 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.189407204 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.19228809 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.196551934 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.191420102 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.191290298 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.192655716 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.199910107 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.199406632 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.194709737 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.192097904 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.192568232 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.193377899 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.192475538 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.190377942 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.193407993 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.193329989 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.193649051 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.192528482 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.195443329 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.191162981 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.19887723 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.193855337 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.19363175 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.203652919 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.19478162 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.199443125 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.193376663 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.193726023 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.191340251 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.19393241 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.192589351 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.191541691 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.193492732 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.197169374 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.200420522 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.199623514 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.19506534 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.194933996 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.192201702 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.193339431 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.194031113 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.194688994 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.193168528 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.194657552 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.194289512 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.194434685 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.192104874 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.192838431 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.193676474 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.19370314 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.194991214 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.197206323 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.201065401 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.193752433 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.191273902 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.196338309 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.195397739 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.193798296 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.193282776 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.201438465 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.196766027 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.204555897 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.202975549 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.199047582 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.195887046 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.198435696 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.203290456 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.193935337 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.195881941 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.195278464 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.194854003 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.195088971 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.200356393 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.195259079 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.201787033 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.19519129 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.193144941 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.203045233 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.217297361 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.196406059 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.197984311 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.201335264 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.196873479 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.192952634 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.197680947 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.196668117 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.202425144 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.215250652 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.195506948 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.20066175 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.196162369 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.200007212 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.202093782 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.197828345 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.196947353 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.195683123 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.19896594 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.196582661 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.19785658 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.194537323 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.195825444 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.19595537 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.19892477 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.204554921 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.193187452 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.200349572 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.198056073 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.19720499 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.199204917 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.196044154 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.19650634 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.200012782 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.198191913 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.199857288 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.198538078 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.20040223 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.197811007 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.199165765 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.203933165 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.200168242 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.201171116 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.208432472 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.210221436 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.195470674 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.198729082 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.198785801 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.201229984 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.19905097 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.2003054 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.199649557 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.198809378 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.198048697 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.198113963 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.198587101 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.201582322 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.214133474 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.218962495 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.200022372 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.198327174 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.201101429 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.200366144 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.197539309 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.20136312 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.200169927 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.201568748 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.207085187 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.200110818 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.206688772 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.217152977 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.200379881 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.204510166 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.20267119 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.206991179 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.201590157 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.199541132 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.201400978 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.206607583 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.214325871 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.202707458 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.21077543 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.227552895 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.215149569 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.202729435 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.202286595 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.201315877 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.201799136 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.202406991 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.203383754 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.204731173 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.202043863 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.201051607 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.201236064 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.208689869 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.201081954 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.204063569 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.202419458 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.200392004 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.203025297 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.20075877 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.202516703 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.203778018 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.202499003 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.203039135 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.202459305 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.204039399 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.217063764 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.223712135 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.202115391 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.203205245 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.199397192 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.204845655 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.203597224 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.21177588 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.205497144 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.203439272 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.203311431 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.20607497 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.203001026 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.204475646 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.204812042 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.202901013 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.202760818 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.200434132 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.214177829 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.224461854 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.209779683 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.2031028 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.203475896 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.206611279 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.205654391 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.203982937 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.205297438 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.206343282 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.206052732 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.206954198 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.206116592 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.204043095 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.20778572 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.207958838 seconds)
  done (took 709.711585916 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.20336276 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.202525508 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.201147549 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.20161672 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.20287659 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.205470768 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.200000173 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.204672326 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.202806804 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.202022048 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.202494286 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.203164647 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.203081733 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.202724552 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.204511022 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.203001423 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.20288492 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.202959655 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.203877734 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.202158882 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.204539096 seconds)
  done (took 26.379105254 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.207724201 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.20343525 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.205139037 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.206072074 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.204288717 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.206737669 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.204839117 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.209418834 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.207123099 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.205408692 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.209041495 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.207103653 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.203614 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.203548507 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.205659151 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.205835101 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.208264323 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.204729394 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.20942931 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.204791862 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.206723909 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.204889385 seconds)
  done (took 27.65275023 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.209672893 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.208054713 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.206631787 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.204463715 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.208109947 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.206759395 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.207559286 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.208291015 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.207846665 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.209687554 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.207895166 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.209040521 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.214620177 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.211594142 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.210760055 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.208403547 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.20796772 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.207754644 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.209044898 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.206672203 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.216193351 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.223101857 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.206932336 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.207866045 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.208148018 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.21005004 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.209506342 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.212326106 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.209892849 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.214391165 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.20883742 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.209322243 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.210064896 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.210294749 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.209504682 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.217467595 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.21404847 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.209028247 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.208604 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.221264458 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.227939599 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.211460476 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.217018572 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.227257069 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.210456267 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.213347856 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.215590325 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.207665628 seconds)
  done (took 59.25971665 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.211084385 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.210059767 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.207459773 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.210962581 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.209812616 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.210159697 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.211273206 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.210462647 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.208011184 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.209275611 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.21166539 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.207911321 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.208029621 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.211092611 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.212197744 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.208492634 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.21021496 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.209490838 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.209160462 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.211254079 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.209637605 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.212401539 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.21214564 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.210560884 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.213521806 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.210208091 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.209396255 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.213966254 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.20924383 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.210228383 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.214115661 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.212259018 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.214705721 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.213880108 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.213411974 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.214890583 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.214251756 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.21211487 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.214829546 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.212686147 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.214927567 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.211791567 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.214415638 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.21433218 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.211524072 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.21036197 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.21138262 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.212200561 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.21111047 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.212632751 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.214478359 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.211564499 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.214733285 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.209715723 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.215381247 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.214217093 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.212837773 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.212334033 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.211899135 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.211156614 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.211226939 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.21389329 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.212717064 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.215548798 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.216605524 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.21374854 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.212658685 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.215273429 seconds)
  done (took 83.535669915 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.214857449 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.214016475 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.213962075 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.213506841 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.216577562 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.214472879 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.215291225 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.215558419 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.215534443 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.215725181 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.214417064 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.215423846 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.215701944 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.21626981 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.215744748 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.216034174 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.21688534 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.215534004 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.215601479 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.216084287 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.215811718 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.215393234 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.215975596 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.215938997 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.217350794 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.215042023 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.2158703 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.219274396 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.218087811 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.2151781 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.218239603 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.21665078 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.215979913 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.216261654 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.218879088 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.216711338 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.215505328 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.217683653 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.216641157 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.216847201 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.215986052 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.218002336 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.217223763 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.219829807 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.217227824 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.218443468 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.218082998 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.219160971 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.218020565 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.217249797 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.215795916 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.216125968 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.21750787 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.217218282 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.217623181 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.216942706 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.217161836 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.217919181 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.218918266 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.214657486 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.21878451 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.218938148 seconds)
  done (took 76.556278524 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.218951515 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.218212119 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.215357203 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.215891057 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.21945867 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.217600276 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.21930622 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.219101439 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.219777495 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.218324861 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219779625 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.216520742 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216982602 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219917611 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.218325099 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217260431 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.216401037 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.216336256 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.21970734 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.216955637 seconds)
  done (took 25.490307047 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.219307915 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.219815039 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.219341689 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.215494895 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.219527744 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.21816415 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.219822184 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219629207 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216861465 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.221066863 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.219036747 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.22147618 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.218785042 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.217973143 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.221291413 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.217283694 seconds)
  done (took 20.637003392 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.219473393 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.220594364 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.219121422 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.220351186 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.219680182 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.218344543 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.221506421 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.218669989 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.217945953 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.220434011 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.220221106 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.22253226 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.222053216 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.221281643 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.21932185 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.221039775 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.218591115 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.21824837 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.221846271 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.218893939 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.220367835 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.219864489 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.222322826 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.220830551 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.218972241 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.221245567 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.220951075 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.215332551 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.220135804 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.220063907 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.219452262 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.220353554 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.218927551 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.220478164 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.221207929 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.220587845 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.221505248 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.218297881 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.223295146 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.223380217 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.223150315 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.218162402 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.222046603 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.224500976 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.222493788 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.224230641 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.220963081 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.221775391 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.22009283 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.220288293 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.223348216 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.224805654 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.226214223 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.223729921 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.224719901 seconds)
  done (took 68.282379721 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.226077403 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.223397432 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.222245029 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.221813541 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.2234483 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.221321899 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.223380705 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.222186286 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.22193353 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.223410858 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.220773997 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.225839463 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.220935692 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.225807823 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.222378734 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.226330714 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.22299248 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.222442915 seconds)
  done (took 23.151818674 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.223673165 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.222883105 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.224337435 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.223902934 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.224022355 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.220167492 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.22264749 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.225555677 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224907695 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.223022282 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222324574 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.226307192 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.225331481 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.225513367 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.223192538 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.224000765 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.226649603 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.227662305 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.220355766 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.224268463 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.227014619 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.223478759 seconds)
  done (took 28.068415063 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.228538672 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.221499219 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.224139917 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.241451837 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.243874861 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.225321087 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.225629425 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.224376962 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.246302811 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.277479844 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.273500083 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.242657887 seconds)
  done (took 16.011636791 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.232869749 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.226888473 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.226927587 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.224126634 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.226197448 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.219263478 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.223535518 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.226295397 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.226345174 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.224020022 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.223954432 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.227253572 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.227797695 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.224890899 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.226784428 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.227326008 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.223704127 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.225814733 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.223033158 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.227978095 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.223428759 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.226153523 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.222838007 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.224487141 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.22468236 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.224549864 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.225634498 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.219880203 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.225482992 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.225630473 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.229521738 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.224546693 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.227077095 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.226171388 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.22989224 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.229221231 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.223501132 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.228474923 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.231698543 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.224281931 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.226339135 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.227757716 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.230065184 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.22559891 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.22986975 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.22394139 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.225927373 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.225615662 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.227914719 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.229802052 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.226808352 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.225802253 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.229189208 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.22736465 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.229518858 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.230649724 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.223465163 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.22416209 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.226138737 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.228305606 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.227080395 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.229466526 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.228992306 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.223577265 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.231414538 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.228436042 seconds)
  done (took 82.086382838 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.227808561 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.226414979 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.2284822 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.228701982 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.228297819 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.225928981 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.223820164 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.226983345 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.229674508 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.228611372 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.232487568 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.226739196 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.229753468 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.226598724 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.229535001 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.226467829 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.228145386 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.224748226 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.225937627 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.23180961 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.225709729 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.228127789 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.225795842 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.229153981 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.230484356 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.232676492 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.228965788 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.230410929 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.230668235 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.229752453 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.229586974 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.226299069 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.227112124 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.229750414 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.226609427 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.229074802 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.228582107 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.224653175 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.224752681 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.233419729 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.228960227 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.23095486 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.228988239 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.231902382 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.230887985 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.22813756 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.228906891 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.229597227 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.231173996 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.229968861 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.228669784 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.225342525 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.228124232 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.230345517 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.229766526 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.226505267 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.229502147 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.229645788 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.228351535 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.234669627 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.229877899 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.228298997 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.229630782 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.232009703 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.230109309 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.231668864 seconds)
  done (took 82.244295259 seconds)
done (took 1669.56809407 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.397312498 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.345751113 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.229798252 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.239453855 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.227246906 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.256952761 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.236252328 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.226889592 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.22819676 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.224530676 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.228253797 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.420222304 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.226917274 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.228346826 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.22916802 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.32555835 seconds)
  done (took 25.417294418 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.254890657 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.238575927 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.342027217 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.259386172 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.261907917 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.414608268 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.293145718 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.244024083 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.397478479 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.283750249 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.23625262 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.266303243 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.242253507 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.233366583 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.256191422 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.41159983 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.472127193 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.242091078 seconds)
  done (took 27.496662155 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.650936483 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.260858494 seconds)
  done (took 5.062687538 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.258563487 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.241893826 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.239665194 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.237089214 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.22957477 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.234510997 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.236819383 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.234352229 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.23611321 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.359729125 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.244408744 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.249934807 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.258067908 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.240713035 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.236818153 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.277731771 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.409352263 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.238614075 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.234329991 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.245211805 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.242298336 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.328406733 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.282917221 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.242777896 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.355800681 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.244340714 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.247187272 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.248825253 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.384584128 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.237610311 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.240235124 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.241720449 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.243822577 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.137954041 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.747429799 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.238039033 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.280046407 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.251088231 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.242439754 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.377451496 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.244175438 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.254336997 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.237833028 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.747993255 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.387384946 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.359162598 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.25870465 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.262715812 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.247932627 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.304200862 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.248393341 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.247977874 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.286831784 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.024356067 seconds)
  done (took 80.223216759 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.287595444 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.235732441 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.418608353 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.262762982 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.235775384 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.255782707 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.240004128 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.503130813 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.262802054 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.236205706 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.521022028 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.770928045 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.264626701 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.269007487 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.077086854 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.28918855 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.251538555 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.238533899 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.255793984 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.23911981 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.768521945 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.242114321 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.241986811 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.399941018 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.273947176 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.745535683 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.241532861 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.241823128 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.240861335 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.234590897 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.722746707 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.260524212 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.288050081 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.237443782 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.505670813 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.604707166 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.567444602 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.240935323 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.275613085 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.241733378 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.248114804 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.764624536 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.586776122 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.238905596 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.25417517 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.736429991 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.241245883 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.241865184 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.240996538 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.481041126 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.24283635 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.240582071 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.245266758 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.24281868 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.237435006 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.310994582 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.299939538 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.746769084 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.239200793 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.25404301 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.287031757 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.242048697 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.248012007 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.23659117 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.24088967 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.588781022 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.375802474 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.240938308 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.587573651 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.724843593 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.259432325 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.808484016 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.265299663 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.272692588 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.308744497 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.248891362 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.245584149 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.740189809 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.254174617 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.239777757 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.565457734 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.246963122 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.525797823 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.26279638 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.244767942 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.786625561 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.247921081 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.324255869 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.249319031 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.244760229 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.242694743 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.247304531 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.525505193 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.307395502 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.242572171 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.243823512 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.264420194 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.241595611 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.256478209 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.251016724 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.791854949 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.270827572 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.244556816 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.24669112 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.244737602 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.261836046 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.241645589 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.246007617 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.50334192 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.246721621 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.247887635 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.241192602 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.248092417 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.245254823 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.392021036 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.24398576 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.539557104 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.245586366 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.240773888 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.245039083 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.242459236 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.261674697 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.241755503 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.248483889 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.113902325 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.581775697 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.260565327 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.241498882 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.246157609 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.244121188 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.242815013 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.242083362 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.26581392 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.242662754 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.966920605 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.268741524 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.256581074 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.245548704 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.241077412 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.243807175 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.244291365 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.245925239 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.528274219 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.51028289 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.37239345 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.244313624 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.244660639 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.960385874 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.281074389 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.4247687 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.265663898 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.246966939 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.539247494 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.3981601 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.250829208 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.244119565 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.245296507 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.492221304 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.258641119 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.540817682 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.754062655 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.263095816 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.245013081 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.977080428 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.968791217 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.243272016 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.249517287 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.517929699 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.259385179 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.245175579 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.24537703 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.250855509 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.241577611 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.264508977 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.247120783 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.247615106 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.248927702 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.471713992 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.437082248 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.261596098 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.250526402 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.74302875 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.340230545 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.245611701 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.269101491 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.248116607 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.247138114 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.322907659 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.24986309 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.257853671 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.248755962 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.251781153 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.831022851 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.249904745 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.251332482 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.441040606 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.897192334 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.266324232 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.259373199 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.24679747 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.123232362 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.767113364 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.293913342 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.546219981 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.264044699 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.287869113 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.258166565 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.254454024 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.767263984 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.256568472 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.252061552 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.866231339 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.26804253 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.913444205 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.24873938 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.252985513 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.819496122 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.266754687 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.250274675 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.250706594 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.249470068 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.538503206 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.252971757 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.28778708 seconds)
  done (took 477.806084429 seconds)
done (took 617.151827663 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.253141932 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.251700521 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.242677906 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.253651713 seconds)
  done (took 10.168988091 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.264380649 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.261551414 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.262288966 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.257182635 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.26130795 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.261193854 seconds)
  done (took 8.735194601 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.253244981 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.251970356 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.255248517 seconds)
  done (took 7.926601715 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.451673932 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.267790479 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.573026426 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.275295227 seconds)
  done (took 8.737484766 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.262427655 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.262522303 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.262555949 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.263516781 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.267994129 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.26703493 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.26511829 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.265599244 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.269868476 seconds)
  done (took 12.555325267 seconds)
done (took 49.290902667 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.252994617 seconds)
    (2/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.277892346 seconds)
    (3/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.077771028 seconds)
    (4/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.396445782 seconds)
    (5/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.263105386 seconds)
    (6/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.34251006 seconds)
    (7/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.259110533 seconds)
    (8/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.26572642 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.493420166 seconds)
    (10/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.587142709 seconds)
    (11/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.753193251 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.300417411 seconds)
    (13/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.244775245 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.284500074 seconds)
    (15/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.242285472 seconds)
    (16/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.251872806 seconds)
    (17/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.256057158 seconds)
    (18/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.280056324 seconds)
    (19/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.068108608 seconds)
    (20/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.277519652 seconds)
    (21/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.244314104 seconds)
    (22/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.386824761 seconds)
    (23/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.735065533 seconds)
    (24/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.303229679 seconds)
    (25/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.25891761 seconds)
    (26/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.286694854 seconds)
    (27/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.981864483 seconds)
    (28/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.282867634 seconds)
    (29/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.252066771 seconds)
    (30/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.095464474 seconds)
    (31/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.256898694 seconds)
    (32/286) benchmarking ("sort", Int64, true)...
    done (took 2.259954282 seconds)
    (33/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.246656528 seconds)
    (34/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.366935149 seconds)
    (35/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.252894614 seconds)
    (36/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.860996916 seconds)
    (37/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.804872977 seconds)
    (38/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.249462685 seconds)
    (39/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.165267471 seconds)
    (40/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.259167902 seconds)
    (41/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.2849747 seconds)
    (42/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.256300994 seconds)
    (43/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.325352041 seconds)
    (44/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.401153608 seconds)
    (45/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 2.260031429 seconds)
    (46/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 2.273011204 seconds)
    (47/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.274273456 seconds)
    (48/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.245522984 seconds)
    (49/286) benchmarking ("sort", Float32, true)...
    done (took 2.278876059 seconds)
    (50/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.258500959 seconds)
    (51/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.285709432 seconds)
    (52/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.259039939 seconds)
    (53/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.260617865 seconds)
    (54/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.38993071 seconds)
    (55/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.323013822 seconds)
    (56/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.643012084 seconds)
    (57/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.531313501 seconds)
    (58/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.376588301 seconds)
    (59/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.278901378 seconds)
    (60/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.243261599 seconds)
    (61/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.26258803 seconds)
    (62/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.129328889 seconds)
    (63/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.267236631 seconds)
    (64/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.315724416 seconds)
    (65/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.244801743 seconds)
    (66/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.356427648 seconds)
    (67/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.127158794 seconds)
    (68/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.257716627 seconds)
    (69/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.577151833 seconds)
    (70/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.271058422 seconds)
    (71/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.240135786 seconds)
    (72/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.253035629 seconds)
    (73/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 2.252563029 seconds)
    (74/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.999813771 seconds)
    (75/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.268024769 seconds)
    (76/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.26637189 seconds)
    (77/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.257039321 seconds)
    (78/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.315989363 seconds)
    (79/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.255773525 seconds)
    (80/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.341251925 seconds)
    (81/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.283120733 seconds)
    (82/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.267388431 seconds)
    (83/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.788826135 seconds)
    (84/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.144737896 seconds)
    (85/286) benchmarking ("sort", Int64, false)...
    done (took 2.272845886 seconds)
    (86/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.272357514 seconds)
    (87/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.243408642 seconds)
    (88/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.361897769 seconds)
    (89/286) benchmarking ("sort", Float64, true)...
    done (took 2.254441549 seconds)
    (90/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.278460148 seconds)
    (91/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.371410046 seconds)
    (92/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.455963582 seconds)
    (93/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.159896934 seconds)
    (94/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.359850401 seconds)
    (95/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.986417449 seconds)
    (96/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.268355968 seconds)
    (97/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.340308142 seconds)
    (98/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.17922854 seconds)
    (99/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.643787534 seconds)
    (100/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.253963181 seconds)
    (101/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.081381348 seconds)
    (102/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.542222889 seconds)
    (103/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.256549572 seconds)
    (104/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.811248589 seconds)
    (105/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.356609104 seconds)
    (106/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.364940668 seconds)
    (107/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.958927684 seconds)
    (108/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.247789874 seconds)
    (109/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.465511552 seconds)
    (110/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.859679937 seconds)
    (111/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.246078731 seconds)
    (112/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.787652126 seconds)
    (113/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.45134275 seconds)
    (114/286) benchmarking ("sort", Float32, false)...
    done (took 2.255907242 seconds)
    (115/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.243963405 seconds)
    (116/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.259794924 seconds)
    (117/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.246102483 seconds)
    (118/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.352446875 seconds)
    (119/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.284029202 seconds)
    (120/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.26047311 seconds)
    (121/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.382073682 seconds)
    (122/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.257745389 seconds)
    (123/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.950177721 seconds)
    (124/286) benchmarking ("sort", Bool, false)...
    done (took 1.773213586 seconds)
    (125/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.277424575 seconds)
    (126/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.030554875 seconds)
    (127/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.514945233 seconds)
    (128/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.974318522 seconds)
    (129/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.514545951 seconds)
    (130/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.244576921 seconds)
    (131/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.073076872 seconds)
    (132/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.431519143 seconds)
    (133/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.385189566 seconds)
    (134/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.243117625 seconds)
    (135/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.298499866 seconds)
    (136/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.386287487 seconds)
    (137/286) benchmarking ("sort", Float64, false)...
    done (took 2.257322635 seconds)
    (138/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.279498057 seconds)
    (139/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.24805246 seconds)
    (140/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.252786348 seconds)
    (141/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.292552462 seconds)
    (142/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.271232931 seconds)
    (143/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.070820376 seconds)
    (144/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.26295752 seconds)
    (145/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.998878055 seconds)
    (146/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.281792217 seconds)
    (147/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.250304053 seconds)
    (148/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.259912423 seconds)
    (149/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.635134779 seconds)
    (150/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.279636058 seconds)
    (151/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.25780912 seconds)
    (152/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.281380388 seconds)
    (153/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.280372569 seconds)
    (154/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.244096574 seconds)
    (155/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.288657598 seconds)
    (156/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.34196258 seconds)
    (157/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.569528454 seconds)
    (158/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.286792981 seconds)
    (159/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.341615763 seconds)
    (160/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.245757913 seconds)
    (161/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.399075452 seconds)
    (162/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.817972597 seconds)
    (163/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.248882009 seconds)
    (164/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.245749023 seconds)
    (165/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.258066283 seconds)
    (166/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.250640556 seconds)
    (167/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.24294466 seconds)
    (168/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.40013274 seconds)
    (169/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.249674567 seconds)
    (170/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.976120324 seconds)
    (171/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.257149901 seconds)
    (172/286) benchmarking ("sort", Int8, true)...
    done (took 2.310620607 seconds)
    (173/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.264828644 seconds)
    (174/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.325486941 seconds)
    (175/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.384351184 seconds)
    (176/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.28889446 seconds)
    (177/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.24846606 seconds)
    (178/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.77689023 seconds)
    (179/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.28314326 seconds)
    (180/286) benchmarking ("sort", BigInt, true)...
    done (took 2.26017171 seconds)
    (181/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.248421316 seconds)
    (182/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.30001455 seconds)
    (183/286) benchmarking ("sort", BigInt, false)...
    done (took 2.262061625 seconds)
    (184/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.786282445 seconds)
    (185/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.120903541 seconds)
    (186/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.265585111 seconds)
    (187/286) benchmarking ("sort", Int8, false)...
    done (took 2.26442351 seconds)
    (188/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.251812935 seconds)
    (189/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.271036217 seconds)
    (190/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.264304713 seconds)
    (191/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.840949664 seconds)
    (192/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.250823963 seconds)
    (193/286) benchmarking ("sort", Bool, true)...
    done (took 2.259031508 seconds)
    (194/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.980591546 seconds)
    (195/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.315903 seconds)
    (196/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.596974151 seconds)
    (197/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.061413435 seconds)
    (198/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.688404535 seconds)
    (199/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.252659282 seconds)
    (200/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.274973551 seconds)
    (201/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.261813083 seconds)
    (202/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.366324728 seconds)
    (203/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.504083646 seconds)
    (204/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.20597753 seconds)
    (205/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.173533474 seconds)
    (206/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.497977815 seconds)
    (207/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.25490682 seconds)
    (208/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.607476796 seconds)
    (209/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.343332936 seconds)
    (210/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.252867972 seconds)
    (211/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.346999273 seconds)
    (212/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.286112022 seconds)
    (213/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.389938547 seconds)
    (214/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.254551644 seconds)
    (215/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.28778067 seconds)
    (216/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.262768552 seconds)
    (217/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.262217213 seconds)
    (218/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.305318035 seconds)
    (219/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.264923038 seconds)
    (220/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.253445607 seconds)
    (221/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.291632041 seconds)
    (222/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.248779155 seconds)
    (223/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.273771901 seconds)
    (224/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.281283023 seconds)
    (225/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.253441179 seconds)
    (226/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.261650362 seconds)
    (227/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.27249324 seconds)
    (228/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.135173844 seconds)
    (229/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.555555629 seconds)
    (230/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.261948698 seconds)
    (231/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.265924067 seconds)
    (232/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.253599318 seconds)
    (233/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.248865295 seconds)
    (234/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.251083213 seconds)
    (235/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.249685197 seconds)
    (236/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.321897837 seconds)
    (237/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.25624807 seconds)
    (238/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.465140713 seconds)
    (239/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.267162014 seconds)
    (240/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 2.278218852 seconds)
    (241/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.290277982 seconds)
    (242/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.291659642 seconds)
    (243/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.256557194 seconds)
    (244/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.647859496 seconds)
    (245/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.800282525 seconds)
    (246/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.262918668 seconds)
    (247/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.251609272 seconds)
    (248/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.287886431 seconds)
    (249/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.276665006 seconds)
    (250/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.279934224 seconds)
    (251/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.257042665 seconds)
    (252/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.585720163 seconds)
    (253/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.350371023 seconds)
    (254/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.646197568 seconds)
    (255/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.274141311 seconds)
    (256/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.248849479 seconds)
    (257/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.34437108 seconds)
    (258/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.277909488 seconds)
    (259/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.032764629 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.346423485 seconds)
    (261/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.26769574 seconds)
    (262/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.297214478 seconds)
    (263/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.351265434 seconds)
    (264/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.254348902 seconds)
    (265/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.306052514 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.380797928 seconds)
    (267/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.253496421 seconds)
    (268/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.281117005 seconds)
    (269/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.287556287 seconds)
    (270/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.995990646 seconds)
    (271/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.366730225 seconds)
    (272/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.307212901 seconds)
    (273/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.309292395 seconds)
    (274/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.294207268 seconds)
    (275/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.256581104 seconds)
    (276/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 2.282689779 seconds)
    (277/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.100087183 seconds)
    (278/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.137404998 seconds)
    (279/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.251437674 seconds)
    (280/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.376599658 seconds)
    (281/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.597444967 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.287556066 seconds)
    (283/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.369235667 seconds)
    (284/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.268471129 seconds)
    (285/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.612499571 seconds)
    (286/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.258048329 seconds)
  done (took 543.546257901 seconds)
done (took 544.715949969 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.303551823 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.326231297 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.280638446 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.302246589 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.392686206 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.457208093 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.290775527 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.282140654 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.328853732 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.329590113 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.287213685 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.458742288 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.284237586 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.282814073 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.279702841 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.323894239 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.26780791 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.283774922 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.297125271 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.289716876 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.298976302 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.287065275 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.330679161 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.457943582 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.28684192 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.28559993 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.286951172 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.302691015 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.393718268 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.284884544 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.284648661 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.293252646 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.281700887 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.276975032 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.279452192 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.302963732 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.294245927 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.29237817 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.286889042 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.394318329 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.278235151 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.285724198 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.2858682 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.2848166 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.284833621 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.288840443 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.285778978 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.287927687 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.327392679 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.326128966 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.273618653 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.312383618 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.294388342 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.284953827 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.297053681 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.283907793 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.290118822 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.329205332 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.30315432 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.327981955 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.274705492 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.287117995 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.285542289 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.301108363 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.292262199 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.275258916 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.277184999 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.28843364 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.278564928 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.286492878 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.27559853 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.290886998 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.286576926 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.299670783 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.315410087 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.275837191 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.278780157 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.285624146 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.293594158 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.281902362 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.293009606 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.328107467 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.289128099 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.286074995 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.326861505 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.461497214 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.296336887 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.286611903 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.295567651 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.305581546 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.292961262 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.29540472 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.289274345 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.283268015 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.295095705 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.289252881 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.295945486 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.295734188 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.29238538 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.297084744 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.28297912 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.33082318 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.283462854 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.284388128 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.286610048 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.40849944 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.283934646 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.28379427 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.308223196 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.335654536 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.290044145 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.277313355 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.293133565 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.3333246 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.296989031 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.29055176 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.282927952 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.28961967 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.278276256 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.407479282 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.290413298 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.292526401 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.334756271 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.2908939 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.284564453 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.279044067 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.288885004 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.329858399 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.408796845 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.300010778 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.400781399 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.28691373 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.293129221 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.319372666 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.332462286 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.319781899 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.291324874 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.334830924 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.306762809 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.285342085 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.297901522 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.299221057 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.290790259 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.297200607 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.286492664 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.319567981 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.33138687 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.331901086 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.312149966 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.4099892 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.287720004 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.28062858 seconds)
done (took 215.648710497 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.349911301 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.285405779 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.392911153 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.284476235 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.384629344 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.383433678 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.284173406 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.284310893 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.282882475 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.664947458 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.282252382 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.285072 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.287088972 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.283910406 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.368640274 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.287872177 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.28711879 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.627269554 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.287496699 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.358430556 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.285480148 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.283422421 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.285215291 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.66547151 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.285879997 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.28270337 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.356917153 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.285260684 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.633984817 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.28222874 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.283737391 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.633017218 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.375332968 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.301890289 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.296386936 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.295264031 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.386122085 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.303275171 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.367210807 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.365599136 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.394752748 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.326703088 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.281488604 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.285969967 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.288659161 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.28995389 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.285459127 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.316870882 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.284949968 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.283817095 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.629315131 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.298525454 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.286348473 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.287510508 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.288828619 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.316552742 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.287824821 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.291072319 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.380596242 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.289436419 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.352401591 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.66921006 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.66805148 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.288942912 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.286887689 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.287443309 seconds)
  done (took 101.347536338 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.357014562 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.367032154 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.396478949 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.305572951 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.340960323 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.400303273 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.30620977 seconds)
  done (took 10.66838811 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.294551082 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.289455464 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.338260916 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.339378279 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.290280663 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.500396306 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.290814572 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.300540633 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.287539613 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.36410669 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.288538089 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.293382147 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.299961217 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.287655249 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.341485803 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.301239888 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.408537351 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.291592964 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.290694323 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.445207882 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.289964818 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.299235678 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.365775246 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.302195551 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.292900955 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.299260886 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.244558084 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.291840276 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.288829885 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.292499625 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.289587465 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.400482381 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.294013344 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.29003749 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.289013321 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.451612825 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.294721406 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.289857585 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.291859857 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.29203428 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.293522273 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.293270219 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.293262808 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.289144249 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.292165298 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.316426688 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.290700124 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.293089884 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.292768827 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.292538775 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.365141658 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.29267764 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.28982629 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.290920153 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.367785817 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.300416318 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.292997528 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.290452614 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.293188484 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.291623403 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.446848725 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.341212401 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.292373772 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.343383505 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.291643486 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.295632506 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.29463232 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.292200438 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.38418575 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.296897297 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.340183572 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.291073274 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.518711217 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.318162532 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.297050767 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.296297755 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.297373781 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.294429653 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.291842708 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.300868473 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.291727628 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.297122227 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.302136158 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.292812135 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.290516272 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.477870003 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.449369061 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.294208085 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.307520897 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.302024888 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.293639177 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.37086067 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.295478365 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.293226029 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.346334985 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.411724517 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.373341595 seconds)
  done (took 134.128938161 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.302408693 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.304822807 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.29896797 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.318846759 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.29925018 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.29538539 seconds)
  done (took 9.0192656 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.300834517 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.296433856 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.297886118 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.297467534 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.296584531 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.298029578 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.297654237 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.298962384 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.300470446 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.299327806 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.297950331 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.298565545 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.300549665 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.298947058 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.297633523 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.298018145 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.297102939 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.29431835 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.300736035 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.297183463 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.296573422 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.297961965 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.297429143 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.301749897 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.302269925 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.298992538 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.306201212 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.297472609 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.298032551 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.306894351 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.313164717 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.299331139 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.300532648 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.302781861 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.30391304 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.299569854 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.302221543 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.301330324 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.297455187 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.301160263 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.302673384 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.300136096 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.30096232 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.304118151 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.30192601 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.306387956 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.300834171 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.309187665 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.30089918 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.301121649 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.303308833 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.300673232 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.302464647 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.300638506 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.305366752 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.319540442 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.304669101 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.302699609 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.302100327 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.302834383 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.301651322 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.303566197 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.303616304 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.307382927 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.298833208 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.303163459 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.30639123 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.305530485 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.302632997 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.303932564 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.305743098 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.301178124 seconds)
  done (took 95.911295269 seconds)
done (took 352.26354123 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.715570066 seconds)
  done (took 3.921589873 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.309681798 seconds)
  done (took 3.516547233 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.557341056 seconds)
  done (took 21.765180979 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.332061259 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.299300097 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.314454273 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.294698756 seconds)
  done (took 10.44531825 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.51392195 seconds)
  done (took 3.718315728 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.297727945 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.313707682 seconds)
  done (took 5.81951966 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.534304845 seconds)
  done (took 3.741175928 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.619016974 seconds)
  done (took 3.825979285 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.322334654 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.312569423 seconds)
  done (took 5.848743186 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.283920067 seconds)
  done (took 3.489719916 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.962179769 seconds)
  done (took 16.16875765 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.299997291 seconds)
  done (took 3.508003528 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.331395791 seconds)
  done (took 3.538718562 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.746391633 seconds)
  done (took 5.955831188 seconds)
done (took 96.46881635 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.297242178 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.298316398 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.299137811 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.298816507 seconds)
  done (took 10.398945308 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.338075151 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.339086354 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.338982959 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.349083309 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.351006068 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.337810809 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.331381703 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.331355829 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.347617206 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.342073249 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.3395276 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.340890584 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.337621293 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.329780039 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.341818748 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.342492495 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.350315991 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.342025882 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.332490085 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.342902803 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.305005867 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.349829781 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.345568881 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.306905107 seconds)
  done (took 33.321042466 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.829073338 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.411856494 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.462252763 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.372021033 seconds)
  done (took 7.283403537 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.358312025 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.361660509 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.372383164 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.411526904 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.435373006 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.369479098 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.33517181 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.329600132 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.316617229 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.360602458 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.438297687 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.376280314 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.459525865 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.31011453 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.494471952 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.308931711 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.308883462 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.358915936 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.412324069 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.428781738 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.308526755 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.35922992 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.366093361 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.377066869 seconds)
  done (took 34.167832302 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.309155693 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.3275044 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.307632142 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.308061962 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.31661554 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.307987631 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.309838672 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.309459341 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.308380469 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.834346897 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.304696143 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.322069613 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.811401038 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.307901379 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.315859829 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.308596373 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.828595785 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.801152469 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.308069004 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.314322407 seconds)
  done (took 29.473484915 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.303658749 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.303093377 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.656845993 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.55957282 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.302755674 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.298773302 seconds)
  done (took 13.635972851 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.377255231 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.530409453 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.309307289 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.652055485 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.735293845 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.307892197 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.310283112 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.54893139 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.852191958 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.839775153 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.361218244 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.373456694 seconds)
  done (took 19.41127722 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.306454848 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.304704227 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.30676203 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.321432148 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.360703041 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.330135076 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.316022997 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.302519648 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.364078594 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.381062169 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.32907678 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.364095992 seconds)
  done (took 21.199256109 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.421671689 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.306195686 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.305118977 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324429165 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.302460983 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.147760869 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.341733316 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.035152454 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.327540831 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.579204358 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.311298612 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.423011962 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.56158449 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.302338218 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.317502741 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.292642758 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.53107691 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.786559162 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.302918142 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312219009 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.328259079 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.313254121 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.306369596 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.519120221 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.307953115 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.304380373 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.567896419 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.305889339 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.58960141 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.317370786 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.317391571 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.307282861 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.580419597 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961215758 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.421207093 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.51496141 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333679129 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.32187862 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.318434296 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.30940868 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.310295485 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.305544654 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.319359071 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308676975 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.307815327 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.311340471 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.05082742 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.331240359 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.303159456 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.306593563 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.557802414 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.406737695 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.312388435 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.307913834 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372643158 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.309411144 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.313931869 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.307496858 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.892967026 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320559019 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.316612641 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.304603411 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.320425054 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334783169 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923498856 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.312559006 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.312783035 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.312020347 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308407695 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.313358111 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.323168617 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308883986 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.331479489 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308927419 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.998973817 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.32047944 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307348831 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.847903263 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313673463 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.309873047 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.534675749 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.306864557 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.309875413 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.307653304 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.308420572 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.009666538 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.320278815 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.296558609 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.328277142 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.049015208 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.538916368 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.329288254 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.335000478 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.534428946 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.295533026 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308793882 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.310857493 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310250012 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.328634318 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.05390751 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327437603 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.311891207 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.567662289 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.522417626 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31506998 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.299590623 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.800567231 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329850748 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.342603618 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.30981661 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.525768396 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.88425624 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.329803185 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309662757 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.329629369 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.310866254 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.052568303 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330687733 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.417804277 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.325047848 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.579852324 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.095922372 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315119397 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.380331692 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.316819182 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.312546164 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.311573156 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329832161 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.313147682 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.514633582 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.337711582 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.327747983 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.313187864 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31518926 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.308991514 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316008188 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.311696276 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.539853063 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32381494 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.590986521 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312140262 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312962756 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.310016732 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.535033678 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.310564227 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.663308993 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.574621485 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317180148 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.32040354 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.328314022 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.332824985 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.414091193 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.335522308 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.32883448 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.571153944 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.318166501 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.321306593 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.326823086 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.312331527 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324357587 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.321083431 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327677723 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.888312003 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.294187347 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.312506574 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.206391291 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.33077504 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.382310185 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.322489955 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.527664664 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.32747716 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329648556 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.334790581 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.31692282 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.536535356 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.325404067 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.328928436 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.392565103 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.799008241 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.907609535 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.330389591 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.31585149 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.313718691 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.313294324 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316404132 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316821605 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.316567964 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.525850964 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.333318146 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.343883964 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.905986742 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321694584 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.329020635 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.324189862 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.329061232 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.325908787 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317618995 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.327327365 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314559085 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.330773299 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.333017031 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462573949 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.330766706 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.317298301 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.833570578 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.323993311 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.321093366 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.318402495 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.354070466 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.332781253 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.206533673 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.578653846 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.345174138 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.58501658 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.328670947 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.333789732 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.318297748 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329225264 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32764247 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.328708416 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.342506331 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.330875357 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.321705405 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338946098 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.885587005 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.039664325 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.8479969 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.324267782 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.348461026 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.32213819 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.06742264 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339812987 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.320206305 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.553638385 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.079999439 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338695986 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.807102083 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.337777381 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.074305806 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.574104193 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.552788108 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.319171156 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.34862167 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.572989487 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.535927639 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35468748 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.33061325 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323391829 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.303733554 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.900632661 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.344944533 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.392756553 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.066787645 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351052075 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.320070907 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.366641617 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.340063206 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.727819291 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.340409431 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321646268 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.331266928 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.325128562 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.205758671 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.325172514 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.324098638 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942085776 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.321566628 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.810696027 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342448365 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.532575872 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.335872055 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.326383638 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.320556146 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.316384638 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.574782847 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.573631523 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32500711 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.321519923 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85628243 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.180683718 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.328463032 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323518853 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067634244 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329964758 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.60750675 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.321566441 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.336433992 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326897589 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.324602384 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32139091 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.31833274 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.325554666 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.302345181 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.804905976 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.353608591 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349725667 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.32148259 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.171085118 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.580181312 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.341355517 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.901220859 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.553300593 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.351950432 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363076155 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.328407866 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325546195 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.308881341 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.325364822 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.327618039 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386386271 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.546668537 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.334495361 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.312671116 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.354547401 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.533837581 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.324420719 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.324479293 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.571406022 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.3255724 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.340030269 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.039645393 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.354332748 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.325927154 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326731305 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.339642467 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.34691994 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.399517658 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.53828185 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.33840247 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.339204802 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.728995363 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345685852 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.32603452 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.342592476 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.421167231 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327380624 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.345413957 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.102788907 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.906008362 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.058314536 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.909278685 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.585217759 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.331593914 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329972671 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328797984 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474127949 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.329865945 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.6032181 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327332875 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.341201212 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367866696 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329072505 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326590299 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.543243198 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.604594839 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.327081022 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331698451 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329346923 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.328426705 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.340768951 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.539786644 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.820465984 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.886118936 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331959382 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.329084943 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.083498395 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.622455541 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330362182 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.329905369 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330296792 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.344638061 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.34353071 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.356958592 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335718778 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47830044 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.582591612 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991999364 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.357759916 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.357201544 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.10515223 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328161754 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.587680211 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.326022975 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.547461109 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.911375992 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.024642918 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.597618711 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.399725404 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.542799755 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.332672738 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478490075 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.327953014 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.332909353 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.332719114 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.176084846 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.328531551 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.341540223 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.912992117 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.596952389 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.335464705 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.336135377 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.352299274 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.343047406 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.557286645 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.046467369 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.559115442 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.34111938 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.333280381 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.333049209 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.911890925 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.59019431 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335248832 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.332786843 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.571694524 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.336481544 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.35858086 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.786160662 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.33062876 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.887856316 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.308960835 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.356372353 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339807878 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.027316788 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.918650203 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.336769908 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840332044 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.338857825 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337182346 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.611049131 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.339562105 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.340199752 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.612325012 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.340921787 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.347419003 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.551583667 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.913700241 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.084199219 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.354588186 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350155485 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.337333668 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335467613 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371324653 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331234568 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.33883811 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.757203384 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.354783661 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333822816 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.344587027 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.337523828 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342624279 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.33540159 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336739907 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.340018202 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.329671623 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.324172632 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.342557503 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.336816612 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.922663558 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359260024 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.000386005 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.667542172 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.594221697 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.336251957 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.341643422 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.341573737 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336886781 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335431856 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334280078 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.359880121 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.910501762 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.352192723 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.34987646 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.341873893 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.553842745 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.548377869 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.340495283 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.553133359 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339355727 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.370142419 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.325308039 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338494904 seconds)
  done (took 953.892272453 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.345875291 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.359925908 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.362071338 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.359620856 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.34967713 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.380866626 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.344299819 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.355631861 seconds)
  done (took 20.100472492 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.350504083 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.350080012 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.345868526 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.350806168 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.350112291 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.801558772 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.367044449 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.349449086 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.34974235 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.350622424 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.352561988 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.000975494 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.366246797 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.345809978 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.342886514 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.351480755 seconds)
  done (took 31.968379024 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.264760632 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.461452635 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.178423127 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.3614673 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.374657881 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.351357796 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.550944489 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.351800531 seconds)
  done (took 26.141189187 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.351231455 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.349121607 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.351570139 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.351447042 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.350691448 seconds)
  done (took 8.0004975 seconds)
done (took 1210.200913811 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.34523937 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.347358383 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.345090775 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.346632161 seconds)
  done (took 6.630080538 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.32954028 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.328430755 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.331633958 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.343053173 seconds)
  done (took 9.577324104 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.025554904 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.965685388 seconds)
  done (took 5.236828579 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.341334723 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.103332419 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.077124785 seconds)
  done (took 7.767636765 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.632796788 seconds)
  done (took 2.877885901 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.768881882 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.709505882 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.54023555 seconds)
  done (took 6.265236856 seconds)
done (took 39.599679415 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.339431661 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.585561069 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.498564461 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.340024598 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.497792769 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.497742129 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.076300734 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.353768732 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.337291646 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.347389843 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.348014145 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.498668076 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.057983414 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.589009469 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.060117292 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.681261292 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.521438694 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.349716269 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.339349792 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.337620784 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.072776687 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.350169998 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.344891496 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.34506951 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.513920825 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.487539882 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.342765801 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.680496315 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.350202126 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.338869291 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.505102333 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.348210811 seconds)
  done (took 81.581559699 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.341155321 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.339772328 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.341034125 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.338329748 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.33844901 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.359208517 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.33372561 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.334259491 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.336246989 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.333831235 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.345721204 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.335917577 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.33403204 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.339512957 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.332331772 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.341227175 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.340878355 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.330620526 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.334175179 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.351075249 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.333602553 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.331718273 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.329762456 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.337732968 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.336899215 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.341187587 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.328376033 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.334756394 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.3288383 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.329251251 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.350498437 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.333370083 seconds)
  done (took 76.045622488 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.330437035 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.328608429 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.34827331 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.340107478 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.328792019 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.32796428 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.328026668 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.339053109 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.333663751 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.330941666 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.335773672 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.328342095 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.333336252 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.326807449 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.330209722 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.329022929 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.327980945 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.34406278 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.327606856 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.341381849 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.328057375 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.341728407 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.329566918 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.343515761 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.327858281 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.340813527 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.329004738 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.328612729 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.33600153 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.329384124 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.329880389 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.329369457 seconds)
  done (took 75.890299503 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.537801655 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.339007549 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.34205186 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.274112731 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.343476261 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.340156367 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.332922565 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.536645969 seconds)
  done (took 14.284891985 seconds)
done (took 249.047438699 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.336700799 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.338731564 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.536474766 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.367831441 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.342429908 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.368842772 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.367624654 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.553028497 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.294065534 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.574065916 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.369788099 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.362745852 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.348394528 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.363172936 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.610932205 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.486589095 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.257524976 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.346342499 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.67768797 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.35943456 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.604244853 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.340539512 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.610337407 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.306723067 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.357750044 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.359129305 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.358094396 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.248740197 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.381375685 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.682576978 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.357513627 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.328884189 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.426882847 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.44584427 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.556118374 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.500975797 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.34453039 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.427429909 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.56305054 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.351959977 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.342092175 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.098466934 seconds)
  done (took 81.498285674 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.349481277 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.466531589 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.343827046 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.348611307 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.348055379 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.47436287 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.440797953 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.345997209 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.348256295 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.347819629 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.347395421 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.349251094 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.350204348 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.347709583 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.348006888 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.350197661 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.349219779 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.349885931 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.353431251 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.397730505 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.476770121 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.369619087 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.347490885 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.348644941 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.456446689 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.483827514 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.346344937 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.343000436 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.394642877 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.344364001 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.352292812 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.397067957 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.346820466 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.350654474 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.473162515 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.447669501 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.366333492 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.349085904 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.469451558 seconds)
  done (took 55.067692748 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.352715832 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.597065779 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.776922709 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.3619718 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.351721602 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.355171791 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.426467351 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.35532097 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.357058378 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.355259286 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.503791489 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.358249318 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.38365974 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.796381105 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.354419205 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.356077948 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.353298881 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.355910864 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.607569158 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.361597936 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.446609274 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.358936584 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.4310034 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.367364366 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.372532175 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.356425031 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.360225282 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.914528261 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.361288023 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.504417039 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.119797826 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.431184125 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.87479054 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.791670923 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.11679131 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.36000995 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.354624833 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.510527211 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.359068667 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.357610405 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.430020495 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.359801467 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.785567818 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.008538492 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.372517776 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.354981675 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.941978006 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.509160609 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.596854029 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.369142099 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.815204188 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.362556939 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.359095025 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.359716142 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.5920523 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.367923348 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.356509226 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.925610108 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.379498697 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.430956216 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.361684002 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.358324296 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.616343858 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.361938093 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.607901268 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.362419112 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.364206099 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.376860007 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.789375011 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.361258546 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.019834271 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.377051918 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.355620983 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.509763652 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.61378013 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.977926746 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.364925464 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.62258251 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.880188645 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.435234869 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.367181055 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.918010673 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.439034384 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.366166006 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.358701221 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.359137143 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.357620227 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.409460593 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.431300212 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.972083655 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.037140633 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.943204053 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.451337486 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.375570625 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.358659883 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.925798126 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.377119221 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.35963399 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.790642476 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.02334937 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.377069885 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.366466369 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.034614125 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.377378244 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.438257578 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.370041972 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.803436561 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.364143215 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.408978656 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.362684935 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.3667799 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.382498778 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.435288231 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.366687604 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.362589278 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.000593631 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.536794322 seconds)
  done (took 179.09634176 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.355249952 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.371241835 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.368414352 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.351556918 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.35427418 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.362449878 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.351254071 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.352166188 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.360225484 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.351947695 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.353553891 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.353462751 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.356632183 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.358980608 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.365759646 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.361757623 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.353912283 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.353742861 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.354521104 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.351857734 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.356391211 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.374299713 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.355054807 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.350175756 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.35507714 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.35730543 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.355027307 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.35529206 seconds)
  done (took 63.260619461 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.363743435 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.907246262 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.367460078 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.48658033 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.385126392 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.360382945 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.485970177 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.420288049 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.367872511 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.362420652 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.360399443 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.658238492 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.366899558 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.864827203 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.547417556 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.505051277 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.864261643 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.380824772 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.361806032 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.359516325 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.489444563 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.375519401 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.657897367 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.917177667 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.371612703 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.916057938 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.360881483 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.365169114 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.364884088 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.918237652 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.364106202 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.656892883 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.437692256 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.424811952 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.945467093 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.864567101 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.878227184 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.503833783 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.365425646 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.363076821 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.362279138 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.354797888 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.914806788 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.369022588 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.365793924 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.908916625 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.382595533 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.366839685 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.370391106 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.362119236 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.419573162 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.426477347 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.662255395 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.913359091 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.43642754 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.379134942 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.490398272 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.757508813 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.364188464 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.861460958 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.367812565 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.914580883 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.381760153 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.357076207 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.36526033 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.370635997 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.508794437 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.495647409 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.876153792 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.386075597 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.864131053 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.522291838 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.369013692 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.365930178 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.36708777 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.921008166 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.866429987 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.521983687 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.498160367 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.555511098 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.363708032 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.367585378 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.359578994 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.441754854 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.369458168 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.920233132 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.87814402 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.37937163 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.369262182 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.370567867 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.370081256 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.539041847 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.934053427 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.439524236 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.865347785 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.675379977 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.660100635 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.366071193 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.425970259 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.3843086 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.664302584 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.366851891 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.424527647 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.835807061 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.665549369 seconds)
  done (took 162.360186744 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.601301882 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.398943504 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.463181508 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.521803889 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.971309611 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.940215626 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.366298466 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.483848772 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.480271217 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.62342309 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.366832227 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.46128942 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.582377455 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.451353493 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.05841412 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.440627392 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.462913246 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.523901894 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.507639947 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.367161031 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.003578674 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.680899335 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.551888078 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.39219985 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.466172798 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.152601421 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.931770737 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.895911962 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.538295031 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.375589727 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.893437069 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.382628421 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.271430689 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.027460475 seconds)
  done (took 63.905569577 seconds)
done (took 606.430552789 seconds)
SAVING RESULT...
DONE!
