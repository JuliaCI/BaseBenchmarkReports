cset: moving following pidspec: 23974
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.551212121 seconds)
loading group "string"... done (took 0.514835953 seconds)
loading group "linalg"... done (took 8.613184328 seconds)
loading group "parallel"... done (took 0.176643285 seconds)
loading group "find"... done (took 1.385759334 seconds)
loading group "tuple"... done (took 2.056759146 seconds)
loading group "dates"... done (took 1.348061652 seconds)
loading group "micro"... done (took 0.205671087 seconds)
loading group "io"... done (took 0.601323158 seconds)
loading group "scalar"... done (took 42.545604093 seconds)
loading group "sparse"... done (took 12.997378753 seconds)
loading group "broadcast"... done (took 1.043110125 seconds)
loading group "union"... done (took 14.533073266 seconds)
loading group "simd"... done (took 4.896138936 seconds)
loading group "random"... done (took 9.892603171 seconds)
loading group "problem"... done (took 2.097695303 seconds)
loading group "array"... done (took 24.153502897 seconds)
loading group "misc"... done (took 1.078563924 seconds)
loading group "sort"... done (took 3.612387504 seconds)
loading group "collection"... done (took 20.951856784 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.590180151 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.133810036 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.145302492 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.173459797 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.207311999 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.139464964 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158600006 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.463027348 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.02968537 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.235539628 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.130717817 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.551718797 seconds)
done (took 5.681777489 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.226784417 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.074203002 seconds)
    (2/2) benchmarking "String"...
    done (took 0.126113984 seconds)
  done (took 0.867525321 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.075076318 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.172215172 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.092641238 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.108315718 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.109164921 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.107321605 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093975068 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.108407735 seconds)
  done (took 1.461414246 seconds)
done (took 3.308698564 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.808297743 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.821527393 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.49059503 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.127529217 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.159480702 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.131526211 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.312440116 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.158687132 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.11138919 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.119252566 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.175355355 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.351104699 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.427094651 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.931157798 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.093791424 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.128711114 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.078830601 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.698932635 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.08360828 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.130389941 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.509754566 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.109290587 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.115124873 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.125770121 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.211320299 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.129939678 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.181000921 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.101923332 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.675243627 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.102273671 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.184605824 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.100381536 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.164275806 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.227134774 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.078620869 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.108610331 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.670838126 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.190263845 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.112063152 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.096657362 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.67073532 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082250845 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.193578449 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.108753588 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.113657384 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.189962947 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.116032543 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.077545833 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.099479161 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.101152199 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.154895837 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.452180842 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.10625016 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.141911099 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.111782376 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.681364234 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.095904174 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.156228121 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.126666939 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.112034603 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.096451197 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.114527399 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.1585352 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.121232107 seconds)
  done (took 19.62907127 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.115935682 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.139228254 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.094578777 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138988818 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.140477577 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.097494522 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083766458 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095330623 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.109495764 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.183588011 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.138406457 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.144780267 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.092119041 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.080370848 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.118948165 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.250363917 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.104762063 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.121667766 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.081882916 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.107191822 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.140696294 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.097579456 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.111342707 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094910438 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.170959727 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.221227998 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109540427 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123872898 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.095006963 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.100248638 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143200885 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.161913958 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.076135334 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.095496238 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.18232236 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.121026134 seconds)
  done (took 5.170133832 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.196969956 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.119270407 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.189207097 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.174703332 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.14730683 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.162631183 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116733062 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.260020479 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.182238537 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.168035584 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130812245 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.114586473 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077380004 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.095864333 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.077336775 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.744075596 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.188007048 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.153405231 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.1258374 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10254226 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083762511 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.373954471 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099679369 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.082820847 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102488921 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.072167943 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.176973492 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102234061 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.232760834 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.095815196 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.106845559 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129899547 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.191196009 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.126928783 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.119713742 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100801149 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079322608 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.227705349 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.088675016 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.094661526 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.101656908 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133346574 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.134174735 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097442796 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.108095822 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.224415754 seconds)
    (47/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.130846992 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.097510605 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.099205389 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.035588641 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.212852522 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.095116777 seconds)
    (53/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.098462558 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.08070413 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.339085057 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.115576826 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.082833455 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.097594286 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.283383094 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.132038231 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.11029641 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.096957609 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.076893753 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101333951 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.078760067 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.39353429 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.106245981 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.86447153 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.081080585 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.155544686 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100190716 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103835482 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083101534 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100662926 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.099246688 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.096305199 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078521401 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.095150317 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.077001914 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.101299347 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.096096 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.099472938 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.093847173 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.145187734 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.11742875 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.098833017 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125395252 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.098413789 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.078086146 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128333046 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080080679 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.100210749 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.125763678 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.106086959 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.115165932 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097050717 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.125300128 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.098311859 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.189673881 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080398695 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.079227271 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126468617 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101096143 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126583747 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.118438216 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078432493 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099328485 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.075672413 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.095993788 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.14707843 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.096391503 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.079956612 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.101189907 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.093446971 seconds)
  done (took 23.346764323 seconds)
done (took 48.814098119 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.416290767 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.110246549 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.111507576 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.109911693 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.110161606 seconds)
  done (took 1.603069363 seconds)
done (took 2.326468469 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.318032846 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.195603872 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.099849395 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.188478282 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085675664 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.19494629 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.161979952 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.097044374 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.205025384 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.080250293 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.183275178 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080842552 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.103251165 seconds)
  done (took 2.741301525 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.091046246 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116760237 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.080533079 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.107907173 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.074898745 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.093513344 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.10810696 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.13648075 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.089120884 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084968003 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093600483 seconds)
  done (took 1.795482407 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.089886639 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114943191 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.080841102 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.090496882 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093127261 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.090633839 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.108378083 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101461065 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108555947 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084408832 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093831566 seconds)
  done (took 1.779759619 seconds)
done (took 7.028189088 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.102472905 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.523906898 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.121654905 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.172713482 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.331528072 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.216310648 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.622077931 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.133583355 seconds)
  done (took 16.120752869 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.109246776 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.096529238 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.096245972 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.098144953 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.081171039 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.102731347 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.078800996 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.097318356 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.079603935 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.098145301 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.081758172 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.099670837 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.081542578 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.099746687 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.080226716 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.098118545 seconds)
  done (took 2.263247726 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.115322177 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.11247292 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.101396649 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.087036559 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.099961979 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.099431764 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.084434702 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.100165283 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.080765959 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.099272257 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.088176508 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.103893789 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.085835509 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.09734121 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.100966408 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.089231602 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.097299719 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.084697474 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.103870975 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.086309515 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.10598302 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.100545947 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087047875 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.105694387 seconds)
  done (took 3.144755972 seconds)
done (took 22.250295097 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.164675554 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082142983 seconds)
  done (took 0.97197782 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.099489114 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.117325517 seconds)
  done (took 0.94893585 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.104604792 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094901006 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.13299372 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.113448853 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080689228 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.078846217 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.129153896 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.096971063 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.080539378 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.096092144 seconds)
  done (took 1.741162514 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083284808 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.099891365 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.087498286 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.11705937 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.107075053 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.081156895 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.101034142 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.084109854 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.10132759 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078500238 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.104993222 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.100055481 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.102605347 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.236410153 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.084700463 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.102799251 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.105452578 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.083188118 seconds)
  done (took 2.590986974 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078975899 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.080364012 seconds)
  done (took 0.893326673 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.08181724 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093838116 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081261755 seconds)
    (4/7) benchmarking "year"...
    done (took 0.097430133 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.077643694 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.094386097 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.077059385 seconds)
  done (took 1.3367755 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.470790359 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.247499537 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.304038968 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.112885635 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.131353087 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.350687215 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.132271208 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.092312493 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.110222054 seconds)
  done (took 2.743846216 seconds)
done (took 11.956330174 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.088776078 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.131576629 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.479615322 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.114854588 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.076614504 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.157925095 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.260799869 seconds)
done (took 2.046249004 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.339588494 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.120782918 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.087348536 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.077352199 seconds)
  done (took 1.358127156 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.077861326 seconds)
    (2/2) benchmarking "read"...
    done (took 0.084068314 seconds)
  done (took 0.903142002 seconds)
done (took 3.000918988 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076588103 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.124868754 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.076419336 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.095309885 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.074006717 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.076502988 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.093082649 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.074681051 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.094942219 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.074108157 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.093085563 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.076962505 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.076608145 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093455182 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073514607 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090879194 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076357236 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.090688502 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074321726 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074487112 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094369846 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.073996961 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.091818023 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.076106633 seconds)
  done (took 2.789939688 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.102412987 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.095291948 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.082738169 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.1011827 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.083185234 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.102067155 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.102164902 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.078714141 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.101398335 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.081231256 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100324851 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.08246478 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.099787216 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.082696965 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099225996 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.083315007 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.102246916 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079937189 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098324532 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.08308474 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.101701215 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079543881 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.100644344 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102695557 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.08275325 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099951194 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.081418346 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.098081867 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.085518286 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.10048696 seconds)
  done (took 3.516679438 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085224931 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.074154762 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.092989939 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.086242934 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.091683281 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.078265735 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.092080237 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.078682851 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.096885485 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.074463182 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.097686419 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.075110873 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077959007 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.097028874 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079714245 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.099180323 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.092108367 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.095280223 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.077727279 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.097654205 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.080235588 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.094989875 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.078494963 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.074308592 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.091727481 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.074695724 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.093203869 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.074398692 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.092901853 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.075014815 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.096607162 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081293378 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.074485899 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.104610011 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.081680813 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.091944358 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.08269353 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.092075313 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.080856326 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094872429 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.07585061 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.093685519 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.077551328 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.086280662 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.095988205 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.075756726 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.095188059 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.079652482 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.095920255 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.08165007 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.091564349 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.078108308 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.097408476 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.079708755 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.080933934 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.092215363 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.07614659 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.093027336 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.079048563 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.091710857 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.074475186 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.074050841 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.098435521 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.075597352 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.115257906 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.103477986 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.077641556 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.080174786 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.096155347 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.082685839 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.097749318 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.093216982 seconds)
  done (took 6.982136544 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.080655682 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.102727525 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.077658484 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094127143 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073302294 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.075294741 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099516643 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075590134 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093670657 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.093678522 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09240668 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.077404505 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09351182 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.079033164 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092512241 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.077212487 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.103222622 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073029756 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.092514194 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.080070579 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092442904 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.081614423 seconds)
  done (took 2.651459515 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.217875435 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101859501 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.138630526 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.111440818 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095250083 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.111101525 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.082044478 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.101472837 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099316289 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086076578 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104453985 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083635296 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.113533064 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102538373 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086068488 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.104638607 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082400737 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.10431672 seconds)
  done (took 2.676416143 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.091177518 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.096011472 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.101709966 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096061118 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.078102889 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.098565944 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08441955 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.113838187 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.080937826 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.095671767 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.105793639 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080802259 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.097239225 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078781849 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097749086 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.078254968 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.098023439 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078108369 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106032861 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083953773 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.102055968 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.087948218 seconds)
  done (took 2.781092885 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095943721 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097513466 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.099644507 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.100291053 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.077092205 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.09711382 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.085770299 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.095158303 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.08716503 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.098111838 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077957293 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096316573 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.085611719 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.095410673 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103849983 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078640543 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.098046276 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07818562 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097595884 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077810931 seconds)
  done (took 2.577778212 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.11920094 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110441373 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093480304 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122436081 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.111736144 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.09362711 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.12245306 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.093417783 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110443972 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123163913 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.092893167 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.111037973 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121966192 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.100111621 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109852379 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.104301499 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.122325532 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.122728766 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.093655518 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111020177 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123736802 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.093177867 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.121594477 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092999364 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.110837322 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110202292 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.09449925 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.117505732 seconds)
  done (took 3.81134982 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077886226 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07740716 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.093483035 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.075547884 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.093411087 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.075546475 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.075978774 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.094735168 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.077617648 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.093212273 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.078433921 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.096162457 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07797555 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.077499902 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.095453678 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.078619081 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096224666 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.075445453 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093003698 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07615287 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.078027706 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095863833 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.078288524 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.093899221 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075828848 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.095781669 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.076192186 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.075660199 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095697275 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.075637347 seconds)
  done (took 3.276895584 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.0871773 seconds)
    (2/2) benchmarking "in"...
    done (took 0.107271095 seconds)
  done (took 0.9532158 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.075974186 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11283586 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.075252291 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.0997751 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085238923 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.097120265 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.088764539 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102068024 seconds)
  done (took 1.493960903 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.102548597 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.116568391 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084933183 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.109224673 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.097304813 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.114855073 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.161640188 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.084878849 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.105479291 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.079449762 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.11737841 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.079025167 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.106370133 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084454761 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.106162534 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.112155661 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.079767799 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.106705916 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.086448977 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.09858816 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08629391 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112826551 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.089633209 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.104905438 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.082041811 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.10933317 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.093212628 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.108694772 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08391905 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.10935377 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.104241523 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.072757482 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.084243923 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.102632752 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.081523422 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.116024995 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115315672 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084180454 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.106539923 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085494357 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106177442 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.077732547 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.108358304 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.086421092 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110181488 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.085640097 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.104163944 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.077979927 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.098362162 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.083478011 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.096196425 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083110005 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.091745989 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088334842 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.107071105 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097942264 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.100940876 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.084682165 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.101972058 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.082801107 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.104536764 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.083795344 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10817207 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.082981015 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106822799 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.08963834 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106570627 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.077865092 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.091720593 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080578855 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.107469302 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.121951471 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.091813064 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.10425935 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086659668 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.099043164 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.085551141 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104803267 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087119257 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.108649236 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.084934538 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108732534 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093733097 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105037781 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.085671324 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.108698679 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.085987036 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.104954234 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.082627712 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.122168222 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.085735221 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.102270817 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.08380824 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.111617612 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.086713118 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.105891396 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.082839103 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111272781 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.076664595 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.106979013 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088710554 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.108448053 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.094967783 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106902098 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08927898 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.110451302 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.112872591 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087580674 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.104920052 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.079073523 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088443267 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.103174352 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.091826065 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.095569254 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088305892 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.105523534 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.088487521 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.112723199 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.084048613 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.104514217 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108657644 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.091110949 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.101063502 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.076689145 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.102607963 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.083781915 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107236969 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.091341881 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.101216352 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.078184071 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095966634 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.088140228 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.102106731 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.087003752 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104051983 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08466413 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.092483131 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.080825049 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.102488946 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.090815882 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.100481191 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.086516642 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.108163257 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.086459292 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.10205551 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.090022273 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.100906431 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.079823368 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.111116341 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.085595637 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.09963768 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.091429568 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.106120763 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.085263097 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.106479629 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.092340241 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.104280907 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.0858138 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100923764 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.085585174 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104321457 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.081070596 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103666551 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.082685984 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.111233574 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.084035946 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.097190223 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.077314515 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.104370925 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.080842697 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.102338285 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.080526168 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.102639691 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.086681714 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.09959939 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.083383237 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.102744597 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.096769756 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.119803529 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086272382 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.106359987 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.091641439 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.103008181 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.086516167 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.102561655 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086844595 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.104346397 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.088847354 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.105670276 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.08542007 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.10262325 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.075935695 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10498944 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089483753 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.098590143 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.08114638 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.098334947 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.084051592 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.109494727 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.084480601 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.103510134 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082092096 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105522882 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089814944 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.103282273 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.083881268 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.098441515 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.084808991 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.107963228 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.085972026 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104416259 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.091810289 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.103889235 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.078877555 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108585013 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082094807 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.106855679 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.079057422 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.099732684 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.080905621 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.105120943 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.083599492 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.102541077 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.074339394 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107573548 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090431646 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.104309857 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.081122245 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.103846746 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094102788 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.102644108 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090151232 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.10364054 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.088046045 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116150957 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.081221055 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.103682396 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.110390431 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.085910758 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.073802149 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.10695281 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.082566653 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.097595142 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.083226557 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.101345317 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085254623 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105279846 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.085622278 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.093204281 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.084883393 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.101969607 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.08183434 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.097888725 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.090388723 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104028165 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.085119863 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111942554 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086539738 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.105078692 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.087241399 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.102677519 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.086143912 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.104921518 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.085903117 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.105291881 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.08429082 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.099845509 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.085337595 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.099260159 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.081584005 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.102771876 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.085709385 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.104993166 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087569289 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.102630986 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090696799 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.103810432 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.087016959 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.120992807 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.101015666 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.080436328 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105079785 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087170749 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.102508527 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.084699129 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.097943941 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090966565 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.103421755 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090666541 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.103503663 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.077014321 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.104323156 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.084808106 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.104878351 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.087381297 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.105819517 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.083837907 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.103188857 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.085648982 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113084251 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.081353852 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.11100484 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087232274 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105677446 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.085417025 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.104988799 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.083073399 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.099956765 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.084753198 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.105393789 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.085763341 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.103095502 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.087487657 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.104187883 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.084249404 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102299005 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.085967394 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.104818088 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.087372806 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.093942843 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.080788326 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.099791364 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.086071117 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107708071 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.086151649 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.101716298 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.083321788 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105931634 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.083837148 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.096085401 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.089711647 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106592401 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.087180852 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113480211 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.080985745 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.103977988 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095162528 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.093992929 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.083284902 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.100859894 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.081200977 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109250701 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.086858491 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.109736535 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.086098072 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.09989214 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.077636385 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.105440878 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.083721554 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.093516978 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.082203924 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.107679445 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.083242185 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083826172 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.105853568 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.087429715 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106464189 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108023739 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.08454981 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.10334815 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.087300632 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.077763317 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.100864612 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.080932588 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.104422111 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.08651198 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.100977442 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.078053703 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.104576573 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.085184257 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.104627278 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.085095747 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.102882149 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09072167 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10418711 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.085660077 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111345545 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.075504858 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.105086096 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.085887278 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.104093923 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.080535091 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.105940823 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087297664 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106525326 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.090720181 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.103617663 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087396349 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105106671 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.083172069 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.10464874 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.085623254 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.105001879 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.081569816 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.106944451 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092124626 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.10149206 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.085630321 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104544376 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.082723275 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.105802411 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.087256864 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.104556841 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089670085 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.105424539 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.086272002 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.108427053 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.085507226 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106368206 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087833182 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.10307424 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.08963597 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.100915566 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.093138825 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.105854376 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.087357461 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.104277701 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.082288819 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104511396 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.085836599 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104267027 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.091825414 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.106219634 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.081609305 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.100522484 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.082504226 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.10456806 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.091123781 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.11111665 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.085608676 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106172964 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.079894473 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.097478158 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087893669 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.100862464 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.08436655 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.107358126 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090524208 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.104785335 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.083411896 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.103570161 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.090773472 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109429373 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.088078628 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.101567681 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088281448 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.107119016 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.085825088 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.102196652 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.084951976 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106828181 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.087424522 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.10385456 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.08255899 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113688232 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.108674261 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087610852 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.10279971 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.08785686 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.103628133 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.080409575 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.106226618 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085764137 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107514643 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.085753553 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10517918 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096041715 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.099605487 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.084624397 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.110557901 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084949375 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.110527106 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.080742762 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.105741417 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088247706 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107519283 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.080207516 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.101115597 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.082621632 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.106093347 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.081471279 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.099163458 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096159218 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.110478077 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.08605999 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103793568 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085140474 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.098570994 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.081090006 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.100042232 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088565625 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.103226097 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.093874878 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.100462999 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.081729427 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.080038446 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104825218 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086556189 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.107683599 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.078371215 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.100238358 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.082749928 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.106010225 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.092306396 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104376104 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.085159119 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105998923 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.086027032 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.101546584 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092048053 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.097693668 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.087389076 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116254971 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.106014548 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089049193 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.109230095 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092917048 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.106338815 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.081520535 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.107134209 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.086465017 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.106970122 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.088428578 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.108484504 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101586825 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106526636 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.08191117 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.104896906 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.086273129 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.102100078 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.094413315 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108584874 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.087436167 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.107845199 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.084657354 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108571936 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.092792279 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108850246 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.10816631 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.086930131 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.10387631 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085515332 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.08357627 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.104189594 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.088479593 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.107416021 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085349418 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.108701877 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.081594253 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11514241 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.111576561 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088390953 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.096890613 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.082039313 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.082490745 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.100274282 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.088350152 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.099014817 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.084919182 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.104124973 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.085836033 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.10808566 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088086485 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.106239477 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.089081563 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.105653757 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.076392384 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.108757568 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.087393642 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.108290246 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.078285499 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.105956599 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.088325167 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.110735112 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091742275 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.104432787 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.088101027 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.10474406 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.089351077 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.101114718 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.089499207 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104680983 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.085925069 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.102171362 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087087955 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.10734815 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.08896625 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107969519 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.089190781 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.106357081 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.090873751 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.109436096 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.079510437 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.09926876 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.090664968 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.102281528 seconds)
  done (took 57.726316875 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146712852 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087190973 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07707122 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.097814009 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122886666 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081953604 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096754599 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.082558045 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.100363221 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091271662 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.097262203 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078675045 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.119716045 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125184011 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123043013 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.092602319 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.096783828 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.081860677 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.096405068 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082323206 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.118455334 seconds)
  done (took 2.900270755 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.102784485 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.115471839 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.112665096 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100079484 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.108528888 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.114966607 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.094060675 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.1158258 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.119519443 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089819084 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.119688528 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115029143 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.089824911 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.110987527 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108451627 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093052685 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.119111483 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107581983 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.096252394 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.114278024 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111442255 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.093652536 seconds)
  done (took 3.156847929 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.091300757 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.085341215 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.10994159 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.079389395 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.106146884 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.08011502 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.110948988 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.082218533 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.110466863 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.086485733 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.10306163 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.08604006 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.110386683 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.080293992 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.103035553 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.082413482 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.110678398 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.085861429 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.106653087 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.080136275 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.124982833 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.079962072 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.10029162 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.08319353 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.115113664 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.087287188 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.105878545 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.086144113 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.102458617 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.086258718 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.101065028 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.088075699 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.108233319 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.084287233 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.102631099 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.086123738 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.104328612 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.080421694 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.082363821 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.109138995 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.081023478 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.106708329 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.092612871 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.102771642 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.082506444 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.10809421 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.085783182 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.099999792 seconds)
  done (took 5.379216418 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.116967135 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.154250622 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.084961462 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.144356982 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.121473682 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.095666959 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.108166086 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.143534727 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.079668555 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.105666933 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.123288198 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.098518689 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.107495986 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.111189776 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.086615921 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.105827481 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.088521113 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101055774 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.091449112 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105543243 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.11120982 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090092136 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.120207522 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.118010011 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091831039 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.105097356 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.082293365 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.111636987 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.117324375 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.093037541 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.112381257 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.0947817 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.121891729 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.104262564 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.08546601 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.109061644 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.123955826 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.088013383 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.108792851 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.080973642 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.108494627 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091627112 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109279484 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.122677699 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.088637491 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.107663722 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.086874598 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.099942303 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117947179 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.090415494 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.116615102 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.119639793 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.092108441 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.106291403 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.092798248 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.122328483 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.106185443 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.085235634 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.109627778 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.098180187 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100160289 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091512439 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.119748609 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.108023302 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.095633871 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.120351581 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.107535731 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.090836744 seconds)
  done (took 8.101090551 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.115639838 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.112550113 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123673883 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103242682 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.112380171 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.092263567 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.113630568 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.110909948 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.093016038 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118721491 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.09154132 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.159140765 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.108798782 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.118590956 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.093037973 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.111433548 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.092857801 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112592322 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.111182195 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.092049659 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111748275 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.103589062 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.113097873 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.123286253 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124987235 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.089227232 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.112359262 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.092986848 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.124568991 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.111685313 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104389008 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.112490699 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111933565 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.104583281 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.125946984 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.111836216 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086403232 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.112762655 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.092649797 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112487652 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.088464823 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.123178749 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112025508 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.089778125 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.112841212 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.112173914 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.104415888 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.124752438 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.118343005 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.118625003 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.093807013 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.124253959 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09293142 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.112439993 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.123270789 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.13279767 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.103934376 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124420616 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112374695 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.123768524 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10413456 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.132387039 seconds)
  done (took 7.67590616 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084210586 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.083038603 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.10195148 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.081537396 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.103469026 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.082000738 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082647652 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.104320183 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083259494 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.103923486 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08331383 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101205748 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082074084 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083299712 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.101894792 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080426985 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101244593 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.081762054 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102954568 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.081898632 seconds)
  done (took 2.630615359 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093043654 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.124297465 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084198543 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111503711 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.086514184 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.112174166 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.085148315 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106985217 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086328447 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107370946 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.116711184 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.09712388 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104763146 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091199326 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.116123414 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111137266 seconds)
  done (took 2.457971343 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.104004457 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.125202586 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.128729815 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.090047173 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.102100936 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.092294294 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.106908762 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.079735389 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.099630413 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.092211655 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.109973906 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.090451986 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.106845426 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083083837 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.083827284 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.111540941 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.079321851 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.109125072 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.085941684 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.129522167 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.109431155 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.086793265 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.108070407 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.085766177 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.107589142 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.089325503 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.111032373 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.081808656 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.103071344 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.087484643 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.108659483 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.091876681 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101435608 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.089442061 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103864817 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.08123322 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.107976506 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.087573634 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.1107158 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.086541821 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.102524152 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.086346281 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.107421115 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.089253368 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.101429176 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.087402592 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.099972683 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.090209676 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.106492699 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.087241566 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.106714078 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.092569619 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.111664741 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.094847871 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.115594431 seconds)
  done (took 6.253241318 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099054405 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.107960737 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.089169588 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101739066 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087466825 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.112991049 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.088408865 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.106483161 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086371466 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.102065811 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.088077242 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.108379431 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087192838 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109058943 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087274224 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108726831 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079436226 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105517533 seconds)
  done (took 2.582893107 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090824492 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.083691967 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.113065862 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084125278 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.10598579 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.086064491 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101013907 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.082502752 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103429392 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084752331 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104674613 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.08675317 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105306875 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.086900876 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104688825 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084942556 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.106516649 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083627151 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.083900509 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100781637 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086242697 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10343391 seconds)
  done (took 2.899424689 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.101950424 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.135961633 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.098626861 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.146697107 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.109106082 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.087725108 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.118349812 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.088555367 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.127584587 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.087542176 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.109025506 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.088255565 seconds)
  done (took 2.125808401 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108954204 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142644088 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.086728301 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108080927 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119480725 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090796695 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110118461 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089215261 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123891506 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122301145 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089048859 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123467985 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123894272 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121566241 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097844342 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118537799 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109344959 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090380366 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105945732 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132305124 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090385972 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122526518 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089193729 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110680074 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10992938 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100726951 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124197022 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12234836 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088911523 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124484462 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119052953 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089310322 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123184659 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12391172 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087249387 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124121972 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110070618 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132691286 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09932318 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122747294 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.107750041 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099103549 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123864289 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117617501 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103519052 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111853208 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117907108 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090091376 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110593491 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139723196 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118991547 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101449203 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119247228 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123858906 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102470682 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.158930959 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103569224 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121583442 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11937602 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122656796 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102153253 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120234053 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121632453 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123201928 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098737594 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122079343 seconds)
  done (took 8.264869182 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124747149 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108126911 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089754553 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12412394 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122698821 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110031397 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090670507 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11170622 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.328354288 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107779222 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.156640474 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089260942 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122201649 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122220439 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089907854 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110880448 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11056463 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100574432 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107005645 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139272936 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089439348 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121325297 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122605752 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121295978 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122716869 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097768851 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110474183 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089050814 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110875332 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109651271 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097035171 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109569192 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121100928 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086944037 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121559355 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090053347 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110940989 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117223322 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089862867 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119346018 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120965103 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132435005 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090224052 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110303949 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124152048 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090528448 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110320987 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087148042 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110266777 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086836667 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123784278 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124085825 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124128702 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099693082 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111332477 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109697576 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09091381 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111043222 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089547346 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118915908 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121501389 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089703937 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139216708 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111149331 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088629783 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122579674 seconds)
  done (took 8.298649245 seconds)
done (took 154.704134893 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.102489738 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.140533353 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.098831226 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168553714 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.084479 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.141017256 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.11811522 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.120864957 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.08430897 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.104897725 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.084768338 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.107917585 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.150493209 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.105147036 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.08526486 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108240341 seconds)
  done (took 2.637370572 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.179327161 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.285482677 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.104864484 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.112483731 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.090230503 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.10954246 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.089435441 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.112044415 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.085285783 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.11803705 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.106505772 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.087929789 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.118218357 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.087993769 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.105717585 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.087422799 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.118161705 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.086143529 seconds)
  done (took 2.922991889 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.115289846 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.149658076 seconds)
  done (took 1.109390811 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.120883195 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.184965001 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.304215337 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.159565864 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.113707879 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.128679049 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.161050541 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.124285734 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.201346537 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.129353981 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.108027215 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.11374562 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.13775948 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.097222081 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.115810918 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.091426592 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.140264892 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.113360014 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.093361872 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.114100244 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117438343 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.115973552 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.117472029 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.094555596 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.184596793 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.127592126 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.09267066 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.115019552 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.113346084 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093657768 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.119265992 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.104946948 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.128244651 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.189436027 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.097364707 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.184628118 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.099705955 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.111271348 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.093272039 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.112342219 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.095848121 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.11694504 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.127789324 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.091783367 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.112806491 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.100210168 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.113451402 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.091806339 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.121046081 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.120668965 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.099648544 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.118703471 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.163090145 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.122254156 seconds)
  done (took 7.599972383 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.794410695 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.155316274 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09053876 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.896995282 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.144323852 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10530262 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.798008468 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.136595769 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.239264619 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.8121289 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.10617837 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.128330032 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.233221419 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.25310431 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.143270082 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.336906614 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.675948135 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.103558317 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.14348445 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.15328904 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119355925 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118439491 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.133092781 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.429838362 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.112307294 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090489857 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118196901 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.10383186 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.18434488 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.091676746 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115970279 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.183343388 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.265691523 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.20586045 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.091856578 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.11168751 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.089932383 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.189653837 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.246608673 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.219000701 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180052686 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086183026 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111963625 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.103054868 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.13306542 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108365787 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.166105608 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.175534246 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.174868744 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.118860839 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.124464228 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098962916 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.12456614 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.163343861 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.109699225 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.314463564 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.341934159 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.11200419 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098788319 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.132530854 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268558897 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.09077323 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.227070141 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139187482 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.211905847 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090344477 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.77850662 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.169912598 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089232653 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.127431215 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119159458 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096107957 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.124032352 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168874129 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.408523601 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126658488 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.095347216 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110962167 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.210386172 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.089030958 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113309704 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.165304072 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.113202612 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.099095841 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.129964957 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.127292909 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.17403912 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.252170654 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.128241586 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119499727 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.097654537 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125554203 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.09123191 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.212285842 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.220458954 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.159132673 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.236696399 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.103910616 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.188932095 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.170361355 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123526219 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.173186333 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097305226 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.13186973 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125922294 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.215065776 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.121636364 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.113995663 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094149635 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.120575064 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.146804979 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.092428312 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.120730153 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.168880089 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.483170612 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.167782066 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.086471623 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.117019853 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098806631 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.185699708 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098054679 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261166326 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121156953 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.170798768 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097347152 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.109321628 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.098480861 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.189363237 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.105159772 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122444519 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126007281 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.09870611 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.27142184 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.20080253 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128267066 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.245312037 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.163170549 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.123859036 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.174861394 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122909104 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.171123822 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123021891 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.102139557 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11638366 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.774841386 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.103536037 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121517059 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118253945 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.188482309 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091057746 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.091371082 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.113615849 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.087425977 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.777268642 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.092840755 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.110991348 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.092131712 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.123424843 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120264532 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.097989364 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.118639696 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.16568757 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.235543147 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.125786292 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.09925948 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.112605062 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.162182267 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.093216247 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.113450336 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.0914004 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.112859728 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.101046865 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.118588417 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.09268917 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.196213538 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.162198184 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.222081854 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.588092973 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111766487 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.092592423 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.233254534 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090361185 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.308214972 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120796986 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.227836552 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.170525863 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.087547662 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.338357786 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.169728551 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.187901484 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.116478775 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.175979655 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.08637307 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119560444 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.163157483 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112832909 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097910973 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.160528279 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.130070937 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.129080534 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.145072787 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090496328 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.229678116 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.109889006 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.171521289 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.1142774 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103450939 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.310468637 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111647315 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.112311804 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.16316419 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.119264113 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.089535263 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.870781202 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.090207874 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124741062 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.123612627 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.226137331 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.167606508 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097536281 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122519262 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.126058986 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.16675796 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.212174179 seconds)
  done (took 44.449068948 seconds)
done (took 59.557680043 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.305830338 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.267103982 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.29610015 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.198644581 seconds)
  done (took 2.008717288 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.181132601 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.153512236 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.12671374 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.11077529 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.156463341 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.088543724 seconds)
  done (took 1.686134599 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.477377712 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.375678312 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.347338576 seconds)
  done (took 2.071760436 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.256687915 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.28252217 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.323691382 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.427721875 seconds)
  done (took 2.265654117 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.20950639 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.127522288 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.10101745 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.140575992 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.174542712 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.179241836 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.144812757 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.155846227 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.131364984 seconds)
  done (took 2.279197854 seconds)
done (took 11.183645116 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.268037985 seconds)
    (2/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.178407107 seconds)
    (3/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.291834138 seconds)
    (4/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.108870953 seconds)
    (5/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.233822348 seconds)
    (6/286) benchmarking ("sort", Float32, false)...
    done (took 0.175990156 seconds)
    (7/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.127907307 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.107952129 seconds)
    (9/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.12606582 seconds)
    (10/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.207418841 seconds)
    (11/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.192149237 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.104249909 seconds)
    (13/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.129717738 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.096549084 seconds)
    (15/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.222213131 seconds)
    (16/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.126038722 seconds)
    (17/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.220253802 seconds)
    (18/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.10448904 seconds)
    (19/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.1245552 seconds)
    (20/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.249738288 seconds)
    (21/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.209668429 seconds)
    (22/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.186336945 seconds)
    (23/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.126750179 seconds)
    (24/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.231974124 seconds)
    (25/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.096400288 seconds)
    (26/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.116745715 seconds)
    (27/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.093598684 seconds)
    (28/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.15707259 seconds)
    (29/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.14285376 seconds)
    (30/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.209658927 seconds)
    (31/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.138791493 seconds)
    (32/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.185974495 seconds)
    (33/286) benchmarking ("sort", Int64, true)...
    done (took 0.222479029 seconds)
    (34/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.10144183 seconds)
    (35/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.122971195 seconds)
    (36/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.249193548 seconds)
    (37/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.144869977 seconds)
    (38/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.175953364 seconds)
    (39/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.144459713 seconds)
    (40/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.126742704 seconds)
    (41/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.254727327 seconds)
    (42/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.218646207 seconds)
    (43/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.172571551 seconds)
    (44/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.104383366 seconds)
    (45/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.220324633 seconds)
    (46/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.128636865 seconds)
    (47/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.095740894 seconds)
    (48/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.124477409 seconds)
    (49/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.1939557 seconds)
    (50/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.190084854 seconds)
    (51/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.183284583 seconds)
    (52/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.190762148 seconds)
    (53/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.104922285 seconds)
    (54/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.128741345 seconds)
    (55/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.197408211 seconds)
    (56/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.114094628 seconds)
    (57/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.114796516 seconds)
    (58/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.095658017 seconds)
    (59/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.116614874 seconds)
    (60/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.16423793 seconds)
    (61/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.17209641 seconds)
    (62/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.119304394 seconds)
    (63/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.104120245 seconds)
    (64/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.113136222 seconds)
    (65/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.088919243 seconds)
    (66/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.190363529 seconds)
    (67/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.13356111 seconds)
    (68/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.094820401 seconds)
    (69/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.17012276 seconds)
    (70/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.193343682 seconds)
    (71/286) benchmarking ("sort", Float32, true)...
    done (took 0.230306016 seconds)
    (72/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.117317602 seconds)
    (73/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.238585992 seconds)
    (74/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.082689214 seconds)
    (75/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.100006518 seconds)
    (76/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.116892947 seconds)
    (77/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.100583926 seconds)
    (78/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.095205079 seconds)
    (79/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.103085058 seconds)
    (80/286) benchmarking ("sort", Int64, false)...
    done (took 0.089529832 seconds)
    (81/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.079757417 seconds)
    (82/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.117387273 seconds)
    (83/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.127089719 seconds)
    (84/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.102825782 seconds)
    (85/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.076569247 seconds)
    (86/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.121485239 seconds)
    (87/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.140650151 seconds)
    (88/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.160135655 seconds)
    (89/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.141928246 seconds)
    (90/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.116829495 seconds)
    (91/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.21283662 seconds)
    (92/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.090598762 seconds)
    (93/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.119106295 seconds)
    (94/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.093740248 seconds)
    (95/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.121293446 seconds)
    (96/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.1360571 seconds)
    (97/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.185800467 seconds)
    (98/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.099713458 seconds)
    (99/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.126611929 seconds)
    (100/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.161020642 seconds)
    (101/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.124706409 seconds)
    (102/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.138854469 seconds)
    (103/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.114248217 seconds)
    (104/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.077465636 seconds)
    (105/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.117871551 seconds)
    (106/286) benchmarking ("sort", Int8, true)...
    done (took 0.219812446 seconds)
    (107/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.126176377 seconds)
    (108/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.115555906 seconds)
    (109/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.112131603 seconds)
    (110/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.126787775 seconds)
    (111/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.247996635 seconds)
    (112/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.153126644 seconds)
    (113/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.137394014 seconds)
    (114/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.09979088 seconds)
    (115/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.195507865 seconds)
    (116/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.197814093 seconds)
    (117/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.095926294 seconds)
    (118/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.182490385 seconds)
    (119/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.160275215 seconds)
    (120/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.144827111 seconds)
    (121/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.191838321 seconds)
    (122/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.099847246 seconds)
    (123/286) benchmarking ("sort", Bool, false)...
    done (took 0.185293896 seconds)
    (124/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.101114553 seconds)
    (125/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.124396303 seconds)
    (126/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.093761007 seconds)
    (127/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.170332597 seconds)
    (128/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.093713729 seconds)
    (129/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.127476521 seconds)
    (130/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.124618241 seconds)
    (131/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.102491131 seconds)
    (132/286) benchmarking ("sort", Float64, false)...
    done (took 0.174268832 seconds)
    (133/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.100354107 seconds)
    (134/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.189076772 seconds)
    (135/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.100644362 seconds)
    (136/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.0972767 seconds)
    (137/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.146068316 seconds)
    (138/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.198269 seconds)
    (139/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.08878392 seconds)
    (140/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.118463817 seconds)
    (141/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.114331944 seconds)
    (142/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.111512253 seconds)
    (143/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.089278169 seconds)
    (144/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.119741021 seconds)
    (145/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.079467326 seconds)
    (146/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.126368513 seconds)
    (147/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.094589251 seconds)
    (148/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.100415671 seconds)
    (149/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.20494823 seconds)
    (150/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.097527132 seconds)
    (151/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.177153957 seconds)
    (152/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.124486286 seconds)
    (153/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.095230442 seconds)
    (154/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.126868131 seconds)
    (155/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.080959641 seconds)
    (156/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.1208084 seconds)
    (157/286) benchmarking ("sort", BigInt, true)...
    done (took 0.249612254 seconds)
    (158/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.199487208 seconds)
    (159/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.079156009 seconds)
    (160/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.182525408 seconds)
    (161/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.19348672 seconds)
    (162/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.093332422 seconds)
    (163/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.150737667 seconds)
    (164/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.077515015 seconds)
    (165/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.100075318 seconds)
    (166/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.157862605 seconds)
    (167/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.100849421 seconds)
    (168/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.080696536 seconds)
    (169/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.116442706 seconds)
    (170/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.104277165 seconds)
    (171/286) benchmarking ("sort", BigInt, false)...
    done (took 0.253895624 seconds)
    (172/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.084609295 seconds)
    (173/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.140057699 seconds)
    (174/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.101161909 seconds)
    (175/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.10025114 seconds)
    (176/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.077691274 seconds)
    (177/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.136385399 seconds)
    (178/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.097025622 seconds)
    (179/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.118178269 seconds)
    (180/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.078705193 seconds)
    (181/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.116492892 seconds)
    (182/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.095805455 seconds)
    (183/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.1261925 seconds)
    (184/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.10034071 seconds)
    (185/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.20032622 seconds)
    (186/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.101156329 seconds)
    (187/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.078311914 seconds)
    (188/286) benchmarking ("sort", Bool, true)...
    done (took 0.22239729 seconds)
    (189/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.115771581 seconds)
    (190/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.080265546 seconds)
    (191/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.096142846 seconds)
    (192/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.117008417 seconds)
    (193/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.120053092 seconds)
    (194/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.092636718 seconds)
    (195/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.100824605 seconds)
    (196/286) benchmarking ("sort", Float64, true)...
    done (took 0.231484134 seconds)
    (197/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.102450053 seconds)
    (198/286) benchmarking ("sort", Int8, false)...
    done (took 0.19518797 seconds)
    (199/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.128516229 seconds)
    (200/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.09278517 seconds)
    (201/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.121507954 seconds)
    (202/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.097335336 seconds)
    (203/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.12785735 seconds)
    (204/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.117806456 seconds)
    (205/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.116296116 seconds)
    (206/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.114463741 seconds)
    (207/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.089992797 seconds)
    (208/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.077693402 seconds)
    (209/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.118559113 seconds)
    (210/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.096968556 seconds)
    (211/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.120440806 seconds)
    (212/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.081030704 seconds)
    (213/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.114308357 seconds)
    (214/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.099241324 seconds)
    (215/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.123185209 seconds)
    (216/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.119399676 seconds)
    (217/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.078163419 seconds)
    (218/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.083904202 seconds)
    (219/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.102951946 seconds)
    (220/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.096888608 seconds)
    (221/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.100837951 seconds)
    (222/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.114585208 seconds)
    (223/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.107637008 seconds)
    (224/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.092873815 seconds)
    (225/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.121241639 seconds)
    (226/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.089585273 seconds)
    (227/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.118642121 seconds)
    (228/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.092857617 seconds)
    (229/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.117938457 seconds)
    (230/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.094104999 seconds)
    (231/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.118239331 seconds)
    (232/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.078367734 seconds)
    (233/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.104983138 seconds)
    (234/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.079281005 seconds)
    (235/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.107814192 seconds)
    (236/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.080893646 seconds)
    (237/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.099515083 seconds)
    (238/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.129753593 seconds)
    (239/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.119853013 seconds)
    (240/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.092499208 seconds)
    (241/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.121626125 seconds)
    (242/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.088008896 seconds)
    (243/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.11441268 seconds)
    (244/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.081608239 seconds)
    (245/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.127239542 seconds)
    (246/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.081051381 seconds)
    (247/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.10355397 seconds)
    (248/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.097295151 seconds)
    (249/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.1256569 seconds)
    (250/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.103009591 seconds)
    (251/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.114202404 seconds)
    (252/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.085758483 seconds)
    (253/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.117932002 seconds)
    (254/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.093204329 seconds)
    (255/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.187989544 seconds)
    (256/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.108362225 seconds)
    (257/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.114930802 seconds)
    (258/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.081248888 seconds)
    (259/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.121758715 seconds)
    (260/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.081208446 seconds)
    (261/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.113541822 seconds)
    (262/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.077494969 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.113950424 seconds)
    (264/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.094508872 seconds)
    (265/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.102784379 seconds)
    (266/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.114217227 seconds)
    (267/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.128292274 seconds)
    (268/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.177576486 seconds)
    (269/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.143524777 seconds)
    (270/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.122057446 seconds)
    (271/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.077166031 seconds)
    (272/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.107976364 seconds)
    (273/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.079401931 seconds)
    (274/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.118990405 seconds)
    (275/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.092949024 seconds)
    (276/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.105730009 seconds)
    (277/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.085564972 seconds)
    (278/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.078632187 seconds)
    (279/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.120138213 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.115179635 seconds)
    (281/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.078523366 seconds)
    (282/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.081566228 seconds)
    (283/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.137511644 seconds)
    (284/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.095205068 seconds)
    (285/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.108097856 seconds)
    (286/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.095849203 seconds)
  done (took 38.156743147 seconds)
done (took 39.033740278 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.104504862 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.153563162 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.100725664 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.144296307 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.125232735 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.106163381 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.123202555 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.103105819 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.128036247 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.105903792 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.127367501 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.084300537 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.124525647 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.10005372 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.125593729 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.142752897 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.103940743 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.119701355 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.092706654 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.115878797 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.093082714 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.116448094 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.095237727 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.107982363 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.101258797 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.122627084 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.096138975 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.124851801 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.093439992 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.116336692 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.091786353 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.120331925 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.091073635 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.126871255 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.095495133 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.115935419 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.101593079 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.123358023 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.095339858 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.116557495 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.098095339 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.11661553 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.096186799 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.121472757 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.093895522 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.115632915 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.093004818 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.128587214 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.144114869 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094275275 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.097685643 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.124399162 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.125657814 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.097532018 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091424374 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.117072002 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.117347648 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.120126755 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.116791786 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094478131 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.13915114 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.097552315 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.115784462 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.092995548 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.116675058 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.099714266 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.12433972 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.092771313 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.123227753 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.096139059 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.111248259 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.093520362 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.114716973 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.090530264 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.122505803 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.100052543 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.087672352 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.118478921 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.096405232 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.119112189 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.093503369 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115792664 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.095198157 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.118651341 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092150636 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.107807224 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.09227889 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.118786031 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.092962246 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.11645365 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.096477252 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.119229711 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.095794834 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.124883194 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.093289668 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.117849213 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.093118389 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.118809314 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.118927877 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091909401 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.088658699 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.115550685 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.098006391 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.114693688 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.093953292 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.125429815 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.091421924 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.11947631 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.092949328 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.11650675 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.107022048 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.124258739 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.093075548 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.11925133 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.089888625 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.120138029 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.090830507 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.115461264 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.091334494 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.117678732 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.09494396 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.116829813 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091966317 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.120173894 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.103616495 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.114311718 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.092417898 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115636285 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.093733213 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.120567854 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.094085102 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.114399732 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.093000495 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.111788342 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091973932 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.11535955 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.097199841 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116281002 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.093872779 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.117714592 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.093571691 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.118929942 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.094726804 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.119067598 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.09198975 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.109926247 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094935188 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.115133785 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.095295264 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.117756657 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.09493299 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.11275161 seconds)
done (took 17.371499435 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.099815261 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.188756059 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.150931982 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.153952559 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.149782884 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.110454898 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.129657373 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.149062213 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.102011218 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.146292016 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.149814764 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.139281935 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.130521641 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.126283091 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.135278217 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.100679779 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.123562235 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.109965747 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.159315651 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.143875884 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.1514277 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.101840209 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.146493317 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.144386229 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.099718294 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.14514596 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.127315573 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.100653345 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.127646979 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.120081215 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.14101405 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.127032661 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.102451511 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.137098452 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.107873414 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.124128687 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.135453143 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.096737277 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.124508032 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.100059053 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.137877168 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.135819695 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.097201924 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.131999427 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.12453514 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.105318004 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.124314147 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.098537833 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.125292714 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.095812221 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.129698069 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.146059465 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.098745802 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.127036156 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.125441407 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.101047072 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.126842971 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.104272261 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.126719258 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.127909308 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.101838535 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.127369522 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.105380508 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.142833912 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.12353471 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.102883007 seconds)
  done (took 9.179058695 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.115603971 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.152261524 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.131329805 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.108470029 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.127268819 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.089955009 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113711042 seconds)
  done (took 1.777894229 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.091161682 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.145396501 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.123020426 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.147677815 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.13994017 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.127292247 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.132923865 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.090514758 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.139137271 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.124847614 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.119863796 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.170417544 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.116605884 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.104580056 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.151067075 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.090512686 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.15064553 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.115598028 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.100020229 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.147710963 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.097073816 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.138453892 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.103369242 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.116862308 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.137483665 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.093623147 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.184013581 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.129305973 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090891092 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.123359463 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.097564443 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.186316268 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138180075 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.102530697 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114622576 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.119098135 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.13702956 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.121192644 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.115710087 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.121346455 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.112747331 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.122176322 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.098656964 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.123041314 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.099193914 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.130806692 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.12687385 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.099927822 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.12150704 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.119663405 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.126968766 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.113303301 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.118178204 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.096052616 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.125922909 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.122306091 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.105959392 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.121572947 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.120050946 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.123469355 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.117293062 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.143044372 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.137758942 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.11808772 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.133668749 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.137601715 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.113474625 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.122575394 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.099142838 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.124029473 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.117722524 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.12071858 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.125657949 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.106723148 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.124551698 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.119322081 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.143621812 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096325621 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.12916466 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.095916536 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.11973678 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.092072748 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.132782788 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095607198 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.119548329 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.108882549 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.129553011 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.121911317 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.09621185 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.138847536 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.095925047 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.128524542 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.127737942 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.095629551 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.13158544 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.119190072 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.127221398 seconds)
  done (took 12.670944486 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.094111422 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.09312913 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.12330211 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.095243403 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.119695535 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.094058987 seconds)
  done (took 1.565633102 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.12343212 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.121553131 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.108460751 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.124951136 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.161572911 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.117153808 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.144782182 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.102285093 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.13767064 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.132017873 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.11743964 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.143241648 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.149096842 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.100907936 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.141885386 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.101197703 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.142911647 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.096863873 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.132465622 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097131452 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.136370722 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.12588782 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097082026 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.139821675 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.101375987 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.126707227 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099435279 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.132655136 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.132615493 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.103399306 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.124921986 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.101315727 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.125157469 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.10272569 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.142031023 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.126315473 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095575984 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.128069319 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101843803 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.125729968 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.118639315 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122594634 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.106318397 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.128483683 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.12786547 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.100633549 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.128170807 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.099912593 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.140910194 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.103426077 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.128444947 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.1001306 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.126639031 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.103414899 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.124949281 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.128143244 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.103289766 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.142048607 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.100137998 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.126299989 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.097362884 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.127641626 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.128086032 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.101392131 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.125809798 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.1035351 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.125776868 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.097123992 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12232012 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.100032022 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.128762231 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.096976248 seconds)
  done (took 9.534553335 seconds)
done (took 35.656069639 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.675867566 seconds)
  done (took 1.620107253 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.830656828 seconds)
  done (took 1.775681518 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.54787308 seconds)
  done (took 18.521365692 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.496997376 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.592743925 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.990261362 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.166990483 seconds)
  done (took 3.193812131 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.961417664 seconds)
  done (took 1.928722189 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.306303179 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.27116402 seconds)
  done (took 1.529842058 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.807059501 seconds)
  done (took 1.765339841 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.524884887 seconds)
  done (took 2.48385798 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.356047392 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.203963285 seconds)
  done (took 1.531038804 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.571187698 seconds)
  done (took 1.534467281 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.806281347 seconds)
  done (took 15.774410845 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.245592298 seconds)
  done (took 1.224191043 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.301149889 seconds)
  done (took 1.26843448 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.623135474 seconds)
  done (took 4.589421311 seconds)
done (took 59.696565912 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.103837042 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.131416632 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.106371337 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.12796578 seconds)
  done (took 1.430321767 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.107504818 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.126744199 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.104673678 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.125852196 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.109093575 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.126694853 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.100024893 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.183152873 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.125738938 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.102844727 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.126613204 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.100680679 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.12957873 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.100486646 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.124416616 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.102801687 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.128763814 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.100541079 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.128624029 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.127452118 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.097840204 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.127183214 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.104032285 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.125410521 seconds)
  done (took 3.805415703 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.10293675 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.097115424 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.125132677 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.096322627 seconds)
  done (took 1.392355382 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.107172237 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.139095743 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.112410317 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.133054188 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.113375154 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.138432276 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.122039678 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.096256313 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.124562509 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.106572331 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.122769637 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.117967067 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.139230729 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.091423609 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.13328251 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.093592228 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.1179887 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.138391964 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.106537325 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.133654487 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.09653863 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.13167134 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.103861237 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.136355398 seconds)
  done (took 3.833015392 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.178060294 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.135796698 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.146108045 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.103956256 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.171503811 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.147978435 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.095990319 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.147656166 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.096298002 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.144992085 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.126498073 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.14725895 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.139661893 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.124920794 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.096043259 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.128359941 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.113178758 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.143675283 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.124934743 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.109324257 seconds)
  done (took 3.595952728 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.103089726 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.121930201 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.09290934 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.094074671 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.129367872 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.098498941 seconds)
  done (took 1.620057377 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.092318194 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.091790104 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.117733193 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.091221886 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.121988198 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.09083787 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.116271074 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.091455968 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.091505609 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.117260478 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.09125487 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.116343343 seconds)
  done (took 2.210095112 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.38002277 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.122268594 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121605841 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.095911766 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.12809128 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.094596622 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.133643242 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.094996759 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.150513392 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.095582701 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.120015664 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.09793947 seconds)
  done (took 2.612558193 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213446324 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100935217 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268436737 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.427852251 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160599979 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168931605 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.328270978 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167869289 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.186842011 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142717487 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200034836 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162048089 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158761758 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184617951 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144752649 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.181924099 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181852241 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205931839 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153492838 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21136741 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168496323 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173088137 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184838572 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157801941 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115186464 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162986511 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.123971663 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106337603 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204885498 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176586596 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180432831 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154619014 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117283696 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234918511 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218781321 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211290025 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.361989471 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137308844 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.195301086 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.18785745 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256235408 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118663526 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226475678 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133920743 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135224378 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186553115 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161479052 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.186103206 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.136501821 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117490656 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214371146 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182697482 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.184442075 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143134174 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.348578971 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151064869 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.151955926 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193403111 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191081102 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194478738 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172522703 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.124789538 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.250334429 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187063408 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18383825 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.123659375 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.197682503 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103304821 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180586358 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.199568025 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180510756 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169749004 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.216571821 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139827154 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169401614 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173180975 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132630223 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18238114 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164525114 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.126201319 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155596936 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114778634 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132191506 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.189739729 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100397821 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20695282 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138901958 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.193984983 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218967764 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163484046 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165782696 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169338121 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171691184 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15296792 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.122988913 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124902426 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.166057308 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164626762 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137135986 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161715531 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121514893 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.132100742 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159062168 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.101168221 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164578219 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.13958204 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173195276 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170560179 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.105796846 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170372761 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155342666 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.163440575 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178187246 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191129862 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137680915 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109085144 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1977798 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163465356 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.141817373 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17996204 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.190340613 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.16926458 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142665782 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175260547 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197610345 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146639481 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192835851 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146544014 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110767164 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.156214621 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164854733 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161247747 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.16293357 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106241434 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.159394176 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225611082 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.104324424 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141993207 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181230407 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104382345 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135033431 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147841542 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113536897 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.147876324 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.154536872 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.116383355 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163134634 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165878662 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159757679 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163924876 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146818468 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197954127 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137962658 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.165696047 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125557122 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.1242048 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.184187611 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190427864 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133914318 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205336594 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.174760472 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266100573 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169595449 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108893439 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184448881 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133431684 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.096740438 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199175076 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13858503 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167310426 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.187840572 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266785702 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.169671339 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.157987433 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156584543 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17355619 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.179327099 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161324293 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.150416927 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168338092 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1746408 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.09914842 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.129448035 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.104552375 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147482813 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136113671 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109574728 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2150956 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170499579 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.231853051 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165014552 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147446063 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188199325 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.103239525 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170867397 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.206330293 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115932511 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.189010851 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187344011 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17192905 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147758119 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181056668 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.125734649 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100779215 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.139381463 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171276881 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110278996 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138878778 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148862692 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187677585 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181976041 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156609297 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.268989354 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176174006 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197573534 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.100088644 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.169401805 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177017556 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165018075 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.188497615 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112937297 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.167047978 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182811031 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148917552 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196602564 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168740065 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175432568 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204203185 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.163828671 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135575605 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154732495 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173202691 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117891098 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171942134 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151232383 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141096958 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159963755 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.112122049 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13255058 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188626757 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150650213 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186080662 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.161916743 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179581952 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131601631 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120468058 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165801129 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152167633 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.09297321 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204016886 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193451214 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150518869 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166005611 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182170373 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107307869 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.38097724 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19672762 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191428641 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142597063 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148584313 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139669878 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165190415 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170918047 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185291092 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149560394 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18491417 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165158082 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.148987837 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112550592 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153053632 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158168448 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.155779211 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.110167914 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.15931642 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.151649513 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191492899 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149481295 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165491477 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171081184 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.125135221 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.160200212 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14909776 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207422264 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165545575 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183757537 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.16146082 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.172138686 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206388426 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128947758 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107313425 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.1325699 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18492795 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1099751 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165571966 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.252678389 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248197256 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163948225 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172188741 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144243935 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.097346422 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165602794 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155977312 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.268792461 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146181425 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.112969516 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226331113 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.128437309 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136988609 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168456627 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.340186167 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147997413 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180636387 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.121870633 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.319081269 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128776615 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109229029 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165690446 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176837898 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.144091752 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.162836107 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167259443 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150447196 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167127078 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142948697 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.230010248 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248163079 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178281149 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182748907 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.149536581 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163903855 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1689852 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182409862 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12017645 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.151836469 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169248026 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188746051 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.193649279 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.138763434 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170071529 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168716754 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137036889 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208965917 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11046848 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233866877 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108457044 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172035569 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145618658 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128590556 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137607769 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.253175835 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13764551 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182510883 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16468525 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109698757 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132922659 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157456486 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164366986 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120798496 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.135439795 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18689058 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.131343426 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140185074 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186274244 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136886255 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161285228 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123574882 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144814399 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148908552 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151819815 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112591543 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.176982858 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189294108 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.137367686 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184557083 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184690395 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172620913 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166983245 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149365848 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.639021796 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.133651601 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189627288 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153493371 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19195426 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126015973 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172720196 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167396972 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15732059 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17474642 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157155286 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.226821321 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17339405 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.164892811 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107684823 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151131064 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149954197 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.107917407 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157301651 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169666211 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148081461 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.114322284 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.164279806 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151805853 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.151089426 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115698142 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218468314 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125211818 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190042559 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.185852585 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1447739 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173832216 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179736199 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137322952 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.167477106 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178514948 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146374328 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127089651 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.138329155 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.140898499 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186338036 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.101599321 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169001 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167174966 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17074157 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169866623 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.110253555 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166172897 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148770861 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16823145 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135592825 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.13145762 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162847176 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136326528 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.104436595 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160891879 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165729685 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.165188991 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130833264 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.149036962 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186770956 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.130955462 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110509406 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.35989543 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165280327 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198049519 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.158744429 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110390103 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151076109 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162299156 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.160826439 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167837661 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.105503634 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138625605 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.107885935 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.188093911 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.158722351 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164450453 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201528323 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168833537 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207056417 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.141573871 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.273114246 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115294685 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161865218 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.13552778 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.105717669 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149113987 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140724807 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149695551 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.232495642 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185159019 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.159276255 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.149542445 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104562454 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.133485916 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110598611 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167349847 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161807416 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165340729 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14949909 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.094056066 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150672864 seconds)
  done (took 80.228208383 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.151731818 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.137699796 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.153865482 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.200743608 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.171627515 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.247860271 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.210972231 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.233065901 seconds)
  done (took 2.570791977 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.105731551 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.162188218 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.145037064 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.129549029 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.096717978 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.337659156 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.144000436 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.128627995 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.152733842 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.138476301 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.097408878 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.567673952 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.09964259 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.130034396 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.11983383 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.095439061 seconds)
  done (took 3.707555482 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.34326849 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.543680287 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.147590567 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.251542776 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.232633933 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.158473805 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.758907955 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.189642168 seconds)
  done (took 12.692940916 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.126651908 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.144742972 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.139603603 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.168022264 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.123761891 seconds)
  done (took 1.773416462 seconds)
done (took 122.434552542 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.10089879 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.130171815 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.102197973 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.132036276 seconds)
  done (took 1.521601353 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.113004799 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.085790685 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.117982009 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.084773439 seconds)
  done (took 1.464175604 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.426365575 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.115232878 seconds)
  done (took 1.643433613 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.121529019 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.138600195 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.111600934 seconds)
  done (took 1.439363116 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.108281703 seconds)
  done (took 1.180093286 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.102716486 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.105341164 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.147463279 seconds)
  done (took 1.426717894 seconds)
done (took 9.746615184 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117622653 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.435054706 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.390007582 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.142980726 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.725734716 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.384172447 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.042445273 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.160187716 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.143605642 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.1233374 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112411654 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.703675048 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.026849003 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.346192272 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.012712872 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.345970432 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.676772922 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.126504299 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.128646521 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.097757466 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.019984678 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095263434 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096720814 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.126708009 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.674798765 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.428230173 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095745708 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.38553099 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.122517377 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.100248647 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.412542508 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096374828 seconds)
  done (took 16.954523452 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.101751271 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183670928 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.103550577 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126025094 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.099432966 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.125953002 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.10497684 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.137891917 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.186927544 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094638166 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.143143347 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.095105297 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.130208477 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.096063436 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.144621003 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.095369881 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.126884231 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.098196855 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.131287672 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.09728889 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.144471943 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095016639 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.126258414 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09755132 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.124792964 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108427398 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.125425704 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.107918623 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.12435495 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.100267815 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.129779157 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095551381 seconds)
  done (took 4.877760558 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.147312272 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.192677068 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.132260107 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.130616862 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.17570605 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.125517202 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.180576157 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.162862672 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.189344386 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124482131 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.113495901 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.12445487 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.131448407 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.125019602 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.11620308 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.124560663 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.098824276 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.126854092 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.102991871 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.126761486 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.143575848 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096241661 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.097714944 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.127307419 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.097061698 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.139382419 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096255677 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.137582196 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.12368233 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.101070545 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.129674758 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097274555 seconds)
  done (took 5.217399402 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.104240659 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.13365302 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.113150286 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.141397074 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.098704234 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.132393169 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.104599867 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.126697629 seconds)
  done (took 2.036079811 seconds)
done (took 30.155599871 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.113800634 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.101082462 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.138538025 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.108638918 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.137021719 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.119876594 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.124976787 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.107982813 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.138034259 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.105156503 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.140839627 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.095324228 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.127123139 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.096025927 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.137967785 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.10295715 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.140096324 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.106231196 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.145341671 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.111657577 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.125655274 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.108818195 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.105523207 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.147623065 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.144448506 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.115902104 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.141453185 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.102637772 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.125982601 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.097420287 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.13913139 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.118374804 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.127960496 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.112598801 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.130911543 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.101149525 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.125863539 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.098024919 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.140326964 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.10769611 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.130914244 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.108112552 seconds)
  done (took 6.122318468 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.123748295 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.168201103 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.097374463 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.126955105 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.097310262 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.163533685 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.160834167 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.097302449 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.126298579 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.12236148 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.151739579 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.097417346 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.126206575 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.098485708 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.125769657 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.09925027 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.149862722 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.120782484 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.156596372 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.126263409 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.170393262 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.157662061 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.130557814 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.150267662 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.166580193 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.159839859 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.117816963 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.162154332 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.123356187 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.127205201 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.156064506 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.128193419 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.124895066 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.097744759 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.166761907 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.130662292 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.15408587 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.166494829 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.156234018 seconds)
  done (took 6.369719358 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.105866846 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.139810214 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.119088595 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.192941387 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.13605252 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.140582774 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.106851636 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.145418689 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.112748803 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.126021345 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.106322197 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.157223332 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.145564533 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.105435742 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.130678044 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.112772731 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.146200273 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.099130113 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.129903006 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.116059897 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.144229704 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.109756565 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.13856711 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.106905702 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.125023745 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.106065925 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.129385006 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.111936691 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.130244853 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.10491178 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.129897699 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.101486877 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.132835901 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.109269376 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.129525346 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.104525535 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.14826773 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.105568343 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.138392075 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.129502741 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.139058691 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.101253631 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.148139545 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.166111398 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.097682955 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.133210287 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.104693985 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.135757927 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.096438636 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.115226712 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.1381687 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.097285167 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.142500451 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.126181699 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.097096371 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.140782753 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.098753902 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.09998066 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.134341879 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.103474789 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.146682605 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.101463863 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.143755954 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.097632913 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.133220465 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.097585868 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.126860327 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.10263922 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.148603751 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.100208554 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.166663897 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.127053522 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.103847788 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.134371119 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.105187614 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.106043153 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.127824674 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.111423907 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.136867679 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.101607194 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.136937451 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.108639695 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.130418796 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.114745325 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.141857581 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.133935596 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.104147697 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.132512895 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.101642454 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.127207163 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.111929717 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.129156112 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.10195689 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.143590487 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.098366123 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.099541399 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.134397818 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.101907497 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.126197452 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109325101 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.134095307 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.097814337 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.136841561 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.098220726 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.130476272 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.106280372 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.131533624 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.097901803 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.131942842 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.103649349 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.127667817 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.100956704 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.130501853 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.100426414 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.140915621 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.105200537 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.129902731 seconds)
  done (took 15.329828643 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.242751563 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.225101567 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.199129488 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.308562445 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.149428218 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.124750528 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.220728136 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.177892728 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.128489328 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.137293344 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.183296076 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.194625152 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.182679647 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.193532626 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.185209357 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.128630422 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.116843571 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.181284885 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.223822492 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.306666066 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.116965779 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.14309845 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.167781238 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.168059772 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.11622191 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.144947842 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.151449877 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.1188743 seconds)
  done (took 6.035805297 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.114059936 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.164470384 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.105856605 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.153655336 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.155103392 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.099354669 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.13375064 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.099236884 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.141512957 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.113416101 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.129889726 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.105036453 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.135122282 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.107854446 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.128443752 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.107635094 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.138166124 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.107834012 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.131560252 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.102741713 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.142146561 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.115991663 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.134948117 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.100112098 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.145143444 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.130476206 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.09975234 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.149979673 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.135877448 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.123693272 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.125294956 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.10805366 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.142269982 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.098505505 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.100088817 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.132566542 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.099968479 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.131138586 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.099890973 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.126067918 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.097917627 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.119043292 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.10099646 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.143323846 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.105755909 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.126380132 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.103586267 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.134089001 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.10503261 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.12593576 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.100372409 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.100203075 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.133373597 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.109106972 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.132222965 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.105003367 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.133998921 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.09982047 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.137280598 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.101128688 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.126673557 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.10004766 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.134501116 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.102037607 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.137019251 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.104479911 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.130318423 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.100659677 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.13364047 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.105361563 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.130876674 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.108363723 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.623900593 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.100750984 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.139165513 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.107350492 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.1324666 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.100380008 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.131324471 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.099532345 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.086862263 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.127826154 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.085889029 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.132212416 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.098493465 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.129502443 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.101281665 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.133484805 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.115635392 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.137800797 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.106076755 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.128742993 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.100578507 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.132502229 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.096447108 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.132545139 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.116097452 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.148245487 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.096664 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.126326921 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.11379933 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.130822166 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.096343222 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.119780678 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.108158335 seconds)
  done (took 14.094073654 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.1388026 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.179931032 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.129670091 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.117467101 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.163312878 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.170783989 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.107720781 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.137862899 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.09937289 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.117738713 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.131984839 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.106806801 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.133273153 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.113020288 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.170909051 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.138804347 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.099847716 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.14365655 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.104051417 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.182345551 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.14869079 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.13749993 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.169389053 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.132450574 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.104194258 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.165743987 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.172890801 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.112495845 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.141430388 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.139709336 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.143116465 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.17251343 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.170418409 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.104568772 seconds)
  done (took 5.821382341 seconds)
done (took 54.846522893 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.204169974 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.399022848 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.174937853 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.175374461 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.245321748 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.200776104 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.175573556 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.369187414 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.925900269 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.16691478 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.174971179 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.176650252 seconds)
done (took 27.493533932 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.247945366 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.339678269 seconds)
    (2/2) benchmarking "String"...
    done (took 1.500323434 seconds)
  done (took 3.943424979 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.177340143 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.177389773 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.421753751 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.184932993 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.177834661 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.194924947 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.190859847 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.192473828 seconds)
  done (took 15.641848099 seconds)
done (took 25.11412924 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.270903723 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.365080503 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.428609887 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.196155389 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.193669907 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.187457071 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.180920593 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.217728509 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.180879501 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.180853692 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.177659679 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.431160891 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.201201183 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.555082926 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.187087311 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.189124797 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.196015806 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.398327447 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.194320444 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.226260832 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.165700735 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.166207209 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.197578572 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.215815915 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.187375757 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.194288231 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.230599442 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.192193906 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.361473031 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.186551809 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.222371969 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.180518622 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.229314245 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.198471051 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.291629243 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.207270387 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.375967821 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.192051213 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.172698616 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.190154462 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.356296945 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.589288855 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.17976824 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.194649533 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.184127481 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.234420802 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.176359842 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.893648355 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.181227488 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.180553274 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.184796929 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.554005116 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.180290614 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.192122151 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.188705465 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.397232725 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.209315842 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.2061918 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.222198049 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.177695521 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.179631219 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.179704564 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.183096808 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.178909369 seconds)
  done (took 142.02492018 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.178651639 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.183785619 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.183888859 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.200376778 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.184451045 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.183733289 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.179791857 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.180190008 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.184571712 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.213782655 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.185288099 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.185259678 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.184640134 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.145818207 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.182092663 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.19701471 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.185697722 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.2010918 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.184431196 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.180773914 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.184307239 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.184839675 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.198142841 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.182270329 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.231973855 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.273875815 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.237234279 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.192384738 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.184094672 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.180827112 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.223006944 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.206155486 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.824350742 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.033759029 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.192388811 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.214145555 seconds)
  done (took 79.554176781 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.180056636 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.18136413 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.181524402 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.214571345 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.180521361 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.777451789 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.781793392 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.92015848 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.553997941 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.580794784 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.446481244 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.182303423 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.279377754 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.198143764 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.183853093 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.199036354 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.208906432 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.183134813 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.183790688 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.762671119 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.194696492 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.282924337 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.377537475 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.200835491 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.216810144 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.587025162 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.18513307 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.216895966 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.519181455 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.233832879 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.184709263 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.582657299 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.383208032 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.30021394 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.191642966 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.217270488 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.183040585 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.468682681 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.185004375 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.185095668 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.188815239 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.887181053 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.189661955 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.777944103 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.188790329 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.136768832 seconds)
    (47/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.185403832 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.185642534 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.185100643 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.435132512 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.922862229 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.206875739 seconds)
    (53/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.185209982 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.186097395 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.187446713 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.185755559 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.185225102 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.218928989 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.512160778 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.299000512 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.184899235 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.184296504 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.188340214 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.218573398 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.185402577 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.354821481 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.185663399 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.86375413 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.258965818 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.301695883 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.767100046 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.185654007 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.285779097 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.307066688 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.187179918 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.186324641 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.186675149 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.186446803 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.298227969 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.186331339 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.614341427 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.365716182 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.203509677 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.602631554 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.289681726 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.18563947 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.613432762 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.190772904 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.187363214 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.940022055 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.285760056 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.186858612 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.187328801 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.187246883 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.617816685 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.781991017 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.437671832 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.191573032 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.717334845 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.192243378 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.18790732 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.626678019 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.759570148 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.912759967 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.193512417 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.301989264 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.36755341 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.205168129 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.18794 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.604844513 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.191645354 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.25027875 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.189200525 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.588349589 seconds)
  done (took 365.087644991 seconds)
done (took 587.769172466 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.892154435 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.841233483 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.973707833 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.868887417 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.835618934 seconds)
  done (took 10.523925032 seconds)
done (took 11.637681231 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.383365232 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.383125856 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.251731133 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.383850602 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.223219631 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.400517445 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.368959099 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.215113155 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.298941303 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.273660956 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.293576222 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.247467792 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.225466917 seconds)
  done (took 18.061740325 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.532285631 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.190848519 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.271711119 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.526971919 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.230749371 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.506971561 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.402471771 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.208828628 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.416584225 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.206121298 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.204234056 seconds)
  done (took 17.810887341 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.541549307 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.192066112 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.273533294 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.530418596 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.230999398 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.529578626 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.404856801 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.209138534 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.399264672 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.207734872 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.206181421 seconds)
  done (took 17.840371369 seconds)
done (took 54.826189054 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.230783816 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.358365978 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.220976858 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.204131387 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.201128621 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.203052743 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.204536155 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.201905953 seconds)
  done (took 10.940410486 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.197520948 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.197095707 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.200888961 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.196621866 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.200199436 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.20169275 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.198307039 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.197213275 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.198022108 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.198933016 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.200683257 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.199466548 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.200549959 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.200348322 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.199267075 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.201638647 seconds)
  done (took 20.304074183 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.200478488 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.198227636 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.197976861 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.198595778 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.198143049 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.198116827 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.199637617 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.198766278 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.198210868 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.198541708 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.199661718 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.199375226 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.198225496 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.198220442 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.198042393 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.200370355 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.198620674 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.198853113 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.204219501 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.19867086 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.19954445 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.199999181 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.200223442 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.200518298 seconds)
  done (took 29.899468954 seconds)
done (took 62.25976675 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.20062691 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.208531017 seconds)
  done (took 5.52633344 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.25953072 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.264900217 seconds)
  done (took 3.643010794 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.203303318 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.200956363 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.203239874 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.202662869 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.201953679 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.202551345 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.202820936 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.202580668 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.203813786 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.202415691 seconds)
  done (took 13.144049632 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.202729135 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.203437868 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.201450327 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.203853575 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.203519447 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.200960303 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.203924061 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.203529367 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.204250765 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.200165751 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.203916351 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.201473209 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.202938898 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.201071158 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.205406445 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.200958664 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.202548195 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.201160735 seconds)
  done (took 22.766661761 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.217628414 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.225326114 seconds)
  done (took 3.562646712 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.332495321 seconds)
    (2/7) benchmarking "second"...
    done (took 1.243908159 seconds)
    (3/7) benchmarking "month"...
    done (took 1.321410649 seconds)
    (4/7) benchmarking "year"...
    done (took 1.299144984 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.242638984 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.22193072 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.243782101 seconds)
  done (took 10.026014917 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.205665363 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.40256212 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.510720727 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.774741798 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.205345946 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.20911029 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.099981258 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.209691429 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.211718224 seconds)
  done (took 13.949874236 seconds)
done (took 73.735788938 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.197628564 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.216319871 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.227082016 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.209864208 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.498179225 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.227661848 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.201476744 seconds)
done (took 15.898999899 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.189857803 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.197707546 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.186418671 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.203536971 seconds)
  done (took 9.899272628 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.209288127 seconds)
    (2/2) benchmarking "read"...
    done (took 1.5170049 seconds)
  done (took 4.845604598 seconds)
done (took 15.866214208 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.206755365 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.203549405 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.205285887 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.205909372 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.204046269 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.206299169 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.204859896 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.203797261 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.208177664 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.203667726 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.2062017 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.208747224 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.206697316 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.206518719 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.204571372 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.205287037 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.206773542 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.20405255 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.20343816 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.207717834 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.208422103 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.206036675 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.206108839 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.208710477 seconds)
  done (took 30.06350663 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.21030152 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.206479116 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.20911123 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.209949018 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.206794109 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.20828724 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.208101188 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.206049255 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.208110176 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.209441592 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.209397086 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.206813985 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.209911321 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.207366616 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.208563155 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.207115476 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.209521049 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.20618034 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.210214122 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.206030678 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.208830503 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.205865639 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.207252094 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.210750584 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.206858103 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.208144782 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.209144085 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.206849995 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.209425511 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.206459315 seconds)
  done (took 37.367173416 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.215213883 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.216182695 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.209781185 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.208841435 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.208877377 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.208822996 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.209516379 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.208606629 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.208674526 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.209089612 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.208673004 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.210242403 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.208372138 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.2087638 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.210084768 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.209461259 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.210621385 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.209852563 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.210267258 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.21008318 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.209250642 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.21046159 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.209401492 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.210900034 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.209885746 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.21103131 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.210487133 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.209912688 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.211445993 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.211486521 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.210228155 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.21137502 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.209994299 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.211222541 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.211343642 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.211367047 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.217137087 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.219427889 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.210356748 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.211727212 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.211044765 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.210751788 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.210948507 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.21105072 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.212210581 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.211914942 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.212780946 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.210863059 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.211363816 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.210881325 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.211029294 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.211913685 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.211086218 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.211220433 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.212464726 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.212384563 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.212031642 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.213182466 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.213310175 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.213228347 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.212733964 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.213871881 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.212871132 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.213132215 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.214687263 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.21538132 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.213447441 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.21276972 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.215210604 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.21461155 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.212834958 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.213687864 seconds)
  done (took 88.356269881 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.213872798 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.211812488 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.21043119 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.211200489 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.210916833 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.215139626 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.212082918 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.213911726 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.211409062 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.214427271 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.212832848 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.212280205 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.210576473 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.214224031 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.214457269 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.210770828 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.213862525 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.212456436 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.213570336 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.214803843 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.213718863 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.211866382 seconds)
  done (took 27.808967222 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.214987828 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.216641099 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.213378207 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.216566673 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.213894401 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.216278502 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.215555505 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.215111599 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.214343166 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.211942605 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.212759703 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215471186 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.214579217 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.212373555 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.213444964 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.215841841 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.217381815 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.215795969 seconds)
  done (took 22.995502428 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.213222725 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.213564699 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.216882859 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.212944479 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.213037237 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.218107988 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.214975857 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.214593579 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.215833382 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.213875471 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.216838684 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217082214 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.217575651 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.212944279 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215112408 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.214349312 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.216680473 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.214911776 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.216327636 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.21396305 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.213371615 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.217734288 seconds)
  done (took 27.864342702 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.216557478 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.217097468 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.216231427 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.215936266 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.215225072 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.218187997 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.216988225 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.215450339 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.218843818 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.217727502 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.217871223 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.21771299 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.217265297 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.215540385 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.215919608 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.21679024 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.218928494 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.215858918 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.218147899 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.216227475 seconds)
  done (took 25.469636908 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.21930356 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.220507882 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.219590372 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.220790918 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.220422229 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.221930007 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.219912153 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.219138953 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.221288782 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.220136568 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.219999284 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.220907556 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.220605211 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.220091574 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.220231956 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.219158067 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.219783678 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.22063626 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.222042803 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.220912093 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.221187651 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.22144142 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.221920769 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.221138331 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.220686731 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.221220322 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.2206605 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.221289701 seconds)
  done (took 35.311672874 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.221528376 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.220340548 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.217446356 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.218812081 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.219310164 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.218864768 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.219302831 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.220460106 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.221592926 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.219276057 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.221334453 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.221345125 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.221538446 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.221682769 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.222154828 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.222629399 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.22115803 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.21998137 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.219455609 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.219486526 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.222343077 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222675182 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.222151172 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.220209283 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.219763899 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.22259397 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.219240125 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.220761972 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.222436188 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.219383548 seconds)
  done (took 37.755789078 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.261632325 seconds)
    (2/2) benchmarking "in"...
    done (took 1.261315091 seconds)
  done (took 3.659774394 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.221291288 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.22284274 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.222721712 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.22038805 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.220811795 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.224142107 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.224782723 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.221778706 seconds)
  done (took 10.916147205 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.223773517 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.224801187 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.22190578 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.22402274 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.223998911 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.224241697 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.231121104 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.244601112 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.224032151 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.225486814 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.232692419 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.23247158 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.226619044 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.225197824 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.223922403 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.224983998 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.224348825 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.22462605 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.225723943 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.22533777 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.224278889 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.227748289 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.227498994 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.222451127 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.226756946 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.234693258 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.228204741 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.226740418 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.2253457 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.228043487 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.224432272 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.222642876 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.225177611 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.225362739 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.227088739 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.226424201 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.233882147 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.247313215 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.231550661 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.226248753 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.225669671 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.224087684 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.226646959 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.22799129 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.226878299 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.225660209 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.227846409 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.223889839 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.226457218 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.23136478 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.231840575 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.227054582 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.223245143 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.228729498 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.226103448 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.232849072 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.246812453 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.230202251 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.236731633 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.237167312 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.239290548 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.25213677 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.227222906 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.225801379 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.23833663 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.250415272 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.232622282 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.245719562 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.223988608 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.226119866 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.23372433 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.239928802 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.255242381 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.227183921 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.228388488 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.228688728 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.229637843 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.2313252 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.233781258 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.250111951 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.226409682 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.228287235 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.238569679 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.251444055 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.227318771 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.227187262 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.22843257 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.227066339 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.228582177 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.237856937 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.248785256 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.231108031 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.225856777 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.224826925 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.227368756 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.227035485 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.22583156 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.225948097 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.223634278 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.226961131 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.227501189 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.231666768 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.236075434 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.226518917 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.226304887 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.232569425 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.226782308 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.225980617 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.233750043 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.228402683 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.226517689 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.228116954 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.232506629 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.225836708 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.230687982 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.236248221 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.226809064 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.228387338 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.226958836 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.228349382 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.237985537 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.253028604 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.228168526 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.226489717 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.232514875 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.23826758 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.227981979 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.23120276 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.229665896 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.225359325 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.225335423 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.229294479 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.230107222 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.227316119 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.229520268 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.228312579 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.225071119 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.228400718 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.228444154 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.229256877 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.230248895 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.227614984 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.228055978 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.230210189 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.22764508 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.228517787 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.234702026 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.225742763 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.230358987 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.227712285 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.225224848 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.227898837 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.228169295 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.228742103 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.227820242 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.228203644 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.230419994 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.230638069 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.228878139 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.229274917 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.228634293 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.228228987 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.232454903 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.228731226 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.231720099 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.228082604 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.223246882 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.226675919 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.228386116 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.227675457 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.228679224 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.225596856 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.233222038 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.236789042 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.228871739 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.229399969 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.231128315 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.229308798 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.228534518 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.22846088 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.232295518 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.238436595 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.227431522 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.23492929 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.228889473 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.228108939 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.229758199 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.227725572 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.228915139 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.230703461 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.234506906 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.236830735 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.241519427 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.256828064 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.230216376 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.233704017 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.230212147 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.233230241 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.233674306 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.229156443 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.23158812 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.229621425 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.230208798 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.229327666 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.23157321 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.229570736 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.229941747 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.230304013 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.232368783 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.230415526 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.230755736 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.231233714 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.231660579 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.228436033 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.230726441 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.22995429 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.231758889 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.227474348 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.22999622 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.231133277 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.231846973 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.23170778 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.237590875 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.229544101 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.232192713 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.232796565 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.231826722 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.230389576 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.232680013 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.232634435 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.231320836 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.238849235 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.250083769 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.231119266 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.238003712 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.250970782 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.230583577 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.23404933 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.232930374 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.229751037 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.235747058 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.241254887 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.232382057 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.23319227 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.231487336 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.232996805 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.233916663 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.238054767 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.230358717 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.2338859 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.234126775 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.232694453 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.23140308 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.233290091 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.23393054 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.232929662 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.234627907 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.234175107 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.23435133 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.232918484 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.234375963 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.234387515 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.23399038 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.236483317 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.242884864 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.239513694 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.232874229 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.23516723 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.235805235 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.23885122 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.233975339 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.232867906 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.234689798 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.246626427 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.260975058 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.240962758 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.255749093 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.235586405 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.239984992 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.254661672 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.239023155 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.234864439 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.236247247 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.23593867 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.237689578 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.23190199 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.235071999 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.235685746 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.235987665 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.236580681 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.240219779 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.235901908 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.234421374 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.236508055 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.235935396 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.236786132 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.234761175 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.237353951 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.238413834 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.237581387 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.235855136 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.236787276 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.243408056 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.2574265 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.236108581 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.235856681 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.236124756 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.233646986 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.23623064 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.236545976 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.242032366 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.244232269 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.239327583 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.24566546 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.238384788 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.246423962 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.236913268 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.240063232 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.245954097 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.235789314 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.236418967 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.236734053 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.23821352 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.244388311 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.258212839 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.239317808 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.241800698 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.240598797 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.237133118 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.238466842 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.237908834 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.23926895 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.23662475 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.244820764 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.261450198 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.243459615 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.239568586 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.236520513 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.238373959 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.238300795 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.236575693 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.239461634 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.239658358 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.240220821 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.238240872 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.237863927 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.23959347 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.238602265 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.240299127 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.23525945 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.23858484 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.244901318 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.262450624 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.242543658 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.239878323 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.245766167 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.23945144 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.246330879 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.259035252 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.241236192 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.238140267 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.239221561 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.240990681 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.239075035 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.239355524 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.239635696 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.240184853 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.244184504 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.24190901 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.2406139 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.241118869 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.238815987 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.2391736 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.25031882 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.263364621 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.241429584 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.243950445 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.235758 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.24121068 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.245245738 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.238011608 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.23869688 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.243453613 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.25164488 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.248410634 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.239924519 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.238803881 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.240263695 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.239789788 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.240021514 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.239271639 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.241006668 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.2392338 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.238221945 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.238739693 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.241646673 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.239069371 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.239130933 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.240410131 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.242205192 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.249379962 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.240822721 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.239473538 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.238461761 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.242027761 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.239285142 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.239921615 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.241288679 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.240887919 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.239709195 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.241497365 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.249859317 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.247114261 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.244963716 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.240188397 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.241896345 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.239815185 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.24007152 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.240847176 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.240564935 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.24022412 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.242387543 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.240520196 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.241488356 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.23896646 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.239682366 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.240424404 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.240855887 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.243509942 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.248645048 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.239960807 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.237782107 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.240751641 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.241333665 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.240172425 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.2403016 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.247504071 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.243684476 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.251054563 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.250823407 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.245835163 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.241154828 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.2452326 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.249644117 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.241772465 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.241515349 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.241265622 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.243519325 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.242688569 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.244651009 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.241317136 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.247575931 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.241217973 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.240917249 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.249668052 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.265042446 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.241005477 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.243016798 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.245709581 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.241555184 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.240237639 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.242535847 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.241810188 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.250332801 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.262545522 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.242997822 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.244055268 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.240897496 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.245316663 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.246413351 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.243400525 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.243748604 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.240901418 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.242873037 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.241815974 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.242725895 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.239088687 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.242926044 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.240898811 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.247020025 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.249882927 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.241052921 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.243401009 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.242369254 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.242746445 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.243436587 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.242134963 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.238732035 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.241017175 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.243118132 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.243959214 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.242337729 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.245697504 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.242361115 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.244497296 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.243670361 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.244308494 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.245903345 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.25349177 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.251521217 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.240914316 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.242573733 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.243471706 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.245361591 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.243656589 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.243059509 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.243509664 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.243455558 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.243254953 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.242998667 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.2426292 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.247054463 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.258817216 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.264863076 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.242113619 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.243757858 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.246116663 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.243314136 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.240374546 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.242765098 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.244138271 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.246968012 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.2512113 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.243835579 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.24898259 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.262139223 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.244792376 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.248548597 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.246153672 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.250125146 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.244773599 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.242872078 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.243095291 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.249346094 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.259409119 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.244351306 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.25393703 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.273398052 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.263505626 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.244826249 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.242855181 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.243292129 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.244049722 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.245256623 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.244609109 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.244885518 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.245392873 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.245527559 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.247348743 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.250195616 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.244706758 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.24780593 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.243879547 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.243603015 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.246023555 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.24200468 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.24495312 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.245290699 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.244592731 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.244358585 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.245354245 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.248636502 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.25719672 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.271261889 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.245749123 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.245421042 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.243592084 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.247750657 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.249668098 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.258403627 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.25421778 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.245878607 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.245104759 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.246415053 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.246086236 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.245151645 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.247127281 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.246934682 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.246060214 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.242880482 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.258933103 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.272879491 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.249736458 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.246088392 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.246710181 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.246749409 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.246905704 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.246837992 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.24747754 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.249224109 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.249542877 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.250368508 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.248220846 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.24653077 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.25088827 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.255528477 seconds)
  done (took 738.992064838 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.246523086 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.245580177 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.246232841 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.245128641 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.24557428 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.24558446 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.245169393 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.245942088 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.245368167 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.245345164 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.245656338 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.246708433 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.245064669 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.246460471 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.246952646 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.24536282 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.246527745 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.24667332 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.247065352 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.246015837 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.246329288 seconds)
  done (took 27.324296502 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.248577255 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.246486149 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.246900217 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.248713295 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.246663118 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.249268091 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.247801548 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.248680115 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.249848763 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.247050197 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.249953126 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.249571676 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.246940541 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.247873783 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.247002938 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.249498179 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.250445702 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.24755557 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.249514711 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.247063179 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.249023761 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.248351137 seconds)
  done (took 28.621930004 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.24941734 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.250464679 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.251513994 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.248206956 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.250810726 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.249034266 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.250820394 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.249594905 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.250135974 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.250237124 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.249495326 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.250662777 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.258119615 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.255650498 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.252536539 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.250530001 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.250451636 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.250930168 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.250754506 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.248177773 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.255753964 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.267871242 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.249364672 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.249900403 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.25090161 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.250972809 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.249753633 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.249909806 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.251586822 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.255432494 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.251703786 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.250633205 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.250872662 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.249112483 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.251254168 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.255540737 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.25052889 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.248590159 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.251160496 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.26156591 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.271877569 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.249367819 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.255984393 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.269348087 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.249619485 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.254185755 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.258350642 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.248578831 seconds)
  done (took 61.28854959 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.251370631 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.250834791 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.247649917 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.251246925 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.251110814 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.253092475 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.249551767 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.251549768 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.249058336 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.247873089 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.250517583 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.250225504 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.249241626 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.252698107 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.249925581 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.249010327 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.248293618 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.248780132 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.248557998 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.248320886 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.248983364 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.251111848 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.250298969 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.24893271 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.25131759 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.248988984 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.249295685 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.251230433 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.248219752 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.249970634 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.250574102 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.251233371 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.250989306 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.248656416 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.24920854 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.252008992 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.252244021 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.250551535 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.250664943 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.248602243 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.250599725 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.250721016 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.251157438 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.251938617 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.249012946 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.249549636 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.249350407 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.248511182 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.248777247 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.251189264 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.251758042 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.250160021 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.25073713 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.250843152 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.250467749 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.251375272 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.249959406 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.247162458 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.251224019 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.250513389 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.250737561 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.252439521 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.249381634 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.250324766 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.250057377 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.24869981 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.249319972 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.251525127 seconds)
  done (took 86.171806538 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.251861182 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.250933942 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.250838227 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.250985487 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.250735791 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.251674737 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.250931366 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.252480997 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.25166202 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.251321438 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.250713356 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.252142253 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.25076079 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.25215436 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.249225538 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.250667568 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.250803329 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.250503264 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.249804587 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.251438748 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.250572473 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.250969756 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.250542927 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.252250409 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.251750728 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.25225892 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.251208644 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.251195302 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.250779689 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.251872419 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.251388331 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.252021316 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.252224634 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.250857792 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.251686473 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.24987459 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.250683177 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.251299482 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.251704645 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.251982433 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.251132273 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.250348136 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.250436608 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.250870812 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.251809744 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.250835958 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.252723982 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.252640619 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.253100669 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.251638123 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.251348254 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.252959705 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.251648201 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.250765213 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.252887708 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.251925632 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.252080609 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.251888663 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.252324685 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.252545484 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.25219423 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.253027959 seconds)
  done (took 78.753175006 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.253975248 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.253910221 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.248637256 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.248880222 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.251384927 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.250154013 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.251594031 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.251785526 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.253096722 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.253098749 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.252801472 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.249987558 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.251047505 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.253367962 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.250391598 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.25015687 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.249399462 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.250579359 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.252233297 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.249881709 seconds)
  done (took 26.187784947 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.25031233 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.251917073 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.250522914 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.250701984 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.254119654 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.250593522 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.252830762 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.252291533 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.250749994 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.252938389 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.252880552 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.252154821 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.25061106 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.251141248 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.252747387 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.252231309 seconds)
  done (took 21.189975682 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.250111505 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.253331862 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.253003769 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.2542111 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.251887805 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.251104529 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.252315075 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.251427318 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.251784026 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.253864398 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.254681023 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.25489782 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.254219915 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.251923987 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.25192625 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.253585176 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.251672213 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.253033159 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.253992851 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.254342343 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.251603745 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.25070503 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.253368135 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.254625443 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.250520874 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.25130822 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.251039009 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.253748415 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.251542657 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.253627748 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.252401874 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.252864247 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.253471502 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.251424553 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.254711255 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.252577618 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.254015818 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.254188229 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.254468165 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.255000423 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.254710643 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.251635434 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.254247325 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.255033435 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.252794626 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.255552645 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.253634299 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.253506617 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.253149071 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.252315394 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.255818624 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.255656633 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.256456131 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.256026254 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.254638781 seconds)
  done (took 70.092097583 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.25625039 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.256503499 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.253218579 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.255500939 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.256058794 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.253571138 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.255173158 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.25518527 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.254183351 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.256478057 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.25357252 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.256483015 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.253141752 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.254262716 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.253519013 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.256765377 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.253318337 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.253898873 seconds)
  done (took 23.751265062 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.254207137 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.253171177 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.255507899 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.253640932 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.254209798 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.256188145 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.254716328 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.256882092 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.256135777 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.255131103 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.25479175 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.25745792 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.257200361 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.257861915 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.255002082 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.254257793 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.25747341 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.258068905 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.255192655 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.254912858 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.258082478 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.257776967 seconds)
  done (took 28.79286526 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.256634118 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.255383109 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.257779622 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.271512286 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.273288407 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.255600235 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.257029227 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.257229508 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.277802434 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.304594647 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.299931069 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.274844632 seconds)
  done (took 16.407804162 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.256038292 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.259158946 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.257326719 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.260794779 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.258961329 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.25657262 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.257228787 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.256788303 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.259378092 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.257167277 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.256229024 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.258566593 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.259212171 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.258029718 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.260156962 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.259491784 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.255933503 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.258280154 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.256095838 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.259934234 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.25759571 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.259895443 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.257122029 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.256952899 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.257313543 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.256913732 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.25960714 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.259290716 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.258037169 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.260190069 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.260286503 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.257899263 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.261654829 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.25748879 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.261730231 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.26061759 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.259091149 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.261083014 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.261651415 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.25892776 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.260268485 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.261463925 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.26034012 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.258923119 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.261447274 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.259284545 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.259685134 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.259707316 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.259427245 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.261578793 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.261752547 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.260160501 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.263158636 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.263139995 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.263941851 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.26164076 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.260917056 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.26032899 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.263190783 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.262568207 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264733929 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.26227799 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.259578648 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.259862886 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.263121131 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.259447995 seconds)
  done (took 84.305065436 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.260230699 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.262518949 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.259266997 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.26055726 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.259920213 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.261959331 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.260397905 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.260679014 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.263077364 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.261310075 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.26420179 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.260665203 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.261459996 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.261492456 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.260279783 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.262071973 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.263254655 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.26167285 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.260761312 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.265986812 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.263117809 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.263789693 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.263311483 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.262554239 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.26415984 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.264347421 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.261659506 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.263728319 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.26384986 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.263254888 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.265047079 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.263812762 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.265774279 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.264007075 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.263443226 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.26356441 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.263698727 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.26366132 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.262765731 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.264726954 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.264751587 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.267244974 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.265241819 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.26679964 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.263943961 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.26323619 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.262982739 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.262445252 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.263375786 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.262597681 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.262939546 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.263741032 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.263362774 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.263003898 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.263181754 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.263141488 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26559193 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.26290851 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.262339776 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.265465387 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.263515342 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.26204803 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.266077869 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.264284336 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.264361287 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.263608356 seconds)
  done (took 84.539700644 seconds)
done (took 1725.108240735 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.430860066 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.380981556 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.264121 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.275445568 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.265324466 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.260941264 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.275955639 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.265896054 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.265718107 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.26648532 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.265486094 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.453658455 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.321351297 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.265689435 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.26807842 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.359081443 seconds)
  done (took 26.060286721 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.294629094 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.272750954 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.378101351 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.290393089 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.2942339 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.441371481 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.325747863 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.271956081 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.428787707 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.312959093 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.267015136 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.295001131 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.271332426 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.267993449 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.292279081 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.443756625 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.502618127 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.272921919 seconds)
  done (took 28.099373615 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.681383443 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.290699818 seconds)
  done (took 5.146407101 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.291125422 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.271750763 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.27331338 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.269454872 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.261884459 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.26247629 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.270773101 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.265802729 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.267910055 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.39170142 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.276621167 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.282471471 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.289764811 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.273127428 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.268585996 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.307129651 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.414266713 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.271205501 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.267510029 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.278905424 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.272417585 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.356465992 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.311421527 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.268173639 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.387609791 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.277776916 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.278456871 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.281279188 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.451836992 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.271498131 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.27273584 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.274384298 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.274216453 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.17294479 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.77922565 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.266049888 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.300043433 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.284597122 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.272358676 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.443219377 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.279081663 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.285228816 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.268769396 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.759176155 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.411847907 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.388687101 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.296463691 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.280314971 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.276844425 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.337135672 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.276174588 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.277956393 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.318563854 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.054970563 seconds)
  done (took 81.942924726 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.31982836 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.266141749 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.445374563 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.282245719 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.265894815 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.281861794 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.287587367 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.535414977 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.289973249 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.267425417 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.551151186 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.800987462 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.28478042 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.300117774 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.107804534 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.313683445 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.266920479 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.265751795 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.285588048 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.271378981 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.80467155 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.279443618 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.266982394 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.421251874 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.305546389 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.766741408 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.266870228 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.287161781 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.27033587 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.267554788 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.756863393 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.299522149 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.317704459 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.269752239 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.533614549 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.63374906 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.598324113 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.272588297 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.283412168 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.271590972 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.288166356 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.791892986 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.6108537 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.2700071 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.285802884 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.758976987 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.271338279 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.28245721 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.27297394 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.512986696 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.270805803 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.272123534 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.269750589 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.290214719 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.270251943 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.335533888 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.332084589 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.770058878 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.269733098 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.26953145 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.330515963 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.269788509 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.277651508 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.271272216 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.270743661 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.614696684 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.406883716 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.277022744 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.610731513 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.754579547 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.283756615 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.837213696 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.28610107 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.290477 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.33210371 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.268787388 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.261088321 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.748384963 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.284046962 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.252881906 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.577007769 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.254455839 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.53339648 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.264569206 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.248097483 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.791606835 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.255690516 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.245246156 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.240286327 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.256261954 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.239603526 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.244818904 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.519434259 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.275422772 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.234900374 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.233518597 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.239860681 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.230009606 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.231657028 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.233863606 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.78406153 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.255425834 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.227894111 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.235711712 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.23100171 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.250095171 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.231751261 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.231870571 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.492895044 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.235848029 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.232496941 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.228281594 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.226626368 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.245338687 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.373508283 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.227667961 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.523700437 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.22909806 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.227418452 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.229189474 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.226908206 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.259911201 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.227328111 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.232058459 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.108412622 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.565558233 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.244575807 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.227198465 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.227978849 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.224341273 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.224013954 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.227385397 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.245790931 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.229140224 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.957436324 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.266054363 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.255612228 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.2221103 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.22219098 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.221273092 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.226711872 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.223424734 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.507409355 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.492967464 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.357327982 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.222955082 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.221783297 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.945040036 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.247204333 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.404072247 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.240020015 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.223186635 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.516329834 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.374574122 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.225689448 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.222823101 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.225855646 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.476639411 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.224778765 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.538023544 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.737950469 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.238458754 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.225642863 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.957041488 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.947127391 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.229644202 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.225755488 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.508082747 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.241122963 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.224095168 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.224696828 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.229303613 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.224363642 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.243415732 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.227229243 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.224970047 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.224682626 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.448767378 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.415754559 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.241307691 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.223321077 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.716956417 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.249404322 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.226240746 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.254696317 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.225549587 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.2248091 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.305951775 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.231600458 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.228991806 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.225061909 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.229149993 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.806347868 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.225468942 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.232069166 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.417903751 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.885929057 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.244677123 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.240637426 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.225420808 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.099600651 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.74054864 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.258945258 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.517882727 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.231809593 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.264019592 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.225034177 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.327300936 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.743426704 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.226773271 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.227069564 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.843600134 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.241810661 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.897601153 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.226435708 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.239449051 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.787805388 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.241446632 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.226404993 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.226149233 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.226214686 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.515593332 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.226903066 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.243123107 seconds)
  done (took 477.542002602 seconds)
done (took 619.963790689 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.227570974 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.227795302 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.218909697 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.232168357 seconds)
  done (took 10.051374093 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.237738274 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.234711792 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.23652691 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.234402033 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.238791688 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.233847444 seconds)
  done (took 8.561664043 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.227960505 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.234564406 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.231787319 seconds)
  done (took 7.840818133 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.425693264 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.256395266 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.541174386 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.255213539 seconds)
  done (took 8.624406983 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.235919892 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.235865481 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.235593981 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.236078885 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.23974103 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.241243914 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.237630117 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.238252633 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.239285196 seconds)
  done (took 12.285558666 seconds)
done (took 48.509425207 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.217002306 seconds)
    (2/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.243668884 seconds)
    (3/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.216830677 seconds)
    (4/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.954700556 seconds)
    (5/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.222237178 seconds)
    (6/286) benchmarking ("sort", Float32, false)...
    done (took 2.235144691 seconds)
    (7/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.356707101 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.46993321 seconds)
    (9/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.331206001 seconds)
    (10/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.805891318 seconds)
    (11/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.549488314 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.275223205 seconds)
    (13/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.228757738 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.258318965 seconds)
    (15/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.2181488 seconds)
    (16/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.346495766 seconds)
    (17/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.221265582 seconds)
    (18/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.282977648 seconds)
    (19/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.354290197 seconds)
    (20/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.218219519 seconds)
    (21/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.227596043 seconds)
    (22/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.108334267 seconds)
    (23/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.248949322 seconds)
    (24/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.218581112 seconds)
    (25/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.312576929 seconds)
    (26/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.294965975 seconds)
    (27/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.295447409 seconds)
    (28/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.834063045 seconds)
    (29/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.109831263 seconds)
    (30/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.348134794 seconds)
    (31/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.247565188 seconds)
    (32/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.967526058 seconds)
    (33/286) benchmarking ("sort", Int64, true)...
    done (took 2.237677133 seconds)
    (34/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.232360828 seconds)
    (35/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.36930006 seconds)
    (36/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.522385608 seconds)
    (37/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.551689928 seconds)
    (38/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.237537065 seconds)
    (39/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.622651244 seconds)
    (40/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.274682139 seconds)
    (41/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.219716444 seconds)
    (42/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.392055575 seconds)
    (43/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.233720887 seconds)
    (44/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.325440922 seconds)
    (45/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.223672807 seconds)
    (46/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.238698954 seconds)
    (47/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.347101019 seconds)
    (48/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.49462717 seconds)
    (49/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.219832685 seconds)
    (50/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.220539289 seconds)
    (51/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.763451283 seconds)
    (52/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.364407606 seconds)
    (53/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.346904704 seconds)
    (54/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.233646126 seconds)
    (55/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.242983595 seconds)
    (56/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 2.252904816 seconds)
    (57/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.305392745 seconds)
    (58/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.554717153 seconds)
    (59/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.110947243 seconds)
    (60/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.242069677 seconds)
    (61/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.228633772 seconds)
    (62/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.035587423 seconds)
    (63/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.252338093 seconds)
    (64/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.954578253 seconds)
    (65/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.337689457 seconds)
    (66/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.222400899 seconds)
    (67/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.253506495 seconds)
    (68/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.849413487 seconds)
    (69/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.265718931 seconds)
    (70/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.229464923 seconds)
    (71/286) benchmarking ("sort", Float32, true)...
    done (took 2.241156528 seconds)
    (72/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.626735776 seconds)
    (73/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.251195759 seconds)
    (74/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.223727493 seconds)
    (75/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.224055106 seconds)
    (76/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.250100742 seconds)
    (77/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.244788221 seconds)
    (78/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.631849552 seconds)
    (79/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.248090477 seconds)
    (80/286) benchmarking ("sort", Int64, false)...
    done (took 2.240070142 seconds)
    (81/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.227975196 seconds)
    (82/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.720176832 seconds)
    (83/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.979466096 seconds)
    (84/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.377937269 seconds)
    (85/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.222171581 seconds)
    (86/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.324114622 seconds)
    (87/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.276686223 seconds)
    (88/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.338648117 seconds)
    (89/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.248958608 seconds)
    (90/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.237600002 seconds)
    (91/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.237660705 seconds)
    (92/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.22746308 seconds)
    (93/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.24230964 seconds)
    (94/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.347805244 seconds)
    (95/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.321587447 seconds)
    (96/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.224252406 seconds)
    (97/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.345062678 seconds)
    (98/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.235039334 seconds)
    (99/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.24123043 seconds)
    (100/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.603847898 seconds)
    (101/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.456712385 seconds)
    (102/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.235881186 seconds)
    (103/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.323183227 seconds)
    (104/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.236846333 seconds)
    (105/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.781474796 seconds)
    (106/286) benchmarking ("sort", Int8, true)...
    done (took 2.242868594 seconds)
    (107/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.380321256 seconds)
    (108/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.165616162 seconds)
    (109/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 2.243944608 seconds)
    (110/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.236218007 seconds)
    (111/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.239236092 seconds)
    (112/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.558558477 seconds)
    (113/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.237562792 seconds)
    (114/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.415415335 seconds)
    (115/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.225656756 seconds)
    (116/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.225530706 seconds)
    (117/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.375111669 seconds)
    (118/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.234392533 seconds)
    (119/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.230048615 seconds)
    (120/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.233398748 seconds)
    (121/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.78702057 seconds)
    (122/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.537371318 seconds)
    (123/286) benchmarking ("sort", Bool, false)...
    done (took 1.754877504 seconds)
    (124/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.261446251 seconds)
    (125/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.493571959 seconds)
    (126/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.26366865 seconds)
    (127/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.264838886 seconds)
    (128/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.961065691 seconds)
    (129/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.251276312 seconds)
    (130/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.504768309 seconds)
    (131/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.248935242 seconds)
    (132/286) benchmarking ("sort", Float64, false)...
    done (took 2.244396932 seconds)
    (133/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.347315254 seconds)
    (134/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.224915424 seconds)
    (135/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.832578934 seconds)
    (136/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.270501366 seconds)
    (137/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.23729049 seconds)
    (138/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.247331419 seconds)
    (139/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.678183359 seconds)
    (140/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.245337513 seconds)
    (141/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 2.260676878 seconds)
    (142/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.022310501 seconds)
    (143/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.976905461 seconds)
    (144/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.271394654 seconds)
    (145/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.22706315 seconds)
    (146/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.234598259 seconds)
    (147/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.648254004 seconds)
    (148/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.184231173 seconds)
    (149/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.233227173 seconds)
    (150/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.270729506 seconds)
    (151/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.232524496 seconds)
    (152/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.263390492 seconds)
    (153/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.249382479 seconds)
    (154/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.277355279 seconds)
    (155/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.240304115 seconds)
    (156/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.273809664 seconds)
    (157/286) benchmarking ("sort", BigInt, true)...
    done (took 2.239791078 seconds)
    (158/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.227797589 seconds)
    (159/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.233949091 seconds)
    (160/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.234113932 seconds)
    (161/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.132468628 seconds)
    (162/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.446407349 seconds)
    (163/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.384130719 seconds)
    (164/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.068776269 seconds)
    (165/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.081895113 seconds)
    (166/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.227633809 seconds)
    (167/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.255690382 seconds)
    (168/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.23341546 seconds)
    (169/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.260007355 seconds)
    (170/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.378982038 seconds)
    (171/286) benchmarking ("sort", BigInt, false)...
    done (took 2.239819294 seconds)
    (172/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.232066846 seconds)
    (173/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.273989974 seconds)
    (174/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.243634588 seconds)
    (175/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.799014104 seconds)
    (176/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.234944877 seconds)
    (177/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.074811731 seconds)
    (178/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.284439862 seconds)
    (179/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.055136829 seconds)
    (180/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.138285107 seconds)
    (181/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.323512966 seconds)
    (182/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.24229577 seconds)
    (183/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.284475531 seconds)
    (184/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.338191061 seconds)
    (185/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.255576891 seconds)
    (186/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.233089194 seconds)
    (187/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.985808915 seconds)
    (188/286) benchmarking ("sort", Bool, true)...
    done (took 2.247519988 seconds)
    (189/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.299579108 seconds)
    (190/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.229626082 seconds)
    (191/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.07111302 seconds)
    (192/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.258259744 seconds)
    (193/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.242561045 seconds)
    (194/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.269457785 seconds)
    (195/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.069448934 seconds)
    (196/286) benchmarking ("sort", Float64, true)...
    done (took 2.24317901 seconds)
    (197/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.469871446 seconds)
    (198/286) benchmarking ("sort", Int8, false)...
    done (took 2.242623732 seconds)
    (199/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.172379315 seconds)
    (200/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.301706883 seconds)
    (201/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.242627289 seconds)
    (202/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.313204102 seconds)
    (203/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.250979501 seconds)
    (204/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.332642621 seconds)
    (205/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 2.245728956 seconds)
    (206/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.269427252 seconds)
    (207/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.781264092 seconds)
    (208/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.774865671 seconds)
    (209/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.258002322 seconds)
    (210/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.269304215 seconds)
    (211/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.117788172 seconds)
    (212/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.234925834 seconds)
    (213/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.283734406 seconds)
    (214/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.354605903 seconds)
    (215/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.245681498 seconds)
    (216/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.567043629 seconds)
    (217/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.24995906 seconds)
    (218/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.259827017 seconds)
    (219/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.234441931 seconds)
    (220/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.290563235 seconds)
    (221/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.233954283 seconds)
    (222/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 2.247996201 seconds)
    (223/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.588078946 seconds)
    (224/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.284452827 seconds)
    (225/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.257247906 seconds)
    (226/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.019794336 seconds)
    (227/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.248404938 seconds)
    (228/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.383489206 seconds)
    (229/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.253681821 seconds)
    (230/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.309092124 seconds)
    (231/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.51229141 seconds)
    (232/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.249164571 seconds)
    (233/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.237054791 seconds)
    (234/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.233181386 seconds)
    (235/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.9509311 seconds)
    (236/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.237725286 seconds)
    (237/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.257425356 seconds)
    (238/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.811609307 seconds)
    (239/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.277890094 seconds)
    (240/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.254769678 seconds)
    (241/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.244296203 seconds)
    (242/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.272836284 seconds)
    (243/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.464785617 seconds)
    (244/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.253925594 seconds)
    (245/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.003185613 seconds)
    (246/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.255092979 seconds)
    (247/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.249160693 seconds)
    (248/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.276474251 seconds)
    (249/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.271364092 seconds)
    (250/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.62695616 seconds)
    (251/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.448916717 seconds)
    (252/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.257360829 seconds)
    (253/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.251492306 seconds)
    (254/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.335958318 seconds)
    (255/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.24923995 seconds)
    (256/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.263389802 seconds)
    (257/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.251312008 seconds)
    (258/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.254526762 seconds)
    (259/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.335051365 seconds)
    (260/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.232958424 seconds)
    (261/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.349703035 seconds)
    (262/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.14855916 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.368547017 seconds)
    (264/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.372502043 seconds)
    (265/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.23283344 seconds)
    (266/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.262791205 seconds)
    (267/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.244047393 seconds)
    (268/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.235469415 seconds)
    (269/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.268645105 seconds)
    (270/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.272632277 seconds)
    (271/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.806079904 seconds)
    (272/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.254472527 seconds)
    (273/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.237758721 seconds)
    (274/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.251032981 seconds)
    (275/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.291163555 seconds)
    (276/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.233887024 seconds)
    (277/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.954902664 seconds)
    (278/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.253097104 seconds)
    (279/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.066475769 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.275941512 seconds)
    (281/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.235120366 seconds)
    (282/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.257293579 seconds)
    (283/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.084894325 seconds)
    (284/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.314610372 seconds)
    (285/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.573498267 seconds)
    (286/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.269638099 seconds)
  done (took 538.466564253 seconds)
done (took 539.614149517 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.280886029 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.303279902 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.25941099 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.280260029 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.371510302 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.435133204 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.269122426 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.260717621 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.30887863 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.30885317 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.26562611 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.434357797 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.259908202 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.259693835 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.25906591 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.301308816 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.253544888 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.260348256 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.27779795 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.269065498 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.276892841 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.267034717 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.313499502 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.435389369 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.263799335 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.263809001 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.262846524 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.280559282 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.373261036 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.263876299 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.263236962 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.271785848 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.254943793 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.259408655 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.254695002 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.279670459 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.271535166 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.269725443 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.264805131 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.372535825 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.251256052 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.266375693 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.263248673 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.262619146 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.263609549 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.264931098 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.26220585 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.267242304 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.303459398 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.302584205 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.260154687 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.274698159 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.271002951 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.263195549 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.272770753 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.262120889 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.266064651 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.307539819 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.281709156 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.30865212 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.252541411 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.26965582 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.264761874 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.278309735 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.270941425 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.2536281 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.27614125 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.265926641 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.25212884 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.267645147 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.251765872 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.287630533 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.263562475 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.276763092 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.296068879 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.253490328 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.281014105 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.263076956 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.271312087 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.261862043 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.275749465 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.304143083 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.26796144 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.264762909 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.306334073 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.440313406 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.274738381 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.265594431 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.27300578 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.284168915 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.271858896 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.275305329 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.268595406 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.260787611 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.27505483 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.268476322 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.274360257 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.274408537 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.270936773 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.275388253 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.252962862 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.310805203 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.261937771 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.262544112 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.265070748 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.387605165 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.254671831 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.265878546 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.28794332 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.313018173 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.267854918 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.259580681 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.280302402 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.311253441 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.27465637 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.269163755 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.260947474 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.260616379 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.26920251 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.387905172 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.267890911 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.272351144 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.311473411 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.267839828 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.263978266 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.254227731 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.274699721 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.309389113 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.387648028 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.277664794 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.377277692 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.264793346 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.271321462 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.29947173 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.310984916 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.299348996 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.271419449 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.313749772 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.284778757 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.264635773 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.276618527 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.278831153 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.269581014 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.274572765 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.26332035 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.298529436 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.308718828 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.308642681 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.288218503 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.389347963 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.265788814 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.262037689 seconds)
done (took 212.392038125 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.328104685 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.262818045 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.371895024 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.264831673 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.363332285 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.362812179 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.261995174 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.262835047 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.261292825 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.64278134 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.262258392 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.26265841 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.26493239 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.262921467 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.346146186 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.26483002 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.262730628 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.60535143 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.266342271 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.335864469 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.266685911 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.263885615 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.265989371 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.64574318 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.266396829 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.263259111 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.336279641 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.266670549 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.61082044 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.261348777 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.259331083 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.611616464 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.355901094 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.283706221 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.274623954 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.273574634 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.366689609 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.284136414 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.346306677 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.347395671 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.373812927 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.304465499 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.260645352 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.25917125 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.267464968 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.266896344 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.264036067 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.302672826 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.266600514 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.264893769 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.612829852 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.27707866 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.274175291 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.265437557 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.265219449 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.287746199 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.265914383 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.267370596 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.357387195 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.268585884 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.330187174 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.648202921 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.645964585 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.269123355 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.260441169 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.266280357 seconds)
  done (took 99.933901499 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.336126143 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.345419072 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.376922427 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.287832076 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.321231367 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.382268405 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.286387058 seconds)
  done (took 10.511962308 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.27445221 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.270648801 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.318635078 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.318514878 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.268216638 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.50586157 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.272117076 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.282920665 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.269550663 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.347940692 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.27211986 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.27260448 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.277381585 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.268079247 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.318244981 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.281931652 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.38568412 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.27273626 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.270741041 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.425029193 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.26974998 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.27735505 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.344210079 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.283605122 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.272748981 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.279037696 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.25954576 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.271691661 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.270008762 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.271544462 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.269191674 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.380858111 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.273099185 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.268962916 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.26964532 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.447959917 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.272726287 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.268930368 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.273477046 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.264995749 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.273706515 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.271718206 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.273282386 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.269153766 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.271112766 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.297267022 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.273290471 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.274543061 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.273504994 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.274290573 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.345568144 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.271497165 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.270796559 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.271005596 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.348202151 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.280619717 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.273280063 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.269705771 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.273648877 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.269863084 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.426887261 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.320455442 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.274268158 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.323285771 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.274161307 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.274015029 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.273176397 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.273876112 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.365662712 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.274582357 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.321724876 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.27182868 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.4964509 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.298358652 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.276696772 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.278241879 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.276405826 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.273025625 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.272046685 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.280844191 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.273626379 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.275754138 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.281061778 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.27284294 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.272636795 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.460299467 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.445148071 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.273231254 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.288030613 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.283109637 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.272286703 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.349513432 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.274952626 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.272436702 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.327436504 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.389683433 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.352523972 seconds)
  done (took 132.258736704 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.281004023 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.284873214 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.278849202 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.30050278 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.277726506 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.275611459 seconds)
  done (took 8.882113347 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.2788709 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.276699069 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.27620599 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.276793167 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.27640883 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.277687731 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.277475231 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.277203408 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.279359296 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.276931706 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.278143608 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.277762525 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.279582211 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.277781558 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.2778065 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.277065628 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.278272534 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.274713873 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.276889805 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.277199456 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.275613653 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.276851911 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.277023187 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.278988323 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.281371815 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.278686144 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.285853219 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.278792359 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.277381088 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.283108354 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.297101318 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.279307086 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.280869545 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.283639967 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.281567574 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.279981075 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.281747836 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.279715747 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.276696225 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.278893287 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.279720163 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.279190852 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.278736983 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.279914771 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.281039445 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.283816843 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.284354645 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.288229768 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.280645595 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.280766531 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.280876303 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.279894277 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.280435741 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.281515214 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.283201245 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.30068291 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.285785313 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.2812035 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.281848968 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.281714133 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.281695941 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.280918455 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.283365566 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.283745763 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.279741806 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.282810133 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.281580328 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.283170977 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.282056395 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.280992479 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.282036967 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.278460112 seconds)
  done (took 94.381967516 seconds)
done (took 347.140698228 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.693072836 seconds)
  done (took 3.881708683 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.29122188 seconds)
  done (took 3.481607744 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.853328597 seconds)
  done (took 22.044647306 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.320892506 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.295746629 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.295409848 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.282763243 seconds)
  done (took 10.382845422 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.484666004 seconds)
  done (took 3.674399321 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.275893067 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.302551105 seconds)
  done (took 5.769579545 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.51306705 seconds)
  done (took 3.703548253 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.569354224 seconds)
  done (took 3.760274256 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.308576031 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.294579982 seconds)
  done (took 5.801480312 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.265097596 seconds)
  done (took 3.45638349 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.046813535 seconds)
  done (took 16.240865692 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.280028776 seconds)
  done (took 3.473489525 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.32225651 seconds)
  done (took 3.513230393 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.761185966 seconds)
  done (took 5.951398954 seconds)
done (took 96.323852233 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.277681587 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.284202984 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.277176386 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.277492999 seconds)
  done (took 10.307782043 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.31850665 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.317731013 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.319692634 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.32804021 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.321774932 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.318602277 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.310633543 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.310843269 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.330302971 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.322084389 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.320040012 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.320394793 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.318589153 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.311276186 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.320656882 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.320694851 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.330218153 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.321434243 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.310988808 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.321828858 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.286793721 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.328827841 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.321384572 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.287737661 seconds)
  done (took 32.810407122 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.804514069 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.392928471 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.440853984 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.352464844 seconds)
  done (took 7.183289248 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.337472786 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.339106506 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.350781029 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.39065119 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.41583082 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.350151227 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.312173821 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.308751734 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.294599997 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.339960944 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.414988949 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.356389806 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.439365886 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.286311545 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.474122619 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.286797404 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.28732753 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.339581241 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.390220767 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.403279055 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.287204764 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.338636659 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.343075713 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.355881699 seconds)
  done (took 33.635994099 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.288045547 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.305937342 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.28753047 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.286610607 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.294993995 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.286069791 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.287021417 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.287852505 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.287083896 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.797192563 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.28997711 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.299637215 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.782528319 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.290441873 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.29456615 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.288857921 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.793942186 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.786921857 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.291377682 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.293804734 seconds)
  done (took 29.014453884 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.282440458 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.282353734 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.633642714 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.538393222 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.281410678 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.286797214 seconds)
  done (took 13.500481208 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.356900393 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.515184262 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.295925586 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.633601238 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.719693486 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.296733879 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.290287625 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.532810896 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.839794835 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.81836912 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.352389451 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.357807477 seconds)
  done (took 19.204077279 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.291609278 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.28941101 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.295851181 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.304982081 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.343100531 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.310247035 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.297499669 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.283343525 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.348654546 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.363202808 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.311639586 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.344109814 seconds)
  done (took 20.980714659 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.37105969 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.284157894 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.284725092 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307734368 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.291760851 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.130425537 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.3070393 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.992577809 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.307678588 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.559720378 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.284194585 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.379483297 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.542133038 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.295971783 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.291919882 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.27280739 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.516814316 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.76482023 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.288376627 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.298844018 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.318608631 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.286100816 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.301137938 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.505647836 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.287825522 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.286268993 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.64805084 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.287300564 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.566644019 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.305769569 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.298035058 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.287765111 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.561907952 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940080164 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.401687471 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.497968745 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.299918245 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.307943478 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.285798377 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.304140549 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.300179202 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.291278811 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.299020148 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.289061335 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.288327157 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.287232725 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.002141059 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.312267229 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.287324738 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.288034567 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.541045951 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.391067763 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.293720239 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.288420389 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35430921 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.294177779 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.293929352 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.287380576 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.860607202 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.289001663 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.314059006 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.295006712 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.297086758 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319726622 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.916842704 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.301079429 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.293758783 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.293914737 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.289297986 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.301696329 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.313174811 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.289725727 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.316312532 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.291166576 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.983866809 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.296659882 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.292094613 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.828526573 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.305083595 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.296719648 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.517928644 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.291582283 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.290047104 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.290249716 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.29198598 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.985259171 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.300129724 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.278183018 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.317395265 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.019087115 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.523732247 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.311972607 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.315699298 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.515798344 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.277907202 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.291616788 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.291868002 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.309057401 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.31307517 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.998245017 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31015847 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.296637853 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.546904186 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.50418208 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.30358218 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.285511609 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.772166891 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.311126585 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.314355851 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.297611313 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.511641364 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.868240102 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.314477583 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.293773713 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.316887137 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.292772934 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024467934 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.299128835 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.400162251 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.292770439 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.566029925 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.07576959 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.301123934 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.362266867 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.298057902 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.29466739 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.295306731 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319438923 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.294738374 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.498582685 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.32626834 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.311343431 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.295922707 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.293821236 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.291423929 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307139014 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.301373394 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.518435638 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.294191769 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.585390276 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.301599518 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.296091154 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.295334638 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.520320584 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.295931711 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.632235598 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.554661309 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.305073674 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.309251153 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.313673426 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.314635936 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.395767015 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.318074332 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.295629968 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.5588019 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.300788387 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.300559535 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.295433184 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.319993146 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.303587795 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.30318674 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.296064695 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.873299089 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.286842566 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.298628201 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.186623057 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.313099261 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.366124709 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.303812015 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.511661212 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.296321743 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316564054 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.322653768 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.294754596 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.526508722 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.309766743 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.297431864 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.402770125 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.769209083 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.891483704 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.315743986 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.298381027 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.294310881 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.295276309 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.297069311 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.298651256 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.299560237 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.511318155 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.31377625 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.314977274 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.89831546 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.305830121 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.298172651 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.327868932 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.310632636 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.303919506 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.298765568 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.29650471 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.305251841 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.30689412 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.31602153 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.442220711 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.312425777 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.298821545 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.81811396 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.30645042 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.300798025 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.298858031 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.335126115 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.300303056 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.127494812 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.55876079 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.319329144 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.572766111 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.320926553 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.32263725 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.299296525 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.300416942 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.30873648 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.318357753 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.327515553 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.312587057 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.300173283 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324460482 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.868734663 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.02638903 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.837770648 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.325209644 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.30300216 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.324015531 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.01344147 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.319609873 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.302130207 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.535635137 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.033011356 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320425753 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.778652247 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.320737021 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.054024165 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.562073457 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.536602486 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.317932088 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.303741305 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.563574939 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.521606952 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337995491 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.301281585 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309001493 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.289056024 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.858470194 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.336873509 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.38902653 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.016022269 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321841972 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.310704505 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.349887504 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.316252013 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.709454029 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.321360503 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.302779052 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.30350474 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.314479288 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.113977683 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.304280944 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.304313211 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928374754 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.32152739 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.784394079 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322719737 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.518703267 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.316144039 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.309560889 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.308625503 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.315548535 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.558351802 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.559800643 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31093642 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.312265502 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.842981598 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.165311707 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.310393447 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.303835036 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.043714206 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323140322 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.591940607 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.318466956 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.30739179 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317439553 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.305387911 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.304748327 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.302600904 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.313594968 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.280510959 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.787331588 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.32899993 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374190567 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.31634385 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.15547917 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.561870133 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.319496493 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.883611279 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.537537836 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.323888441 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35410147 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.309773487 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313144062 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.301669312 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.306710583 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.305893424 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37078734 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.536111176 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.309336322 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.294199516 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.322975864 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.52508847 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.307230325 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.316498449 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.554293376 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.306703107 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.308931234 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.037780669 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.338716492 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.318355095 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315329208 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.310171197 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.330926362 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.402384009 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.52451512 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.320552782 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.318734884 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.71265379 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33702779 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.315314425 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.323417427 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.402878924 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312328342 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.315936566 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.081786937 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.891524084 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.045719114 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.900741166 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.572749051 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.316812287 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.311471348 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31040232 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458337797 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.309983038 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.583316168 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309535363 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.323152384 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.352326332 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.319042494 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325359566 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.52699652 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.585850739 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.309904421 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318970534 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316067062 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.309182054 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.321266963 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.521402378 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.798519645 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.860944916 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313117959 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.316012861 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.030695049 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.603696027 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310628104 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.312522976 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.311196564 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.330991141 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.344829925 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.319047332 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312008079 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.479421238 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.566610809 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978405303 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.340756433 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.340426239 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.086989966 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.311324661 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.571870539 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.310317131 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.530861535 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.899683228 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.015443 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.583807836 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.382731781 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.52911373 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.312857751 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.461463811 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.311169982 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.313723309 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.314327324 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.158226471 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.311091228 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.323997147 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.904106888 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.583532015 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.317597672 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.312237165 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337575536 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.323266388 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.536105151 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.020895021 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.544468412 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.323815872 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.315041282 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.313812038 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.901541561 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.578570535 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321554893 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.31903681 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.553504302 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.316122382 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.340295279 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.768226676 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.312485371 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.859844417 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.28770011 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.336574585 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.316003429 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.019208257 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.908398153 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.328499063 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.804763421 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.322791762 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315162009 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.613854808 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.321614842 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.314980539 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.597897077 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.320062256 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.325773508 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.540271518 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.900034107 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.082703547 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.336359726 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335718209 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.324408366 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315716977 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346905103 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3222254 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.323858066 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.741035623 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.335173686 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317320909 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.328792439 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.317721911 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330500999 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.32025931 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.317314515 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.323103418 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.330567212 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.322889917 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.325502616 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.323760286 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.903512485 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340647247 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.984378471 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.649767192 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.574912464 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.318187672 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.31164196 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.323094443 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318948146 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319317088 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319376114 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.328742975 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.885918921 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.33260294 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.328471107 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.322821675 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.536550394 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.531231604 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.319371541 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.559911585 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332509881 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.333996454 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.307606617 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.319878938 seconds)
  done (took 945.358211133 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.329458434 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.330113088 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.345419394 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.342530347 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.334372367 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.365017073 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.327728082 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.337301605 seconds)
  done (took 19.941345482 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.326014794 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.331167812 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.32598824 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.331057712 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.323078844 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.793371772 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.339770903 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.33059797 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.332586114 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.328771416 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.323440369 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.012730835 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.347738835 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.328127389 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.318234726 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.331577837 seconds)
  done (took 31.654098648 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.249018209 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.454735897 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.163674706 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.353227264 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.366284735 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.33395266 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.538677298 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.336810894 seconds)
  done (took 26.027023481 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.334091533 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.333304468 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.332853399 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.334472424 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.334433312 seconds)
  done (took 7.900442701 seconds)
done (took 1198.710146888 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.326693955 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.328243221 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.326886724 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.329575994 seconds)
  done (took 6.543905122 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.311672931 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.310359774 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.311224601 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.326502799 seconds)
  done (took 9.49192338 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.015008318 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.96073848 seconds)
  done (took 5.207324671 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.322246502 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.091682246 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.060050208 seconds)
  done (took 7.705061105 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.62455245 seconds)
  done (took 2.856131764 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.732764017 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.691615231 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.52018551 seconds)
  done (took 6.177250666 seconds)
done (took 39.212565673 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.32475097 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.56922491 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.47713519 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.323623622 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.499010925 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.478160805 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.063052758 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.330149776 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.336260399 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.334444648 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.32235322 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.483727402 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.046371259 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.569717468 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.04666633 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.569226858 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.482064645 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.332808971 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.325191581 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.324729791 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.064171022 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.323251844 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.353851342 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.323587221 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.483295525 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.468881289 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.329868299 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.570752748 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.337185394 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.332191468 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.470952681 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.335844812 seconds)
  done (took 80.865039054 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.336775662 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.323172895 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.332662941 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.323095427 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.332504714 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.333694151 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.324724444 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.324768726 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.324495787 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.324793231 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.324883301 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.333282676 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.325332271 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.336027119 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.328720571 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.335077704 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.324487248 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.343966785 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.34390813 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.341976566 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.328331695 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.324309895 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.324854955 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.342771875 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.336593921 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.332086863 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.337734579 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.332325717 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.326039132 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.339762499 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.33482387 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.325004884 seconds)
  done (took 75.837277635 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.334455526 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.326025474 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.326367032 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.325512691 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.342833891 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.327397437 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.326115831 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.33985281 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.326319707 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.359902712 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.32615304 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.343964829 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.328612448 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.338970974 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.329236729 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.328109583 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.328059654 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.356486372 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.326762751 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.32763172 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.344325299 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.327532491 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.32687596 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.328049309 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.327864743 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.344333874 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.326766649 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.32815994 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.327429275 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.344733328 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.328292786 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.327842394 seconds)
  done (took 75.887137957 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.529783624 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.335582283 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.334990678 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.267407454 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.334700426 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.334582091 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.327593116 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.53139127 seconds)
  done (took 14.234159534 seconds)
done (took 248.055124574 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.327004507 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.329045566 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.53547174 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.358133497 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.326997825 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.35844724 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.356536815 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.548938228 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.29518057 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.570838191 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.355432136 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.353847306 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.339153469 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.354479694 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.60675131 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.485163573 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.2233078 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.324743983 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.674820181 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.356709829 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.601060035 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.334869596 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.619186904 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.28764835 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.353329476 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.330481402 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.351275921 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.202687133 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.373072799 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.676016578 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.34266282 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.317633345 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.441726387 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.437607261 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.544521286 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.48798736 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.330296384 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.416650384 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.553734192 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.331766637 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.334031239 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.092942665 seconds)
  done (took 81.081396369 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.339075935 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.456780842 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.338509219 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.338203132 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.338123025 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.461433885 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.43691585 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.337505681 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.338447953 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.336945933 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.3380009 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.338725981 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.338519324 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.338961676 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.33922155 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.339092855 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.33926928 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.341320957 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.341096244 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.38729197 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.464816095 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.362836107 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.334653004 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.339121567 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.446540392 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.479518403 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.338990517 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.332838372 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.397772566 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.339729757 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.343292963 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.392603821 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.340859895 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.339959312 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.459897781 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.44445912 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.361615972 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.340100787 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.460198867 seconds)
  done (took 54.724951099 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.341713695 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.588214977 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.767983336 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.353850972 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.342573854 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.347827263 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.41903015 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.342654374 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.345477615 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.346861306 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.51071481 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.345567335 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.377222371 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.792116658 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.352515484 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.343245449 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.342993067 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.344297272 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.59449057 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.356640508 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.441082456 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.346680374 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.419234905 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.355667015 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.366338226 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.344459572 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.34841533 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.911597085 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.346965744 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.509360351 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.124524316 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.42160634 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.859989759 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.782701621 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.125438739 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.350268848 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.344253937 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.513418001 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.348233864 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.344431484 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.420714531 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.351792733 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.779539341 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.999895548 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.36871862 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.345407166 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.937167583 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.517442234 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.588830739 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.359733417 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.804404332 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.355738034 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.347081106 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.347373808 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.58563372 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.359054292 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.345916842 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.908493424 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.37344467 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.421928063 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.353422906 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.347313593 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.603092779 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.353722705 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.595921183 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.354320051 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.354919694 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.367837323 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.780448715 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.355849365 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.025380572 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.369835537 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.346213167 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.511964893 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.597619457 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.976016373 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.357305402 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.610836254 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.87853272 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.427339559 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.357396624 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.91970037 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.431656275 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.360556812 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.352104443 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.350857229 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.34978881 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.394047726 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.423464629 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.953925761 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.013118466 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.949036553 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.451221124 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.369580904 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.35260978 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.914361699 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.373656125 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.349959045 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.778837722 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.032913908 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.374899684 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.357979149 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.036970718 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.376362208 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.428690558 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.363744666 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.792802898 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.359106128 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.397514514 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.35028983 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.35829138 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.37735797 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.429347227 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.361470352 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.350542458 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.990860121 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.545787629 seconds)
  done (took 178.224864281 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.347537168 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.364023575 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.344547138 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.366439416 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.345107334 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.353351631 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.344420776 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.346196717 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.351915553 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.345565996 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.34528725 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.347363477 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.346297511 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.353290633 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.357612787 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.353297887 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.344790094 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.345580911 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.348184029 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.346827399 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.345885163 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.373168147 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.346553115 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.345896438 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.34639386 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.348755539 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.353919309 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.349282451 seconds)
  done (took 63.060684568 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.354556623 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.901703688 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.354138881 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.482117247 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.379459845 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.351176001 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.481463347 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.412844858 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.357751976 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.351452682 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.351919301 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.652089691 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.360706066 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.857203221 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.543853356 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.503791795 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.860872824 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.372942168 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.352879193 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.352422602 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.484292987 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.368697888 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.651490878 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.915736114 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.360829036 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.90912948 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.351681366 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.354558848 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.355134856 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.913319792 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.358792365 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.654811418 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.437803431 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.417930418 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.913712843 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.867527329 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.884726225 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.50473302 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.360974102 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.352930272 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.357309537 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.346495255 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.913640288 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.362893503 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.358469164 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.908941815 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.37847147 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.357776976 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.362204765 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.354473497 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.414320447 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.415745757 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.658662795 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.924267238 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.437204093 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.367851529 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.485337009 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.743386209 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.360096287 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.867359427 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.369266443 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.914081627 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.378451967 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.348115338 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.357262918 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.361270173 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.502505334 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.490622291 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.872915254 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.380836075 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.867292221 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.525947266 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.361071141 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.356554176 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.359386194 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.919122056 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.874315789 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.526612639 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.495053543 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.553144964 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.355914554 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.358847535 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.351392661 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.433718982 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.362112905 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.920851397 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.889763594 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.382437249 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.360074917 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.360293176 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.360835444 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.530854692 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.942576058 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.442089124 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.868746511 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.683748746 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.667242495 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.365989604 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.418216277 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.376331673 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.664084485 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.367196712 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.416998238 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.819550718 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.665599639 seconds)
  done (took 161.865590517 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.595025998 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.377073377 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.456159986 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.515576827 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.966400815 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.950372699 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.354460834 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.495488392 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.468825896 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.620478851 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.362806868 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.453084004 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.570271401 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.438524823 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.074631158 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.436966116 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.455799254 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.508931896 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.498612509 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.370706079 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.009872512 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.660087306 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.545145585 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.377853094 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.465905095 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.113319069 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.933387968 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.886396775 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.532133622 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.359323297 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.906443606 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.356087998 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.279398852 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.014082597 seconds)
  done (took 63.671674721 seconds)
done (took 603.86692989 seconds)
SAVING RESULT...
DONE!
